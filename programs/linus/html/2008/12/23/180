    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/12/22/151">First message in thread</a></li><li><a href="/lkml/2008/12/23/138">Linus Torvalds</a><ul><li><a href="/lkml/2008/12/23/175">Krzysztof Halasa</a><ul><li class="origin"><a href="/lkml/2008/12/23/193">Linus Torvalds</a><ul><li><a href="/lkml/2008/12/23/193">Krzysztof Halasa</a><ul><li><a href="/lkml/2008/12/23/194">Linus Torvalds</a></li><li><a href="/lkml/2008/12/25/4">Junio C Hamano</a></li></ul></li><li><a href="/lkml/2008/12/29/171">"Hannes Eder"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 23 Dec 2008 15:38:02 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 02/27] drivers/net: fix sparse warnings: make do-while a compound statement</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 24 Dec 2008, Krzysztof Halasa wrote:<br />&gt; <br />&gt; So is a case like<br />&gt; 	do<br />&gt; 		x;<br />&gt; 	while (y);<br />&gt; It can't be made more clear with brackets.<br /><br />Oh yes it can. People look at that, and it's so uncommon that they <br />literally believe it is a mis-indent.<br /><br />Your example with nested if-statements are totally pointless, because you <br />didn't even apparently understand my comment about "while()" having two <br />totally different meanings (which is not true of "if()"), nor realize the <br />importance of how common something is.<br /><br />Common patterns become things that people take for granted and don't have <br />any trouble with. In contrast, do-while without braces is _extremely_ <br />uncommon.<br /><br />&gt; IOW: improving the style is great. Changing it only to silence some<br />&gt; tool is not.<br /><br />Sorry, you're wrong. It's not changed to silence some tool. THIS IS THE <br />KERNEL CODING STYLE. <br /><br />I don't care one whit about your personal coding style. The kernel has <br />brances. End of discussion. sparse complains about lack of them. <br />Comprende?<br /><br />&gt; Right, but they (at least for me) make it more readable.<br /><br />I don't care.<br /><br />&gt; kmalloc(sizeof i) just doesn't look good, the operator looks like<br />&gt; a variable name.<br /><br />And I agree with you. "sizeof i" doesn't look good. It's uncommon, and <br />doesn't match peoples expectations.<br /><br />&gt; But there is this return statement. Some people tend to write<br />&gt; return (x); I simply write return x;<br /><br />I do to. And it's the common thing to do, and only totally confused people <br />think that 'return' is a somehow remotely like a "function" of its <br />arguments (the way 'sizeof' is - sizeof _is_ a function of its arguments, <br />albeit a very rare one).<br /><br />&gt; It's clear, and so is a simple do-while.<br /><br />No. "return x;" is clear because it's the common thing, which means that <br />peopel are good at reading it.<br /><br />Another example of "common vs non-common" is this:<br /><br />	if (0 &lt;= x)<br />		do something..<br /><br />is something that crazy people do (sadly, one of the crazy people taught <br />the git maintainer C programming, so now even sane people do it). It's <br />crazy because it's uncommon, which means that most people have to think <br />about it A LOT MORE than about<br /><br />	if (x &gt;= 0)<br />		do something..<br /><br />even though technically both are obviously EXACTLY THE SAME THING.<br /><br />Can you see the argument? Doing things the common way is important, <br />because it allows people to see what they mean without having to think <br />about it. They just scan it, and the meaning is clear.<br /><br />And that's why "do while" without braces is bad. If you scan it quickly on <br />its own, you may well end up just seeing the<br /><br />	while (x);<br /><br />part, and get confused ("oh, a delay loop"). But if you see<br /><br />	} while (x);<br /><br />you aren't confused, because the latter one is clearly an ending condition <br />of a do-while loop, IN A WAY THAT THE FIRST ONE IS NOT!<br /><br />See?<br /><br />do-while is very special, because as mentioned, "while" is a really magic <br />C keyword that has two TOTALLY DIFFERENT meanings. Don't make people look <br />for the "do".<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
