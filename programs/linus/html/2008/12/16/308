    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/12/5/249">First message in thread</a></li><li><a href="/lkml/2008/12/5/249">Oren Laadan</a><ul><li><a href="/lkml/2008/12/5/239">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/240">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/241">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/242">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/243">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/244">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/245">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/246">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/247">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/248">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/250">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/251">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/252">Oren Laadan</a></li><li><a href="/lkml/2008/12/5/338">"Serge E. Hallyn"</a></li><li><a href="/lkml/2008/12/6/22">Joe Perches</a></li><li><a href="/lkml/2008/12/9/215">"Serge E. Hallyn"</a></li><li><a href="/lkml/2008/12/16/288">Dave Hansen</a></li><li><a href="/lkml/2008/12/16/299">Mike Waychison</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2008/12/16/432">Mike Waychison</a><ul><li><a href="/lkml/2008/12/16/443">Dave Hansen</a><ul><li><a href="/lkml/2008/12/16/454">Mike Waychison</a><ul><li><a href="/lkml/2008/12/16/509">Dave Hansen</a></li></ul></li><li><a href="/lkml/2008/12/16/475">Oren Laadan</a><ul><li><a href="/lkml/2008/12/16/513">Mike Waychison</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/12/16/531">Mike Waychison</a><ul><li><a href="/lkml/2008/12/17/219">Oren Laadan</a></li></ul></li><li><a href="/lkml/2008/12/17/465">Mike Waychison</a><ul><li><a href="/lkml/2008/12/18/102">Oren Laadan</a><ul><li><a href="/lkml/2008/12/18/175">Dave Hansen</a></li><li><a href="/lkml/2008/12/18/185">Dave Hansen</a><ul><li><a href="/lkml/2008/12/18/277">Oren Laadan</a></li></ul></li><li><a href="/lkml/2008/12/18/247">Mike Waychison</a><ul><li><a href="/lkml/2008/12/18/250">Dave Hansen</a></li><li><a href="/lkml/2008/12/18/291">Oren Laadan</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 16 Dec 2008 11:28:39 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC v11][PATCH 03/13] General infrastructure for checkpoint restart</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 16 Dec 2008, Mike Waychison wrote:<br />&gt; <br />&gt; set_fs(fs) here<br /><br />Btw, this all is an excellent example of why people should try to aim for <br />small functions and use lots of them.<br /><br />It's often _way_ more readable to do<br /><br />	static inline int __some_fn(...)<br />	{<br />		.. do the real work here ..<br />	}<br /><br />	int some_fn(...)<br />	{<br />		int retval;<br /><br />		prepare();<br />		retval = __some_fn(..)<br />		finish();<br /><br />		return retval;<br />	}<br /><br />where "prepare/finish" can be about locking, or set_fs(), or allocation <br />and de-allocation of temporary buffers, or any number of things like that.<br /><br />With set_fs() in particular, the wrapper function also tends to be the <br />perfect place to change a regular (kernel) pointer into a user pointer. <br />IOW, it's the place to make sparse happy, where you can do things like<br /><br />	uptr = (__force void __user *)ptr;<br /><br />and comment on the fact that the forced user pointer cast is valid only <br />because of the set_fs().<br /><br />Because it looks like the code isn't sparse-clean.<br /><br />Btw, I also think that code like this is bogus:<br /><br />	nwrite = file-&gt;f_op-&gt;write(file, addr, nleft, &amp;file-&gt;f_pos);<br /><br />because you're not supposed to pass in the raw file-&gt;f_pos to that <br />function. It's fundamentally thread-unsafe. I realize that maybe you don't <br />care, but the thing is, you're supposed to do<br /><br />	loff_t pos = file-&gt;pos;<br />	..<br />	nwrite = file-&gt;f_op-&gt;write(file, addr, nleft, &amp;pos);<br />	..<br />	file-&gt;f_pos = pos;<br /><br />and in fact preferably use "file_pos_read()" and "file_pos_write()" (but <br />we've never exposed them outside of fs/read_write.c, so I guess we should <br />do that).<br /><br />And yes, I realize that some code does take the address of f_pos directly <br />(splice, nfsctl, others), and I realize that it works, but it's still bad <br />form. Please don't add more of them.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
