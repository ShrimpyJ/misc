    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/9/19/275">First message in thread</a></li><li><a href="/lkml/2008/9/22/423">"Martin Bligh"</a><ul><li><a href="/lkml/2008/9/23/202">Masami Hiramatsu</a><ul><li><a href="/lkml/2008/9/23/204">Mathieu Desnoyers</a><ul><li><a href="/lkml/2008/9/23/210">Masami Hiramatsu</a><ul><li><a href="/lkml/2008/9/23/220">Linus Torvalds</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 23 Sep 2008 08:46:44 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Unified tracing buffer</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 23 Sep 2008, Masami Hiramatsu wrote:<br />&gt; <br />&gt; $ dmesg | grep TSC<br />&gt; checking TSC synchronization [CPU#0 -&gt; CPU#1]:<br />&gt; Measured 4246549092 cycles TSC warp between CPUs, turning off TSC clock.<br />&gt; Marking TSC unstable due to: check_tsc_sync_source failed.<br /><br />Hmm.. Very interesting.<br /><br />It smells of a non-stable TSC, but your Core2 Cpu shouldn't have that <br />issue:<br /><br />&gt; <br />&gt; $ cat /proc/cpuinfo<br />&gt; processor	: 0<br />&gt; vendor_id	: GenuineIntel<br />&gt; cpu family	: 6<br />&gt; model		: 15<br />&gt; model name	: Intel(R) Core(TM)2 CPU         T7200  &#64; 2.00GHz<br />&gt; stepping	: 6<br />&gt; cpu MHz	: 1000.000<br />&gt; cache size	: 4096 KB<br />&gt; flags		: ... constant_tsc ...<br />&gt; <br />&gt; Actually, I had measured TSC drifting and reported to systemtap-bugzilla<br />&gt; <a href="http://sources.redhat.com/bugzilla/show_bug.cgi?id=3916#c19">http://sources.redhat.com/bugzilla/show_bug.cgi?id=3916#c19</a><br /><br />I'd have assumed it was just some initial offset issue, but your <br />bug-report seems to say that it really does change the TSC frequency when <br />the CPU frequency changes. That should _not_ happen on a core2 CPU, afaik. <br />I didn't even know it could be a setup issue, but it does really smell <br />like your TSC frequency changes.<br /><br />Now, unstable TSC's are not uncommon per se, and most older Intel CPU's <br />will do it, it's just that I thought it was fixed in Core2 (and later P4's <br />for that matter).<br /><br />The rule *should* be that:<br /> - family = 15 (netburst), model 3 or higher has constant TSC<br /> - family = 6 (PPro), model 14 or higher (Core, Core 2)<br />have constant TSCs. This is quite clearly documented: see Intel ia docs, <br />vol 3B, 18.10 "Time-stamp counter".<br /><br />Very odd. I wonder what your laptop does to screw this up. <br /><br />I also suspect that since we already _noticed_ that the TSC isn't stable, <br />we should also have then cleared the "constant TSC" bit. And we apparently <br />didn't.<br /><br />Btw, your CPU looks quite odd in other respects too. Judging by your <br />bugzilla entry, the TSC sometimes ticks at 2GHz (fine), sometimes at 1Ghz <br />(also fine), and sometimes at 667/500MHz judging by the ratios you show <br />for TSC/timer tick.<br /><br />And that last one is really odd, afaik most 2GHz Core 2 duo's will have a <br />lower frequency of 1GHz. Is that some special low-power version, perhaps? <br />Or maybe it isn't a speedstep-able CPU at all, and the system actually <br />changes the *bus* frequency (and then the CPU frequency is some constant <br />factor of that). If so, the system messes with the CPU in bad ways.<br /><br />And btw, I'm almost certain that what you see isn't actually any "CPU <br />drift" in the sense that I strongly suspect that the TSC's for both cores <br />will change frequency together. So because the TSC isn't stable, it's not <br />a good time-source, but despite that it's not necessarily a bad way to <br />compare events across cores.<br /><br />To actually have different CPU's TSC drift wrt each other, you almost have <br />to have them in different clock domains. And that is *very* rare. It <br />happens when the CPU's are on different boards, and sure if happens if the <br />CPU's have non-constant TSCs with different frequencies, but neither of <br />those should be very common at all. The latter is uncommon because it's <br />almost unheard of of having multi-socket devices with old CPU's that also <br />do frequency changes.<br /><br />Older multi-core CPU's tend to do frequency changes the whole chip at a <br />time, and newer multi-core CPU's should all basically have a fixed TSC so <br />even when they do frequency changes independently, the TSC should still be <br />off the same clock on the die.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
