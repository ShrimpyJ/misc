    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/9/24/13">First message in thread</a></li><li><a href="/lkml/2008/9/24/191">"Martin Bligh"</a><ul><li><a href="/lkml/2008/9/24/200">Peter Zijlstra</a><ul><li><a href="/lkml/2008/9/24/212">Steven Rostedt</a></li><li class="origin"><a href="/lkml/2008/9/24/222">Linus Torvalds</a><ul><li><a href="/lkml/2008/9/24/222">Steven Rostedt</a><ul><li><a href="/lkml/2008/9/24/239">"Martin Bligh"</a></li><li><a href="/lkml/2008/9/24/248">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2008/9/24/259">Mathieu Desnoyers</a><ul><li><a href="/lkml/2008/9/24/355">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2008/9/24/233">"Martin Bligh"</a><ul><li><a href="/lkml/2008/9/24/249">Linus Torvalds</a><ul><li><a href="/lkml/2008/9/24/252">Steven Rostedt</a></li><li><a href="/lkml/2008/9/24/255">"Martin Bligh"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/9/24/202">Mathieu Desnoyers</a><ul><li><a href="/lkml/2008/9/24/216">Steven Rostedt</a></li><li><a href="/lkml/2008/9/24/225">Peter Zijlstra</a><ul><li><a href="/lkml/2008/9/24/234">Mathieu Desnoyers</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 24 Sep 2008 09:24:46 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH 1/3] Unified trace buffer</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 24 Sep 2008, Peter Zijlstra wrote:<br />&gt; <br />&gt; So when we reserve we get a pointer into page A, but our reserve length<br />&gt; will run over into page B. A write() method will know how to check for<br />&gt; this and break up the memcpy to copy up-to the end of A and continue<br />&gt; into B.<br /><br />I would suggest just not allowing page straddling.<br /><br />Yeah, it would limit event size to less than a page, but seriously, do <br />people really want more than that? If you have huge events, I suspect it <br />would be a hell of a lot better to support some kind of indirection <br />scheme than to force the ring buffer to handle insane cases.<br /><br />Most people will want the events to be as _small_ as humanly possible. The <br />normal event size should hopefully be in the 8-16 bytes, and I think the <br />RFC patch is already broken because it allocates that insane 64-bit event <br />counter for things. Who the hell wants a 64-bit event counter that much? <br />That's broken.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
