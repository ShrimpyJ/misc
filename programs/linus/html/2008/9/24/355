    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/9/24/13">First message in thread</a></li><li><a href="/lkml/2008/9/24/218">Linus Torvalds</a><ul><li><a href="/lkml/2008/9/24/222">Steven Rostedt</a><ul><li><a href="/lkml/2008/9/24/239">"Martin Bligh"</a></li><li><a href="/lkml/2008/9/24/248">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2008/9/24/259">Mathieu Desnoyers</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 24 Sep 2008 13:49:24 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH 1/3] Unified trace buffer</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 24 Sep 2008, Mathieu Desnoyers wrote:<br />&gt;<br />&gt;                    [...] Those will likely be low event-rate<br />&gt; situations where it is useful to take a bigger snapshot of a problematic<br />&gt; condition, but still to have it synchronized with the rest of the trace<br />&gt; data. e.g. :<br />&gt; <br />&gt; - Writing a whole video frame into the trace upon video card glitch.<br />&gt; - Writing a jumbo frame (up to 9000 bytes) into the buffer when a<br />&gt;   network card error is detected or when some iptables rules (LOG, TRACE<br />&gt;   ?) are reached.<br />&gt; - Dumping a kernel stack (potentially 8KB) in a single event when a<br />&gt;   kernel OOPS is reached.<br />&gt; - Dumping a userspace process stack into the trace upon SIGILL, SIGSEGV<br />&gt;   and friends.<br /><br />But these are _all_ things that would be much better off with a "allocate <br />a separate buffer, and just add a pointer to the trace".<br /><br />Why? If for no other reason than the fact that we don't even want to spend <br />lots of time to (atomically) have to copy the big data into the trace <br />buffer!<br /><br />Just allocate the buffer and fill it in (maybe it's pre-allocated already, <br />like when a network packet event happens!) and do all of that <br />independently of the low-level trace code. And then add the trace with the <br />pointer.<br /><br />We want the low-level trace code to be useful for things like interrupt <br />events etc, which makes it a _disaster_ to try to add huge buffers <br />directly to the ring buffer. You also don't want to allocate a <br />multi-megabyte ring buffer for some odd case that happens rarely, when you <br />can allocate the big memory users dynamically.<br /><br />So limiting a trace entry to 4kB does not mean that you can't add more <br />than 4kB to the trace - it just means that you need to have a "data <br />indirection" trace type. Nothing more, nothing less.<br /><br />[ And btw - you'd need that *anyway* for other reasons. You also don't <br />  want to have any length fields have to be 32-bit lengths etc - the <br />  length field of the trace buffer entry should be something really small <br />  like 8 or 16 bits, or even be implicit in the type for some basic event <br />  types, so that a trace event doesn't necessarily waste any bits at ALL <br />  on the length field ]<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
