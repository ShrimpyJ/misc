    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/9/25/547">First message in thread</a></li><li><a href="/lkml/2008/9/25/547">Anirban Sinha</a><ul><li><a href="/lkml/2008/9/26/37">Anirban Sinha</a><ul><li><a href="/lkml/2008/9/26/197">Oleg Nesterov</a></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 26 Sep 2008 08:01:12 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH]: add a new wait_event_interruptible_timeout_modify helper</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 25 Sep 2008, Anirban Sinha wrote:<br />&gt; +<br />&gt; +/**<br />&gt; + * wait_event_interruptible_timeout_modify - sleep until a condition gets true or a timeout elapses.<br />&gt; + * &#64;wq: the waitqueue to wait on<br />&gt; + * &#64;condition: a C expression for the event to wait for<br />&gt; + * &#64;timeout: timeout, in jiffies<br />&gt; + *<br />&gt; + * The process is put to sleep (TASK_INTERRUPTIBLE) until the<br />&gt; + * &#64;condition evaluates to true or a signal is received.<br />&gt; + * The &#64;condition is checked each time the waitqueue &#64;wq is woken up.<br />&gt; + *<br />&gt; + * wake_up() has to be called after changing any variable that could<br />&gt; + * change the result of the wait condition.<br />&gt; + *<br />&gt; + * The function returns 0 if the &#64;timeout elapsed, -ERESTARTSYS if it<br />&gt; + * was interrupted by a signal, and the remaining jiffies otherwise<br />&gt; + * if the condition evaluated to true before the timeout elapsed.<br />&gt; + * It also modifies the &#64;timeout value so that if the sleep is interrupted<br />&gt; + * by a signal, the caller can call this helper again with the updated<br />&gt; + * timeout.<br /><br />Grr.<br /><br />I'd _much_ rather just have a<br /><br />	wait_event_interruptible_until(wr, condition, abs_timeout)<br /><br />where the timeout is just given as an end value, and the user can just <br />pre-calculate it once and the return code handling is simpler (either <br />"success" or "EINTR").<br /><br />Giving an absolute value also means that there is no rounding creep or <br />anything like that in a loop, which otherwise happens very easily (even <br />if we wouldn't normally really care).<br /><br />And quite frankly, people can do that themselves even without a helper <br />function, with simply<br /><br />	unsigned long end = jiffies + timeout;<br />	...<br /><br />	rc = wait_event_interruptible_timeout(wq, event, end - jiffies);<br />	if (rc &lt; 0)<br />		goto out;<br /><br />and now you always know the end-point, and 'end - jiffies' is always the <br />remaining timeout.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
