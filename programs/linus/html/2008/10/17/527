    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/10/17/465">First message in thread</a></li><li><a href="/lkml/2008/10/17/519">Nick Piggin</a><ul><li><a href="/lkml/2008/10/17/530">Paul Mackerras</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2008/10/18/12">Nick Piggin</a><ul><li><a href="/lkml/2008/10/18/45">Paul Mackerras</a></li><li><a href="/lkml/2008/10/18/86">Linus Torvalds</a><ul><li><a href="/lkml/2008/10/18/101">Matthew Wilcox</a></li><li><a href="/lkml/2008/10/18/221">Nick Piggin</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 17 Oct 2008 19:57:27 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] mm: fix anon_vma races</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 18 Oct 2008, Paul Mackerras wrote:<br />&gt; <br />&gt; Not sure what you mean by causal consistency, but I assume it's the<br />&gt; same as saying that barriers give cumulative ordering, as described on<br />&gt; page 413 of the Power Architecture V2.05 document at:<br /><br />I'm pretty sure that everybody but alpha is ok.<br /><br />And alpha needs the smp_read_barrier_depends() not because it doesn't <br />really support causality, but because each CPU internally doesn't <br />guarantee that they handle the cache invalidates in-order without a <br />barrier. <br /><br />So without the smp_read_barrier_depends(), alpha will actually have the <br />proper causal relationships (cachelines will move to exclusive state on <br />CPU0 in the right order and others will see the causality), but because <br />CPU2 may see the stale data from not even having invalidated the <br />"anon_vma.initialized" because the cache invalidation queue hadn't been <br />flushed in order.<br /><br />Alpha is insane. And the odd man out.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
