    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/10/17/465">First message in thread</a></li><li><a href="/lkml/2008/10/17/477">Linus Torvalds</a><ul><li><a href="/lkml/2008/10/17/503">Hugh Dickins</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2008/10/17/519">Nick Piggin</a><ul><li><a href="/lkml/2008/10/17/530">Paul Mackerras</a><ul><li><a href="/lkml/2008/10/17/527">Linus Torvalds</a></li><li><a href="/lkml/2008/10/18/12">Nick Piggin</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 17 Oct 2008 17:25:26 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] mm: fix anon_vma races</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 18 Oct 2008, Hugh Dickins wrote:<br />&gt; <br />&gt; But they're doing it to make the page's ptes accessible to<br />&gt; memory reclaim, and the CPU doing memory reclaim will not<br />&gt; (unless by coincidence) have done that anon_vma_prepare() -<br />&gt; it's just reading the links which the faulters are providing.<br /><br />Ahh. Good point. Then yes, those ones would really need the <br />smp_read_barrier_depends() too.<br /><br />Very annoying.<br /><br />Of course, we _could_ just admit that the situation is really *really* <br />unlikely, and there are probably something like five people running <br />Linux/alpha, and that we don't care enough. With just the smp_wmb(), we <br />cover all non-alpha people, since this is all through a pointer, so all <br />the readers will inevitably be of the smp_read_barrier_depends kind.<br /><br />If we want to guarantee the proper smp_read_barrier_depends() behaviour, <br />then we'd need to find them all. Possibly by renaming the whole field <br />(prepend an underscore like we usually do) and forcing all readers to use <br />some "get_anon_vma(vma)" helper function, aka<br /><br />  static inline struct anon_vma *get_anon_vma(struct vm_area_struct *vma)<br />  {<br />	struct anon_vma *anon_vma = vma-&gt;_anon_vma;<br />	smp_read_barrier_depends();<br />	return anon_vma;<br />  }<br /><br />which would find them all.<br /><br />Ugh. I really would have preferred not having something like that. <br />Especially considering how limited that issue really is. Hmm. <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
