    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/10/15/194">First message in thread</a></li><li><a href="/lkml/2008/10/15/204">Matt Mackall</a><ul><li><a href="/lkml/2008/10/15/206">Nick Piggin</a><ul><li class="origin"><a href="/lkml/2008/10/15/214">Linus Torvalds</a><ul><li><a href="/lkml/2008/10/15/214">Linus Torvalds</a><ul><li><a href="/lkml/2008/10/15/233">Matt Mackall</a></li></ul></li><li><a href="/lkml/2008/10/15/219">Nick Piggin</a><ul><li><a href="/lkml/2008/10/15/234">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2008/10/15/235">Nick Piggin</a><ul><li><a href="/lkml/2008/10/15/242">Linus Torvalds</a><ul><li><a href="/lkml/2008/10/15/249">Nick Piggin</a></li></ul></li><li><a href="/lkml/2008/10/17/423">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 15 Oct 2008 10:33:01 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [rfc] SLOB memory ordering issue</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 16 Oct 2008, Nick Piggin wrote:<br />&gt; <br />&gt; Now they allocate these guys, take a lock, then insert them into the<br />&gt; page tables. The lock is only an acquire barrier, so it can leak past<br />&gt; stores.<br /><br />I think that Matt's point was that the code is buggy regardless of any <br />ctor or not.<br /><br />If you make an allocation visible to other CPU's, you would need to make <br />sure that allocation is stable with a smp_wmb() before you update the <br />pointer to that allocation.<br /><br />So the code that makes a page visible should just always do that <br />synchronization.<br /><br />And it has nothing to do with ctors or not. It's true whether you do the <br />initialization by hand, or whether you use a ctor.<br /><br />And more importantly, putting the write barrier in the ctor or in the <br />memory allocator is simply broken. It's not a ctor/allocator issue. Why? <br />Because even if you have a ctor, there is absolutely *nothing* that says <br />that the ctor will be sufficient to initialize everything. Most ctors, in <br />fact, are just initializing the basic fields - the person that does the <br />allocation should finish things up.<br /><br />The fact that _some_ people using an allocator with a ctor may not do <br />anything but the ctor to the page is immaterial.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
