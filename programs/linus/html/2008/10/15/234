    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/10/15/194">First message in thread</a></li><li><a href="/lkml/2008/10/15/212">Linus Torvalds</a><ul><li><a href="/lkml/2008/10/15/214">Linus Torvalds</a><ul><li><a href="/lkml/2008/10/15/233">Matt Mackall</a></li></ul></li><li><a href="/lkml/2008/10/15/219">Nick Piggin</a><ul><li class="origin"><a href="/lkml/2008/10/15/239">Linus Torvalds</a><ul><li><a href="/lkml/2008/10/15/239">Nick Piggin</a><ul><li><a href="/lkml/2008/10/15/241">Matt Mackall</a></li><li><a href="/lkml/2008/10/15/243">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 15 Oct 2008 11:03:08 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [rfc] SLOB memory ordering issue</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 16 Oct 2008, Nick Piggin wrote:<br />&gt; <br />&gt; What do you mean by the allocation is stable?<br /><br />"all writes done to it before it's exposed".<br /><br />&gt; 2. I think it could be easy to assume that the allocated object that was<br />&gt; initialised with a ctor for us already will have its initializing stores<br />&gt; ordered when we get it from slab.<br /><br />You make tons of assumptions.<br /><br />You assume that<br /> (a) unlocked accesses are the normal case and should be something the <br />     allocator should prioritize/care about.<br /> (b) that if you have a ctor, it's the only thing the allocator will do.<br /><br />I don't think either of those assumptions are at all relevant or <br />interesting. Quite the reverse - I'd expect them to be in a very small <br />minority.<br /><br />Now, obviously, on pretty much all machines out there (ie x86[-64] and UP <br />ARM), smp_wmb() is a no-op, so in that sense we could certainly say that <br />"sure, this is a total special case, but we can add a smp_wmb() anyway <br />since it won't cost us anything".<br /><br />On the other hand, on the machines where it doesn't cost us anything, it <br />obviously doesn't _do_ anything either, so that argument is pretty <br />dubious. <br /><br />And on machines where the memory ordering _can_ matter, it's going to add <br />cost to the wrong point.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
