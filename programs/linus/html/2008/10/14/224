    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/10/14/122">First message in thread</a></li><li><a href="/lkml/2008/10/14/122">Alan Cox</a><ul><li class="origin"><a href="/lkml/2008/10/14/234">Linus Torvalds</a><ul><li><a href="/lkml/2008/10/14/234">Alan Cox</a><ul><li><a href="/lkml/2008/10/14/238">"H. Peter Anvin"</a><ul><li><a href="/lkml/2008/10/14/334">Chris Adams</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2008/10/14/224/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 14 Oct 2008 09:59:33 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [REVERT Request] VT Breakage</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 14 Oct 2008, Alan Cox wrote:<br />&gt;<br />&gt; In April someone merged<br />&gt; <br />&gt; commit c9e587abfdec2c2aaa55fab83bcb4972e2f84f9b<br />&gt; Author: Jan Engelhardt &lt;jengelh&#64;computergmbh.de&gt;<br />&gt; Date:   Tue Apr 29 00:59:46 2008 -0700<br />&gt; <br />&gt;     vt: fix background color on line feed<br />&gt; <br />&gt; <br />&gt; Unfortunately it's wrong and its been causing breakages because various<br />&gt; apps like ncurses expect our previous (and correct) behaviour.<br />&gt; <br />&gt; Can you therefore revert it (seems saner than sending you a patch -R)<br /><br />Actually, you'd need to send a tested patch (or rather, at least test the <br />trial patch I'm including here). Because it's not a trivial revert at all, <br />we've had various fbcon fixups since that depend on that commit.<br /><br />See at least commits<br /><br /> - afa9b649 "fbcon: prevent cursor disappearance after switching to 512 <br />   character font"<br /><br /> - d850a2fa "vt/fbcon: fix background color on line feed"<br /><br /> - 7fe3915a "vt/fbcon: update scrl_erase_char after 256/512-glyph font <br />   switch"<br /><br />and while I suspect that reverting them all in that order (ie<br /><br />  git revert -n afa9b649<br />  git revert -n d850a2fa<br />  git revert -n 7fe3915a<br />  git revert -n c9e587ab<br /><br />should work (with a trivial fixup), I need somebody to test the result.<br /><br />Here's the patch as best as I can do. It compiles, but I have not tested <br />it, nor seen any of the failure cases, so I really don't want to commit it <br />as-is.<br /><br />So please check this patch. Also, can somebody please verify what the <br />_correct_ vt100 behavior is? The test-case was in the original commit, but <br />quite frankly, it doesn't work on my text console like it does on xterm <br />_or_ 'termina' for me, _with_ the patch in place. So I suspect a revert is <br />good, but I want to have this tested/explained more.<br /><br />		Linus<br /><br />----<br /> drivers/char/vt.c              |    7 +++----<br /> drivers/video/console/fbcon.c  |   39 ++++++++++-----------------------------<br /> drivers/video/console/mdacon.c |    2 +-<br /> drivers/video/console/sticon.c |    4 ++--<br /> drivers/video/console/vgacon.c |    4 ++--<br /> include/linux/console_struct.h |    1 -<br /> 6 files changed, 18 insertions(+), 39 deletions(-)<br /><br />diff --git a/drivers/char/vt.c b/drivers/char/vt.c<br />index 57029fe..4ab5df9 100644<br />--- a/drivers/char/vt.c<br />+++ b/drivers/char/vt.c<br />&#64;&#64; -301,7 +301,7 &#64;&#64; static void scrup(struct vc_data *vc, unsigned int t, unsigned int b, int nr)<br /> 	d = (unsigned short *)(vc-&gt;vc_origin + vc-&gt;vc_size_row * t);<br /> 	s = (unsigned short *)(vc-&gt;vc_origin + vc-&gt;vc_size_row * (t + nr));<br /> 	scr_memmovew(d, s, (b - t - nr) * vc-&gt;vc_size_row);<br />-	scr_memsetw(d + (b - t - nr) * vc-&gt;vc_cols, vc-&gt;vc_scrl_erase_char,<br />+	scr_memsetw(d + (b - t - nr) * vc-&gt;vc_cols, vc-&gt;vc_video_erase_char,<br /> 		    vc-&gt;vc_size_row * nr);<br /> }<br /> <br />&#64;&#64; -319,7 +319,7 &#64;&#64; static void scrdown(struct vc_data *vc, unsigned int t, unsigned int b, int nr)<br /> 	s = (unsigned short *)(vc-&gt;vc_origin + vc-&gt;vc_size_row * t);<br /> 	step = vc-&gt;vc_cols * nr;<br /> 	scr_memmovew(s + step, s, (b - t - nr) * vc-&gt;vc_size_row);<br />-	scr_memsetw(s, vc-&gt;vc_scrl_erase_char, 2 * step);<br />+	scr_memsetw(s, vc-&gt;vc_video_erase_char, 2 * step);<br /> }<br /> <br /> static void do_update_region(struct vc_data *vc, unsigned long start, int count)<br />&#64;&#64; -400,7 +400,7 &#64;&#64; static u8 build_attr(struct vc_data *vc, u8 _color, u8 _intensity, u8 _blink,<br />  *  Bit 7   : blink<br />  */<br /> 	{<br />-	u8 a = _color;<br />+	u8 a = vc-&gt;vc_color;<br /> 	if (!vc-&gt;vc_can_do_color)<br /> 		return _intensity |<br /> 		       (_italic ? 2 : 0) |<br />&#64;&#64; -434,7 +434,6 &#64;&#64; static void update_attr(struct vc_data *vc)<br /> 	              vc-&gt;vc_blink, vc-&gt;vc_underline,<br /> 	              vc-&gt;vc_reverse ^ vc-&gt;vc_decscnm, vc-&gt;vc_italic);<br /> 	vc-&gt;vc_video_erase_char = (build_attr(vc, vc-&gt;vc_color, 1, vc-&gt;vc_blink, 0, vc-&gt;vc_decscnm, 0) &lt;&lt; 8) | ' ';<br />-	vc-&gt;vc_scrl_erase_char = (build_attr(vc, vc-&gt;vc_def_color, 1, false, false, vc-&gt;vc_decscnm, false) &lt;&lt; 8) | ' ';<br /> }<br /> <br /> /* Note: inverting the screen twice should revert to the original state */<br />diff --git a/drivers/video/console/fbcon.c b/drivers/video/console/fbcon.c<br />index 9cbff84..da91bb1 100644<br />--- a/drivers/video/console/fbcon.c<br />+++ b/drivers/video/console/fbcon.c<br />&#64;&#64; -1855,8 +1855,6 &#64;&#64; static int fbcon_scroll(struct vc_data *vc, int t, int b, int dir,<br /> 	struct fb_info *info = registered_fb[con2fb_map[vc-&gt;vc_num]];<br /> 	struct display *p = &amp;fb_display[vc-&gt;vc_num];<br /> 	int scroll_partial = info-&gt;flags &amp; FBINFO_PARTIAL_PAN_OK;<br />-	unsigned short saved_ec;<br />-	int ret;<br /> <br /> 	if (fbcon_is_inactive(vc, info))<br /> 		return -EINVAL;<br />&#64;&#64; -1869,11 +1867,6 &#64;&#64; static int fbcon_scroll(struct vc_data *vc, int t, int b, int dir,<br /> 	 *           whole screen (prevents flicker).<br /> 	 */<br /> <br />-	saved_ec = vc-&gt;vc_video_erase_char;<br />-	vc-&gt;vc_video_erase_char = vc-&gt;vc_scrl_erase_char;<br />-<br />-	ret = 0;<br />-<br /> 	switch (dir) {<br /> 	case SM_UP:<br /> 		if (count &gt; vc-&gt;vc_rows)	/* Maximum realistic size */<br />&#64;&#64; -1890,9 +1883,9 &#64;&#64; static int fbcon_scroll(struct vc_data *vc, int t, int b, int dir,<br /> 			scr_memsetw((unsigned short *) (vc-&gt;vc_origin +<br /> 							vc-&gt;vc_size_row *<br /> 							(b - count)),<br />-				    vc-&gt;vc_scrl_erase_char,<br />+				    vc-&gt;vc_video_erase_char,<br /> 				    vc-&gt;vc_size_row * count);<br />-			ret = 1;<br />+			return 1;<br /> 			break;<br /> <br /> 		case SCROLL_WRAP_MOVE:<br />&#64;&#64; -1962,10 +1955,9 &#64;&#64; static int fbcon_scroll(struct vc_data *vc, int t, int b, int dir,<br /> 			scr_memsetw((unsigned short *) (vc-&gt;vc_origin +<br /> 							vc-&gt;vc_size_row *<br /> 							(b - count)),<br />-				    vc-&gt;vc_scrl_erase_char,<br />+				    vc-&gt;vc_video_erase_char,<br /> 				    vc-&gt;vc_size_row * count);<br />-			ret = 1;<br />-			break;<br />+			return 1;<br /> 		}<br /> 		break;<br /> <br />&#64;&#64; -1982,9 +1974,9 &#64;&#64; static int fbcon_scroll(struct vc_data *vc, int t, int b, int dir,<br /> 			scr_memsetw((unsigned short *) (vc-&gt;vc_origin +<br /> 							vc-&gt;vc_size_row *<br /> 							t),<br />-				    vc-&gt;vc_scrl_erase_char,<br />+				    vc-&gt;vc_video_erase_char,<br /> 				    vc-&gt;vc_size_row * count);<br />-			ret = 1;<br />+			return 1;<br /> 			break;<br /> <br /> 		case SCROLL_WRAP_MOVE:<br />&#64;&#64; -2052,15 +2044,12 &#64;&#64; static int fbcon_scroll(struct vc_data *vc, int t, int b, int dir,<br /> 			scr_memsetw((unsigned short *) (vc-&gt;vc_origin +<br /> 							vc-&gt;vc_size_row *<br /> 							t),<br />-				    vc-&gt;vc_scrl_erase_char,<br />+				    vc-&gt;vc_video_erase_char,<br /> 				    vc-&gt;vc_size_row * count);<br />-			ret = 1;<br />-			break;<br />+			return 1;<br /> 		}<br />-		break;<br /> 	}<br />-	vc-&gt;vc_video_erase_char = saved_ec;<br />-	return ret;<br />+	return 0;<br /> }<br /> <br /> <br />&#64;&#64; -2522,9 +2511,6 &#64;&#64; static int fbcon_do_set_font(struct vc_data *vc, int w, int h,<br /> 			c = vc-&gt;vc_video_erase_char;<br /> 			vc-&gt;vc_video_erase_char =<br /> 			    ((c &amp; 0xfe00) &gt;&gt; 1) | (c &amp; 0xff);<br />-			c = vc-&gt;vc_scrl_erase_char;<br />-			vc-&gt;vc_scrl_erase_char =<br />-			    ((c &amp; 0xFE00) &gt;&gt; 1) | (c &amp; 0xFF);<br /> 			vc-&gt;vc_attr &gt;&gt;= 1;<br /> 		}<br /> 	} else if (!vc-&gt;vc_hi_font_mask &amp;&amp; cnt == 512) {<br />&#64;&#64; -2555,14 +2541,9 &#64;&#64; static int fbcon_do_set_font(struct vc_data *vc, int w, int h,<br /> 			if (vc-&gt;vc_can_do_color) {<br /> 				vc-&gt;vc_video_erase_char =<br /> 				    ((c &amp; 0xff00) &lt;&lt; 1) | (c &amp; 0xff);<br />-				c = vc-&gt;vc_scrl_erase_char;<br />-				vc-&gt;vc_scrl_erase_char =<br />-				    ((c &amp; 0xFF00) &lt;&lt; 1) | (c &amp; 0xFF);<br /> 				vc-&gt;vc_attr &lt;&lt;= 1;<br />-			} else {<br />+			} else<br /> 				vc-&gt;vc_video_erase_char = c &amp; ~0x100;<br />-				vc-&gt;vc_scrl_erase_char = c &amp; ~0x100;<br />-			}<br /> 		}<br /> <br /> 	}<br />diff --git a/drivers/video/console/mdacon.c b/drivers/video/console/mdacon.c<br />index 9901064..dd3eaaa 100644<br />--- a/drivers/video/console/mdacon.c<br />+++ b/drivers/video/console/mdacon.c<br />&#64;&#64; -533,7 +533,7 &#64;&#64; static void mdacon_cursor(struct vc_data *c, int mode)<br /> <br /> static int mdacon_scroll(struct vc_data *c, int t, int b, int dir, int lines)<br /> {<br />-	u16 eattr = mda_convert_attr(c-&gt;vc_scrl_erase_char);<br />+	u16 eattr = mda_convert_attr(c-&gt;vc_video_erase_char);<br /> <br /> 	if (!lines)<br /> 		return 0;<br />diff --git a/drivers/video/console/sticon.c b/drivers/video/console/sticon.c<br />index 4055dbd..491c1c1 100644<br />--- a/drivers/video/console/sticon.c<br />+++ b/drivers/video/console/sticon.c<br />&#64;&#64; -170,12 +170,12 &#64;&#64; static int sticon_scroll(struct vc_data *conp, int t, int b, int dir, int count)<br />     switch (dir) {<br />     case SM_UP:<br /> 	sti_bmove(sti, t + count, 0, t, 0, b - t - count, conp-&gt;vc_cols);<br />-	sti_clear(sti, b - count, 0, count, conp-&gt;vc_cols, conp-&gt;vc_scrl_erase_char);<br />+	sti_clear(sti, b - count, 0, count, conp-&gt;vc_cols, conp-&gt;vc_video_erase_char);<br /> 	break;<br /> <br />     case SM_DOWN:<br /> 	sti_bmove(sti, t, 0, t + count, 0, b - t - count, conp-&gt;vc_cols);<br />-	sti_clear(sti, t, 0, count, conp-&gt;vc_cols, conp-&gt;vc_scrl_erase_char);<br />+	sti_clear(sti, t, 0, count, conp-&gt;vc_cols, conp-&gt;vc_video_erase_char);<br /> 	break;<br />     }<br /> <br />diff --git a/drivers/video/console/vgacon.c b/drivers/video/console/vgacon.c<br />index bd1f57b..6df29a6 100644<br />--- a/drivers/video/console/vgacon.c<br />+++ b/drivers/video/console/vgacon.c<br />&#64;&#64; -1350,7 +1350,7 &#64;&#64; static int vgacon_scroll(struct vc_data *c, int t, int b, int dir,<br /> 		} else<br /> 			c-&gt;vc_origin += delta;<br /> 		scr_memsetw((u16 *) (c-&gt;vc_origin + c-&gt;vc_screenbuf_size -<br />-				     delta), c-&gt;vc_scrl_erase_char,<br />+				     delta), c-&gt;vc_video_erase_char,<br /> 			    delta);<br /> 	} else {<br /> 		if (oldo - delta &lt; vga_vram_base) {<br />&#64;&#64; -1363,7 +1363,7 &#64;&#64; static int vgacon_scroll(struct vc_data *c, int t, int b, int dir,<br /> 		} else<br /> 			c-&gt;vc_origin -= delta;<br /> 		c-&gt;vc_scr_end = c-&gt;vc_origin + c-&gt;vc_screenbuf_size;<br />-		scr_memsetw((u16 *) (c-&gt;vc_origin), c-&gt;vc_scrl_erase_char,<br />+		scr_memsetw((u16 *) (c-&gt;vc_origin), c-&gt;vc_video_erase_char,<br /> 			    delta);<br /> 	}<br /> 	c-&gt;vc_scr_end = c-&gt;vc_origin + c-&gt;vc_screenbuf_size;<br />diff --git a/include/linux/console_struct.h b/include/linux/console_struct.h<br />index b03f80a..d71f7c0 100644<br />--- a/include/linux/console_struct.h<br />+++ b/include/linux/console_struct.h<br />&#64;&#64; -53,7 +53,6 &#64;&#64; struct vc_data {<br /> 	unsigned short	vc_hi_font_mask;	/* [#] Attribute set for upper 256 chars of font or 0 if not supported */<br /> 	struct console_font vc_font;		/* Current VC font set */<br /> 	unsigned short	vc_video_erase_char;	/* Background erase character */<br />-	unsigned short	vc_scrl_erase_char;	/* Erase character for scroll */<br /> 	/* VT terminal data */<br /> 	unsigned int	vc_state;		/* Escape sequence parser state */<br /> 	unsigned int	vc_npar,vc_par[NPAR];	/* Parameters of current escape sequence */<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
