    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/29/48">First message in thread</a></li><li><a href="/lkml/2008/7/29/48">Stephen Rothwell</a><ul><li><a href="/lkml/2008/7/29/73">Ingo Molnar</a><ul><li><a href="/lkml/2008/7/29/74">Stephen Rothwell</a><ul><li><a href="/lkml/2008/7/29/101">Ingo Molnar</a><ul><li><a href="/lkml/2008/7/29/152">KOSAKI Motohiro</a></li></ul></li></ul></li><li><a href="/lkml/2008/7/29/90">Wenji Huang</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 29 Jul 2008 09:26:03 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: linux-next: build failure</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 29 Jul 2008, Ingo Molnar wrote:<br />&gt;<br />&gt; &gt; &#64;&#64; -287,7 +287,7 &#64;&#64; static inline const cpumask_t *get_cpu_mask(unsigned int cpu)<br />&gt; &gt;   * gcc optimizes it out (it's a constant) and there's no huge stack<br />&gt; &gt;   * variable created:<br />&gt; &gt;   */<br />&gt; &gt; -#define cpumask_of_cpu(cpu) ({ *get_cpu_mask(cpu); })<br />&gt; &gt; +#define cpumask_of_cpu(cpu) (*get_cpu_mask(cpu))<br />&gt; <br />&gt; hm, i'm wondering - is this a compiler bug?<br /><br />Not necessarily. The code is fragile.<br /><br />Doing a statement expression basically creates a new temporary variable <br />with pretty much undefined scope. Taking the address of it *may* be <br />optimized away to the original cpu_mask pointer, but it's not really a <br />well-defined operation: there really _is_ a local temporary variable, and <br />if you were to change things through the address-of thing, gcc would be <br />buggy if it had done the optimization.<br /><br />So the "address-of statement expression" really is a dubious construct.<br /><br />That said, the change that Stephen introduces is _not_ a no-op. It very <br />fundamentally changes the code - exactly because now there is no temporary <br />value created any more: it's a real lvalue, and now anybody who does <br />&amp;cpumask_of_cpu(cpu) will fundamentally get the original pointer back, <br />except it has lost the "const".<br /><br />And that's actually dangerous - exactly because it now loses the "const" <br />thing, there may be people who end up modifying the result without <br />getting any compile-time warnings.<br /><br />I would _seriously_ suggest that both the original code and Stephen's <br />modified version is really bad. And you should have taken my interface <br />as-is - one that returns a "const cpumask_t *", and nothing else. <br /><br />Anything else is simply fundamentally broken.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
