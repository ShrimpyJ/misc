    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/29/48">First message in thread</a></li><li><a href="/lkml/2008/7/29/152">KOSAKI Motohiro</a><ul><li><a href="/lkml/2008/7/29/154">Ingo Molnar</a><ul><li><a href="/lkml/2008/7/29/211">Mike Travis</a><ul><li><a href="/lkml/2008/7/29/213">Mike Travis</a></li></ul></li><li class="origin"><a href="/lkml/2008/7/29/270">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/29/270">Ingo Molnar</a></li><li><a href="/lkml/2008/7/29/271">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 29 Jul 2008 09:33:10 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: linux-next: build failure</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 29 Jul 2008, Ingo Molnar wrote:<br />&gt; <br />&gt; the fix is simple enough.<br />&gt; <br />&gt; but the question is, wont it generate huge artificial stackframes with <br />&gt; CONFIG_MAXSMP and NR_CPUS=4096?<br /><br />Quite the reverse.<br /><br />The "address-of statement expression" is the one that is more likely to <br />generate artificial stack-frames because of a temporary variable (of <br />course, I wouldn't count on it, since statement expressions are gcc <br />extensions, and as such the gcc people could make up any semantics they <br />want to them, including just defining that a statement expression with <br />an lvalue value is the same lvalue rather than any temporary). <br /><br />In contrast, "address-of lvalue" is _guaranteed_ to not do anything stupid <br />like that, and gives just the address-of.<br /><br />Oh, and I was wrong about the &amp;*x losing the 'const'. It doesn't. So I <br />think Stephen's patch is fine after all - if somebody tries to modify the <br />end result through the pointer, it will give a big compiler warning.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
