    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/30/446">First message in thread</a></li><li><a href="/lkml/2008/7/30/446">Alexey Dobriyan</a><ul><li class="origin"><a href="/lkml/2008/7/30/525">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/30/525">Alexey Dobriyan</a><ul><li><a href="/lkml/2008/7/30/531">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/30/545">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2008/7/30/719">Nick Piggin</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2008/7/30/467/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 30 Jul 2008 13:09:21 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.6.27-rc1: IP: iov_iter_advance+0x2e/0x90</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 30 Jul 2008, Alexey Dobriyan wrote:<br />&gt;<br />&gt; Steps to reproduce:<br />&gt; <br />&gt; 	# while true; do ./ftest03; done<br />&gt; <br />&gt; ftest03 from LTP 20080603<br /><br />Hmm. The oops disassembles to<br /><br /> -12:	4c 8b 07             	mov    (%rdi),%r8<br />  -9:	48 8b 4f 10          	mov    0x10(%rdi),%rcx<br />  -5:	48 85 f6             	test   %rsi,%rsi<br />  -2:	75 17                	jne    0x42<br />   0:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)	&lt;---<br />   5:	75 07                	jne    0xe<br />   7:	48 83 7f 18 00       	cmpq   $0x0,0x18(%rdi)<br />   c:	75 09                	jne    0x17<br /><br />So it looks like we just overflowed %r8 to a new page and you presumably <br />have DEBUG_PAGEALLOC on.<br /><br />(And yes, I see in the oops that you do)<br /><br />&gt; RIP  [&lt;ffffffff8026190e&gt;] iov_iter_advance+0x2e/0x90<br />&gt; Call Trace:<br />&gt;  [&lt;ffffffff80263452&gt;] generic_file_buffered_write+0x1e2/0x710<br />&gt;  [&lt;ffffffff8040cfd0&gt;] ? _spin_unlock+0x30/0x60<br />&gt;  [&lt;ffffffff80263e0f&gt;] __generic_file_aio_write_nolock+0x29f/0x450<br />&gt;  [&lt;ffffffff80264026&gt;] generic_file_aio_write+0x66/0xd0<br />&gt;  [&lt;ffffffff802c9506&gt;] ext3_file_write+0x26/0xc0<br />&gt;  [&lt;ffffffff80264250&gt;] ? generic_file_aio_read+0x0/0x670<br />&gt;  [&lt;ffffffff802c94e0&gt;] ? ext3_file_write+0x0/0xc0<br />&gt;  [&lt;ffffffff8028921b&gt;] do_sync_readv_writev+0xeb/0x130<br />&gt;  [&lt;ffffffff8025284d&gt;] ? trace_hardirqs_on+0xd/0x10<br />&gt;  [&lt;ffffffff802449c0&gt;] ? autoremove_wake_function+0x0/0x40<br />&gt;  [&lt;ffffffff80289055&gt;] ? rw_copy_check_uvector+0x95/0x130<br />&gt;  [&lt;ffffffff80289953&gt;] do_readv_writev+0xc3/0x120<br />&gt;  [&lt;ffffffff8025284d&gt;] ? trace_hardirqs_on+0xd/0x10<br />&gt;  [&lt;ffffffff802527b5&gt;] ? trace_hardirqs_on_caller+0xd5/0x160<br />&gt;  [&lt;ffffffff8025284d&gt;] ? trace_hardirqs_on+0xd/0x10<br />&gt;  [&lt;ffffffff802899e9&gt;] vfs_writev+0x39/0x60<br />&gt;  [&lt;ffffffff80289d60&gt;] sys_writev+0x50/0x90<br />&gt;  [&lt;ffffffff8020b65b&gt;] system_call_fastpath+0x16/0x1b<br />&gt; <br />&gt; 0xffffffff8026190e is in iov_iter_advance (mm/filemap.c:1882).<br />&gt; 1877<br />&gt; 1878                    /*<br />&gt; 1879                     * The !iov-&gt;iov_len check ensures we skip over unlikely<br />&gt; 1880                     * zero-length segments (without overruning the iovec).<br />&gt; 1881                     */<br />&gt; 1882     ===&gt;           while (bytes || unlikely(!iov-&gt;iov_len &amp;&amp; i-&gt;count)) {<br /><br />And yes, that oopsing op would be the one that loads 'iov-&gt;iov_len'.<br /><br />So it very much looks like iov_iter_advance() advances past the end of the <br />iov array. We've had issues like that before. And I bet it's due to a <br />combination of Nick's commit f7009264c519603b8ec67c881bd368a56703cfc9 <br />("iov_iter_advance() fix") and 124d3b7041f9a0ca7c43a6293e1cae4576c32fd5 <br />("fix writev regression: pan hanging unkillable and un-straceable").<br /><br />It's simply _not_ acceptable to look at iov-&gt;iov_len when 'bytes' has gone <br />down to zero, because there may be no 'iov' left!<br /><br />Nick?<br /><br />That said, I do think that we have another issue with iovec's - I think we <br />should strive to always pass in the number of iovec's when we pass a <br />pointer to an iovec, in addition to the bytes. The sad part is that <br />'iov_iter_advance' actually -has- the count, but it's the byte count <br />remaining, not the iovec's remaining. <br /><br />In this particular case, the trivial fix _may_ be to just change the order <br />of testing iov-&gt;iov_len &amp;&amp; i-&gt;count, but I really think we should also <br />count actual iov entries and pass them around (and keep them updated).<br /><br />So does this (hacky, ugly) patch fix it for you?<br /><br />			Linus<br /><br />---<br /> mm/filemap.c |    2 +-<br /> 1 files changed, 1 insertions(+), 1 deletions(-)<br /><br />diff --git a/mm/filemap.c b/mm/filemap.c<br />index 42bbc69..d97d1ad 100644<br />--- a/mm/filemap.c<br />+++ b/mm/filemap.c<br />&#64;&#64; -1879,7 +1879,7 &#64;&#64; void iov_iter_advance(struct iov_iter *i, size_t bytes)<br /> 		 * The !iov-&gt;iov_len check ensures we skip over unlikely<br /> 		 * zero-length segments (without overruning the iovec).<br /> 		 */<br />-		while (bytes || unlikely(!iov-&gt;iov_len &amp;&amp; i-&gt;count)) {<br />+		while (bytes || unlikely(i-&gt;count &amp;&amp; !iov-&gt;iov_len)) {<br /> 			int copy;<br /> <br /> 			copy = min(bytes, iov-&gt;iov_len - base);<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
