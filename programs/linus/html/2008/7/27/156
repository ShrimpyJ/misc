    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/27/145">First message in thread</a></li><li><a href="/lkml/2008/7/27/145">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2008/7/27/167">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/27/167">Ingo Molnar</a><ul><li><a href="/lkml/2008/7/28/323">Mike Travis</a></li></ul></li><li><a href="/lkml/2008/7/27/168">Al Viro</a><ul><li><a href="/lkml/2008/7/27/176">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2008/7/27/196">Rusty Russell</a><ul><li><a href="/lkml/2008/7/27/231">Andrew Morton</a><ul><li><a href="/lkml/2008/7/28/16">Rusty Russell</a></li></ul></li><li><a href="/lkml/2008/7/28/34">Ingo Molnar</a><ul><li><a href="/lkml/2008/7/28/302">Mike Travis</a></li></ul></li><li><a href="/lkml/2008/7/28/280">Mike Travis</a><ul><li><a href="/lkml/2008/7/28/320">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2008/7/28/326">Mike Travis</a><ul><li><a href="/lkml/2008/7/28/344">Ingo Molnar</a></li><li><a href="/lkml/2008/7/29/17">Rusty Russell</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/7/27/199">Rusty Russell</a><ul><li><a href="/lkml/2008/7/28/30">Ingo Molnar</a><ul><li><a href="/lkml/2008/7/28/106">Rusty Russell</a><ul><li><a href="/lkml/2008/7/28/314">Mike Travis</a></li></ul></li></ul></li><li><a href="/lkml/2008/7/28/37">Ingo Molnar</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 27 Jul 2008 13:15:26 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [git pull] cpus4096 fixes</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 27 Jul 2008, Ingo Molnar wrote:<br />&gt; <br />&gt; Please pull the latest cpus4096-fixes git tree from:<br /><br />No. Not without explanations.<br /><br />Quite frankly, this "fix" looks like a huge stinking pile of sh*t.<br /><br />I can't follow that thread on lkml.org (horrible web interface with <br />hard-to-follow threading), and I'm too lazy to bother to look in my lkml <br />email archives, but whoever said<br /><br />  "The simple version is just a static array of [NR_CPUS] cpumask_t's."<br /><br />and then implemented this piece of shit is a complete and utter moron.<br /><br />I'm sorry, but guys, I really expect people to have better taste than <br />this, and also expect people to be able to _think_ better than this. <br /><br />Am I right, and all you want is NR_CPU constant bitmasks that have just a <br />single big set in each (for that single CPU)?<br /><br />And I further right, adn you are so STUPID that you cannot see that you <br />can share all the zero words?<br /><br />In other words, on a 64-bit architecture, you only ever need 64 of these <br />arrays - with a different bit set in ONE SINGLE WORD (with enough zero <br />words around it so that you can create any bitmask by just offsetting in <br />that big array). And then you just put enough zeroes around it that you <br />can point _every_single_cpumask_ to be one of those things.<br /><br />So when you have 4k CPU's, instead of having 4k arrays (of 4k bits each, <br />with one bit set in each array - 2MB memory total), you have exactly 64 <br />arrays instead, each 8k bits in size (64kB total). <br /><br />And then you just point cpumask(n) to the right position (which you can <br />calculate dynamically). Once you have the right arrays, getting <br />"cpumask(n)" ends up being something like<br /><br />	static const cpumask_t *cpumask_of_cpu(int cpu)<br />	{<br />		/* Get the array with the right bit set */<br />		unsigned long *p = array[cpu % BITS_PER_LONG];<br /><br />		/* Offset it so that it's in the right word */<br />		p += (NR_CPUS-n)/BITS_PER_LONG;<br /><br />		/* Return it as a cpumask_t */<br />		return (cpumask_t) p;<br />	}<br /><br />And once you're not being a total idiot about wasting memory that is just <br />filled with a single bit in various different places, you don't need all <br />those games to re-create the arrays in some dense format, because they're <br />already going to be dense enough. If you compile a kernel for up to 4k <br />CPU's, "wasting" that 64kB of memory is a non-issue (especially since by <br />doing this "overlapping" trick you probbaly get better cache behaviour <br />anyway).<br /><br />Ok, so now that I've insulted you and your pets (they're ugly!), show me <br />wrong, and then call me a d*ckhead. ("Linus - you're a d*ckhead, and you <br />didn't understand the problem, so you're a _stupid_ d*ckhead. And my <br />pet may be ugly, but yours _smells_ bad!").<br /><br />Or say "Uh, yeah, we're morons, and here's the much better patch, and we <br />won't do that again".<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
