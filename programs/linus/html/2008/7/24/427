    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/24/340">First message in thread</a></li><li><a href="/lkml/2008/7/24/405">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/24/419">Suresh Siddha</a><ul><li class="origin"><a href="/lkml/2008/7/24/437">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/24/437">Suresh Siddha</a><ul><li><a href="/lkml/2008/7/24/440">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 24 Jul 2008 14:54:31 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] x64, fpu: fix possible FPU leakage in error conditions</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 24 Jul 2008, Suresh Siddha wrote:<br />&gt; <br />&gt; Meanwhile, I wanted to keep this patch simple, so that it can be easily<br />&gt; applied to -stable series aswell.<br /><br />Hmm. There's somethign more fundamentally wrong, it really shouldn't be <br />this ugly.<br /><br />For example, the signal handler path right now does<br /><br />	if (!access_ok(VERIFY_READ, buf, sizeof(*buf)))<br />		goto badframe;<br />	err |= restore_i387(buf);<br /><br />but the thing is, the only really valid reason for "restore_i387()" to <br />fail is because the read failed.<br /><br />Which in turn implies that if it fails, it should just do the same thing <br />as that access_ok() failure did!<br /><br />So why doesn't it just do<br /><br />	if (!access_ok(VERIFY_READ, buf, sizeof(*buf)))<br />		goto badframe;<br />	if (restore_i387(buf))<br />		goto badframe:<br /><br />because I don't see why that path should even _care_ about the i387 <br />details? Especially since it doesn't even try to do that if the buffer <br />pointer is totally bogus..<br /><br />What am I missing? This code looks unnecessarily complex, and your patch <br />makes it even harder to follow. Is this complexity really needed and worth <br />it?<br /><br />Also, looking at that "math_state_restore()" thing some more, I can't for <br />the life of me convince myself that even just initializing the state is <br />enough. We've used math before, and if we cannot restore it from the <br />fxsave area, why would we _ever_ say that it's ok to try to continue with <br />some _other_ state?<br /><br />IOW, rather than resetting it, shouldn't we force a SIGFPE or something?<br /><br />Sorry for being difficult, but I'd much rather get the x87 state handling <br />_right_ and make it logically consistent than paper over yet another <br />mistake we've done in this area. For example, regular 32-bit x86 doesn't <br />do any of this crap. It just does "restore_fpu()" in math_state_restore().<br /><br />Why does x86-64 need to do anythign else? It's not even a user address, it <br />cannot take page faults. So exactly what are we protecting against? <br /><br />I may well be missing something here, so please fill me in..<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
