    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/24/340">First message in thread</a></li><li><a href="/lkml/2008/7/24/340">Suresh Siddha</a><ul><li class="origin"><a href="/lkml/2008/7/24/350">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/24/350">Suresh Siddha</a><ul><li><a href="/lkml/2008/7/24/356">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/24/399">Suresh Siddha</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 24 Jul 2008 11:31:42 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] x64, fpu: fix possible FPU leakage in error conditions</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 24 Jul 2008, Suresh Siddha wrote:<br />&gt; <br />&gt; In the error condition for restore_fpu_checking() (especially during<br />&gt; the 64bit signal return), we are doing init_fpu(), which saves the live<br />&gt; FPU register state (possibly belonging to some other process context) into the<br />&gt; thread struct (through unlazy_fpu() in init_fpu()). This is wrong and can leak<br />&gt; the FPU data.<br />&gt; <br />&gt; Remove the unlazy_fpu() from the init_fpu(). init_fpu() will now always<br />&gt; init the FPU data in the thread struct. For the error conditions in<br />&gt; restore_fpu_checking(), restore the initialized FPU data from the thread<br />&gt; struct.<br /><br />Why? The thread struct is guaranteed to contain pointless data.<br /><br />If we cannot restore the FP state from the signal stack, we should not try <br />to restore it from anywhere _else_ either, since nowhere else will have <br />any better results.<br /><br />I suspect we should just reset the x87 state (which was the _intention_ of <br />the code), possibly by just doing "stts + used_math = 0". The signal <br />handling code already checks for errors, and will force a SIGSEGV if this <br />ever happens.<br /><br />(Yes, there is also a restore_fpu_checking() in math_state_restore(), but <br />that one _already_ uses &amp;current-&gt;thread.xstate-&gt;fxsave as the buffer to <br />restore from, so trying to do that _again_ when it fails seems to be <br />really really wrong - we already _did_ that, and that was what failed to <br />begin with)<br /><br />				Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
