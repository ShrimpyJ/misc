    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/16/393">First message in thread</a></li><li><a href="/lkml/2008/7/17/31">Andi Kleen</a><ul><li><a href="/lkml/2008/7/17/246">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2008/7/17/278">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/17/278">Linus Torvalds</a></li><li><a href="/lkml/2008/7/17/285">Andi Kleen</a><ul><li><a href="/lkml/2008/7/17/377">"Ray Lee"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 17 Jul 2008 08:47:43 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Please pull ACPI updates</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 17 Jul 2008, Linus Torvalds wrote:<br />&gt; <br />&gt; That's the whole point of topic branches. They allow you to separate out <br />&gt; work to different areas, so that people who are interested in (say) the <br />&gt; PCI-impacting ones can merge with one part, without having to wait for the <br />&gt; other parts to stabilize.<br /><br />Btw, you don't really have to have a lot of them.<br /><br />When it comes to ACPI in particular, I would really prefer to see at least <br />the ACPICA stuff in a separate topic branch. It comes in from a different <br />source, it's maintained separately, and when it causes problems(*) it ends <br />up usually being handled differently too.<br /><br />Len additionally split things like bugzilla entries up into individual <br />topics, and that was really nice to see when merging, but I have to say <br />that it was also "above and beyond" what I've ever expected of any <br />maintainer. That said, I think ACPI has been rather bugzilla-driven (many <br />other areas are feature-driven), and I do think it makes tons of sense to <br />put fixes in different branches, and then you can merge them when you <br />actualyl close the bug when the fix has been verified.<br /><br />So one reason I reacted strongly to the ACPI change was definitely just <br />that ACPI used to be one of the really nicely done subsystems (not just <br />from a git standpoint, but the whole git flow was part of it). There were <br />some issues very early on in git usage, but I gave a shout-out to Len at <br />the last kernel summit for a reason.<br /><br />And in that sense it's definitely unfair to require quite _that_ level of <br />separation. I'm really not expecting it. <br /><br />But I *really* hate pulling from somebody, and seeing commit dates that <br />are from five minutes ago, and based on something that I had just pushed <br />out (which was essentially the case for this round of ACPI changes).<br /><br />That literally shows that the code was hardly tested _at_all_ in that <br />exact configuration. It may have gotten testing based on some earlier <br />kernel version, but then it very clearly got rebased (or just quilt <br />imported) on top of a totally new kernel base, and was not tested in that <br />version very much if at all.<br /><br />So even if you end up using quilt, I'd suggest you do so on a specific <br />base, rather than on some random "kernel-of-the-moment-in-the-middle- <br />of-the-merge-window". Because then at least I feel like the people <br />involved have been doing their own development without having the rug <br />pulled out from them all the time by using a different kernel as a base.<br /><br />		Linus<br /><br />(*) Which is happily fairly rare these days! I obviously detest the <br />complexity that is ACPI, but even if I detest it, Intel should get cudos <br />for getting it to work.<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
