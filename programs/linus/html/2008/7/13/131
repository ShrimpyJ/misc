    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/10/440">First message in thread</a></li><li><a href="/lkml/2008/7/13/103">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/13/129">Andi Kleen</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 13 Jul 2008 12:08:40 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86_64: fix delayed signals</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 13 Jul 2008, Andi Kleen wrote:<br />&gt; <br />&gt; While the bit about color ls (which I use here) catching signals was<br />&gt; also interesting I wouldn't expect the color ls to take longer to<br />&gt; process Ctrl-C even if it hits user space because it shouldn't<br />&gt; do anything block here (unless the terminal is in flow control,<br />&gt; but is unlikely)<br /><br />I didn't take a look at the source, but I literally think that the 'ls' <br />SIGINT handler is something like<br /><br />	static void sigint(int signr)<br />	{<br />		exit_with_sigint = 1;<br />	}<br /><br />and then in the output routine it does a<br /><br />	if (exit_with_sigint) {<br />		signal(SIGINT, SIG_DFL);<br />		kill(-1, SIGINT);<br />	}<br /><br />at the end because that's the only thing that explains that it always <br />exits after printing the _first_ line of output (ignoring the header - it <br />obviously doesn't have that "if (exit_with_sigint)" test in that <br />code-path).<br /><br />Sad. Horrible crap. It means that it totally disables the kernels ability <br />to make fatal signals break out of disk wait etc. It's also totally <br />_unnecessary_, because 'ls' shouldn't even bother to block signals until <br />just before it starts doing the printout.<br /><br />Oh well. You can't expect too much of user level programmers.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
