    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/11/328">First message in thread</a></li><li><a href="/lkml/2008/7/12/160">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/13/42">"Dmitry Adamushko"</a><ul><li class="origin"><a href="/lkml/2008/7/13/104">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/13/104">Ingo Molnar</a></li><li><a href="/lkml/2008/7/13/106">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/13/109">"Dmitry Adamushko"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 13 Jul 2008 10:10:58 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: current linux-2.6.git: cpusets completely broken</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 13 Jul 2008, Dmitry Adamushko wrote:<br /><br />&gt; And let me explain one last time why I opposed your 'cpu_active_map' approach.<br /><br />And let me explain why you are totally off base.<br /><br />&gt; I do agree that there are likely ways to optimize the hotplug<br />&gt; machinery [ .. deleted rambling .. ]<br /><br />This has *NOTHING* to do with optimizing any hotplug machinery.<br /><br />&gt; The current way to synchronize with the load-balancer is to attach<br />&gt; NULL domains [ .. deleted more ramblings .. ]<br /><br />This has *NOTHING* to do even with cpusets and scheduler domains!<br /><br />Until you can understand that, all your arguments are total and utter <br />CRAP.<br /><br />So Dmitry - please follow along, and think this through.<br /><br />This is a *fundamental* scheduler issue. It has nothing what-so-ever to do <br />with optimization, and it has nothing to do with cpusets. It's about the <br />fact that we migrate threads from one CPU to another - and we do that <br />whether cpusets are even enabled or not!<br /><br />And anything that uses "cpu_active_map" to decide if the migration target <br />is alive is simply _buggy_.<br /><br />See? Not "un-optimized". Not "cpusets". Just pure scheduling and hotplug <br />issues with taking a CPU down.<br /><br />As long as you continue to only look at wake_idle() and scheduler domains, <br />you are missing all the *other* cases of migration. Like the one we do at <br />execve() time, or in balance_task.<br /><br />The thing is, we should fix the top level code to never even _consider_ an <br />invalid CPU as a target, and that in turn should mean that all the other <br />code should be able to just totally ignore CPU hotplug events.<br /><br />In other words, it vey fundamentally SHOULD NOT MATTER that somebody <br />happened to call "try_to_wake_up()" during the cpu unplug sequence. We <br />should fix the fundamental scheduler routines to simply make it impossible <br />for that to ever balance something back to a CPU that is going down.<br /><br />And we shouldn't _care_ about what crazy things the cpusets code does.<br /><br />See?<br /><br />THAT is the reason for my patch. I think the cpusets callbacks are totally <br />insane, but I don't care. What I care about is that the scheduler got <br />confused just because those insane callbacks happened to make timing be <br />just subtle enough that (and I quote):<br /><br />  "try_to_wake_up() is called for one of these tasks from another CPU -&gt;<br />   the load-balancer (wake_idle()) picks up a "dead" CPU and places the <br />   task on it. Then e.g. BUG_ON(rq-&gt;nr_running) detects this a bit later <br />   -&gt; oops."<br /><br />IOW, we should never have had code that was that fragile in the first <br />place! It's totally INSANE to depend on complex and fragile code, when <br />we'd be much better off with simple code that always says: "I will not <br />migrate a task to a CPU that is going down".<br /><br />Depending on complex (and conditional) scheduler domains data structures <br />is a *bug*. It's fragile, and it's a horrible design mistake.<br /><br />			Linus<br /><br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
