    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/28/191">First message in thread</a></li><li><a href="/lkml/2008/7/28/198">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/28/210">Andrea Righi</a><ul><li><a href="/lkml/2008/7/28/220">KOSAKI Motohiro</a><ul><li><a href="/lkml/2008/7/28/262">Andrea Righi</a><ul><li><a href="/lkml/2008/7/28/380">Andrew Morton</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/7/28/212">James Bottomley</a><ul><li class="origin"><a href="/lkml/2008/7/28/248">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/28/248">James Bottomley</a><ul><li><a href="/lkml/2008/7/28/259">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 28 Jul 2008 09:45:14 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/1] mm: unify pmd_free() implementation</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 28 Jul 2008, James Bottomley wrote:<br />&gt; <br />&gt; Are you sure about this (the barrier)?<br /><br />I'm sure. Try it. It perturbs the code quite a bit to have a function call <br />in the thing, because it<br /><br /> - clobbers all callee-clobbered registers.<br /><br />   This means that all functions that _used_ to be leaf functions and <br />   needed no stack frame at all (because they were simple enough to use <br />   only the callee-clobbered registers) are suddenly now going to be <br />   significantly more costly.<br /><br />   Ergo: you get more stack movement with save/restore crud.<br /><br /> - it is a barrier wrt any variables that may be visible externally <br />   (perhaps because they had their address taken), so it forces a flush to <br />   memory for those.<br /><br /> - if it has arguments and return values, it also ends up forcing a <br />   totally unnecessary argument setup (and all the fixed register crap <br />   that involves, which means that you lost almost all your register <br />   allocation freedom - not that you likely care, since most of your <br />   registers are dead _anyway_ around the function call)<br /><br />So empty functions calls are _deadly_ especially if the code was a leaf <br />function before, and suddenly isn't any more.<br /><br />On the other hand, there are also many cases where function calls won't <br />matter much at all. If you had other function calls around that same area, <br />all the above issues essentially go away, since your registers are dead <br />anyway, and the function obviously wasn't a leaf function before the new <br />call.<br /><br />So it does depend quite a bit on the pattern of use. And yes, function <br />argument setup can be a big part of it too.<br /><br />				Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
