    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/7/14/388">First message in thread</a></li><li><a href="/lkml/2008/7/15/232">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/15/238">	david&#64;lang ...</a><ul><li class="origin"><a href="/lkml/2008/7/15/301">Linus Torvalds</a><ul><li><a href="/lkml/2008/7/15/301">David Woodhouse</a></li><li><a href="/lkml/2008/7/15/359">	david&#64;lang ...</a></li></ul></li></ul></li><li><a href="/lkml/2008/7/15/349">Willy Tarreau</a><ul><li><a href="/lkml/2008/7/15/354">David Woodhouse</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 15 Jul 2008 09:01:08 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT *] Allow request_firmware() to be satisfied from in-kernel, use it in more drivers.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 15 Jul 2008, david&#64;lang.hm wrote:<br />&gt; <br />&gt; has a standard been defined for how to maintain different versions of firmware<br />&gt; for different versions of drivers yet?<br /><br />No. We haven't had that possibility, probably largely because we haven't <br />even really had the ability (Davem and Jeff talk about "choice" and how <br />request_firmware() supposedly removes it, but they ignore the fact that it <br />very much cuts the other way too - request_firmware() _adds_ choice and <br />makes it easier for people to try to upgrade firmware without upgrading <br />the kernel).<br /><br />&gt; that was one of the things that was identified in the last flamewar that was<br />&gt; handwaved away but nothing was defined.<br /><br />I don't think we can - or want to - define things until we've seen the <br />problems and advantages in practice over a longer time.<br /><br />Do we want a versioning scheme? Probably not - exactly because people may <br />well want to update (or downgrade) firmware from vendors independently of <br />the kernel.<br /><br />But maybe people will eventually want some kind of blacklisting scheme <br />where the driver can say things like "I know I won't work with versions <br />that match this checksum" and cause a nice big warning at load-time.<br /><br />And I think we can all _imagine_ scenarios in all kinds of possible ways <br />for things to work better or fail spectaclarly, and even come up with <br />anecdotal evidence where scheme X (out of any number of random variations) <br />is the "only possible one to work". I'd argue that we simply don't have <br />any realistic way to decide which ones make sense.<br /><br />For example, we can be in the situation where we have some case where<br />"only this particular firmware is known to work, and others are known to <br />break", and people can still take two totally different mental approaches <br />to the problem.<br /><br />One approach is the "strict control one", where people argue that the <br />above problem means that we absolutely *must* have very strict versioning, <br />and we just always pair things up exactly.<br /><br />But the other argument is that firmware is part of hardware, and the <br />driver should strive to work with different versions of vendor firmware, <br />the same way it should strive to work with different versions of chip <br />hardware.<br /><br />Which one is right?  Probably neither. Sometimes one, sometimes the other, <br />and in both cases it should probably not be black-and-white.<br /><br />IOW, I suspect that in the long run we want to say<br /><br />  "Ok, there's no way we can support _all_ firmware versions, but on the <br />   other hand, we also don't want to force particular versions and not let <br />   people experiment.<br /><br />   So drivers should strive to be flexible, and driver writers should not <br />   always just say 'there is only one "blessed" firmware', but on the <br />   other hand we cannot require drivers to work around horrible known bugs <br />   in firmware when a fixed firmware is available"<br /><br />but the exact details will have to depend on particular drivers.<br /><br />And we should obviously have _a_ version of the firmware available with <br />the kernel when that is possible. But I'd hate for it to be 1:1 with a <br />particular driver version - because at that point it smells of being a <br />single work, and if it is more than mere aggregation it's no longer viable <br />with most of our firmware (I don't think we have source for more than one <br />or two cases).<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
