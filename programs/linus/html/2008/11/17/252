    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/11/15/114">First message in thread</a></li><li><a href="/lkml/2008/11/17/245">Ingo Molnar</a><ul><li><a href="/lkml/2008/11/17/249">Jeremy Fitzhardinge</a><ul><li class="origin"><a href="/lkml/2008/11/17/258">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/258">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2008/11/17/281">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2008/11/17/278">Jens Axboe</a><ul><li><a href="/lkml/2008/11/17/283">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Nov 2008 09:25:18 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Fix kunmap() argument in sg_miter_stop</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 17 Nov 2008, Jeremy Fitzhardinge wrote:<br /><br />&gt; Pass the struct page * to kunmap, not the vaddr of the mapping itself.<br />&gt; <br />&gt; Pointed out by Jens Axboe &lt;jens.axboe&#64;oracle.com&gt;<br />&gt; <br />&gt; Signed-off-by: Jeremy Fitzhardinge &lt;jeremy.fitzhardinge&#64;citrix.com&gt;<br />&gt; ---<br />&gt; drivers/xen/balloon.c |    2 +-<br />&gt; 1 file changed, 1 insertion(+), 1 deletion(-)<br />&gt; <br />&gt; ===================================================================<br />&gt; --- a/drivers/xen/balloon.c<br />&gt; +++ b/drivers/xen/balloon.c<br />&gt; &#64;&#64; -120,7 +120,7 &#64;&#64;<br />&gt; 	if (PageHighMem(page)) {<br />&gt; 		void *v = kmap(page);<br />&gt; 		clear_page(v);<br />&gt; -		kunmap(v);<br />&gt; +		kunmap(page);<br />&gt; 	} else {<br />&gt; 		void *v = page_address(page);<br />&gt; 		clear_page(v);<br /><br />Well, quite frankly, the whole thing looks like crud.<br /><br />First off, 'kmap/kunmap' work on regular pages too. So if you're highmem <br />aware, you should just do<br /><br />	void *v = kmap(page);<br />	clear_page(v);<br />	kunmap(page);<br /><br />and be done with it. <br /><br />Secondly, we actually have a function called "clear_highpage()" that does <br />this, except it uses kmap_atomic(page, KM_USER0). Which is _probably <br />better anyway, but I didn't check if there is some magical reason why it <br />wouldn't work.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
