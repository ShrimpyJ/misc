    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/11/16/211">First message in thread</a></li><li><a href="/lkml/2008/11/17/334">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/338">David Miller</a><ul><li class="origin"><a href="/lkml/2008/11/17/350">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/350">David Miller</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Nov 2008 11:57:55 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Bug #11308] tbench regression on each kernel release from 2.6.22 -&amp;gt; 2.6.28</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 17 Nov 2008, David Miller wrote:<br />&gt; <br />&gt; And as a result I found that wake_up() is now 4 times slower than it<br />&gt; was in 2.6.22, I even analyzed this for every single kernel release<br />&gt; till now.<br /><br />..and that's the one where you then pointed to hrtimers, and now you claim <br />that was fixed?<br /><br />At least I haven't seen any new analysis since then.<br /><br />&gt; It could be a sparc specific issue, because the call chain is deeper<br />&gt; and we eat a lot more register window spills onto the stack.<br /><br />Oh, easily. In-order machines tend to have serious problems with indirect <br />function calls in particular. x86, in contrast, tends to not even notice, <br />especially if the indirect function is fairly static per call-site, and <br />predicts well.<br /><br />There is a reason my machine is 15-20 times faster than yours.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
