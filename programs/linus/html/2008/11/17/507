    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/11/17/360">First message in thread</a></li><li><a href="/lkml/2008/11/17/460">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/479">Paul Mackerras</a><ul><li class="origin"><a href="/lkml/2008/11/18/109">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/18/109">Nick Piggin</a><ul><li><a href="/lkml/2008/11/18/124">Paul Mackerras</a></li><li><a href="/lkml/2008/11/18/218">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/11/18/23">Benjamin Herrenschmidt</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Nov 2008 18:08:13 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Large stack usage in fs code (especially for PPC64)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 18 Nov 2008, Paul Mackerras wrote:<br />&gt; <br />&gt; Also, you didn't respond to my comments about the purely software<br />&gt; benefits of a larger page size.<br /><br />I realize that there are benefits. It's just that the downsides tend to <br />swamp the upsides.<br /><br />The fact is, Intel (and to a lesser degree, AMD) has shown how hardware <br />can do good TLB's with essentially gang lookups, giving almost effective <br />page sizes of 32kB with hardly any of the downsides. Couple that with <br />low-latency fault handling (for not when you miss in the TLB, but when <br />something really isn't in the page tables), and it seems to be seldom the <br />biggest issue.<br /><br />(Don't get me wrong - TLB's are not unimportant on x86 either. But on x86, <br />things are generally much better).<br /><br />Yes, we could prefill the page tables and do other things, and ultimately <br />if you don't need to - by virtue of big pages, some loads will always <br />benefit from just making the page size larger.<br /><br />But the people who advocate large pages seem to never really face the <br />downsides. They talk about their single loads, and optimize for that and <br />nothing else. They don't seem to even acknowledge the fact that a 64kB <br />page size is simply NOT EVEN REMOTELY ACCEPTABLE for other loads!<br /><br />That's what gets to me. These absolute -idiots- talk about how they win 5% <br />on some (important, for them) benchmark by doing large pages, but then <br />ignore the fact that on other real-world loads they lose by sevaral <br />HUNDRED percent because of the memory fragmentation costs.<br /><br />(And btw, if they win more than 5%, it's because the hardware sucks really <br />badly).<br /><br />THAT is what irritates me.<br /><br />What also irritates me is the ".. but AIX" argument. The fact is, the AIX <br />memory management is very tightly tied to one particular broken MMU model. <br />Linux supports something like thirty architectures, and while PPC may be <br />one of the top ones, it is NOT EVEN CLOSE to be really relevant.<br /><br />So ".. but AIX" simply doesn't matter. The Linux VM has other priorities.<br /><br />And I _guarantee_ that in general, in the high-volume market (which is <br />what drives things, like it or not), page sizes will not be growing. In <br />that market, terabytes of RAM is not the primary case, and small files <br />that want mmap are one _very_ common case.<br /><br />To make things worse, the biggest performance market has another vendor <br />that hasn't been saying ".. but AIX" for the last decade, and that <br />actually listens to input. And, perhaps not incidentally, outperforms the <br />highest-performance ppc64 chips mostly by a huge margin - while selling <br />their chips for a fraction of the price.<br /><br />I realize that this may be hard to accept for some people. But somebody <br />who says "... but AIX" should be taking a damn hard look in the mirror, <br />and ask themselves some really tough questions. Because quite frankly, the <br />"..but AIX" market isn't the most interesting one.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
