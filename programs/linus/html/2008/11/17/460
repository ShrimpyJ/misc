    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/11/17/360">First message in thread</a></li><li><a href="/lkml/2008/11/17/389">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/448">Paul Mackerras</a><ul><li><a href="/lkml/2008/11/18/106">Nick Piggin</a></li></ul></li><li><a href="/lkml/2008/11/17/455">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2008/11/17/458">Josh Boyer</a></li><li class="origin"><a href="/lkml/2008/11/17/479">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/479">Paul Mackerras</a><ul><li><a href="/lkml/2008/11/17/507">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2008/11/18/23">Benjamin Herrenschmidt</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Nov 2008 15:28:41 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Large stack usage in fs code (especially for PPC64)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 18 Nov 2008, Benjamin Herrenschmidt wrote:<br />&gt; <br />&gt; Guess who is pushing for larger page sizes nowadays ? Embedded<br />&gt; people :-) In fact, we have patches submited on the list to offer the<br />&gt; option for ... 256K pages on some 44x embedded CPUs :-)<br />&gt; <br />&gt; It makes some sort of sense I suppose on very static embedded workloads<br />&gt; with no swap nor demand paging.<br /><br />It makes perfect sense for anything that doesn't use any MMU. <br /><br />The hugepage support seems to cover many of the relevant cases, ie <br />databases and things like big static mappings (frame buffers etc).<br /><br />&gt; &gt; It's made worse by the fact that they <br />&gt; &gt; also have horribly bad TLB fills on their broken CPU's, and years and <br />&gt; &gt; years of telling people that the MMU on ppc's are sh*t has only been <br />&gt; &gt; reacted to with "talk to the hand, we know better".<br />&gt; <br />&gt; Who are you talking about here precisely ? I don't think either Paul or<br />&gt; I every said something nearly around those lines ... Oh well.<br /><br />Every single time I've complained about it, somebody from IBM has said ".. <br />but but AIX".<br /><br />This time it was Paul. Sometimes it has been software people who agree, <br />but point to hardware designers who "know better". If it's not some insane <br />database person, it's a Fortran program that runs for days.<br /><br />&gt; But there is also pressure to get larger page sizes from small embedded<br />&gt; field, where CPUs have even poorer TLB refill (software loaded<br />&gt; basically) :-)<br /><br />Yeah, I agree that you _can_ have even worse MMU's. I'm not saying that <br />PPC64 is absolutely pessimal and cannot be made worse. Software fill is <br />indeed even worse from a performance angle, despite the fact that it's <br />really "nice" from a conceptual angle.<br /><br />Of course, of thesw fill users that remain, many do seem to be ppc.. It's <br />like the architecture brings out the worst in hardware designers.<br /><br />&gt; &gt; Quite frankly, 64kB pages are INSANE. But yes, in this case they actually <br />&gt; &gt; cause bugs. With a sane page-size, that *arr[MAX_BUF_PER_PAGE] thing uses <br />&gt; &gt; 64 bytes, not 1kB.<br />&gt; <br />&gt; Come on, the code is crap to allocate that on the stack anyway :-)<br /><br />Why? We do actually expect to be able to use stack-space for small <br />structures. We do it for a lot of things, including stuff like select() <br />optimistically using arrays allocated on the stack for the common small <br />case, just because it's, oh, about infinitely faster to do than to use <br />kmalloc().<br /><br />Many of the page cache functions also have the added twist that they get <br />called from low-memory setups (eg write_whole_page()), and so try to <br />minimize allocations for that reason too.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
