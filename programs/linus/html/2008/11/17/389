    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/11/17/360">First message in thread</a></li><li><a href="/lkml/2008/11/17/360">Steven Rostedt</a><ul><li><a href="/lkml/2008/11/17/369">Steven Rostedt</a><ul><li><a href="/lkml/2008/11/17/396">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/401">"Pekka Enberg"</a></li><li><a href="/lkml/2008/11/17/490">Steven Rostedt</a><ul><li><a href="/lkml/2008/11/17/493">Paul Mackerras</a></li></ul></li></ul></li><li><a href="/lkml/2008/11/17/433">Paul Mackerras</a><ul><li><a href="/lkml/2008/11/17/461">Steven Rostedt</a></li></ul></li><li><a href="/lkml/2008/11/17/451">Benjamin Herrenschmidt</a></li><li><a href="/lkml/2008/11/17/508">Steven Rostedt</a><ul><li><a href="/lkml/2008/11/17/509">Paul Mackerras</a><ul><li><a href="/lkml/2008/11/18/8">David Miller</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/11/17/387">Andrew Morton</a><ul><li><a href="/lkml/2008/11/17/400">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/406">Andrew Morton</a><ul><li><a href="/lkml/2008/11/17/413">Linus Torvalds</a></li><li><a href="/lkml/2008/11/17/456">Benjamin Herrenschmidt</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="/lkml/2008/11/17/448">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/448">Paul Mackerras</a><ul><li><a href="/lkml/2008/11/18/106">Nick Piggin</a></li></ul></li><li><a href="/lkml/2008/11/17/455">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2008/11/17/458">Josh Boyer</a></li><li><a href="/lkml/2008/11/17/460">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/479">Paul Mackerras</a></li><li><a href="/lkml/2008/11/18/23">Benjamin Herrenschmidt</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/11/17/450">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2008/11/18/105">Christoph Hellwig</a><ul><li><a href="/lkml/2008/11/18/112">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/2008/11/17/462">Benjamin Herrenschmidt</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Nov 2008 13:09:29 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Large stack usage in fs code (especially for PPC64)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 17 Nov 2008, Steven Rostedt wrote:<br />&gt;<br />&gt;  45)     4992    1280   .block_read_full_page+0x23c/0x430<br />&gt;  46)     3712    1280   .do_mpage_readpage+0x43c/0x740<br /><br />Ouch.<br /><br />&gt; Notice at line 45 and 46 the stack usage of block_read_full_page and <br />&gt; do_mpage_readpage. They each use 1280 bytes of stack! Looking at the start <br />&gt; of these two:<br />&gt; <br />&gt; int block_read_full_page(struct page *page, get_block_t *get_block)<br />&gt; {<br />&gt; 	struct inode *inode = page-&gt;mapping-&gt;host;<br />&gt; 	sector_t iblock, lblock;<br />&gt; 	struct buffer_head *bh, *head, *arr[MAX_BUF_PER_PAGE];<br /><br />Yeah, that's unacceptable.<br /><br />Well, it's not unacceptable on good CPU's with 4kB blocks (just an 8-entry <br />array), but as you say:<br /><br />&gt; On PPC64 I'm told that the page size is 64K, which makes the above equal <br />&gt; to: 64K / 512 = 128  multiply that by 8 byte words, we have 1024 bytes.<br /><br />Yeah. Not good. I think 64kB pages are insane. In fact, I think 32kB <br />pages are insane, and 16kB pages are borderline. I've told people so.<br /><br />The ppc people run databases, and they don't care about sane people <br />telling them the big pages suck. It's made worse by the fact that they <br />also have horribly bad TLB fills on their broken CPU's, and years and <br />years of telling people that the MMU on ppc's are sh*t has only been <br />reacted to with "talk to the hand, we know better".<br /><br />Quite frankly, 64kB pages are INSANE. But yes, in this case they actually <br />cause bugs. With a sane page-size, that *arr[MAX_BUF_PER_PAGE] thing uses <br />64 bytes, not 1kB.<br /><br />I suspect the PPC people need to figure out some way to handle this in <br />their broken setups (since I don't really expect them to finally admit <br />that they were full of sh*t with their big pages), but since I think it's <br />a ppc bug, I'm not at all interested in a fix that penalizes the _good_ <br />case.<br /><br />So either make it some kind of (clean) conditional dynamic non-stack <br />allocation, or make it do some outer loop over the whole page that turns <br />into a compile-time no-op when the page is sufficiently small to be done <br />in one go.<br /><br />Or perhaps say "if you have 64kB pages, you're a moron, and to counteract <br />that moronic page size, you cannot do 512-byte granularity IO any more".<br /><br />Of course, that would likely mean that FAT etc wouldn't work on ppc64, so <br />I don't think that's a valid model either. But if the 64kB page size is <br />just a "database server crazy-people config option", then maybe it's <br />acceptable.<br /><br />Database people usually don't want to connect their cameras or mp3-players <br />with their FAT12 filesystems.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
