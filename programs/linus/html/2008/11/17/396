    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/11/17/360">First message in thread</a></li><li><a href="/lkml/2008/11/17/360">Steven Rostedt</a><ul><li><a href="/lkml/2008/11/17/369">Steven Rostedt</a><ul><li class="origin"><a href="/lkml/2008/11/17/401">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/401">"Pekka Enberg"</a></li><li><a href="/lkml/2008/11/17/490">Steven Rostedt</a><ul><li><a href="/lkml/2008/11/17/493">Paul Mackerras</a></li></ul></li></ul></li><li><a href="/lkml/2008/11/17/433">Paul Mackerras</a><ul><li><a href="/lkml/2008/11/17/461">Steven Rostedt</a></li></ul></li><li><a href="/lkml/2008/11/17/451">Benjamin Herrenschmidt</a></li><li><a href="/lkml/2008/11/17/508">Steven Rostedt</a><ul><li><a href="/lkml/2008/11/17/509">Paul Mackerras</a><ul><li><a href="/lkml/2008/11/18/8">David Miller</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/11/17/387">Andrew Morton</a><ul><li><a href="/lkml/2008/11/17/400">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/406">Andrew Morton</a><ul><li><a href="/lkml/2008/11/17/413">Linus Torvalds</a></li><li><a href="/lkml/2008/11/17/456">Benjamin Herrenschmidt</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/11/17/389">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/448">Paul Mackerras</a><ul><li><a href="/lkml/2008/11/18/106">Nick Piggin</a></li></ul></li><li><a href="/lkml/2008/11/17/455">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2008/11/17/458">Josh Boyer</a></li><li><a href="/lkml/2008/11/17/460">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/17/479">Paul Mackerras</a></li><li><a href="/lkml/2008/11/18/23">Benjamin Herrenschmidt</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/11/17/450">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2008/11/18/105">Christoph Hellwig</a><ul><li><a href="/lkml/2008/11/18/112">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/2008/11/17/462">Benjamin Herrenschmidt</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Nov 2008 13:18:44 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Large stack usage in fs code (especially for PPC64)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 17 Nov 2008, Steven Rostedt wrote:<br />&gt; <br />&gt; Here's my stack after boot up with CONFIG_IRQSTACKS set. Seems that <br />&gt; softirqs still use the same stack as the process.<br /><br />Yes.<br /><br />&gt; This is still 12K. Kind of big even for a 16K stack.<br /><br />And while that 1kB+ stack slot for block_read_full_page still stands out <br />like a sore thumb, I do agree that there's way too many other functions <br />too with big stack frames.<br /><br />I do wonder just _what_ it is that causes the stack frames to be so <br />horrid. For example, you have<br /><br />	 18)     8896     160   .kmem_cache_alloc+0xfc/0x140<br /><br />and I'm looking at my x86-64 compile, and it has a stack frame of just 8 <br />bytes (!) for local variables plus the save/restore area (which looks like <br />three registers plus frame pointer plus return address). IOW, if I'm <br />looking at the code right (so big caveat: I did _not_ do a real stack <br />dump!) the x86-64 stack cost for that same function is on the order of 48 <br />bytes. Not 160.<br /><br />Where does that factor-of-three+ difference come from? From the numbers, I <br />suspect ppc64 has a 32-byte stack alignment, which may be part of it, and <br />I guess the compiler is more eager to use all those extra registers and <br />will happily have many more callee-saved regs that are actually used.<br /><br />But that still a _lot_ of extra stack.<br /><br />Of course, you may have things like spinlock debugging etc enabled. Some <br />of our debugging options do tend to blow things up.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
