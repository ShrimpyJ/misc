    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/11/1/111">First message in thread</a></li><li><a href="/lkml/2008/11/12/68">Jiri Slaby</a><ul><li><a href="/lkml/2008/11/13/178">Helge Deller</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 13 Nov 2008 08:22:47 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Who broke cb8f488c33 patch? (was Re: [PATCH 1/1] USBHID: correct start/stop cycle)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 13 Nov 2008, Helge Deller wrote:<br />&gt; <br />&gt; I bisected twice. Both times I found this one to be the culprit.<br />&gt; Nevertheless, just reverting this (Thanks Denys!) didn't fixed the USB<br />&gt; problem.<br /><br />The trivial bisecting approach doesn't work if there are two independent <br />bugs that have overlapping lifetimes. In fact, bisection doesn't <br />necessarily work even if the lifetimes of the bugs are clearly disjoint, <br />because then if you look for bug A, but mark something "bad" because of <br />bug B, it can easily end up zeroing in on the wrong cause.<br /><br />So "git bisect" is an absolutely wonderful tool, but it does require you <br />to be able to be sure about _which_ exact bug you chase down to give <br />reliable answers.<br /><br />In the presense of multiple bugs, you have two choices:<br /><br /> (a) either you have to know how to distinguish them reliably in order to <br />     give a clean good/bad for the particular bug you are chasing.<br /><br />     This can be impossible: one bug may make it impossible to even _test_ <br />     for the other bug, eg a bug that prevents bootup will obviously make <br />     it impossible to see whether an independent run-time bug exists or <br />     not. In this case, you have to do (b)<br /><br /> (b) Find _one_ bug first (doesn't matter which), and fix it. And then, do <br />     a second bisection run, but before each test, you may need to apply <br />     the fix for the first bug, so that you know that's not the an issue.<br /><br />     This can be automated (check if the broken commit is in the current <br />     tree to be tested, apply a patch to fix it if it is), but it's not as <br />     simple as just saying "let's bisect".<br /><br />So bisection with multiple bugs is certainly possible, but it's also <br />unquestionably a lot more work, and more complicated.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
