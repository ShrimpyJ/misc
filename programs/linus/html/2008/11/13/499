    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/11/13/26">First message in thread</a></li><li><a href="/lkml/2008/11/13/187">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/13/495">Nick Piggin</a><ul><li class="origin"><a href="/lkml/2008/11/13/509">Linus Torvalds</a><ul><li><a href="/lkml/2008/11/13/509">Nick Piggin</a><ul><li><a href="/lkml/2008/11/13/522">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 13 Nov 2008 18:07:45 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [rfc] x86: optimise page fault path a little</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 14 Nov 2008, Nick Piggin wrote:<br />&gt; <br />&gt; True, but is it any better to jam them all into a 300 line function<br />&gt; with gotos?<br /><br />That wasn't what I was saying.<br /><br />Theere are two "good" cases:<br /><br /> - don't mess with things.<br /><br />   This is good. Stability is good.<br /><br /> - Clearly improve things. <br /><br />   This is great.<br /><br />And I'll happily do either of the above.<br /><br />Your patch had some improvement, but it had some clear not-so-improved <br />parts. That makes it INFERIOR to just leaving things well alone.<br /><br />The thing is, I'm not very much interested in just a micro-optimization <br />that seems to be all about just gcc code generation. Long-term, that's <br />just bad.<br /><br />But if it's a clear and undeniable _cleanup_, then long-term, it's <br />actually a win. If it also happens to fix some gcc stack allocation issues <br />etc, then that is just gravy.<br /><br />See my point? Cleanup is good. But it had better _be_ a cleanup. Random <br />micro-optimization is not so good, especially not if it them makes the <br />code do things that good code simply shouldn't be doing.<br /><br />As it is, I don't think your patch is appropriate to be merged. <br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
