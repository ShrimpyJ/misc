    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/8/13/111">First message in thread</a></li><li><a href="/lkml/2008/8/13/383">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/13/392">Andrew Morton</a><ul><li class="origin"><a href="/lkml/2008/8/13/411">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/13/411">Andrew Morton</a><ul><li><a href="/lkml/2008/8/13/415">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 13 Aug 2008 13:13:13 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] kexec jump: fix compiling warning on xchg(&amp;kexec_lock, 0) in kernel_kexec()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 13 Aug 2008, Andrew Morton wrote:<br />&gt; &gt; <br />&gt; &gt; Nope. That needs to be an "unsigned long".<br />&gt; <br />&gt; It is.<br /><br />Gaah. I just misread the patch, sorry.<br /><br />&gt; Used a bitop to preserve the runtime checking in there.  spin_unlock()<br />&gt; doesn't return the previous lockedness.<br /><br />Umm. spin_unlock does a lot more when you have lock debugging on, and <br />doesn't do useless crap when it isn't.<br /><br />&gt; A bitop seems a better fit to me.  We never spin on that lock (it<br />&gt; always uses test_and_set), so why use a "spin"lock?<br /><br />..because an atomic bitop is not the same as a lock.<br /><br />The memory ordering guarantees are different. Yes, they are sufficient, <br />but that's because we've had to make them so to account for CRAP CODE that <br />uses bit operations as if they were locks.<br /><br />Don't continue that. It's WRONG.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
