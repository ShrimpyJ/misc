    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/8/16/76">First message in thread</a></li><li><a href="/lkml/2008/8/16/153">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/17/30">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2008/8/17/116">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/17/116">Ingo Molnar</a><ul><li><a href="/lkml/2008/8/17/117">Ingo Molnar</a></li><li><a href="/lkml/2008/8/17/128">Linus Torvalds</a></li><li><a href="/lkml/2008/8/17/239">Rusty Russell</a></li></ul></li></ul></li><li><a href="/lkml/2008/8/20/173">Boaz Harrosh</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 17 Aug 2008 09:56:35 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] debug: fix BUILD_BUG_ON() for non-constant expressions</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 17 Aug 2008, Ingo Molnar wrote:<br />&gt; +/*<br />&gt; + * Force a compilation error if condition is true [array index becomes<br />&gt; + * negative], and a linker error if condition is not constant [non-defined<br />&gt; + * variable is used as an array index]:<br />&gt; + *<br />&gt; + * ( The linker trick relies on gcc optimizing out a multiplication with<br />&gt; + *   constant zero - which should be reasonable enough. )<br />&gt; + */<br />&gt; +extern unsigned int __BUILD_BUG_ON_non_constant;<br />&gt; +<br />&gt; +#define BUILD_BUG_ON(condition)					\<br />&gt; +do {								\<br />&gt; +	(void)sizeof(char[1 - 2*!!(condition)]);		\<br />&gt; +	if (!__builtin_constant_p(condition))			\<br />&gt; +		__BUILD_BUG_ON_non_constant++;			\<br />&gt; +} while (0)<br /><br />Gag me now.<br /><br />Why not just do<br /><br /> #define __BBO(c)                sizeof(const char[1 - 2*!!(c)])<br /> #define __BBONC(c)              __BBO(!__builtin_constant_p(c))<br /> #define BUILD_BUG_ON_ZERO(c)    (__BBO(c) - __BBONC(c))<br /> #define BUILD_BUG_ON(c)         (void)BUILD_BUG_ON_ZERO(c)<br /><br />and be done with it?<br /><br />The rules are trivial:<br /><br /> - __BBO() causes a warning if 'c' is a constant non-zero, returns a<br />   (size_t) 1 otherwise<br /><br /> - __BBONC() causes a warning if 'c' is not a constant, returns a<br />   (size_t) 1 otherwise<br /><br />And then BUILD_BUG_ON[_ZERO] are totally _trivial_ on top of those.<br /><br />Yeah, yeah, I didn't test this, but it looks a hell of a lot simpler, and <br />gives the warning about non-constant issues at compile time with line <br />numbers rather than at link-time.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
