    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/8/23/105">First message in thread</a></li><li><a href="/lkml/2008/8/26/26">Ingo Molnar</a><ul><li><a href="/lkml/2008/8/26/40">"Yinghai Lu"</a><ul><li class="origin"><a href="/lkml/2008/8/26/190">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/26/190">"Yinghai Lu"</a></li><li><a href="/lkml/2008/9/24/492">Rusty Russell</a><ul><li><a href="/lkml/2008/9/25/102">Ingo Molnar</a></li><li><a href="/lkml/2008/9/25/256">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/8/26/255">Mike Travis</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 26 Aug 2008 09:51:46 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Bug #11342] Linux 2.6.27-rc3: kernel BUG at mm/vmalloc.c - bisected</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 26 Aug 2008, Yinghai Lu wrote:<br />&gt; <br />&gt; wonder if could use "unsigned long *" directly.<br /><br />I would actually suggest something like this:<br /><br /> - we continue to have a magic "cpumask_t".<br /><br /> - we do different cases for big and small NR_CPUS:<br /><br />	#if NR_CPUS &lt;= BITS_PER_LONG<br /><br />	/*<br />	 * Make it an array - that way passing it as an argument will<br />	 * always pass it as a pointer!<br />	 */<br />	typedef unsigned long cpumask_t[1];<br /><br />	static inline void create_cpumask(cpumask_t *p)<br />	{<br />		*p = 0;<br />	}<br />	static inline void free_cpumask(cpumask_t *p)<br />	{<br />	}<br /><br />	#else<br /><br />	typedef unsigned long *cpumask_t;<br /><br />	static inline void create_cpumask(cpumask_t *p)<br />	{<br />		*p = kcalloc(..);<br />	}<br /><br />	static inline void free_cpumask(cpumask_t *p)<br />	{<br />		kfree(*p);<br />	}<br /><br />	#endif<br /><br />and now after you do this, you can just do something like<br /><br />	cpumask_t mycpu;<br /><br />	create_cpumask(&amp;mycpu);<br />	..<br />	free_cpumask(&amp;mycpu);<br /><br />and in between, you can use 'cpumask' as a pointer, because even when it <br />is an array directly allocated on the stack, the array can always <br />degenerate into a pointer by C type rules!<br /><br />And for the small-NR_CPUS case there is zero overhead.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
