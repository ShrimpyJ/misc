    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/8/28/371">First message in thread</a></li><li><a href="/lkml/2008/8/29/441">"Yinghai Lu"</a><ul><li><a href="/lkml/2008/8/29/451">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2008/8/29/461">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/29/461">"Yinghai Lu"</a><ul><li><a href="/lkml/2008/8/29/464">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2008/8/29/463">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2008/8/29/459">"Yinghai Lu"</a><ul><li><a href="/lkml/2008/8/29/462">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2008/8/29/457/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 29 Aug 2008 19:56:50 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 2.6.27-rc5: System boot regression caused by commit a2bd7274b47124d2fc4dfdb8c0591f545ba749dd</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 29 Aug 2008, Linus Torvalds wrote:<br />&gt; <br />&gt; Yes. And I do think this is a workable model.<br /><br />Ok, and here's the patch to do<br /><br />	insert_resource_expand_to_fit(root, new);<br /><br />and while I still haven't actually tested it, it looks sane and compiles <br />to code that also looks sane.<br /><br />I'll happily commit this as basic infrastructure as soon as somebody ack's <br />it and tests that it works (and I'll try it myself soon enough, just for <br />fun)<br /><br />		Linus<br /><br />---<br /> include/linux/ioport.h |    1 +<br /> kernel/resource.c      |   88 ++++++++++++++++++++++++++++++++++-------------<br /> 2 files changed, 64 insertions(+), 25 deletions(-)<br /><br />diff --git a/include/linux/ioport.h b/include/linux/ioport.h<br />index 22d2115..8d3b7a9 100644<br />--- a/include/linux/ioport.h<br />+++ b/include/linux/ioport.h<br />&#64;&#64; -109,6 +109,7 &#64;&#64; extern struct resource iomem_resource;<br /> extern int request_resource(struct resource *root, struct resource *new);<br /> extern int release_resource(struct resource *new);<br /> extern int insert_resource(struct resource *parent, struct resource *new);<br />+extern void insert_resource_expand_to_fit(struct resource *root, struct resource *new);<br /> extern int allocate_resource(struct resource *root, struct resource *new,<br /> 			     resource_size_t size, resource_size_t min,<br /> 			     resource_size_t max, resource_size_t align,<br />diff --git a/kernel/resource.c b/kernel/resource.c<br />index f5b518e..72ee95b 100644<br />--- a/kernel/resource.c<br />+++ b/kernel/resource.c<br />&#64;&#64; -362,35 +362,21 &#64;&#64; int allocate_resource(struct resource *root, struct resource *new,<br /> <br /> EXPORT_SYMBOL(allocate_resource);<br /> <br />-/**<br />- * insert_resource - Inserts a resource in the resource tree<br />- * &#64;parent: parent of the new resource<br />- * &#64;new: new resource to insert<br />- *<br />- * Returns 0 on success, -EBUSY if the resource can't be inserted.<br />- *<br />- * This function is equivalent to request_resource when no conflict<br />- * happens. If a conflict happens, and the conflicting resources<br />- * entirely fit within the range of the new resource, then the new<br />- * resource is inserted and the conflicting resources become children of<br />- * the new resource.<br />+/*<br />+ * Insert a resource into the resource tree. If successful, return NULL,<br />+ * otherwise return the conflicting resource (compare to __request_resource())<br />  */<br />-int insert_resource(struct resource *parent, struct resource *new)<br />+static struct resource * __insert_resource(struct resource *parent, struct resource *new)<br /> {<br />-	int result;<br /> 	struct resource *first, *next;<br /> <br />-	write_lock(&amp;resource_lock);<br />-<br /> 	for (;; parent = first) {<br />-	 	result = 0;<br /> 		first = __request_resource(parent, new);<br /> 		if (!first)<br />-			goto out;<br />+			return first;<br /> <br />-		result = -EBUSY;<br /> 		if (first == parent)<br />-			goto out;<br />+			return first;<br /> <br /> 		if ((first-&gt;start &gt; new-&gt;start) || (first-&gt;end &lt; new-&gt;end))<br /> 			break;<br />&#64;&#64; -401,15 +387,13 &#64;&#64; int insert_resource(struct resource *parent, struct resource *new)<br /> 	for (next = first; ; next = next-&gt;sibling) {<br /> 		/* Partial overlap? Bad, and unfixable */<br /> 		if (next-&gt;start &lt; new-&gt;start || next-&gt;end &gt; new-&gt;end)<br />-			goto out;<br />+			return next;<br /> 		if (!next-&gt;sibling)<br /> 			break;<br /> 		if (next-&gt;sibling-&gt;start &gt; new-&gt;end)<br /> 			break;<br /> 	}<br /> <br />-	result = 0;<br />-<br /> 	new-&gt;parent = parent;<br /> 	new-&gt;sibling = next-&gt;sibling;<br /> 	new-&gt;child = first;<br />&#64;&#64; -426,10 +410,64 &#64;&#64; int insert_resource(struct resource *parent, struct resource *new)<br /> 			next = next-&gt;sibling;<br /> 		next-&gt;sibling = new;<br /> 	}<br />+	return NULL;<br />+}<br /> <br />- out:<br />+/**<br />+ * insert_resource - Inserts a resource in the resource tree<br />+ * &#64;parent: parent of the new resource<br />+ * &#64;new: new resource to insert<br />+ *<br />+ * Returns 0 on success, -EBUSY if the resource can't be inserted.<br />+ *<br />+ * This function is equivalent to request_resource when no conflict<br />+ * happens. If a conflict happens, and the conflicting resources<br />+ * entirely fit within the range of the new resource, then the new<br />+ * resource is inserted and the conflicting resources become children of<br />+ * the new resource.<br />+ */<br />+int insert_resource(struct resource *parent, struct resource *new)<br />+{<br />+	struct resource *conflict;<br />+<br />+	write_lock(&amp;resource_lock);<br />+	conflict = __insert_resource(parent, new);<br /> 	write_unlock(&amp;resource_lock);<br />-	return result;<br />+	return conflict ? -EBUSY : 0;<br />+}<br />+<br />+/**<br />+ * insert_resource_expand_to_fit - Insert a resource into the resource tree<br />+ * &#64;parent: parent of the new resource<br />+ * &#64;new: new resource to insert<br />+ *<br />+ * Insert a resource into the resource tree, possibly expanding it in order<br />+ * to make it encompass any conflicting resources.<br />+ */<br />+void insert_resource_expand_to_fit(struct resource *root, struct resource *new)<br />+{<br />+	if (new-&gt;parent)<br />+		return;<br />+<br />+	write_lock(&amp;resource_lock);<br />+	for (;;) {<br />+		struct resource *conflict;<br />+<br />+		conflict = __insert_resource(root, new);<br />+		if (!conflict)<br />+			break;<br />+		if (conflict == root)<br />+			break;<br />+<br />+		/* Ok, expand resource to cover the conflict, then try again .. */<br />+		if (conflict-&gt;start &lt; new-&gt;start)<br />+			new-&gt;start = conflict-&gt;start;<br />+		if (conflict-&gt;end &gt; new-&gt;end)<br />+			new-&gt;end = conflict-&gt;end;<br />+<br />+		printk("Expanded resource %s due to conflict with %s", new-&gt;name, conflict-&gt;name);<br />+	}<br />+	write_unlock(&amp;resource_lock);	<br /> }<br /> <br /> /**<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
