    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/8/23/105">First message in thread</a></li><li><a href="/lkml/2008/8/27/482">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/27/487">Linus Torvalds</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2008/8/27/521/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 27 Aug 2008 17:35:20 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.6.27-rc4-git1: Reported regressions from 2.6.26</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 27 Aug 2008, Linus Torvalds wrote:<br />&gt; <br />&gt; Hmm. compat_ioctl() actually has exactly the same issue. Damn.<br />&gt; <br />&gt; So you can't just add the new argument, you also have to _pass_ the <br />&gt; argument in the compat_ioctl handlers to the non-compat ones.<br /><br />What the hell. Here's a test patch. A largish part of it was generated <br />through a stupid script that basically did a number of grep + 'sed' on a <br />lot of files, and then the rest was fixed up manually after running "make <br />allmodconfig".<br /><br />I'm not going to guarantee anything, but it gets close. A starting point <br />for somebody else, and considering that it is<br /><br /> 208 files changed, 370 insertions(+), 376 deletions(-)<br /><br />this is definitely linux-next material.<br /><br />The extra deletions are mainly because the passing of "inode" as an <br />argument means that some functions don't need to look it up manually any <br />more.<br /><br />And yeah, I changed the return type to "int". There's no way the kernel <br />can validly return anything bigger than that anyway. And this way all the <br />ioctl functions have the same type, no confusion.<br /><br />TOTALLY UNTESTED apart from the fact that it compiles.<br /><br />			Linus<br /><br />---<br /> arch/mips/sibyte/common/sb_tbprof.c   |    2 +-<br /> arch/parisc/kernel/perf.c             |    4 +-<br /> arch/sparc/kernel/apc.c               |    2 +-<br /> arch/x86/kernel/apm_32.c              |    2 +-<br /> arch/x86/kernel/cpu/mcheck/mce_64.c   |    2 +-<br /> arch/x86/kernel/cpu/mtrr/if.c         |    3 +-<br /> block/bsg.c                           |    2 +-<br /> block/compat_ioctl.c                  |   18 +++++++++++-----<br /> block/ioctl.c                         |    3 +-<br /> drivers/block/DAC960.c                |    2 +-<br /> drivers/block/cciss.c                 |    4 +-<br /> drivers/block/loop.c                  |    3 +-<br /> drivers/block/paride/pt.c             |    4 +-<br /> drivers/char/agp/agp.h                |    2 +-<br /> drivers/char/agp/compat_ioctl.c       |    2 +-<br /> drivers/char/agp/frontend.c           |    2 +-<br /> drivers/char/ds1302.c                 |    2 +-<br /> drivers/char/dsp56k.c                 |    2 +-<br /> drivers/char/efirtc.c                 |    4 +-<br /> drivers/char/ip2/ip2main.c            |    6 ++--<br /> drivers/char/ip27-rtc.c               |    4 +-<br /> drivers/char/ipmi/ipmi_devintf.c      |    2 +-<br /> drivers/char/mmtimer.c                |    4 +-<br /> drivers/char/mwave/mwavedd.c          |    4 +-<br /> drivers/char/pcmcia/cm4000_cs.c       |    3 +-<br /> drivers/char/ppdev.c                  |    2 +-<br /> drivers/char/random.c                 |    2 +-<br /> drivers/char/rio/rio_linux.c          |    4 +-<br /> drivers/char/rtc.c                    |    4 +-<br /> drivers/char/sx.c                     |    4 +-<br /> drivers/char/tty_io.c                 |   14 +++++-------<br /> drivers/char/viotape.c                |    2 +-<br /> drivers/firewire/fw-cdev.c            |    8 +++---<br /> drivers/gpu/drm/i915/i915_drv.h       |    2 +-<br /> drivers/gpu/drm/i915/i915_ioc32.c     |    2 +-<br /> drivers/gpu/drm/mga/mga_drv.h         |    2 +-<br /> drivers/gpu/drm/mga/mga_ioc32.c       |    2 +-<br /> drivers/gpu/drm/r128/r128_drv.h       |    2 +-<br /> drivers/gpu/drm/r128/r128_ioc32.c     |    2 +-<br /> drivers/gpu/drm/radeon/radeon_drv.h   |    2 +-<br /> drivers/gpu/drm/radeon/radeon_ioc32.c |    2 +-<br /> drivers/hid/hidraw.c                  |    3 +-<br /> drivers/hid/usbhid/hiddev.c           |    6 ++--<br /> drivers/i2c/i2c-dev.c                 |    2 +-<br /> drivers/ieee1394/dv1394.c             |   20 +++++++++---------<br /> drivers/ieee1394/raw1394.c            |    4 +-<br /> drivers/ieee1394/video1394.c          |   34 ++++++++++++++++----------------<br /> drivers/infiniband/core/user_mad.c    |    4 +-<br /> drivers/input/evdev.c                 |    4 +-<br /> drivers/input/joydev.c                |    4 +-<br /> drivers/input/misc/uinput.c           |    2 +-<br /> drivers/md/dm-ioctl.c                 |    6 ++--<br /> drivers/media/video/compat_ioctl32.c  |   26 ++++++++++++------------<br /> drivers/message/fusion/mptctl.c       |    8 +++---<br /> drivers/message/i2o/i2o_config.c      |    2 +-<br /> drivers/misc/phantom.c                |    6 ++--<br /> drivers/misc/sgi-gru/grufile.c        |    2 +-<br /> drivers/net/ppp_generic.c             |    2 +-<br /> drivers/pci/proc.c                    |    2 +-<br /> drivers/rtc/rtc-dev.c                 |    2 +-<br /> drivers/s390/block/dasd_int.h         |    2 +-<br /> drivers/s390/char/tape_char.c         |    2 +-<br /> drivers/s390/char/vmcp.c              |    2 +-<br /> drivers/s390/cio/chsc_sch.c           |    2 +-<br /> drivers/s390/crypto/zcrypt_api.c      |    4 +-<br /> drivers/s390/scsi/zfcp_cfdc.c         |    2 +-<br /> drivers/sbus/char/cpwatchdog.c        |    2 +-<br /> drivers/sbus/char/display7seg.c       |    2 +-<br /> drivers/sbus/char/openprom.c          |    2 +-<br /> drivers/scsi/aacraid/linit.c          |    2 +-<br /> drivers/scsi/ch.c                     |    6 ++--<br /> drivers/scsi/dpt_i2o.c                |    7 +----<br /> drivers/scsi/megaraid/megaraid_mm.c   |   10 ++++----<br /> drivers/scsi/megaraid/megaraid_sas.c  |   10 ++++----<br /> drivers/scsi/osst.c                   |    2 +-<br /> drivers/scsi/sd.c                     |    2 +-<br /> drivers/scsi/sg.c                     |    2 +-<br /> drivers/scsi/st.c                     |    4 +-<br /> drivers/spi/spidev.c                  |    4 +-<br /> drivers/telephony/ixj.c               |    2 +-<br /> drivers/usb/class/usblp.c             |    2 +-<br /> drivers/usb/gadget/inode.c            |    6 ++--<br /> drivers/usb/gadget/printer.c          |    4 +-<br /> drivers/usb/misc/iowarrior.c          |    2 +-<br /> drivers/usb/misc/rio500.c             |    2 +-<br /> drivers/usb/misc/sisusbvga/sisusb.c   |   10 ++++----<br /> drivers/usb/misc/usblcd.c             |    2 +-<br /> drivers/video/fbmem.c                 |    4 +--<br /> drivers/watchdog/acquirewdt.c         |    2 +-<br /> drivers/watchdog/advantechwdt.c       |    2 +-<br /> drivers/watchdog/alim1535_wdt.c       |    2 +-<br /> drivers/watchdog/alim7101_wdt.c       |    2 +-<br /> drivers/watchdog/ar7_wdt.c            |    2 +-<br /> drivers/watchdog/at32ap700x_wdt.c     |    2 +-<br /> drivers/watchdog/at91rm9200_wdt.c     |    2 +-<br /> drivers/watchdog/bfin_wdt.c           |    2 +-<br /> drivers/watchdog/booke_wdt.c          |    2 +-<br /> drivers/watchdog/cpu5wdt.c            |    2 +-<br /> drivers/watchdog/davinci_wdt.c        |    2 +-<br /> drivers/watchdog/ep93xx_wdt.c         |    2 +-<br /> drivers/watchdog/eurotechwdt.c        |    2 +-<br /> drivers/watchdog/hpwdt.c              |    2 +-<br /> drivers/watchdog/i6300esb.c           |    2 +-<br /> drivers/watchdog/iTCO_wdt.c           |    2 +-<br /> drivers/watchdog/ib700wdt.c           |    2 +-<br /> drivers/watchdog/ibmasr.c             |    2 +-<br /> drivers/watchdog/indydog.c            |    2 +-<br /> drivers/watchdog/iop_wdt.c            |    2 +-<br /> drivers/watchdog/it8712f_wdt.c        |    2 +-<br /> drivers/watchdog/ixp2000_wdt.c        |    2 +-<br /> drivers/watchdog/ixp4xx_wdt.c         |    2 +-<br /> drivers/watchdog/ks8695_wdt.c         |    2 +-<br /> drivers/watchdog/machzwd.c            |    2 +-<br /> drivers/watchdog/mixcomwd.c           |    2 +-<br /> drivers/watchdog/mpc5200_wdt.c        |    2 +-<br /> drivers/watchdog/mpc8xxx_wdt.c        |    2 +-<br /> drivers/watchdog/mpcore_wdt.c         |    2 +-<br /> drivers/watchdog/mtx-1_wdt.c          |    2 +-<br /> drivers/watchdog/mv64x60_wdt.c        |    2 +-<br /> drivers/watchdog/omap_wdt.c           |    2 +-<br /> drivers/watchdog/pc87413_wdt.c        |    2 +-<br /> drivers/watchdog/pcwd.c               |    2 +-<br /> drivers/watchdog/pcwd_pci.c           |    2 +-<br /> drivers/watchdog/pcwd_usb.c           |    2 +-<br /> drivers/watchdog/pnx4008_wdt.c        |    2 +-<br /> drivers/watchdog/rm9k_wdt.c           |    4 +-<br /> drivers/watchdog/s3c2410_wdt.c        |    2 +-<br /> drivers/watchdog/sa1100_wdt.c         |    2 +-<br /> drivers/watchdog/sb_wdog.c            |    2 +-<br /> drivers/watchdog/sbc60xxwdt.c         |    2 +-<br /> drivers/watchdog/sbc7240_wdt.c        |    2 +-<br /> drivers/watchdog/sbc_epx_c3.c         |    2 +-<br /> drivers/watchdog/sc1200wdt.c          |    2 +-<br /> drivers/watchdog/sc520_wdt.c          |    2 +-<br /> drivers/watchdog/scx200_wdt.c         |    2 +-<br /> drivers/watchdog/shwdt.c              |    2 +-<br /> drivers/watchdog/smsc37b787_wdt.c     |    2 +-<br /> drivers/watchdog/softdog.c            |    2 +-<br /> drivers/watchdog/txx9wdt.c            |    2 +-<br /> drivers/watchdog/w83627hf_wdt.c       |    2 +-<br /> drivers/watchdog/w83697hf_wdt.c       |    2 +-<br /> drivers/watchdog/w83877f_wdt.c        |    2 +-<br /> drivers/watchdog/w83977f_wdt.c        |    2 +-<br /> drivers/watchdog/wafer5823wdt.c       |    2 +-<br /> drivers/watchdog/wdrtas.c             |    2 +-<br /> drivers/watchdog/wdt.c                |    2 +-<br /> drivers/watchdog/wdt285.c             |    2 +-<br /> drivers/watchdog/wdt977.c             |    2 +-<br /> drivers/watchdog/wdt_pci.c            |    2 +-<br /> fs/bad_inode.c                        |    4 +-<br /> fs/block_dev.c                        |    7 +++++-<br /> fs/cifs/cifsfs.h                      |    2 +-<br /> fs/cifs/ioctl.c                       |    3 +-<br /> fs/compat_ioctl.c                     |    3 +-<br /> fs/ext2/ext2.h                        |    4 +-<br /> fs/ext2/ioctl.c                       |    7 ++---<br /> fs/ext3/ioctl.c                       |    3 +-<br /> fs/ext4/ext4.h                        |    4 +-<br /> fs/ext4/ioctl.c                       |    7 ++---<br /> fs/fat/dir.c                          |    3 +-<br /> fs/gfs2/ops_file.c                    |    2 +-<br /> fs/inotify_user.c                     |    2 +-<br /> fs/ioctl.c                            |    8 +++---<br /> fs/jffs2/ioctl.c                      |    2 +-<br /> fs/jffs2/os-linux.h                   |    2 +-<br /> fs/jfs/ioctl.c                        |    7 ++---<br /> fs/jfs/jfs_inode.h                    |    4 +-<br /> fs/ncpfs/ioctl.c                      |    3 +-<br /> fs/ocfs2/ioctl.c                      |    7 ++---<br /> fs/ocfs2/ioctl.h                      |    4 +-<br /> fs/pipe.c                             |    3 +-<br /> fs/proc/inode.c                       |   14 ++++++------<br /> fs/reiserfs/ioctl.c                   |    3 +-<br /> fs/ubifs/ioctl.c                      |    7 ++---<br /> fs/ubifs/ubifs.h                      |    4 +-<br /> fs/xfs/linux-2.6/xfs_file.c           |    8 +++---<br /> fs/xfs/linux-2.6/xfs_ioctl32.c        |    6 +++-<br /> fs/xfs/linux-2.6/xfs_ioctl32.h        |    4 +-<br /> include/linux/ext3_fs.h               |    2 +-<br /> include/linux/fs.h                    |   10 ++++----<br /> include/linux/ncp_fs.h                |    2 +-<br /> include/linux/reiserfs_fs.h           |    2 +-<br /> include/linux/tty.h                   |    2 +-<br /> include/linux/wanrouter.h             |    2 +-<br /> include/media/v4l2-ioctl.h            |    2 +-<br /> kernel/power/user.c                   |    2 +-<br /> net/irda/irnet/irnet_ppp.c            |    3 +-<br /> net/irda/irnet/irnet_ppp.h            |    5 ++-<br /> net/socket.c                          |    8 +++---<br /> net/wanrouter/wanmain.c               |    3 +-<br /> sound/core/control.c                  |    2 +-<br /> sound/core/control_compat.c           |    4 +-<br /> sound/core/hwdep.c                    |    2 +-<br /> sound/core/hwdep_compat.c             |    4 +-<br /> sound/core/info.c                     |    2 +-<br /> sound/core/init.c                     |    2 +-<br /> sound/core/oss/mixer_oss.c            |    2 +-<br /> sound/core/oss/pcm_oss.c              |    2 +-<br /> sound/core/pcm_compat.c               |    2 +-<br /> sound/core/pcm_native.c               |    4 +-<br /> sound/core/rawmidi.c                  |    2 +-<br /> sound/core/rawmidi_compat.c           |    4 +-<br /> sound/core/seq/oss/seq_oss.c          |    6 ++--<br /> sound/core/seq/seq_clientmgr.c        |    2 +-<br /> sound/core/seq/seq_compat.c           |    2 +-<br /> sound/core/timer.c                    |    2 +-<br /> sound/core/timer_compat.c             |    4 +-<br /> virt/kvm/kvm_main.c                   |    8 +++---<br /> 208 files changed, 370 insertions(+), 376 deletions(-)<br /><br />diff --git a/arch/mips/sibyte/common/sb_tbprof.c b/arch/mips/sibyte/common/sb_tbprof.c<br />index 66e3e3f..5419f85 100644<br />--- a/arch/mips/sibyte/common/sb_tbprof.c<br />+++ b/arch/mips/sibyte/common/sb_tbprof.c<br />&#64;&#64; -507,7 +507,7 &#64;&#64; static ssize_t sbprof_tb_read(struct file *filp, char *buf,<br /> 	return count;<br /> }<br /> <br />-static long sbprof_tb_ioctl(struct file *filp,<br />+static int sbprof_tb_ioctl(struct inode *inode, struct file *filp,<br /> 			    unsigned int command,<br /> 			    unsigned long arg)<br /> {<br />diff --git a/arch/parisc/kernel/perf.c b/arch/parisc/kernel/perf.c<br />index f696f57..6d98acc 100644<br />--- a/arch/parisc/kernel/perf.c<br />+++ b/arch/parisc/kernel/perf.c<br />&#64;&#64; -198,7 +198,7 &#64;&#64; static int perf_open(struct inode *inode, struct file *file);<br /> static ssize_t perf_read(struct file *file, char __user *buf, size_t cnt, loff_t *ppos);<br /> static ssize_t perf_write(struct file *file, const char __user *buf, size_t count, <br /> 	loff_t *ppos);<br />-static long perf_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+static int perf_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> static void perf_start_counters(void);<br /> static int perf_stop_counters(uint32_t *raddr);<br /> static const struct rdr_tbl_ent * perf_rdr_get_entry(uint32_t rdr_num);<br />&#64;&#64; -442,7 +442,7 &#64;&#64; static void perf_patch_images(void)<br />  * must be running on the processor that you wish to change.<br />  */<br /> <br />-static long perf_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int perf_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	long error_start;<br /> 	uint32_t raddr[4];<br />diff --git a/arch/sparc/kernel/apc.c b/arch/sparc/kernel/apc.c<br />index 5267d48..d49a35a 100644<br />--- a/arch/sparc/kernel/apc.c<br />+++ b/arch/sparc/kernel/apc.c<br />&#64;&#64; -85,7 +85,7 &#64;&#64; static int apc_release(struct inode *inode, struct file *f)<br /> 	return 0;<br /> }<br /> <br />-static long apc_ioctl(struct file *f, unsigned int cmd, unsigned long __arg)<br />+static int apc_ioctl(struct inode *inode, struct file *f, unsigned int cmd, unsigned long __arg)<br /> {<br /> 	__u8 inarg, __user *arg;<br /> <br />diff --git a/arch/x86/kernel/apm_32.c b/arch/x86/kernel/apm_32.c<br />index 9ee24e6..329e4c5 100644<br />--- a/arch/x86/kernel/apm_32.c<br />+++ b/arch/x86/kernel/apm_32.c<br />&#64;&#64; -1460,7 +1460,7 &#64;&#64; static unsigned int do_poll(struct file *fp, poll_table *wait)<br /> 	return 0;<br /> }<br /> <br />-static long do_ioctl(struct file *filp, u_int cmd, u_long arg)<br />+static int do_ioctl(struct inode *inode, struct file *filp, u_int cmd, u_long arg)<br /> {<br /> 	struct apm_user *as;<br /> 	int ret;<br />diff --git a/arch/x86/kernel/cpu/mcheck/mce_64.c b/arch/x86/kernel/cpu/mcheck/mce_64.c<br />index 726a5fc..91f970f 100644<br />--- a/arch/x86/kernel/cpu/mcheck/mce_64.c<br />+++ b/arch/x86/kernel/cpu/mcheck/mce_64.c<br />&#64;&#64; -645,7 +645,7 &#64;&#64; static unsigned int mce_poll(struct file *file, poll_table *wait)<br /> 	return 0;<br /> }<br /> <br />-static long mce_ioctl(struct file *f, unsigned int cmd, unsigned long arg)<br />+static int mce_ioctl(struct inode *inode, struct file *f, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int __user *p = (int __user *)arg;<br /> <br />diff --git a/arch/x86/kernel/cpu/mtrr/if.c b/arch/x86/kernel/cpu/mtrr/if.c<br />index 84c480b..d6b053b 100644<br />--- a/arch/x86/kernel/cpu/mtrr/if.c<br />+++ b/arch/x86/kernel/cpu/mtrr/if.c<br />&#64;&#64; -145,8 +145,7 &#64;&#64; mtrr_write(struct file *file, const char __user *buf, size_t len, loff_t * ppos)<br /> 	return -EINVAL;<br /> }<br /> <br />-static long<br />-mtrr_ioctl(struct file *file, unsigned int cmd, unsigned long __arg)<br />+static int mtrr_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long __arg)<br /> {<br /> 	int err = 0;<br /> 	mtrr_type type;<br />diff --git a/block/bsg.c b/block/bsg.c<br />index 0aae8d7..1ec2e02 100644<br />--- a/block/bsg.c<br />+++ b/block/bsg.c<br />&#64;&#64; -872,7 +872,7 &#64;&#64; static unsigned int bsg_poll(struct file *file, poll_table *wait)<br /> 	return mask;<br /> }<br /> <br />-static long bsg_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int bsg_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct bsg_device *bd = file-&gt;private_data;<br /> 	int __user *uarg = (int __user *) arg;<br />diff --git a/block/compat_ioctl.c b/block/compat_ioctl.c<br />index c23177e..2c32818 100644<br />--- a/block/compat_ioctl.c<br />+++ b/block/compat_ioctl.c<br />&#64;&#64; -709,7 +709,7 &#64;&#64; static int compat_blkdev_driver_ioctl(struct inode *inode, struct file *file,<br /> 	}<br /> <br /> 	if (disk-&gt;fops-&gt;unlocked_ioctl)<br />-		return disk-&gt;fops-&gt;unlocked_ioctl(file, cmd, arg);<br />+		return disk-&gt;fops-&gt;unlocked_ioctl(inode, file, cmd, arg);<br /> <br /> 	if (disk-&gt;fops-&gt;ioctl) {<br /> 		lock_kernel();<br />&#64;&#64; -773,10 +773,16 &#64;&#64; static int compat_blkdev_locked_ioctl(struct inode *inode, struct file *file,<br /> 	return -ENOIOCTLCMD;<br /> }<br /> <br />-/* Most of the generic ioctls are handled in the normal fallback path.<br />-   This assumes the blkdev's low level compat_ioctl always returns<br />-   ENOIOCTLCMD for unknown ioctls. */<br />-long compat_blkdev_ioctl(struct file *file, unsigned cmd, unsigned long arg)<br />+/*<br />+ * Most of the generic ioctls are handled in the normal fallback path.<br />+ * This assumes the blkdev's low level compat_ioctl always returns<br />+ * ENOIOCTLCMD for unknown ioctls.<br />+ *<br />+ * NOTE! We ignore the on-disk inode that was passed as<br />+ * an argument, and use the "f_mapping-&gt;host" inode for<br />+ * all block ioctls!<br />+ */<br />+int compat_blkdev_ioctl(struct inode *unused, struct file *file, unsigned cmd, unsigned long arg)<br /> {<br /> 	int ret = -ENOIOCTLCMD;<br /> 	struct inode *inode = file-&gt;f_mapping-&gt;host;<br />&#64;&#64; -806,7 +812,7 &#64;&#64; long compat_blkdev_ioctl(struct file *file, unsigned cmd, unsigned long arg)<br /> 	ret = compat_blkdev_locked_ioctl(inode, file, bdev, cmd, arg);<br /> 	/* FIXME: why do we assume -&gt; compat_ioctl needs the BKL? */<br /> 	if (ret == -ENOIOCTLCMD &amp;&amp; disk-&gt;fops-&gt;compat_ioctl)<br />-		ret = disk-&gt;fops-&gt;compat_ioctl(file, cmd, arg);<br />+		ret = disk-&gt;fops-&gt;compat_ioctl(inode, file, cmd, arg);<br /> 	unlock_kernel();<br /> <br /> 	if (ret != -ENOIOCTLCMD)<br />diff --git a/block/ioctl.c b/block/ioctl.c<br />index 77185e5..a85824e 100644<br />--- a/block/ioctl.c<br />+++ b/block/ioctl.c<br />&#64;&#64; -204,8 +204,9 &#64;&#64; int blkdev_driver_ioctl(struct inode *inode, struct file *file,<br /> 			struct gendisk *disk, unsigned cmd, unsigned long arg)<br /> {<br /> 	int ret;<br />+<br /> 	if (disk-&gt;fops-&gt;unlocked_ioctl)<br />-		return disk-&gt;fops-&gt;unlocked_ioctl(file, cmd, arg);<br />+		return disk-&gt;fops-&gt;unlocked_ioctl(inode, file, cmd, arg);<br /> <br /> 	if (disk-&gt;fops-&gt;ioctl) {<br /> 		lock_kernel();<br />diff --git a/drivers/block/DAC960.c b/drivers/block/DAC960.c<br />index a002a38..972539d 100644<br />--- a/drivers/block/DAC960.c<br />+++ b/drivers/block/DAC960.c<br />&#64;&#64; -6628,7 +6628,7 &#64;&#64; static void DAC960_DestroyProcEntries(DAC960_Controller_T *Controller)<br />  * DAC960_gam_ioctl is the ioctl function for performing RAID operations.<br /> */<br /> <br />-static long DAC960_gam_ioctl(struct file *file, unsigned int Request,<br />+static int DAC960_gam_ioctl(struct inode *inode, struct file *file, unsigned int Request,<br /> 						unsigned long Argument)<br /> {<br />   long ErrorCode = 0;<br />diff --git a/drivers/block/cciss.c b/drivers/block/cciss.c<br />index b73116e..67404dd 100644<br />--- a/drivers/block/cciss.c<br />+++ b/drivers/block/cciss.c<br />&#64;&#64; -192,7 +192,7 &#64;&#64; static void cciss_procinit(int i)<br /> #endif				/* CONFIG_PROC_FS */<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long cciss_compat_ioctl(struct file *f, unsigned cmd, unsigned long arg);<br />+static int cciss_compat_ioctl(struct inode *inode, struct file *f, unsigned cmd, unsigned long arg);<br /> #endif<br /> <br /> static struct block_device_operations cciss_fops = {<br />&#64;&#64; -618,7 +618,7 &#64;&#64; static int cciss_ioctl32_passthru(struct file *f, unsigned cmd,<br /> static int cciss_ioctl32_big_passthru(struct file *f, unsigned cmd,<br /> 				      unsigned long arg);<br /> <br />-static long cciss_compat_ioctl(struct file *f, unsigned cmd, unsigned long arg)<br />+static int cciss_compat_ioctl(struct inode *inode, struct file *f, unsigned cmd, unsigned long arg)<br /> {<br /> 	switch (cmd) {<br /> 	case CCISS_GETPCIINFO:<br />diff --git a/drivers/block/loop.c b/drivers/block/loop.c<br />index d3a25b0..bfa4f44 100644<br />--- a/drivers/block/loop.c<br />+++ b/drivers/block/loop.c<br />&#64;&#64; -1292,9 +1292,8 &#64;&#64; loop_get_status_compat(struct loop_device *lo,<br /> 	return err;<br /> }<br /> <br />-static long lo_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int lo_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = file-&gt;f_path.dentry-&gt;d_inode;<br /> 	struct loop_device *lo = inode-&gt;i_bdev-&gt;bd_disk-&gt;private_data;<br /> 	int err;<br /> <br />diff --git a/drivers/block/paride/pt.c b/drivers/block/paride/pt.c<br />index 673b8b2..5a6fe4a 100644<br />--- a/drivers/block/paride/pt.c<br />+++ b/drivers/block/paride/pt.c<br />&#64;&#64; -190,7 +190,7 &#64;&#64; module_param_array(drive3, int, NULL, 0);<br /> #define ATAPI_LOG_SENSE		0x4d<br /> <br /> static int pt_open(struct inode *inode, struct file *file);<br />-static long pt_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+static int pt_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> static int pt_release(struct inode *inode, struct file *file);<br /> static ssize_t pt_read(struct file *filp, char __user *buf,<br /> 		       size_t count, loff_t * ppos);<br />&#64;&#64; -690,7 +690,7 &#64;&#64; out:<br /> 	return err;<br /> }<br /> <br />-static long pt_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int pt_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct pt_unit *tape = file-&gt;private_data;<br /> 	struct mtop __user *p = (void __user *)arg;<br />diff --git a/drivers/char/agp/agp.h b/drivers/char/agp/agp.h<br />index 4bada0e..acdeee0 100644<br />--- a/drivers/char/agp/agp.h<br />+++ b/drivers/char/agp/agp.h<br />&#64;&#64; -313,7 +313,7 &#64;&#64; extern const struct aper_size_info_16 agp3_generic_sizes[];<br /> extern int agp_off;<br /> extern int agp_try_unsupported_boot;<br /> <br />-long compat_agp_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+int compat_agp_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> <br /> /* Chipset independant registers (from AGP Spec) */<br /> #define AGP_APBASE	0x10<br />diff --git a/drivers/char/agp/compat_ioctl.c b/drivers/char/agp/compat_ioctl.c<br />index 58c57cb..abd8974 100644<br />--- a/drivers/char/agp/compat_ioctl.c<br />+++ b/drivers/char/agp/compat_ioctl.c<br />&#64;&#64; -202,7 +202,7 &#64;&#64; static int compat_agpioc_unbind_wrap(struct agp_file_private *priv, void __user<br /> 	return agp_unbind_memory(memory);<br /> }<br /> <br />-long compat_agp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+int compat_agp_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct agp_file_private *curr_priv = file-&gt;private_data;<br /> 	int ret_val = -ENOTTY;<br />diff --git a/drivers/char/agp/frontend.c b/drivers/char/agp/frontend.c<br />index a96f319..0a2d134 100644<br />--- a/drivers/char/agp/frontend.c<br />+++ b/drivers/char/agp/frontend.c<br />&#64;&#64; -971,7 +971,7 &#64;&#64; int agpioc_chipset_flush_wrap(struct agp_file_private *priv)<br /> 	return 0;<br /> }<br /> <br />-static long agp_ioctl(struct file *file,<br />+static int agp_ioctl(struct inode *inode, struct file *file,<br /> 		     unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct agp_file_private *curr_priv = file-&gt;private_data;<br />diff --git a/drivers/char/ds1302.c b/drivers/char/ds1302.c<br />index c5e67a6..95aac80 100644<br />--- a/drivers/char/ds1302.c<br />+++ b/drivers/char/ds1302.c<br />&#64;&#64; -154,7 +154,7 &#64;&#64; static unsigned char days_in_mo[] =<br /> <br /> /* ioctl that supports RTC_RD_TIME and RTC_SET_TIME (read and set time/date). */<br /> <br />-static long rtc_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int rtc_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	unsigned long flags;<br /> <br />diff --git a/drivers/char/dsp56k.c b/drivers/char/dsp56k.c<br />index ca7c72a..e4866bc 100644<br />--- a/drivers/char/dsp56k.c<br />+++ b/drivers/char/dsp56k.c<br />&#64;&#64; -303,7 +303,7 &#64;&#64; static ssize_t dsp56k_write(struct file *file, const char __user *buf, size_t co<br /> 	}<br /> }<br /> <br />-static long dsp56k_ioctl(struct file *file, unsigned int cmd,<br />+static int dsp56k_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 			 unsigned long arg)<br /> {<br /> 	int dev = iminor(file-&gt;f_path.dentry-&gt;d_inode) &amp; 0x0f;<br />diff --git a/drivers/char/efirtc.c b/drivers/char/efirtc.c<br />index 34d15d5..3131dc0 100644<br />--- a/drivers/char/efirtc.c<br />+++ b/drivers/char/efirtc.c<br />&#64;&#64; -51,7 +51,7 &#64;&#64;<br /> <br /> static DEFINE_SPINLOCK(efi_rtc_lock);<br /> <br />-static long efi_rtc_ioctl(struct file *file, unsigned int cmd,<br />+static int efi_rtc_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg);<br /> <br /> #define is_leap(year) \<br />&#64;&#64; -146,7 +146,7 &#64;&#64; convert_from_efi_time(efi_time_t *eft, struct rtc_time *wtime)<br /> 	}<br /> }<br /> <br />-static long efi_rtc_ioctl(struct file *file, unsigned int cmd,<br />+static int efi_rtc_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> <br />diff --git a/drivers/char/ip2/ip2main.c b/drivers/char/ip2/ip2main.c<br />index 689f9dc..5ac4c8d 100644<br />--- a/drivers/char/ip2/ip2main.c<br />+++ b/drivers/char/ip2/ip2main.c<br />&#64;&#64; -203,7 +203,7 &#64;&#64; static int set_serial_info(i2ChanStrPtr, struct serial_struct __user *);<br /> <br /> static ssize_t ip2_ipl_read(struct file *, char __user *, size_t, loff_t *);<br /> static ssize_t ip2_ipl_write(struct file *, const char __user *, size_t, loff_t *);<br />-static long ip2_ipl_ioctl(struct file *, UINT, ULONG);<br />+static int ip2_ipl_ioctl(struct inode *inode, struct file *, UINT, ULONG);<br /> static int ip2_ipl_open(struct inode *, struct file *);<br /> <br /> static int DumpTraceBuffer(char __user *, int);<br />&#64;&#64; -2845,8 +2845,8 &#64;&#64; ip2_ipl_write(struct file *pFile, const char __user *pData, size_t count, loff_t<br /> /*                                                                            */<br /> /*                                                                            */<br /> /******************************************************************************/<br />-static long<br />-ip2_ipl_ioctl (struct file *pFile, UINT cmd, ULONG arg )<br />+static int<br />+ip2_ipl_ioctl(struct inode *inode, struct file *pFile, UINT cmd, ULONG arg )<br /> {<br /> 	unsigned int iplminor = iminor(pFile-&gt;f_path.dentry-&gt;d_inode);<br /> 	int rc = 0;<br />diff --git a/drivers/char/ip27-rtc.c b/drivers/char/ip27-rtc.c<br />index ec9d044..f85a353 100644<br />--- a/drivers/char/ip27-rtc.c<br />+++ b/drivers/char/ip27-rtc.c<br />&#64;&#64; -47,7 +47,7 &#64;&#64;<br /> #include &lt;asm/sn/sn0/hub.h&gt;<br /> #include &lt;asm/sn/sn_private.h&gt;<br /> <br />-static long rtc_ioctl(struct file *filp, unsigned int cmd,<br />+static int rtc_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 			unsigned long arg);<br /> <br /> static int rtc_read_proc(char *page, char **start, off_t off,<br />&#64;&#64; -76,7 +76,7 &#64;&#64; static unsigned long epoch = 1970;	/* year corresponding to 0x00	*/<br /> static const unsigned char days_in_mo[] =<br /> {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};<br /> <br />-static long rtc_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+static int rtc_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> <br /> 	struct rtc_time wtime;<br />diff --git a/drivers/char/ipmi/ipmi_devintf.c b/drivers/char/ipmi/ipmi_devintf.c<br />index 64e1c16..02a8511 100644<br />--- a/drivers/char/ipmi/ipmi_devintf.c<br />+++ b/drivers/char/ipmi/ipmi_devintf.c<br />&#64;&#64; -762,7 +762,7 &#64;&#64; static long put_compat_ipmi_recv(struct ipmi_recv *p64,<br /> /*<br />  * Handle compatibility ioctls<br />  */<br />-static long compat_ipmi_ioctl(struct file *filep, unsigned int cmd,<br />+static int compat_ipmi_ioctl(struct inode *inode, struct file *filep, unsigned int cmd,<br /> 			      unsigned long arg)<br /> {<br /> 	int rc;<br />diff --git a/drivers/char/mmtimer.c b/drivers/char/mmtimer.c<br />index 918711a..e2b2463 100644<br />--- a/drivers/char/mmtimer.c<br />+++ b/drivers/char/mmtimer.c<br />&#64;&#64; -58,7 +58,7 &#64;&#64; extern unsigned long sn_rtc_cycles_per_second;<br /> <br /> #define rtc_time()              (*RTC_COUNTER_ADDR)<br /> <br />-static long mmtimer_ioctl(struct file *file, unsigned int cmd,<br />+static int mmtimer_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg);<br /> static int mmtimer_mmap(struct file *file, struct vm_area_struct *vma);<br /> <br />&#64;&#64; -365,7 +365,7 &#64;&#64; restart:<br />  * %MMTIMER_GETCOUNTER - Gets the current value in the counter and places it<br />  * in the address specified by &#64;arg.<br />  */<br />-static long mmtimer_ioctl(struct file *file, unsigned int cmd,<br />+static int mmtimer_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg)<br /> {<br /> 	int ret = 0;<br />diff --git a/drivers/char/mwave/mwavedd.c b/drivers/char/mwave/mwavedd.c<br />index 4f8d67f..41a3af0 100644<br />--- a/drivers/char/mwave/mwavedd.c<br />+++ b/drivers/char/mwave/mwavedd.c<br />&#64;&#64; -86,7 +86,7 &#64;&#64; module_param(mwave_uart_io, int, 0);<br /> <br /> static int mwave_open(struct inode *inode, struct file *file);<br /> static int mwave_close(struct inode *inode, struct file *file);<br />-static long mwave_ioctl(struct file *filp, unsigned int iocmd,<br />+static int mwave_ioctl(struct inode *inode, struct file *filp, unsigned int iocmd,<br /> 							unsigned long ioarg);<br /> <br /> MWAVE_DEVICE_DATA mwave_s_mdd;<br />&#64;&#64; -119,7 +119,7 &#64;&#64; static int mwave_close(struct inode *inode, struct file *file)<br /> 	return retval;<br /> }<br /> <br />-static long mwave_ioctl(struct file *file, unsigned int iocmd,<br />+static int mwave_ioctl(struct inode *inode, struct file *file, unsigned int iocmd,<br /> 							unsigned long ioarg)<br /> {<br /> 	unsigned int retval = 0;<br />diff --git a/drivers/char/pcmcia/cm4000_cs.c b/drivers/char/pcmcia/cm4000_cs.c<br />index f070ae7..f556c56 100644<br />--- a/drivers/char/pcmcia/cm4000_cs.c<br />+++ b/drivers/char/pcmcia/cm4000_cs.c<br />&#64;&#64; -1406,11 +1406,10 &#64;&#64; static void stop_monitor(struct cm4000_dev *dev)<br /> 	DEBUGP(3, dev, "&lt;- stop_monitor\n");<br /> }<br /> <br />-static long cmm_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+static int cmm_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct cm4000_dev *dev = filp-&gt;private_data;<br /> 	unsigned int iobase = dev-&gt;p_dev-&gt;io.BasePort1;<br />-	struct inode *inode = filp-&gt;f_path.dentry-&gt;d_inode;<br /> 	struct pcmcia_device *link;<br /> 	int size;<br /> 	int rc;<br />diff --git a/drivers/char/ppdev.c b/drivers/char/ppdev.c<br />index bee39fd..fafcc15 100644<br />--- a/drivers/char/ppdev.c<br />+++ b/drivers/char/ppdev.c<br />&#64;&#64; -633,7 +633,7 &#64;&#64; static int pp_do_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br /> 	return 0;<br /> }<br /> <br />-static long pp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int pp_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	long ret;<br /> 	lock_kernel();<br />diff --git a/drivers/char/random.c b/drivers/char/random.c<br />index 1838aa3..93e26d0 100644<br />--- a/drivers/char/random.c<br />+++ b/drivers/char/random.c<br />&#64;&#64; -1061,7 +1061,7 &#64;&#64; static ssize_t random_write(struct file *file, const char __user *buffer,<br /> 	return (ssize_t)count;<br /> }<br /> <br />-static long random_ioctl(struct file *f, unsigned int cmd, unsigned long arg)<br />+static int random_ioctl(struct inode *inode, struct file *f, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int size, ent_count;<br /> 	int __user *p = (int __user *)arg;<br />diff --git a/drivers/char/rio/rio_linux.c b/drivers/char/rio/rio_linux.c<br />index a8f68a3..1fad0e4 100644<br />--- a/drivers/char/rio/rio_linux.c<br />+++ b/drivers/char/rio/rio_linux.c<br />&#64;&#64; -179,7 +179,7 &#64;&#64; static int rio_set_real_termios(void *ptr);<br /> static void rio_hungup(void *ptr);<br /> static void rio_close(void *ptr);<br /> static int rio_chars_in_buffer(void *ptr);<br />-static long rio_fw_ioctl(struct file *filp, unsigned int cmd, unsigned long arg);<br />+static int rio_fw_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg);<br /> static int rio_init_drivers(void);<br /> <br /> static void my_hd(void *addr, int len);<br />&#64;&#64; -560,7 +560,7 &#64;&#64; static void rio_close(void *ptr)<br /> <br /> <br /> <br />-static long rio_fw_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+static int rio_fw_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int rc = 0;<br /> 	func_enter();<br />diff --git a/drivers/char/rtc.c b/drivers/char/rtc.c<br />index f53d4d0..3bb7b51 100644<br />--- a/drivers/char/rtc.c<br />+++ b/drivers/char/rtc.c<br />&#64;&#64; -142,7 +142,7 &#64;&#64; static DEFINE_TIMER(rtc_irq_timer, rtc_dropped_irq, 0, 0);<br /> static ssize_t rtc_read(struct file *file, char __user *buf,<br /> 			size_t count, loff_t *ppos);<br /> <br />-static long rtc_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+static int rtc_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> static void rtc_get_rtc_time(struct rtc_time *rtc_tm);<br /> <br /> #ifdef RTC_IRQ<br />&#64;&#64; -717,7 +717,7 &#64;&#64; static int rtc_do_ioctl(unsigned int cmd, unsigned long arg, int kernel)<br /> 			    &amp;wtime, sizeof wtime) ? -EFAULT : 0;<br /> }<br /> <br />-static long rtc_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int rtc_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	long ret;<br /> 	lock_kernel();<br />diff --git a/drivers/char/sx.c b/drivers/char/sx.c<br />index c385206..54d0c48 100644<br />--- a/drivers/char/sx.c<br />+++ b/drivers/char/sx.c<br />&#64;&#64; -286,7 +286,7 &#64;&#64; static void sx_close(void *ptr);<br /> static int sx_chars_in_buffer(void *ptr);<br /> static int sx_init_board(struct sx_board *board);<br /> static int sx_init_portstructs(int nboards, int nports);<br />-static long sx_fw_ioctl(struct file *filp, unsigned int cmd,<br />+static int sx_fw_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 						unsigned long arg);<br /> static int sx_init_drivers(void);<br /> <br />&#64;&#64; -1686,7 +1686,7 &#64;&#64; static int do_memtest_w(struct sx_board *board, int min, int max)<br /> }<br /> #endif<br /> <br />-static long sx_fw_ioctl(struct file *filp, unsigned int cmd,<br />+static int sx_fw_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	long rc = 0;<br />diff --git a/drivers/char/tty_io.c b/drivers/char/tty_io.c<br />index daeb8f7..835658b 100644<br />--- a/drivers/char/tty_io.c<br />+++ b/drivers/char/tty_io.c<br />&#64;&#64; -150,9 +150,9 &#64;&#64; ssize_t redirected_tty_write(struct file *, const char __user *,<br /> static unsigned int tty_poll(struct file *, poll_table *);<br /> static int tty_open(struct inode *, struct file *);<br /> static int tty_release(struct inode *, struct file *);<br />-long tty_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+int tty_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> #ifdef CONFIG_COMPAT<br />-static long tty_compat_ioctl(struct file *file, unsigned int cmd,<br />+static int tty_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 				unsigned long arg);<br /> #else<br /> #define tty_compat_ioctl NULL<br />&#64;&#64; -785,13 +785,13 &#64;&#64; static unsigned int hung_up_tty_poll(struct file *filp, poll_table *wait)<br /> 	return POLLIN | POLLOUT | POLLERR | POLLHUP | POLLRDNORM | POLLWRNORM;<br /> }<br /> <br />-static long hung_up_tty_ioctl(struct file *file, unsigned int cmd,<br />+static int hung_up_tty_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 		unsigned long arg)<br /> {<br /> 	return cmd == TIOCSPGRP ? -ENOTTY : -EIO;<br /> }<br /> <br />-static long hung_up_tty_compat_ioctl(struct file *file,<br />+static int hung_up_tty_compat_ioctl(struct inode *inode, struct file *file,<br /> 				     unsigned int cmd, unsigned long arg)<br /> {<br /> 	return cmd == TIOCSPGRP ? -ENOTTY : -EIO;<br />&#64;&#64; -2941,13 +2941,12 &#64;&#64; static int tty_tiocmset(struct tty_struct *tty, struct file *file, unsigned int<br /> /*<br />  * Split this up, as gcc can choke on it otherwise..<br />  */<br />-long tty_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+int tty_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct tty_struct *tty, *real_tty;<br /> 	void __user *p = (void __user *)arg;<br /> 	int retval;<br /> 	struct tty_ldisc *ld;<br />-	struct inode *inode = file-&gt;f_dentry-&gt;d_inode;<br /> <br /> 	tty = (struct tty_struct *)file-&gt;private_data;<br /> 	if (tty_paranoia_check(tty, inode, "tty_ioctl"))<br />&#64;&#64; -3075,10 +3074,9 &#64;&#64; long tty_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long tty_compat_ioctl(struct file *file, unsigned int cmd,<br />+static int tty_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 				unsigned long arg)<br /> {<br />-	struct inode *inode = file-&gt;f_dentry-&gt;d_inode;<br /> 	struct tty_struct *tty = file-&gt;private_data;<br /> 	struct tty_ldisc *ld;<br /> 	int retval = -ENOIOCTLCMD;<br />diff --git a/drivers/char/viotape.c b/drivers/char/viotape.c<br />index 7a70a40..649b50e 100644<br />--- a/drivers/char/viotape.c<br />+++ b/drivers/char/viotape.c<br />&#64;&#64; -678,7 +678,7 &#64;&#64; free_op:<br /> 	return ret;<br /> }<br /> <br />-static long viotap_unlocked_ioctl(struct file *file,<br />+static int viotap_unlocked_ioctl(struct inode *inode, struct file *file,<br /> 		unsigned int cmd, unsigned long arg)<br /> {<br /> 	long rc;<br />diff --git a/drivers/firewire/fw-cdev.c b/drivers/firewire/fw-cdev.c<br />index 2e6d584..c7b1e3d 100644<br />--- a/drivers/firewire/fw-cdev.c<br />+++ b/drivers/firewire/fw-cdev.c<br />&#64;&#64; -916,8 +916,8 &#64;&#64; dispatch_ioctl(struct client *client, unsigned int cmd, void __user *arg)<br /> 	return 0;<br /> }<br /> <br />-static long<br />-fw_device_op_ioctl(struct file *file,<br />+static int<br />+fw_device_op_ioctl(struct inode *inode, struct file *file,<br /> 		   unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct client *client = file-&gt;private_data;<br />&#64;&#64; -929,8 +929,8 &#64;&#64; fw_device_op_ioctl(struct file *file,<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long<br />-fw_device_op_compat_ioctl(struct file *file,<br />+static int<br />+fw_device_op_compat_ioctl(struct inode *inode, struct file *file,<br /> 			  unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct client *client = file-&gt;private_data;<br />diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h<br />index d7326d9..ecc9ce6 100644<br />--- a/drivers/gpu/drm/i915/i915_drv.h<br />+++ b/drivers/gpu/drm/i915/i915_drv.h<br />&#64;&#64; -216,7 +216,7 &#64;&#64; extern void i915_driver_lastclose(struct drm_device * dev);<br /> extern void i915_driver_preclose(struct drm_device *dev,<br /> 				 struct drm_file *file_priv);<br /> extern int i915_driver_device_is_agp(struct drm_device * dev);<br />-extern long i915_compat_ioctl(struct file *filp, unsigned int cmd,<br />+extern int i915_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 			      unsigned long arg);<br /> <br /> /* i915_irq.c */<br />diff --git a/drivers/gpu/drm/i915/i915_ioc32.c b/drivers/gpu/drm/i915/i915_ioc32.c<br />index 1fe68a2..f8f623e 100644<br />--- a/drivers/gpu/drm/i915/i915_ioc32.c<br />+++ b/drivers/gpu/drm/i915/i915_ioc32.c<br />&#64;&#64; -199,7 +199,7 &#64;&#64; drm_ioctl_compat_t *i915_compat_ioctls[] = {<br />  * \param arg user argument.<br />  * \return zero on success or negative number on failure.<br />  */<br />-long i915_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int i915_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	unsigned int nr = DRM_IOCTL_NR(cmd);<br /> 	drm_ioctl_compat_t *fn = NULL;<br />diff --git a/drivers/gpu/drm/mga/mga_drv.h b/drivers/gpu/drm/mga/mga_drv.h<br />index f6ebd24..dfe6cd7 100644<br />--- a/drivers/gpu/drm/mga/mga_drv.h<br />+++ b/drivers/gpu/drm/mga/mga_drv.h<br />&#64;&#64; -187,7 +187,7 &#64;&#64; extern irqreturn_t mga_driver_irq_handler(DRM_IRQ_ARGS);<br /> extern void mga_driver_irq_preinstall(struct drm_device * dev);<br /> extern void mga_driver_irq_postinstall(struct drm_device * dev);<br /> extern void mga_driver_irq_uninstall(struct drm_device * dev);<br />-extern long mga_compat_ioctl(struct file *filp, unsigned int cmd,<br />+extern int mga_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 			     unsigned long arg);<br /> <br /> #define mga_flush_write_combine()	DRM_WRITEMEMORYBARRIER()<br />diff --git a/drivers/gpu/drm/mga/mga_ioc32.c b/drivers/gpu/drm/mga/mga_ioc32.c<br />index 30d0047..b5d0826 100644<br />--- a/drivers/gpu/drm/mga/mga_ioc32.c<br />+++ b/drivers/gpu/drm/mga/mga_ioc32.c<br />&#64;&#64; -208,7 +208,7 &#64;&#64; drm_ioctl_compat_t *mga_compat_ioctls[] = {<br />  * \param arg user argument.<br />  * \return zero on success or negative number on failure.<br />  */<br />-long mga_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int mga_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	unsigned int nr = DRM_IOCTL_NR(cmd);<br /> 	drm_ioctl_compat_t *fn = NULL;<br />diff --git a/drivers/gpu/drm/r128/r128_drv.h b/drivers/gpu/drm/r128/r128_drv.h<br />index 011105e..e145952 100644<br />--- a/drivers/gpu/drm/r128/r128_drv.h<br />+++ b/drivers/gpu/drm/r128/r128_drv.h<br />&#64;&#64; -159,7 +159,7 &#64;&#64; extern void r128_driver_lastclose(struct drm_device * dev);<br /> extern void r128_driver_preclose(struct drm_device * dev,<br /> 				 struct drm_file *file_priv);<br /> <br />-extern long r128_compat_ioctl(struct file *filp, unsigned int cmd,<br />+extern int r128_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 			      unsigned long arg);<br /> <br /> /* Register definitions, register access macros and drmAddMap constants<br />diff --git a/drivers/gpu/drm/r128/r128_ioc32.c b/drivers/gpu/drm/r128/r128_ioc32.c<br />index d3cb676..f242fdb 100644<br />--- a/drivers/gpu/drm/r128/r128_ioc32.c<br />+++ b/drivers/gpu/drm/r128/r128_ioc32.c<br />&#64;&#64; -198,7 +198,7 &#64;&#64; drm_ioctl_compat_t *r128_compat_ioctls[] = {<br />  * \param arg user argument.<br />  * \return zero on success or negative number on failure.<br />  */<br />-long r128_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int r128_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	unsigned int nr = DRM_IOCTL_NR(cmd);<br /> 	drm_ioctl_compat_t *fn = NULL;<br />diff --git a/drivers/gpu/drm/radeon/radeon_drv.h b/drivers/gpu/drm/radeon/radeon_drv.h<br />index 0993816..4b55abd 100644<br />--- a/drivers/gpu/drm/radeon/radeon_drv.h<br />+++ b/drivers/gpu/drm/radeon/radeon_drv.h<br />&#64;&#64; -401,7 +401,7 &#64;&#64; extern void radeon_driver_preclose(struct drm_device * dev, struct drm_file *fil<br /> extern void radeon_driver_postclose(struct drm_device * dev, struct drm_file * filp);<br /> extern void radeon_driver_lastclose(struct drm_device * dev);<br /> extern int radeon_driver_open(struct drm_device * dev, struct drm_file * filp_priv);<br />-extern long radeon_compat_ioctl(struct file *filp, unsigned int cmd,<br />+extern int radeon_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 				unsigned long arg);<br /> <br /> /* r300_cmdbuf.c */<br />diff --git a/drivers/gpu/drm/radeon/radeon_ioc32.c b/drivers/gpu/drm/radeon/radeon_ioc32.c<br />index 56decda..6b518cb 100644<br />--- a/drivers/gpu/drm/radeon/radeon_ioc32.c<br />+++ b/drivers/gpu/drm/radeon/radeon_ioc32.c<br />&#64;&#64; -401,7 +401,7 &#64;&#64; drm_ioctl_compat_t *radeon_compat_ioctls[] = {<br />  * \param arg user argument.<br />  * \return zero on success or negative number on failure.<br />  */<br />-long radeon_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int radeon_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	unsigned int nr = DRM_IOCTL_NR(cmd);<br /> 	drm_ioctl_compat_t *fn = NULL;<br />diff --git a/drivers/hid/hidraw.c b/drivers/hid/hidraw.c<br />index c40f040..0a15260 100644<br />--- a/drivers/hid/hidraw.c<br />+++ b/drivers/hid/hidraw.c<br />&#64;&#64; -217,10 +217,9 &#64;&#64; static int hidraw_release(struct inode * inode, struct file * file)<br /> 	return 0;<br /> }<br /> <br />-static long hidraw_ioctl(struct file *file, unsigned int cmd,<br />+static int hidraw_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br />-	struct inode *inode = file-&gt;f_path.dentry-&gt;d_inode;<br /> 	unsigned int minor = iminor(inode);<br /> 	long ret = 0;<br /> 	/* FIXME: What stops hidraw_table going NULL */<br />diff --git a/drivers/hid/usbhid/hiddev.c b/drivers/hid/usbhid/hiddev.c<br />index 842e9ed..0b08caf 100644<br />--- a/drivers/hid/usbhid/hiddev.c<br />+++ b/drivers/hid/usbhid/hiddev.c<br />&#64;&#64; -544,7 +544,7 &#64;&#64; static noinline int hiddev_ioctl_string(struct hiddev *hiddev, unsigned int cmd,<br /> 	return len;<br /> }<br /> <br />-static long hiddev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int hiddev_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct hiddev_list *list = file-&gt;private_data;<br /> 	struct hiddev *hiddev = list-&gt;hiddev;<br />&#64;&#64; -761,9 +761,9 &#64;&#64; static long hiddev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long hiddev_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int hiddev_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br />-	return hiddev_ioctl(file, cmd, (unsigned long)compat_ptr(arg));<br />+	return hiddev_ioctl(inode, file, cmd, (unsigned long)compat_ptr(arg));<br /> }<br /> #endif<br /> <br />diff --git a/drivers/i2c/i2c-dev.c b/drivers/i2c/i2c-dev.c<br />index af4491f..98ec3d2 100644<br />--- a/drivers/i2c/i2c-dev.c<br />+++ b/drivers/i2c/i2c-dev.c<br />&#64;&#64; -367,7 +367,7 &#64;&#64; static noinline int i2cdev_ioctl_smbus(struct i2c_client *client,<br /> 	return res;<br /> }<br /> <br />-static long i2cdev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int i2cdev_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct i2c_client *client = (struct i2c_client *)file-&gt;private_data;<br /> 	unsigned long funcs;<br />diff --git a/drivers/ieee1394/dv1394.c b/drivers/ieee1394/dv1394.c<br />index b6eb2cf..a8bdc2c 100644<br />--- a/drivers/ieee1394/dv1394.c<br />+++ b/drivers/ieee1394/dv1394.c<br />&#64;&#64; -158,7 +158,7 &#64;&#64; static void it_tasklet_func(unsigned long data);<br /> static void ir_tasklet_func(unsigned long data);<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long dv1394_compat_ioctl(struct file *file, unsigned int cmd,<br />+static int dv1394_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 			       unsigned long arg);<br /> #endif<br /> <br />&#64;&#64; -1533,7 +1533,7 &#64;&#64; static ssize_t dv1394_read(struct file *file,  char __user *buffer, size_t count<br /> <br /> /*** DEVICE IOCTL INTERFACE ************************************************/<br /> <br />-static long dv1394_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int dv1394_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct video_card *video = file_to_video_card(file);<br /> 	unsigned long flags;<br />&#64;&#64; -2457,7 +2457,7 &#64;&#64; struct dv1394_status32 {<br /> <br /> /* RED-PEN: this should use compat_alloc_userspace instead */<br /> <br />-static int handle_dv1394_init(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int handle_dv1394_init(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct dv1394_init32 dv32;<br /> 	struct dv1394_init dv;<br />&#64;&#64; -2480,13 +2480,13 &#64;&#64; static int handle_dv1394_init(struct file *file, unsigned int cmd, unsigned long<br /> <br /> 	old_fs = get_fs();<br /> 	set_fs(KERNEL_DS);<br />-	ret = dv1394_ioctl(file, DV1394_IOC_INIT, (unsigned long)&amp;dv);<br />+	ret = dv1394_ioctl(inode, file, DV1394_IOC_INIT, (unsigned long)&amp;dv);<br /> 	set_fs(old_fs);<br /> <br /> 	return ret;<br /> }<br /> <br />-static int handle_dv1394_get_status(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int handle_dv1394_get_status(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct dv1394_status32 dv32;<br /> 	struct dv1394_status dv;<br />&#64;&#64; -2498,7 +2498,7 &#64;&#64; static int handle_dv1394_get_status(struct file *file, unsigned int cmd, unsigne<br /> <br /> 	old_fs = get_fs();<br /> 	set_fs(KERNEL_DS);<br />-	ret = dv1394_ioctl(file, DV1394_IOC_GET_STATUS, (unsigned long)&amp;dv);<br />+	ret = dv1394_ioctl(inode, file, DV1394_IOC_GET_STATUS, (unsigned long)&amp;dv);<br /> 	set_fs(old_fs);<br /> <br /> 	if (!ret) {<br />&#64;&#64; -2523,7 +2523,7 &#64;&#64; static int handle_dv1394_get_status(struct file *file, unsigned int cmd, unsigne<br /> <br /> <br /> <br />-static long dv1394_compat_ioctl(struct file *file, unsigned int cmd,<br />+static int dv1394_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 			       unsigned long arg)<br /> {<br /> 	switch (cmd) {<br />&#64;&#64; -2532,12 +2532,12 &#64;&#64; static long dv1394_compat_ioctl(struct file *file, unsigned int cmd,<br /> 	case DV1394_IOC_WAIT_FRAMES:<br /> 	case DV1394_IOC_RECEIVE_FRAMES:<br /> 	case DV1394_IOC_START_RECEIVE:<br />-		return dv1394_ioctl(file, cmd, arg);<br />+		return dv1394_ioctl(inode, file, cmd, arg);<br /> <br /> 	case DV1394_IOC32_INIT:<br />-		return handle_dv1394_init(file, cmd, arg);<br />+		return handle_dv1394_init(inode, file, cmd, arg);<br /> 	case DV1394_IOC32_GET_STATUS:<br />-		return handle_dv1394_get_status(file, cmd, arg);<br />+		return handle_dv1394_get_status(inode, file, cmd, arg);<br /> 	default:<br /> 		return -ENOIOCTLCMD;<br /> 	}<br />diff --git a/drivers/ieee1394/raw1394.c b/drivers/ieee1394/raw1394.c<br />index 6fa9e4a..6cf46fa 100644<br />--- a/drivers/ieee1394/raw1394.c<br />+++ b/drivers/ieee1394/raw1394.c<br />&#64;&#64; -2656,7 +2656,7 &#64;&#64; static long do_raw1394_ioctl(struct file *file, unsigned int cmd,<br /> 	return -EINVAL;<br /> }<br /> <br />-static long raw1394_ioctl(struct file *file, unsigned int cmd,<br />+static int raw1394_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	long ret;<br />&#64;&#64; -2717,7 +2717,7 &#64;&#64; static long raw1394_read_cycle_timer32(struct file_info *fi, void __user * uaddr<br /> 	return err;<br /> }<br /> <br />-static long raw1394_compat_ioctl(struct file *file,<br />+static int raw1394_compat_ioctl(struct inode *inode, struct file *file,<br /> 				 unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct file_info *fi = file-&gt;private_data;<br />diff --git a/drivers/ieee1394/video1394.c b/drivers/ieee1394/video1394.c<br />index 25db6e6..ed4eb78 100644<br />--- a/drivers/ieee1394/video1394.c<br />+++ b/drivers/ieee1394/video1394.c<br />&#64;&#64; -716,7 +716,7 &#64;&#64; static inline unsigned video1394_buffer_state(struct dma_iso_ctx *d,<br /> 	return ret;<br /> }<br /> <br />-static long video1394_ioctl(struct file *file,<br />+static int video1394_ioctl(struct inode *inode, struct file *file,<br /> 			    unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct file_ctx *ctx = (struct file_ctx *)file-&gt;private_data;<br />&#64;&#64; -1272,7 +1272,7 &#64;&#64; static int video1394_release(struct inode *inode, struct file *file)<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long video1394_compat_ioctl(struct file *f, unsigned cmd, unsigned long arg);<br />+static int video1394_compat_ioctl(struct inode *inode, struct file *f, unsigned cmd, unsigned long arg);<br /> #endif<br /> <br /> static struct cdev video1394_cdev;<br />&#64;&#64; -1386,7 +1386,7 &#64;&#64; struct video1394_wait32 {<br /> 	struct compat_timeval filltime;<br /> };<br /> <br />-static int video1394_wr_wait32(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int video1394_wr_wait32(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br />         struct video1394_wait32 __user *argp = (void __user *)arg;<br />         struct video1394_wait32 wait32;<br />&#64;&#64; -1405,11 +1405,11 &#64;&#64; static int video1394_wr_wait32(struct file *file, unsigned int cmd, unsigned lon<br />         old_fs = get_fs();<br />         set_fs(KERNEL_DS);<br />         if (cmd == VIDEO1394_IOC32_LISTEN_WAIT_BUFFER)<br />-		ret = video1394_ioctl(file,<br />+		ret = video1394_ioctl(inode, file,<br /> 				      VIDEO1394_IOC_LISTEN_WAIT_BUFFER,<br /> 				      (unsigned long) &amp;wait);<br />         else<br />-		ret = video1394_ioctl(file,<br />+		ret = video1394_ioctl(inode, file,<br /> 				      VIDEO1394_IOC_LISTEN_POLL_BUFFER,<br /> 				      (unsigned long) &amp;wait);<br />         set_fs(old_fs);<br />&#64;&#64; -1427,7 +1427,7 &#64;&#64; static int video1394_wr_wait32(struct file *file, unsigned int cmd, unsigned lon<br />         return ret;<br /> }<br /> <br />-static int video1394_w_wait32(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int video1394_w_wait32(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br />         struct video1394_wait32 wait32;<br />         struct video1394_wait wait;<br />&#64;&#64; -1445,11 +1445,11 &#64;&#64; static int video1394_w_wait32(struct file *file, unsigned int cmd, unsigned long<br />         old_fs = get_fs();<br />         set_fs(KERNEL_DS);<br />         if (cmd == VIDEO1394_IOC32_LISTEN_QUEUE_BUFFER)<br />-		ret = video1394_ioctl(file,<br />+		ret = video1394_ioctl(inode, file,<br /> 				      VIDEO1394_IOC_LISTEN_QUEUE_BUFFER,<br /> 				      (unsigned long) &amp;wait);<br />         else<br />-		ret = video1394_ioctl(file,<br />+		ret = video1394_ioctl(inode, file,<br /> 				      VIDEO1394_IOC_TALK_WAIT_BUFFER,<br /> 				      (unsigned long) &amp;wait);<br />         set_fs(old_fs);<br />&#64;&#64; -1457,33 +1457,33 &#64;&#64; static int video1394_w_wait32(struct file *file, unsigned int cmd, unsigned long<br />         return ret;<br /> }<br /> <br />-static int video1394_queue_buf32(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int video1394_queue_buf32(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br />         return -EFAULT;   /* ??? was there before. */<br /> <br />-	return video1394_ioctl(file,<br />+	return video1394_ioctl(inode, file,<br /> 				VIDEO1394_IOC_TALK_QUEUE_BUFFER, arg);<br /> }<br /> <br />-static long video1394_compat_ioctl(struct file *f, unsigned cmd, unsigned long arg)<br />+static int video1394_compat_ioctl(struct inode *inode, struct file *f, unsigned cmd, unsigned long arg)<br /> {<br /> 	switch (cmd) {<br /> 	case VIDEO1394_IOC_LISTEN_CHANNEL:<br /> 	case VIDEO1394_IOC_UNLISTEN_CHANNEL:<br /> 	case VIDEO1394_IOC_TALK_CHANNEL:<br /> 	case VIDEO1394_IOC_UNTALK_CHANNEL:<br />-		return video1394_ioctl(f, cmd, arg);<br />+		return video1394_ioctl(inode, f, cmd, arg);<br /> <br /> 	case VIDEO1394_IOC32_LISTEN_QUEUE_BUFFER:<br />-		return video1394_w_wait32(f, cmd, arg);<br />+		return video1394_w_wait32(inode, f, cmd, arg);<br /> 	case VIDEO1394_IOC32_LISTEN_WAIT_BUFFER:<br />-		return video1394_wr_wait32(f, cmd, arg);<br />+		return video1394_wr_wait32(inode, f, cmd, arg);<br /> 	case VIDEO1394_IOC_TALK_QUEUE_BUFFER:<br />-		return video1394_queue_buf32(f, cmd, arg);<br />+		return video1394_queue_buf32(inode, f, cmd, arg);<br /> 	case VIDEO1394_IOC32_TALK_WAIT_BUFFER:<br />-		return video1394_w_wait32(f, cmd, arg);<br />+		return video1394_w_wait32(inode, f, cmd, arg);<br /> 	case VIDEO1394_IOC32_LISTEN_POLL_BUFFER:<br />-		return video1394_wr_wait32(f, cmd, arg);<br />+		return video1394_wr_wait32(inode, f, cmd, arg);<br /> 	default:<br /> 		return -ENOIOCTLCMD;<br /> 	}<br />diff --git a/drivers/infiniband/core/user_mad.c b/drivers/infiniband/core/user_mad.c<br />index 268a2d2..6cd0bc3 100644<br />--- a/drivers/infiniband/core/user_mad.c<br />+++ b/drivers/infiniband/core/user_mad.c<br />&#64;&#64; -743,7 +743,7 &#64;&#64; static long ib_umad_enable_pkey(struct ib_umad_file *file)<br /> 	return ret;<br /> }<br /> <br />-static long ib_umad_ioctl(struct file *filp, unsigned int cmd,<br />+static int ib_umad_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 			  unsigned long arg)<br /> {<br /> 	switch (cmd) {<br />&#64;&#64; -759,7 +759,7 &#64;&#64; static long ib_umad_ioctl(struct file *filp, unsigned int cmd,<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long ib_umad_compat_ioctl(struct file *filp, unsigned int cmd,<br />+static int ib_umad_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 				 unsigned long arg)<br /> {<br /> 	switch (cmd) {<br />diff --git a/drivers/input/evdev.c b/drivers/input/evdev.c<br />index 3524bef..9fd8fa9 100644<br />--- a/drivers/input/evdev.c<br />+++ b/drivers/input/evdev.c<br />&#64;&#64; -888,13 +888,13 &#64;&#64; static long evdev_ioctl_handler(struct file *file, unsigned int cmd,<br /> 	return retval;<br /> }<br /> <br />-static long evdev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int evdev_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	return evdev_ioctl_handler(file, cmd, (void __user *)arg, 0);<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long evdev_ioctl_compat(struct file *file,<br />+static int evdev_ioctl_compat(struct inode *inode, struct file *file,<br /> 				unsigned int cmd, unsigned long arg)<br /> {<br /> 	return evdev_ioctl_handler(file, cmd, compat_ptr(arg), 1);<br />diff --git a/drivers/input/joydev.c b/drivers/input/joydev.c<br />index 65d7077..d4db145 100644<br />--- a/drivers/input/joydev.c<br />+++ b/drivers/input/joydev.c<br />&#64;&#64; -555,7 +555,7 &#64;&#64; static int joydev_ioctl_common(struct joydev *joydev,<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long joydev_compat_ioctl(struct file *file,<br />+static int joydev_compat_ioctl(struct inode *inode, struct file *file,<br /> 				unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct joydev_client *client = file-&gt;private_data;<br />&#64;&#64; -622,7 +622,7 &#64;&#64; static long joydev_compat_ioctl(struct file *file,<br /> }<br /> #endif /* CONFIG_COMPAT */<br /> <br />-static long joydev_ioctl(struct file *file,<br />+static int joydev_ioctl(struct inode *inode, struct file *file,<br /> 			 unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct joydev_client *client = file-&gt;private_data;<br />diff --git a/drivers/input/misc/uinput.c b/drivers/input/misc/uinput.c<br />index 223d56d..a37877e 100644<br />--- a/drivers/input/misc/uinput.c<br />+++ b/drivers/input/misc/uinput.c<br />&#64;&#64; -455,7 +455,7 &#64;&#64; static int uinput_release(struct inode *inode, struct file *file)<br /> 	__ret;						\<br /> })<br /> <br />-static long uinput_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int uinput_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int			retval;<br /> 	struct uinput_device	*udev;<br />diff --git a/drivers/md/dm-ioctl.c b/drivers/md/dm-ioctl.c<br />index b262c00..c21cbdc 100644<br />--- a/drivers/md/dm-ioctl.c<br />+++ b/drivers/md/dm-ioctl.c<br />&#64;&#64; -1470,15 +1470,15 &#64;&#64; static int ctl_ioctl(uint command, struct dm_ioctl __user *user)<br /> 	return r;<br /> }<br /> <br />-static long dm_ctl_ioctl(struct file *file, uint command, ulong u)<br />+static int dm_ctl_ioctl(struct inode *inode, struct file *file, uint command, ulong u)<br /> {<br /> 	return (long)ctl_ioctl(command, (struct dm_ioctl __user *)u);<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long dm_compat_ctl_ioctl(struct file *file, uint command, ulong u)<br />+static int dm_compat_ctl_ioctl(struct inode *inode, struct file *file, uint command, ulong u)<br /> {<br />-	return (long)dm_ctl_ioctl(file, command, (ulong) compat_ptr(u));<br />+	return dm_ctl_ioctl(inode, file, command, (ulong) compat_ptr(u));<br /> }<br /> #else<br /> #define dm_compat_ctl_ioctl NULL<br />diff --git a/drivers/media/video/compat_ioctl32.c b/drivers/media/video/compat_ioctl32.c<br />index bd5d9de..7eacc2d 100644<br />--- a/drivers/media/video/compat_ioctl32.c<br />+++ b/drivers/media/video/compat_ioctl32.c<br />&#64;&#64; -110,15 +110,15 &#64;&#64; struct video_window32 {<br /> };<br /> #endif<br /> <br />-static int native_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int native_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int ret = -ENOIOCTLCMD;<br /> <br /> 	if (file-&gt;f_op-&gt;unlocked_ioctl)<br />-		ret = file-&gt;f_op-&gt;unlocked_ioctl(file, cmd, arg);<br />+		ret = file-&gt;f_op-&gt;unlocked_ioctl(inode, file, cmd, arg);<br /> 	else if (file-&gt;f_op-&gt;ioctl) {<br /> 		lock_kernel();<br />-		ret = file-&gt;f_op-&gt;ioctl(file-&gt;f_path.dentry-&gt;d_inode, file, cmd, arg);<br />+		ret = file-&gt;f_op-&gt;ioctl(inode, file, cmd, arg);<br /> 		unlock_kernel();<br /> 	}<br /> <br />&#64;&#64; -549,7 +549,7 &#64;&#64; enum {<br /> 	MaxClips = (~0U-sizeof(struct video_window))/sizeof(struct video_clip)<br /> };<br /> <br />-static int do_set_window(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int do_set_window(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct video_window32 __user *up = compat_ptr(arg);<br /> 	struct video_window __user *vw;<br />&#64;&#64; -607,11 +607,11 &#64;&#64; static int do_set_window(struct file *file, unsigned int cmd, unsigned long arg)<br /> 		}<br /> 	}<br /> <br />-	return native_ioctl(file, VIDIOCSWIN, (unsigned long)vw);<br />+	return native_ioctl(inode, file, VIDIOCSWIN, (unsigned long)vw);<br /> }<br /> #endif<br /> <br />-static int do_video_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int do_video_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	union {<br /> #ifdef CONFIG_VIDEO_V4L1_COMPAT<br />&#64;&#64; -754,12 +754,12 &#64;&#64; static int do_video_ioctl(struct file *file, unsigned int cmd, unsigned long arg<br /> 		goto out;<br /> <br /> 	if(compatible_arg)<br />-		err = native_ioctl(file, realcmd, (unsigned long)up);<br />+		err = native_ioctl(inode, file, realcmd, (unsigned long)up);<br /> 	else {<br /> 		mm_segment_t old_fs = get_fs();<br /> <br /> 		set_fs(KERNEL_DS);<br />-		err = native_ioctl(file, realcmd, (unsigned long) &amp;karg);<br />+		err = native_ioctl(inode, file, realcmd, (unsigned long) &amp;karg);<br /> 		set_fs(old_fs);<br /> 	}<br /> 	if(err == 0) {<br />&#64;&#64; -827,7 +827,7 &#64;&#64; out:<br /> 	return err;<br /> }<br /> <br />-long v4l_compat_ioctl32(struct file *file, unsigned int cmd, unsigned long arg)<br />+int v4l_compat_ioctl32(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int ret = -ENOIOCTLCMD;<br /> <br />&#64;&#64; -837,7 +837,7 &#64;&#64; long v4l_compat_ioctl32(struct file *file, unsigned int cmd, unsigned long arg)<br /> 	switch (cmd) {<br /> #ifdef CONFIG_VIDEO_V4L1_COMPAT<br /> 	case VIDIOCSWIN32:<br />-		ret = do_set_window(file, cmd, arg);<br />+		ret = do_set_window(inode, file, cmd, arg);<br /> 		break;<br /> 	case VIDIOCGTUNER32:<br /> 	case VIDIOCSTUNER32:<br />&#64;&#64; -885,7 +885,7 &#64;&#64; long v4l_compat_ioctl32(struct file *file, unsigned int cmd, unsigned long arg)<br /> 	case VIDIOC_S_INPUT32:<br /> 	case VIDIOC_TRY_FMT32:<br /> 	case VIDIOC_S_HW_FREQ_SEEK:<br />-		ret = do_video_ioctl(file, cmd, arg);<br />+		ret = do_video_ioctl(inode, file, cmd, arg);<br /> 		break;<br /> <br /> #ifdef CONFIG_VIDEO_V4L1_COMPAT<br />&#64;&#64; -913,7 +913,7 &#64;&#64; long v4l_compat_ioctl32(struct file *file, unsigned int cmd, unsigned long arg)<br /> 	case _IOR('v' , BASE_VIDIOCPRIVATE+5, int):<br /> 	case _IOR('v' , BASE_VIDIOCPRIVATE+6, int):<br /> 	case _IOR('v' , BASE_VIDIOCPRIVATE+7, int):<br />-		ret = native_ioctl(file, cmd, (unsigned long)compat_ptr(arg));<br />+		ret = native_ioctl(inode, file, cmd, (unsigned long)compat_ptr(arg));<br /> 		break;<br /> #endif<br /> 	default:<br />&#64;&#64; -922,7 +922,7 &#64;&#64; long v4l_compat_ioctl32(struct file *file, unsigned int cmd, unsigned long arg)<br /> 	return ret;<br /> }<br /> #else<br />-long v4l_compat_ioctl32(struct file *file, unsigned int cmd, unsigned long arg)<br />+int v4l_compat_ioctl32(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	return -ENOIOCTLCMD;<br /> }<br />diff --git a/drivers/message/fusion/mptctl.c b/drivers/message/fusion/mptctl.c<br />index f5233f3..3d20a3c 100644<br />--- a/drivers/message/fusion/mptctl.c<br />+++ b/drivers/message/fusion/mptctl.c<br />&#64;&#64; -116,7 +116,7 &#64;&#64; static int  mptctl_probe(struct pci_dev *, const struct pci_device_id *);<br /> static void mptctl_remove(struct pci_dev *);<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long compat_mpctl_ioctl(struct file *f, unsigned cmd, unsigned long arg);<br />+static int compat_mpctl_ioctl(struct inode *inode, struct file *f, unsigned cmd, unsigned long arg);<br /> #endif<br /> /*<br />  * Private function calls.<br />&#64;&#64; -652,8 +652,8 &#64;&#64; __mptctl_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br /> 	return ret;<br /> }<br /> <br />-static long<br />-mptctl_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int<br />+mptctl_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	long ret;<br /> 	lock_kernel();<br />&#64;&#64; -2818,7 +2818,7 &#64;&#64; compat_mpt_command(struct file *filp, unsigned int cmd,<br /> 	return ret;<br /> }<br /> <br />-static long compat_mpctl_ioctl(struct file *f, unsigned int cmd, unsigned long arg)<br />+static int compat_mpctl_ioctl(struct inode *inode, struct file *f, unsigned int cmd, unsigned long arg)<br /> {<br /> 	long ret;<br /> 	lock_kernel();<br />diff --git a/drivers/message/i2o/i2o_config.c b/drivers/message/i2o/i2o_config.c<br />index 4238de9..442cdb3 100644<br />--- a/drivers/message/i2o/i2o_config.c<br />+++ b/drivers/message/i2o/i2o_config.c<br />&#64;&#64; -746,7 +746,7 &#64;&#64; out:<br /> 	return rcode;<br /> }<br /> <br />-static long i2o_cfg_compat_ioctl(struct file *file, unsigned cmd,<br />+static int i2o_cfg_compat_ioctl(struct inode *inode, struct file *file, unsigned cmd,<br /> 				 unsigned long arg)<br /> {<br /> 	int ret;<br />diff --git a/drivers/misc/phantom.c b/drivers/misc/phantom.c<br />index daf5856..4902f28 100644<br />--- a/drivers/misc/phantom.c<br />+++ b/drivers/misc/phantom.c<br />&#64;&#64; -83,7 +83,7 &#64;&#64; static int phantom_status(struct phantom_device *dev, unsigned long newstat)<br />  * File ops<br />  */<br /> <br />-static long phantom_ioctl(struct file *file, unsigned int cmd,<br />+static int phantom_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 		unsigned long arg)<br /> {<br /> 	struct phantom_device *dev = file-&gt;private_data;<br />&#64;&#64; -195,14 +195,14 &#64;&#64; static long phantom_ioctl(struct file *file, unsigned int cmd,<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long phantom_compat_ioctl(struct file *filp, unsigned int cmd,<br />+static int phantom_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 		unsigned long arg)<br /> {<br /> 	if (_IOC_NR(cmd) &lt;= 3 &amp;&amp; _IOC_SIZE(cmd) == sizeof(compat_uptr_t)) {<br /> 		cmd &amp;= ~(_IOC_SIZEMASK &lt;&lt; _IOC_SIZESHIFT);<br /> 		cmd |= sizeof(void *) &lt;&lt; _IOC_SIZESHIFT;<br /> 	}<br />-	return phantom_ioctl(filp, cmd, (unsigned long)compat_ptr(arg));<br />+	return phantom_ioctl(inode, filp, cmd, (unsigned long)compat_ptr(arg));<br /> }<br /> #else<br /> #define phantom_compat_ioctl NULL<br />diff --git a/drivers/misc/sgi-gru/grufile.c b/drivers/misc/sgi-gru/grufile.c<br />index 23c91f5..fb6d7ad 100644<br />--- a/drivers/misc/sgi-gru/grufile.c<br />+++ b/drivers/misc/sgi-gru/grufile.c<br />&#64;&#64; -233,7 +233,7 &#64;&#64; static long gru_get_chiplet_status(unsigned long arg)<br />  *<br />  * Called to update file attributes via IOCTL calls.<br />  */<br />-static long gru_file_unlocked_ioctl(struct file *file, unsigned int req,<br />+static int gru_file_unlocked_ioctl(struct inode *inode, struct file *file, unsigned int req,<br /> 				    unsigned long arg)<br /> {<br /> 	int err = -EBADRQC;<br />diff --git a/drivers/net/ppp_generic.c b/drivers/net/ppp_generic.c<br />index ddccc07..3ec394d 100644<br />--- a/drivers/net/ppp_generic.c<br />+++ b/drivers/net/ppp_generic.c<br />&#64;&#64; -547,7 +547,7 &#64;&#64; static int get_filter(void __user *arg, struct sock_filter **p)<br /> }<br /> #endif /* CONFIG_PPP_FILTER */<br /> <br />-static long ppp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int ppp_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct ppp_file *pf = file-&gt;private_data;<br /> 	struct ppp *ppp;<br />diff --git a/drivers/pci/proc.c b/drivers/pci/proc.c<br />index e1098c3..db5903f 100644<br />--- a/drivers/pci/proc.c<br />+++ b/drivers/pci/proc.c<br />&#64;&#64; -201,7 +201,7 &#64;&#64; struct pci_filp_private {<br /> 	int write_combine;<br /> };<br /> <br />-static long proc_bus_pci_ioctl(struct file *file, unsigned int cmd,<br />+static int proc_bus_pci_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 			       unsigned long arg)<br /> {<br /> 	const struct proc_dir_entry *dp = PDE(file-&gt;f_dentry-&gt;d_inode);<br />diff --git a/drivers/rtc/rtc-dev.c b/drivers/rtc/rtc-dev.c<br />index f118252..ac41969 100644<br />--- a/drivers/rtc/rtc-dev.c<br />+++ b/drivers/rtc/rtc-dev.c<br />&#64;&#64; -203,7 +203,7 &#64;&#64; static unsigned int rtc_dev_poll(struct file *file, poll_table *wait)<br /> 	return (data != 0) ? (POLLIN | POLLRDNORM) : 0;<br /> }<br /> <br />-static long rtc_dev_ioctl(struct file *file,<br />+static int rtc_dev_ioctl(struct inode *inode, struct file *file,<br /> 		unsigned int cmd, unsigned long arg)<br /> {<br /> 	int err = 0;<br />diff --git a/drivers/s390/block/dasd_int.h b/drivers/s390/block/dasd_int.h<br />index 31ecaa4..ab20e29 100644<br />--- a/drivers/s390/block/dasd_int.h<br />+++ b/drivers/s390/block/dasd_int.h<br />&#64;&#64; -611,7 +611,7 &#64;&#64; void dasd_destroy_partitions(struct dasd_block *);<br /> <br /> /* externals in dasd_ioctl.c */<br /> int  dasd_ioctl(struct inode *, struct file *, unsigned int, unsigned long);<br />-long dasd_compat_ioctl(struct file *, unsigned int, unsigned long);<br />+int dasd_compat_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br /> <br /> /* externals in dasd_proc.c */<br /> int dasd_proc_init(void);<br />diff --git a/drivers/s390/char/tape_char.c b/drivers/s390/char/tape_char.c<br />index be0ce22..5b42a1f 100644<br />--- a/drivers/s390/char/tape_char.c<br />+++ b/drivers/s390/char/tape_char.c<br />&#64;&#64; -37,7 +37,7 &#64;&#64; static int tapechar_open(struct inode *,struct file *);<br /> static int tapechar_release(struct inode *,struct file *);<br /> static int tapechar_ioctl(struct inode *, struct file *, unsigned int,<br /> 			  unsigned long);<br />-static long tapechar_compat_ioctl(struct file *, unsigned int,<br />+static int tapechar_compat_ioctl(struct inode *inode, struct file *, unsigned int,<br /> 			  unsigned long);<br /> <br /> static const struct file_operations tape_fops =<br />diff --git a/drivers/s390/char/vmcp.c b/drivers/s390/char/vmcp.c<br />index 09e7d9b..3de2abe 100644<br />--- a/drivers/s390/char/vmcp.c<br />+++ b/drivers/s390/char/vmcp.c<br />&#64;&#64; -138,7 +138,7 &#64;&#64; vmcp_write(struct file *file, const char __user *buff, size_t count,<br />  * let userspace to change the response size, if userspace expects a bigger<br />  * response<br />  */<br />-static long vmcp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int vmcp_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct vmcp_session *session;<br /> 	int temp;<br />diff --git a/drivers/s390/cio/chsc_sch.c b/drivers/s390/cio/chsc_sch.c<br />index 91ca87a..6a0904e 100644<br />--- a/drivers/s390/cio/chsc_sch.c<br />+++ b/drivers/s390/cio/chsc_sch.c<br />&#64;&#64; -737,7 +737,7 &#64;&#64; out_free:<br /> 	return ret;<br /> }<br /> <br />-static long chsc_ioctl(struct file *filp, unsigned int cmd,<br />+static int chsc_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 		       unsigned long arg)<br /> {<br /> 	CHSC_MSG(2, "chsc_ioctl called, cmd=%x\n", cmd);<br />diff --git a/drivers/s390/crypto/zcrypt_api.c b/drivers/s390/crypto/zcrypt_api.c<br />index cb22b97..6e82f85 100644<br />--- a/drivers/s390/crypto/zcrypt_api.c<br />+++ b/drivers/s390/crypto/zcrypt_api.c<br />&#64;&#64; -621,7 +621,7 &#64;&#64; static long zcrypt_ica_status(struct file *filp, unsigned long arg)<br /> 	return ret;<br /> }<br /> <br />-static long zcrypt_unlocked_ioctl(struct file *filp, unsigned int cmd,<br />+static int zcrypt_unlocked_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 				  unsigned long arg)<br /> {<br /> 	int rc;<br />&#64;&#64; -872,7 +872,7 &#64;&#64; static long trans_xcRB32(struct file *filp, unsigned int cmd,<br /> 	return rc;<br /> }<br /> <br />-static long zcrypt_compat_ioctl(struct file *filp, unsigned int cmd,<br />+static int zcrypt_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 			 unsigned long arg)<br /> {<br /> 	if (cmd == ICARSAMODEXPO)<br />diff --git a/drivers/s390/scsi/zfcp_cfdc.c b/drivers/s390/scsi/zfcp_cfdc.c<br />index ec2abce..de0380f 100644<br />--- a/drivers/s390/scsi/zfcp_cfdc.c<br />+++ b/drivers/s390/scsi/zfcp_cfdc.c<br />&#64;&#64; -160,7 +160,7 &#64;&#64; static void zfcp_cfdc_req_to_sense(struct zfcp_cfdc_data *data,<br /> 	       sizeof(req-&gt;qtcb-&gt;bottom.support.els));<br /> }<br /> <br />-static long zfcp_cfdc_dev_ioctl(struct file *file, unsigned int command,<br />+static int zfcp_cfdc_dev_ioctl(struct inode *inode, struct file *file, unsigned int command,<br /> 				unsigned long buffer)<br /> {<br /> 	struct zfcp_cfdc_data *data;<br />diff --git a/drivers/sbus/char/cpwatchdog.c b/drivers/sbus/char/cpwatchdog.c<br />index 23abfdf..1d272b6 100644<br />--- a/drivers/sbus/char/cpwatchdog.c<br />+++ b/drivers/sbus/char/cpwatchdog.c<br />&#64;&#64; -397,7 +397,7 &#64;&#64; static int wd_ioctl(struct inode *inode, struct file *file,<br /> 	return(0);<br /> }<br /> <br />-static long wd_compat_ioctl(struct file *file, unsigned int cmd,<br />+static int wd_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 		unsigned long arg)<br /> {<br /> 	int rval = -ENOIOCTLCMD;<br />diff --git a/drivers/sbus/char/display7seg.c b/drivers/sbus/char/display7seg.c<br />index d8f5c0c..74842f3 100644<br />--- a/drivers/sbus/char/display7seg.c<br />+++ b/drivers/sbus/char/display7seg.c<br />&#64;&#64; -117,7 +117,7 &#64;&#64; static int d7s_release(struct inode *inode, struct file *f)<br /> 	return 0;<br /> }<br /> <br />-static long d7s_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int d7s_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	__u8 regs = readb(d7s_regs);<br /> 	__u8 ireg = 0;<br />diff --git a/drivers/sbus/char/openprom.c b/drivers/sbus/char/openprom.c<br />index 29dc735..9a37df0 100644<br />--- a/drivers/sbus/char/openprom.c<br />+++ b/drivers/sbus/char/openprom.c<br />&#64;&#64; -650,7 +650,7 &#64;&#64; static int openprom_ioctl(struct inode * inode, struct file * file,<br /> 	};<br /> }<br /> <br />-static long openprom_compat_ioctl(struct file *file, unsigned int cmd,<br />+static int openprom_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 		unsigned long arg)<br /> {<br /> 	long rval = -ENOTTY;<br />diff --git a/drivers/scsi/aacraid/linit.c b/drivers/scsi/aacraid/linit.c<br />index 9aa301c..ff0ec51 100644<br />--- a/drivers/scsi/aacraid/linit.c<br />+++ b/drivers/scsi/aacraid/linit.c<br />&#64;&#64; -751,7 +751,7 &#64;&#64; static int aac_compat_ioctl(struct scsi_device *sdev, int cmd, void __user *arg)<br /> 	return aac_compat_do_ioctl(dev, cmd, (unsigned long)arg);<br /> }<br /> <br />-static long aac_compat_cfg_ioctl(struct file *file, unsigned cmd, unsigned long arg)<br />+static int aac_compat_cfg_ioctl(struct inode *inode, struct file *file, unsigned cmd, unsigned long arg)<br /> {<br /> 	if (!capable(CAP_SYS_RAWIO))<br /> 		return -EPERM;<br />diff --git a/drivers/scsi/ch.c b/drivers/scsi/ch.c<br />index 3c257fe..a9ac914 100644<br />--- a/drivers/scsi/ch.c<br />+++ b/drivers/scsi/ch.c<br />&#64;&#64; -596,7 +596,7 &#64;&#64; ch_checkrange(scsi_changer *ch, unsigned int type, unsigned int unit)<br /> 	return 0;<br /> }<br /> <br />-static long ch_ioctl(struct file *file,<br />+static int ch_ioctl(struct inode *inode, struct file *file,<br /> 		    unsigned int cmd, unsigned long arg)<br /> {<br /> 	scsi_changer *ch = file-&gt;private_data;<br />&#64;&#64; -843,7 +843,7 &#64;&#64; struct changer_element_status32 {<br /> };<br /> #define CHIOGSTATUS32  _IOW('c', 8,struct changer_element_status32)<br /> <br />-static long ch_ioctl_compat(struct file * file,<br />+static int ch_ioctl_compat(struct inode *inode, struct file * file,<br /> 			    unsigned int cmd, unsigned long arg)<br /> {<br /> 	scsi_changer *ch = file-&gt;private_data;<br />&#64;&#64; -858,7 +858,7 &#64;&#64; static long ch_ioctl_compat(struct file * file,<br /> 	case CHIOINITELEM:<br /> 	case CHIOSVOLTAG:<br /> 		/* compatible */<br />-		return ch_ioctl(file, cmd, arg);<br />+		return ch_ioctl(inode, file, cmd, arg);<br /> 	case CHIOGSTATUS32:<br /> 	{<br /> 		struct changer_element_status32 ces32;<br />diff --git a/drivers/scsi/dpt_i2o.c b/drivers/scsi/dpt_i2o.c<br />index 1fe0901..0c4e821 100644<br />--- a/drivers/scsi/dpt_i2o.c<br />+++ b/drivers/scsi/dpt_i2o.c<br />&#64;&#64; -115,7 +115,7 &#64;&#64; static int hba_count = 0;<br /> static struct class *adpt_sysfs_class;<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long compat_adpt_ioctl(struct file *, unsigned int, unsigned long);<br />+static int compat_adpt_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br /> #endif<br /> <br /> static const struct file_operations adpt_fops = {<br />&#64;&#64; -2147,14 +2147,11 &#64;&#64; static int adpt_ioctl(struct inode *inode, struct file *file, uint cmd,<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long compat_adpt_ioctl(struct file *file,<br />+static int compat_adpt_ioctl(struct inode *inode, struct file *file,<br /> 				unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode;<br /> 	long ret;<br />  <br />-	inode = file-&gt;f_dentry-&gt;d_inode;<br />- <br /> 	lock_kernel();<br />  <br /> 	switch(cmd) {<br />diff --git a/drivers/scsi/megaraid/megaraid_mm.c b/drivers/scsi/megaraid/megaraid_mm.c<br />index f680561..e3d9a55 100644<br />--- a/drivers/scsi/megaraid/megaraid_mm.c<br />+++ b/drivers/scsi/megaraid/megaraid_mm.c<br />&#64;&#64; -44,7 +44,7 &#64;&#64; static void mraid_mm_free_adp_resources(mraid_mmadp_t *);<br /> static void mraid_mm_teardown_dma_pools(mraid_mmadp_t *);<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long mraid_mm_compat_ioctl(struct file *, unsigned int, unsigned long);<br />+static int mraid_mm_compat_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br /> #endif<br /> <br /> MODULE_AUTHOR("LSI Logic Corporation");<br />&#64;&#64; -1218,13 +1218,13 &#64;&#64; mraid_mm_init(void)<br />  * &#64;cmd		: ioctl command<br />  * &#64;arg		: user ioctl packet<br />  */<br />-static long<br />-mraid_mm_compat_ioctl(struct file *filep, unsigned int cmd,<br />-		      unsigned long arg)<br />+static int<br />+mraid_mm_compat_ioctl(struct inode *inode, struct file *filep,<br />+		      unsigned int cmd, unsigned long arg)<br /> {<br /> 	int err;<br /> <br />-	err = mraid_mm_ioctl(NULL, filep, cmd, arg);<br />+	err = mraid_mm_ioctl(inode, filep, cmd, arg);<br /> <br /> 	return err;<br /> }<br />diff --git a/drivers/scsi/megaraid/megaraid_sas.c b/drivers/scsi/megaraid/megaraid_sas.c<br />index 97b7633..8bcd1bd 100644<br />--- a/drivers/scsi/megaraid/megaraid_sas.c<br />+++ b/drivers/scsi/megaraid/megaraid_sas.c<br />&#64;&#64; -3269,8 +3269,8 &#64;&#64; static int megasas_mgmt_ioctl_aen(struct file *file, unsigned long arg)<br /> /**<br />  * megasas_mgmt_ioctl -	char node ioctl entry point<br />  */<br />-static long<br />-megasas_mgmt_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int<br />+megasas_mgmt_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	switch (cmd) {<br /> 	case MEGASAS_IOC_FIRMWARE:<br />&#64;&#64; -3324,9 +3324,9 &#64;&#64; static int megasas_mgmt_compat_ioctl_fw(struct file *file, unsigned long arg)<br /> 	return error;<br /> }<br /> <br />-static long<br />-megasas_mgmt_compat_ioctl(struct file *file, unsigned int cmd,<br />-			  unsigned long arg)<br />+static int<br />+megasas_mgmt_compat_ioctl(struct inode *inode, struct file *file,<br />+			  unsigned int cmd, unsigned long arg)<br /> {<br /> 	switch (cmd) {<br /> 	case MEGASAS_IOC_FIRMWARE32:<br />diff --git a/drivers/scsi/osst.c b/drivers/scsi/osst.c<br />index 1c79f97..4d6867f 100644<br />--- a/drivers/scsi/osst.c<br />+++ b/drivers/scsi/osst.c<br />&#64;&#64; -5191,7 +5191,7 &#64;&#64; out:<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long osst_compat_ioctl(struct file * file, unsigned int cmd_in, unsigned long arg)<br />+static int osst_compat_ioctl(struct inode *inode, struct file * file, unsigned int cmd_in, unsigned long arg)<br /> {<br /> 	struct osst_tape *STp = file-&gt;private_data;<br /> 	struct scsi_device *sdev = STp-&gt;device;<br />diff --git a/drivers/scsi/sd.c b/drivers/scsi/sd.c<br />index e5e7d78..e283650 100644<br />--- a/drivers/scsi/sd.c<br />+++ b/drivers/scsi/sd.c<br />&#64;&#64; -921,7 +921,7 &#64;&#64; static void sd_rescan(struct device *dev)<br />  * This gets directly called from VFS. When the ioctl <br />  * is not recognized we go back to the other translation paths. <br />  */<br />-static long sd_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int sd_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct block_device *bdev = file-&gt;f_path.dentry-&gt;d_inode-&gt;i_bdev;<br /> 	struct gendisk *disk = bdev-&gt;bd_disk;<br />diff --git a/drivers/scsi/sg.c b/drivers/scsi/sg.c<br />index 661f9f2..5d4e1aa 100644<br />--- a/drivers/scsi/sg.c<br />+++ b/drivers/scsi/sg.c<br />&#64;&#64; -1113,7 +1113,7 &#64;&#64; sg_ioctl(struct inode *inode, struct file *filp,<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long sg_compat_ioctl(struct file *filp, unsigned int cmd_in, unsigned long arg)<br />+static int sg_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd_in, unsigned long arg)<br /> {<br /> 	Sg_device *sdp;<br /> 	Sg_fd *sfp;<br />diff --git a/drivers/scsi/st.c b/drivers/scsi/st.c<br />index c2bb53e..245c8ba 100644<br />--- a/drivers/scsi/st.c<br />+++ b/drivers/scsi/st.c<br />&#64;&#64; -3233,7 +3233,7 &#64;&#64; static int partition_tape(struct scsi_tape *STp, int size)<br /> <br /> <br /> /* The ioctl command */<br />-static long st_ioctl(struct file *file, unsigned int cmd_in, unsigned long arg)<br />+static int st_ioctl(struct inode *inode, struct file *file, unsigned int cmd_in, unsigned long arg)<br /> {<br /> 	int i, cmd_nr, cmd_type, bt;<br /> 	int retval = 0;<br />&#64;&#64; -3586,7 +3586,7 &#64;&#64; static long st_ioctl(struct file *file, unsigned int cmd_in, unsigned long arg)<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long st_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int st_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct scsi_tape *STp = file-&gt;private_data;<br /> 	struct scsi_device *sdev = STp-&gt;device;<br />diff --git a/drivers/spi/spidev.c b/drivers/spi/spidev.c<br />index e5e0cfe..70b3a16 100644<br />--- a/drivers/spi/spidev.c<br />+++ b/drivers/spi/spidev.c<br />&#64;&#64; -299,8 +299,8 &#64;&#64; done:<br /> 	return status;<br /> }<br /> <br />-static long<br />-spidev_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+static int<br />+spidev_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int			err = 0;<br /> 	int			retval = 0;<br />diff --git a/drivers/telephony/ixj.c b/drivers/telephony/ixj.c<br />index ec7aeb5..afea51d 100644<br />--- a/drivers/telephony/ixj.c<br />+++ b/drivers/telephony/ixj.c<br />&#64;&#64; -6661,7 +6661,7 &#64;&#64; static long do_ixj_ioctl(struct file *file_p, unsigned int cmd, unsigned long ar<br /> 	return retval;<br /> }<br /> <br />-static long ixj_ioctl(struct file *file_p, unsigned int cmd, unsigned long arg)<br />+static int ixj_ioctl(struct inode *inode, struct file *file_p, unsigned int cmd, unsigned long arg)<br /> {<br /> 	long ret;<br /> 	lock_kernel();<br />diff --git a/drivers/usb/class/usblp.c b/drivers/usb/class/usblp.c<br />index 0647164..0fdca42 100644<br />--- a/drivers/usb/class/usblp.c<br />+++ b/drivers/usb/class/usblp.c<br />&#64;&#64; -487,7 +487,7 &#64;&#64; static unsigned int usblp_poll(struct file *file, struct poll_table_struct *wait<br /> 	return ret;<br /> }<br /> <br />-static long usblp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int usblp_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct usblp *usblp = file-&gt;private_data;<br /> 	int length, err, i;<br />diff --git a/drivers/usb/gadget/inode.c b/drivers/usb/gadget/inode.c<br />index f4585d3..c772d34 100644<br />--- a/drivers/usb/gadget/inode.c<br />+++ b/drivers/usb/gadget/inode.c<br />&#64;&#64; -482,7 +482,7 &#64;&#64; ep_release (struct inode *inode, struct file *fd)<br /> 	return 0;<br /> }<br /> <br />-static long ep_ioctl(struct file *fd, unsigned code, unsigned long value)<br />+static int ep_ioctl(struct inode *inode, struct file *fd, unsigned code, unsigned long value)<br /> {<br /> 	struct ep_data		*data = fd-&gt;private_data;<br /> 	int			status;<br />&#64;&#64; -1292,7 +1292,7 &#64;&#64; out:<br />        return mask;<br /> }<br /> <br />-static long dev_ioctl (struct file *fd, unsigned code, unsigned long value)<br />+static int dev_ioctl(struct inode *inode, struct file *fd, unsigned code, unsigned long value)<br /> {<br /> 	struct dev_data		*dev = fd-&gt;private_data;<br /> 	struct usb_gadget	*gadget = dev-&gt;gadget;<br />&#64;&#64; -1300,7 +1300,7 &#64;&#64; static long dev_ioctl (struct file *fd, unsigned code, unsigned long value)<br /> <br /> 	if (gadget-&gt;ops-&gt;ioctl) {<br /> 		lock_kernel();<br />-		ret = gadget-&gt;ops-&gt;ioctl (gadget, code, value);<br />+		ret = gadget-&gt;ops-&gt;ioctl(gadget, code, value);<br /> 		unlock_kernel();<br /> 	}<br /> 	return ret;<br />diff --git a/drivers/usb/gadget/printer.c b/drivers/usb/gadget/printer.c<br />index e009008..d02ce89 100644<br />--- a/drivers/usb/gadget/printer.c<br />+++ b/drivers/usb/gadget/printer.c<br />&#64;&#64; -828,8 +828,8 &#64;&#64; printer_poll(struct file *fd, poll_table *wait)<br /> 	return status;<br /> }<br /> <br />-static long<br />-printer_ioctl(struct file *fd, unsigned int code, unsigned long arg)<br />+static int<br />+printer_ioctl(struct inode *inode, struct file *fd, unsigned int code, unsigned long arg)<br /> {<br /> 	struct printer_dev	*dev = fd-&gt;private_data;<br /> 	unsigned long		flags;<br />diff --git a/drivers/usb/misc/iowarrior.c b/drivers/usb/misc/iowarrior.c<br />index a4ef77e..5e3411a 100644<br />--- a/drivers/usb/misc/iowarrior.c<br />+++ b/drivers/usb/misc/iowarrior.c<br />&#64;&#64; -473,7 +473,7 &#64;&#64; exit:<br /> /**<br />  *	iowarrior_ioctl<br />  */<br />-static long iowarrior_ioctl(struct file *file, unsigned int cmd,<br />+static int iowarrior_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	struct iowarrior *dev = NULL;<br />diff --git a/drivers/usb/misc/rio500.c b/drivers/usb/misc/rio500.c<br />index 248a12a..3ba8ef2 100644<br />--- a/drivers/usb/misc/rio500.c<br />+++ b/drivers/usb/misc/rio500.c<br />&#64;&#64; -104,7 +104,7 &#64;&#64; static int close_rio(struct inode *inode, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long ioctl_rio(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int ioctl_rio(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct RioCommand rio_cmd;<br /> 	struct rio_usb_data *rio = &amp;rio_instance;<br />diff --git a/drivers/usb/misc/sisusbvga/sisusb.c b/drivers/usb/misc/sisusbvga/sisusb.c<br />index 69c34a5..26142aa 100644<br />--- a/drivers/usb/misc/sisusbvga/sisusb.c<br />+++ b/drivers/usb/misc/sisusbvga/sisusb.c<br />&#64;&#64; -2982,8 +2982,8 &#64;&#64; sisusb_handle_command(struct sisusb_usb_data *sisusb, struct sisusb_command *y,<br /> 	return retval;<br /> }<br /> <br />-static long<br />-sisusb_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int<br />+sisusb_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct sisusb_usb_data *sisusb;<br /> 	struct sisusb_info x;<br />&#64;&#64; -3058,8 +3058,8 &#64;&#64; err_out:<br /> }<br /> <br /> #ifdef SISUSB_NEW_CONFIG_COMPAT<br />-static long<br />-sisusb_compat_ioctl(struct file *f, unsigned int cmd, unsigned long arg)<br />+static int<br />+sisusb_compat_ioctl(struct inode *inode, struct file *f, unsigned int cmd, unsigned long arg)<br /> {<br /> 	long retval;<br /> <br />&#64;&#64; -3067,7 +3067,7 &#64;&#64; sisusb_compat_ioctl(struct file *f, unsigned int cmd, unsigned long arg)<br /> 		case SISUSB_GET_CONFIG_SIZE:<br /> 		case SISUSB_GET_CONFIG:<br /> 		case SISUSB_COMMAND:<br />-			retval = sisusb_ioctl(f, cmd, arg);<br />+			retval = sisusb_ioctl(inode, f, cmd, arg);<br /> 			return retval;<br /> <br /> 		default:<br />diff --git a/drivers/usb/misc/usblcd.c b/drivers/usb/misc/usblcd.c<br />index 2db4228..3f46226 100644<br />--- a/drivers/usb/misc/usblcd.c<br />+++ b/drivers/usb/misc/usblcd.c<br />&#64;&#64; -146,7 +146,7 &#64;&#64; static ssize_t lcd_read(struct file *file, char __user * buffer, size_t count, l<br /> 	return retval;<br /> }<br /> <br />-static long lcd_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int lcd_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct usb_lcd *dev;<br /> 	u16 bcdDevice;<br />diff --git a/drivers/video/fbmem.c b/drivers/video/fbmem.c<br />index 98843c2..aebf6f0 100644<br />--- a/drivers/video/fbmem.c<br />+++ b/drivers/video/fbmem.c<br />&#64;&#64; -1223,10 +1223,8 &#64;&#64; static int fb_get_fscreeninfo(struct inode *inode, struct file *file,<br /> 	return err;<br /> }<br /> <br />-static long<br />-fb_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int fb_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = file-&gt;f_path.dentry-&gt;d_inode;<br /> 	int fbidx = iminor(inode);<br /> 	struct fb_info *info = registered_fb[fbidx];<br /> 	struct fb_ops *fb = info-&gt;fbops;<br />diff --git a/drivers/watchdog/acquirewdt.c b/drivers/watchdog/acquirewdt.c<br />index 6e46a55..7579e79 100644<br />--- a/drivers/watchdog/acquirewdt.c<br />+++ b/drivers/watchdog/acquirewdt.c<br />&#64;&#64; -145,7 +145,7 &#64;&#64; static ssize_t acq_write(struct file *file, const char __user *buf,<br /> 	return count;<br /> }<br /> <br />-static long acq_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int acq_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int options, retval = -EINVAL;<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/advantechwdt.c b/drivers/watchdog/advantechwdt.c<br />index a5110f9..518c159 100644<br />--- a/drivers/watchdog/advantechwdt.c<br />+++ b/drivers/watchdog/advantechwdt.c<br />&#64;&#64; -132,7 +132,7 &#64;&#64; static ssize_t advwdt_write(struct file *file, const char __user *buf,<br /> 	return count;<br /> }<br /> <br />-static long advwdt_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int advwdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int new_timeout;<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/alim1535_wdt.c b/drivers/watchdog/alim1535_wdt.c<br />index 2a7690e..bde5fbc 100644<br />--- a/drivers/watchdog/alim1535_wdt.c<br />+++ b/drivers/watchdog/alim1535_wdt.c<br />&#64;&#64; -176,7 +176,7 &#64;&#64; static ssize_t ali_write(struct file *file, const char __user *data,<br />  *	we want an extension to enable irq ack monitoring and the like<br />  */<br /> <br />-static long ali_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int ali_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br /> 	int __user *p = argp;<br />diff --git a/drivers/watchdog/alim7101_wdt.c b/drivers/watchdog/alim7101_wdt.c<br />index a045ef8..4c0ef21 100644<br />--- a/drivers/watchdog/alim7101_wdt.c<br />+++ b/drivers/watchdog/alim7101_wdt.c<br />&#64;&#64; -234,7 +234,7 &#64;&#64; static int fop_close(struct inode *inode, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long fop_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int fop_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br /> 	int __user *p = argp;<br />diff --git a/drivers/watchdog/ar7_wdt.c b/drivers/watchdog/ar7_wdt.c<br />index 55dcbfe..2dcd13e 100644<br />--- a/drivers/watchdog/ar7_wdt.c<br />+++ b/drivers/watchdog/ar7_wdt.c<br />&#64;&#64; -240,7 +240,7 &#64;&#64; static ssize_t ar7_wdt_write(struct file *file, const char *data,<br /> 	return len;<br /> }<br /> <br />-static long ar7_wdt_ioctl(struct file *file,<br />+static int ar7_wdt_ioctl(struct inode *inode, struct file *file,<br /> 					unsigned int cmd, unsigned long arg)<br /> {<br /> 	static struct watchdog_info ident = {<br />diff --git a/drivers/watchdog/at32ap700x_wdt.c b/drivers/watchdog/at32ap700x_wdt.c<br />index e8ae638..aafa445 100644<br />--- a/drivers/watchdog/at32ap700x_wdt.c<br />+++ b/drivers/watchdog/at32ap700x_wdt.c<br />&#64;&#64; -212,7 +212,7 &#64;&#64; static struct watchdog_info at32_wdt_info = {<br /> /*<br />  * Handle commands from user-space.<br />  */<br />-static long at32_wdt_ioctl(struct file *file,<br />+static int at32_wdt_ioctl(struct inode *inode, struct file *file,<br /> 				unsigned int cmd, unsigned long arg)<br /> {<br /> 	int ret = -ENOTTY;<br />diff --git a/drivers/watchdog/at91rm9200_wdt.c b/drivers/watchdog/at91rm9200_wdt.c<br />index 993e5f5..8658fc7 100644<br />--- a/drivers/watchdog/at91rm9200_wdt.c<br />+++ b/drivers/watchdog/at91rm9200_wdt.c<br />&#64;&#64; -128,7 +128,7 &#64;&#64; static struct watchdog_info at91_wdt_info = {<br /> /*<br />  * Handle commands from user-space.<br />  */<br />-static long at91_wdt_ioctl(struct file *file,<br />+static int at91_wdt_ioctl(struct inode *inode, struct file *file,<br /> 					unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/bfin_wdt.c b/drivers/watchdog/bfin_wdt.c<br />index 31b4225..e82f2ed 100644<br />--- a/drivers/watchdog/bfin_wdt.c<br />+++ b/drivers/watchdog/bfin_wdt.c<br />&#64;&#64; -248,7 +248,7 &#64;&#64; static ssize_t bfin_wdt_write(struct file *file, const char __user *data,<br />  *	Query basic information from the device or ping it, as outlined by the<br />  *	watchdog API.<br />  */<br />-static long bfin_wdt_ioctl(struct file *file,<br />+static int bfin_wdt_ioctl(struct inode *inode, struct file *file,<br /> 				unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/booke_wdt.c b/drivers/watchdog/booke_wdt.c<br />index c3b78a7..c5a7ce1 100644<br />--- a/drivers/watchdog/booke_wdt.c<br />+++ b/drivers/watchdog/booke_wdt.c<br />&#64;&#64; -82,7 +82,7 &#64;&#64; static struct watchdog_info ident = {<br /> 	.identity = "PowerPC Book-E Watchdog",<br /> };<br /> <br />-static long booke_wdt_ioctl(struct file *file,<br />+static int booke_wdt_ioctl(struct inode *inode, struct file *file,<br /> 				unsigned int cmd, unsigned long arg)<br /> {<br /> 	u32 tmp = 0;<br />diff --git a/drivers/watchdog/cpu5wdt.c b/drivers/watchdog/cpu5wdt.c<br />index 71f6d7e..feb30cd 100644<br />--- a/drivers/watchdog/cpu5wdt.c<br />+++ b/drivers/watchdog/cpu5wdt.c<br />&#64;&#64; -148,7 +148,7 &#64;&#64; static int cpu5wdt_release(struct inode *inode, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long cpu5wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int cpu5wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/davinci_wdt.c b/drivers/watchdog/davinci_wdt.c<br />index 2e13602..81f676a 100644<br />--- a/drivers/watchdog/davinci_wdt.c<br />+++ b/drivers/watchdog/davinci_wdt.c<br />&#64;&#64; -142,7 +142,7 &#64;&#64; static struct watchdog_info ident = {<br /> 	.identity = "DaVinci Watchdog",<br /> };<br /> <br />-static long davinci_wdt_ioctl(struct file *file,<br />+static int davinci_wdt_ioctl(struct inode *inode, struct file *file,<br /> 					unsigned int cmd, unsigned long arg)<br /> {<br /> 	int ret = -ENOTTY;<br />diff --git a/drivers/watchdog/ep93xx_wdt.c b/drivers/watchdog/ep93xx_wdt.c<br />index e9f950f..496a5fa 100644<br />--- a/drivers/watchdog/ep93xx_wdt.c<br />+++ b/drivers/watchdog/ep93xx_wdt.c<br />&#64;&#64; -135,7 +135,7 &#64;&#64; static struct watchdog_info ident = {<br /> 	.identity = "EP93xx Watchdog",<br /> };<br /> <br />-static long ep93xx_wdt_ioctl(struct file *file,<br />+static int ep93xx_wdt_ioctl(struct inode *inode, struct file *file,<br /> 					unsigned int cmd, unsigned long arg)<br /> {<br /> 	int ret = -ENOTTY;<br />diff --git a/drivers/watchdog/eurotechwdt.c b/drivers/watchdog/eurotechwdt.c<br />index bbd14e3..ecb704d 100644<br />--- a/drivers/watchdog/eurotechwdt.c<br />+++ b/drivers/watchdog/eurotechwdt.c<br />&#64;&#64; -233,7 +233,7 &#64;&#64; size_t count, loff_t *ppos)<br />  * according to their available features.<br />  */<br /> <br />-static long eurwdt_ioctl(struct file *file,<br />+static int eurwdt_ioctl(struct inode *inode, struct file *file,<br /> 					unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/hpwdt.c b/drivers/watchdog/hpwdt.c<br />index a3765e0..de4a065 100644<br />--- a/drivers/watchdog/hpwdt.c<br />+++ b/drivers/watchdog/hpwdt.c<br />&#64;&#64; -556,7 +556,7 &#64;&#64; static struct watchdog_info ident = {<br /> 	.identity = "HP iLO2 HW Watchdog Timer",<br /> };<br /> <br />-static long hpwdt_ioctl(struct file *file, unsigned int cmd,<br />+static int hpwdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 	unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/i6300esb.c b/drivers/watchdog/i6300esb.c<br />index c13383f..013eb0d 100644<br />--- a/drivers/watchdog/i6300esb.c<br />+++ b/drivers/watchdog/i6300esb.c<br />&#64;&#64; -256,7 +256,7 &#64;&#64; static ssize_t esb_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long esb_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int esb_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int new_options, retval = -EINVAL;<br /> 	int new_heartbeat;<br />diff --git a/drivers/watchdog/iTCO_wdt.c b/drivers/watchdog/iTCO_wdt.c<br />index bfb93bc..4d1015a 100644<br />--- a/drivers/watchdog/iTCO_wdt.c<br />+++ b/drivers/watchdog/iTCO_wdt.c<br />&#64;&#64; -510,7 +510,7 &#64;&#64; static ssize_t iTCO_wdt_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long iTCO_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int iTCO_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int new_options, retval = -EINVAL;<br />diff --git a/drivers/watchdog/ib700wdt.c b/drivers/watchdog/ib700wdt.c<br />index 05a2810..53bf64d 100644<br />--- a/drivers/watchdog/ib700wdt.c<br />+++ b/drivers/watchdog/ib700wdt.c<br />&#64;&#64; -187,7 +187,7 &#64;&#64; static ssize_t ibwdt_write(struct file *file, const char __user *buf,<br /> 	return count;<br /> }<br /> <br />-static long ibwdt_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int ibwdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int new_margin;<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/ibmasr.c b/drivers/watchdog/ibmasr.c<br />index b82405c..14a32af 100644<br />--- a/drivers/watchdog/ibmasr.c<br />+++ b/drivers/watchdog/ibmasr.c<br />&#64;&#64; -270,7 +270,7 &#64;&#64; static ssize_t asr_write(struct file *file, const char __user *buf,<br /> 	return count;<br /> }<br /> <br />-static long asr_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int asr_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	static const struct watchdog_info ident = {<br /> 		.options =	WDIOF_KEEPALIVEPING |<br />diff --git a/drivers/watchdog/indydog.c b/drivers/watchdog/indydog.c<br />index 73c9e79..97e8619 100644<br />--- a/drivers/watchdog/indydog.c<br />+++ b/drivers/watchdog/indydog.c<br />&#64;&#64; -108,7 +108,7 &#64;&#64; static ssize_t indydog_write(struct file *file, const char *data,<br /> 	return len;<br /> }<br /> <br />-static long indydog_ioctl(struct file *file, unsigned int cmd,<br />+static int indydog_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int options, retval = -EINVAL;<br />diff --git a/drivers/watchdog/iop_wdt.c b/drivers/watchdog/iop_wdt.c<br />index 96eb2cb..91070a7 100644<br />--- a/drivers/watchdog/iop_wdt.c<br />+++ b/drivers/watchdog/iop_wdt.c<br />&#64;&#64; -130,7 +130,7 &#64;&#64; static const struct watchdog_info ident = {<br /> 	.identity = "iop watchdog",<br /> };<br /> <br />-static long iop_wdt_ioctl(struct file *file,<br />+static int iop_wdt_ioctl(struct inode *inode, struct file *file,<br /> 				unsigned int cmd, unsigned long arg)<br /> {<br /> 	int options;<br />diff --git a/drivers/watchdog/it8712f_wdt.c b/drivers/watchdog/it8712f_wdt.c<br />index 2270ee0..a2851a6 100644<br />--- a/drivers/watchdog/it8712f_wdt.c<br />+++ b/drivers/watchdog/it8712f_wdt.c<br />&#64;&#64; -231,7 +231,7 &#64;&#64; static ssize_t it8712f_wdt_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long it8712f_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int it8712f_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/ixp2000_wdt.c b/drivers/watchdog/ixp2000_wdt.c<br />index 4f4b35a..4e8c501 100644<br />--- a/drivers/watchdog/ixp2000_wdt.c<br />+++ b/drivers/watchdog/ixp2000_wdt.c<br />&#64;&#64; -105,7 +105,7 &#64;&#64; static struct watchdog_info ident = {<br /> 	.identity	= "IXP2000 Watchdog",<br /> };<br /> <br />-static long ixp2000_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int ixp2000_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int ret = -ENOTTY;<br />diff --git a/drivers/watchdog/ixp4xx_wdt.c b/drivers/watchdog/ixp4xx_wdt.c<br />index 8302ef0..0933442 100644<br />--- a/drivers/watchdog/ixp4xx_wdt.c<br />+++ b/drivers/watchdog/ixp4xx_wdt.c<br />&#64;&#64; -96,7 +96,7 &#64;&#64; static struct watchdog_info ident = {<br /> };<br /> <br /> <br />-static long ixp4xx_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int ixp4xx_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int ret = -ENOTTY;<br />diff --git a/drivers/watchdog/ks8695_wdt.c b/drivers/watchdog/ks8695_wdt.c<br />index 0b798fd..76b310f 100644<br />--- a/drivers/watchdog/ks8695_wdt.c<br />+++ b/drivers/watchdog/ks8695_wdt.c<br />&#64;&#64; -152,7 +152,7 &#64;&#64; static struct watchdog_info ks8695_wdt_info = {<br /> /*<br />  * Handle commands from user-space.<br />  */<br />-static long ks8695_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int ks8695_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/machzwd.c b/drivers/watchdog/machzwd.c<br />index 2dfc275..fb840c5 100644<br />--- a/drivers/watchdog/machzwd.c<br />+++ b/drivers/watchdog/machzwd.c<br />&#64;&#64; -303,7 +303,7 &#64;&#64; static ssize_t zf_write(struct file *file, const char __user *buf, size_t count,<br /> 	return count;<br /> }<br /> <br />-static long zf_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int zf_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br /> 	int __user *p = argp;<br />diff --git a/drivers/watchdog/mixcomwd.c b/drivers/watchdog/mixcomwd.c<br />index 407b025..cc1d238 100644<br />--- a/drivers/watchdog/mixcomwd.c<br />+++ b/drivers/watchdog/mixcomwd.c<br />&#64;&#64; -195,7 +195,7 &#64;&#64; static ssize_t mixcomwd_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long mixcomwd_ioctl(struct file *file,<br />+static int mixcomwd_ioctl(struct inode *inode, struct file *file,<br /> 				unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/mpc5200_wdt.c b/drivers/watchdog/mpc5200_wdt.c<br />index db91892..614bc2c 100644<br />--- a/drivers/watchdog/mpc5200_wdt.c<br />+++ b/drivers/watchdog/mpc5200_wdt.c<br />&#64;&#64; -94,7 +94,7 &#64;&#64; static struct watchdog_info mpc5200_wdt_info = {<br /> 	.options	= WDIOF_SETTIMEOUT | WDIOF_KEEPALIVEPING,<br /> 	.identity	= "mpc5200 watchdog on GPT0",<br /> };<br />-static long mpc5200_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int mpc5200_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	struct mpc5200_wdt *wdt = file-&gt;private_data;<br />diff --git a/drivers/watchdog/mpc8xxx_wdt.c b/drivers/watchdog/mpc8xxx_wdt.c<br />index 38c588e..243bce7 100644<br />--- a/drivers/watchdog/mpc8xxx_wdt.c<br />+++ b/drivers/watchdog/mpc8xxx_wdt.c<br />&#64;&#64; -143,7 +143,7 &#64;&#64; static int mpc8xxx_wdt_release(struct inode *inode, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long mpc8xxx_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int mpc8xxx_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/mpcore_wdt.c b/drivers/watchdog/mpcore_wdt.c<br />index 2a9bfa8..91db86e 100644<br />--- a/drivers/watchdog/mpcore_wdt.c<br />+++ b/drivers/watchdog/mpcore_wdt.c<br />&#64;&#64; -218,7 +218,7 &#64;&#64; static struct watchdog_info ident = {<br /> 	.identity		= "MPcore Watchdog",<br /> };<br /> <br />-static long mpcore_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int mpcore_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	struct mpcore_wdt *wdt = file-&gt;private_data;<br />diff --git a/drivers/watchdog/mtx-1_wdt.c b/drivers/watchdog/mtx-1_wdt.c<br />index b4b7b0a..fd7f85d 100644<br />--- a/drivers/watchdog/mtx-1_wdt.c<br />+++ b/drivers/watchdog/mtx-1_wdt.c<br />&#64;&#64; -136,7 +136,7 &#64;&#64; static int mtx1_wdt_release(struct inode *inode, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long mtx1_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int mtx1_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/mv64x60_wdt.c b/drivers/watchdog/mv64x60_wdt.c<br />index acf589d..b3dea2d 100644<br />--- a/drivers/watchdog/mv64x60_wdt.c<br />+++ b/drivers/watchdog/mv64x60_wdt.c<br />&#64;&#64; -173,7 +173,7 &#64;&#64; static ssize_t mv64x60_wdt_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long mv64x60_wdt_ioctl(struct file *file,<br />+static int mv64x60_wdt_ioctl(struct inode *inode, struct file *file,<br /> 					unsigned int cmd, unsigned long arg)<br /> {<br /> 	int timeout;<br />diff --git a/drivers/watchdog/omap_wdt.c b/drivers/watchdog/omap_wdt.c<br />index 3a11dad..8bbc9bf 100644<br />--- a/drivers/watchdog/omap_wdt.c<br />+++ b/drivers/watchdog/omap_wdt.c<br />&#64;&#64; -185,7 +185,7 &#64;&#64; static ssize_t omap_wdt_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long omap_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int omap_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg)<br /> {<br /> 	int new_margin;<br />diff --git a/drivers/watchdog/pc87413_wdt.c b/drivers/watchdog/pc87413_wdt.c<br />index 484c215..9417f9c 100644<br />--- a/drivers/watchdog/pc87413_wdt.c<br />+++ b/drivers/watchdog/pc87413_wdt.c<br />&#64;&#64; -397,7 +397,7 &#64;&#64; static ssize_t pc87413_write(struct file *file, const char __user *data,<br />  *	querying capabilities and current status.<br />  */<br /> <br />-static long pc87413_ioctl(struct file *file, unsigned int cmd,<br />+static int pc87413_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg)<br /> {<br /> 	int new_timeout;<br />diff --git a/drivers/watchdog/pcwd.c b/drivers/watchdog/pcwd.c<br />index 9e1331a..0f6f9a6 100644<br />--- a/drivers/watchdog/pcwd.c<br />+++ b/drivers/watchdog/pcwd.c<br />&#64;&#64; -594,7 +594,7 &#64;&#64; static int pcwd_get_temperature(int *temperature)<br />  *	/dev/watchdog handling<br />  */<br /> <br />-static long pcwd_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int pcwd_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int rv;<br /> 	int status;<br />diff --git a/drivers/watchdog/pcwd_pci.c b/drivers/watchdog/pcwd_pci.c<br />index 90eb1d4..dae0372 100644<br />--- a/drivers/watchdog/pcwd_pci.c<br />+++ b/drivers/watchdog/pcwd_pci.c<br />&#64;&#64; -453,7 +453,7 &#64;&#64; static ssize_t pcipcwd_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long pcipcwd_ioctl(struct file *file, unsigned int cmd,<br />+static int pcipcwd_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/pcwd_usb.c b/drivers/watchdog/pcwd_usb.c<br />index c1685c9..68419ee 100644<br />--- a/drivers/watchdog/pcwd_usb.c<br />+++ b/drivers/watchdog/pcwd_usb.c<br />&#64;&#64; -368,7 +368,7 &#64;&#64; static ssize_t usb_pcwd_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long usb_pcwd_ioctl(struct file *file, unsigned int cmd,<br />+static int usb_pcwd_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/pnx4008_wdt.c b/drivers/watchdog/pnx4008_wdt.c<br />index 0ed8416..44ab680 100644<br />--- a/drivers/watchdog/pnx4008_wdt.c<br />+++ b/drivers/watchdog/pnx4008_wdt.c<br />&#64;&#64; -173,7 +173,7 &#64;&#64; static const struct watchdog_info ident = {<br /> 	.identity = "PNX4008 Watchdog",<br /> };<br /> <br />-static long pnx4008_wdt_ioctl(struct inode *inode, struct file *file,<br />+static int pnx4008_wdt_ioctl(struct inode *inode, struct inode *inode, struct file *file,<br /> 					unsigned int cmd, unsigned long arg)<br /> {<br /> 	int ret = -ENOTTY;<br />diff --git a/drivers/watchdog/rm9k_wdt.c b/drivers/watchdog/rm9k_wdt.c<br />index f1ae372..384738c 100644<br />--- a/drivers/watchdog/rm9k_wdt.c<br />+++ b/drivers/watchdog/rm9k_wdt.c<br />&#64;&#64; -55,7 +55,7 &#64;&#64; static int wdt_gpi_open(struct inode *, struct file *);<br /> static int wdt_gpi_release(struct inode *, struct file *);<br /> static ssize_t wdt_gpi_write(struct file *, const char __user *, size_t,<br /> 								loff_t *);<br />-static long wdt_gpi_ioctl(struct file *, unsigned int, unsigned long);<br />+static int wdt_gpi_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br /> static int wdt_gpi_notify(struct notifier_block *, unsigned long, void *);<br /> static const struct resource *wdt_gpi_get_resource(struct platform_device *,<br /> 						const char *, unsigned int);<br />&#64;&#64; -244,7 +244,7 &#64;&#64; static ssize_t wdt_gpi_write(struct file *f, const char __user *d, size_t s,<br /> 	return s ? 1 : 0;<br /> }<br /> <br />-static long wdt_gpi_ioctl(struct file *f, unsigned int cmd, unsigned long arg)<br />+static int wdt_gpi_ioctl(struct inode *inode, struct file *f, unsigned int cmd, unsigned long arg)<br /> {<br /> 	long res = -ENOTTY;<br /> 	const long size = _IOC_SIZE(cmd);<br />diff --git a/drivers/watchdog/s3c2410_wdt.c b/drivers/watchdog/s3c2410_wdt.c<br />index 86d4280..28e9488 100644<br />--- a/drivers/watchdog/s3c2410_wdt.c<br />+++ b/drivers/watchdog/s3c2410_wdt.c<br />&#64;&#64; -272,7 +272,7 &#64;&#64; static const struct watchdog_info s3c2410_wdt_ident = {<br /> };<br /> <br /> <br />-static long s3c2410wdt_ioctl(struct file *file,	unsigned int cmd,<br />+static int s3c2410wdt_ioctl(struct inode *inode, struct file *file,	unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/sa1100_wdt.c b/drivers/watchdog/sa1100_wdt.c<br />index 31a4843..30d2bda 100644<br />--- a/drivers/watchdog/sa1100_wdt.c<br />+++ b/drivers/watchdog/sa1100_wdt.c<br />&#64;&#64; -86,7 +86,7 &#64;&#64; static const struct watchdog_info ident = {<br /> 	.identity	= "SA1100/PXA255 Watchdog",<br /> };<br /> <br />-static long sa1100dog_ioctl(struct file *file, unsigned int cmd,<br />+static int sa1100dog_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int ret = -ENOTTY;<br />diff --git a/drivers/watchdog/sb_wdog.c b/drivers/watchdog/sb_wdog.c<br />index 27e526a..55aa97b 100644<br />--- a/drivers/watchdog/sb_wdog.c<br />+++ b/drivers/watchdog/sb_wdog.c<br />&#64;&#64; -164,7 +164,7 &#64;&#64; static ssize_t sbwdog_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long sbwdog_ioctl(struct file *file, unsigned int cmd,<br />+static int sbwdog_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg)<br /> {<br /> 	int ret = -ENOTTY;<br />diff --git a/drivers/watchdog/sbc60xxwdt.c b/drivers/watchdog/sbc60xxwdt.c<br />index 3266daa..9507175 100644<br />--- a/drivers/watchdog/sbc60xxwdt.c<br />+++ b/drivers/watchdog/sbc60xxwdt.c<br />&#64;&#64; -225,7 +225,7 &#64;&#64; static int fop_close(struct inode *inode, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long fop_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int fop_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br /> 	int __user *p = argp;<br />diff --git a/drivers/watchdog/sbc7240_wdt.c b/drivers/watchdog/sbc7240_wdt.c<br />index 67ddeb1..74d648c 100644<br />--- a/drivers/watchdog/sbc7240_wdt.c<br />+++ b/drivers/watchdog/sbc7240_wdt.c<br />&#64;&#64; -168,7 +168,7 &#64;&#64; static const struct watchdog_info ident = {<br /> };<br /> <br /> <br />-static long fop_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int fop_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	switch (cmd) {<br /> 	case WDIOC_GETSUPPORT:<br />diff --git a/drivers/watchdog/sbc_epx_c3.c b/drivers/watchdog/sbc_epx_c3.c<br />index e5e470c..a367d9f 100644<br />--- a/drivers/watchdog/sbc_epx_c3.c<br />+++ b/drivers/watchdog/sbc_epx_c3.c<br />&#64;&#64; -100,7 +100,7 &#64;&#64; static ssize_t epx_c3_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long epx_c3_ioctl(struct file *file, unsigned int cmd,<br />+static int epx_c3_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg)<br /> {<br /> 	int options, retval = -EINVAL;<br />diff --git a/drivers/watchdog/sc1200wdt.c b/drivers/watchdog/sc1200wdt.c<br />index 23da3cc..0f57878 100644<br />--- a/drivers/watchdog/sc1200wdt.c<br />+++ b/drivers/watchdog/sc1200wdt.c<br />&#64;&#64; -182,7 +182,7 &#64;&#64; static int sc1200wdt_open(struct inode *inode, struct file *file)<br /> }<br /> <br /> <br />-static long sc1200wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int sc1200wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 						unsigned long arg)<br /> {<br /> 	int new_timeout;<br />diff --git a/drivers/watchdog/sc520_wdt.c b/drivers/watchdog/sc520_wdt.c<br />index a2b6c10..d2851bf 100644<br />--- a/drivers/watchdog/sc520_wdt.c<br />+++ b/drivers/watchdog/sc520_wdt.c<br />&#64;&#64; -279,7 +279,7 &#64;&#64; static int fop_close(struct inode *inode, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long fop_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int fop_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br /> 	int __user *p = argp;<br />diff --git a/drivers/watchdog/scx200_wdt.c b/drivers/watchdog/scx200_wdt.c<br />index 9e19a10..8203518 100644<br />--- a/drivers/watchdog/scx200_wdt.c<br />+++ b/drivers/watchdog/scx200_wdt.c<br />&#64;&#64; -155,7 +155,7 &#64;&#64; static ssize_t scx200_wdt_write(struct file *file, const char __user *data,<br /> 	return 0;<br /> }<br /> <br />-static long scx200_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int scx200_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/shwdt.c b/drivers/watchdog/shwdt.c<br />index cdc7138..8eebcb3 100644<br />--- a/drivers/watchdog/shwdt.c<br />+++ b/drivers/watchdog/shwdt.c<br />&#64;&#64; -338,7 +338,7 &#64;&#64; static int sh_wdt_mmap(struct file *file, struct vm_area_struct *vma)<br />  * 	Query basic information from the device or ping it, as outlined by the<br />  * 	watchdog API.<br />  */<br />-static long sh_wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int sh_wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int new_heartbeat;<br />diff --git a/drivers/watchdog/smsc37b787_wdt.c b/drivers/watchdog/smsc37b787_wdt.c<br />index 988ff1d..09828f1 100644<br />--- a/drivers/watchdog/smsc37b787_wdt.c<br />+++ b/drivers/watchdog/smsc37b787_wdt.c<br />&#64;&#64; -423,7 +423,7 &#64;&#64; static ssize_t wb_smsc_wdt_write(struct file *file, const char __user *data,<br /> <br /> /* ioctl =&gt; control interface */<br /> <br />-static long wb_smsc_wdt_ioctl(struct file *file,<br />+static int wb_smsc_wdt_ioctl(struct inode *inode, struct file *file,<br /> 					unsigned int cmd, unsigned long arg)<br /> {<br /> 	int new_timeout;<br />diff --git a/drivers/watchdog/softdog.c b/drivers/watchdog/softdog.c<br />index c650464..9a2d3fa 100644<br />--- a/drivers/watchdog/softdog.c<br />+++ b/drivers/watchdog/softdog.c<br />&#64;&#64; -192,7 +192,7 &#64;&#64; static ssize_t softdog_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long softdog_ioctl(struct file *file, unsigned int cmd,<br />+static int softdog_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/txx9wdt.c b/drivers/watchdog/txx9wdt.c<br />index 6adab77..8184c55 100644<br />--- a/drivers/watchdog/txx9wdt.c<br />+++ b/drivers/watchdog/txx9wdt.c<br />&#64;&#64; -127,7 +127,7 &#64;&#64; static ssize_t txx9wdt_write(struct file *file, const char __user *data,<br /> 	return len;<br /> }<br /> <br />-static long txx9wdt_ioctl(struct file *file, unsigned int cmd,<br />+static int txx9wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/w83627hf_wdt.c b/drivers/watchdog/w83627hf_wdt.c<br />index 69396ad..9ec4bed 100644<br />--- a/drivers/watchdog/w83627hf_wdt.c<br />+++ b/drivers/watchdog/w83627hf_wdt.c<br />&#64;&#64; -191,7 +191,7 &#64;&#64; static ssize_t wdt_write(struct file *file, const char __user *buf,<br /> 	return count;<br /> }<br /> <br />-static long wdt_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br /> 	int __user *p = argp;<br />diff --git a/drivers/watchdog/w83697hf_wdt.c b/drivers/watchdog/w83697hf_wdt.c<br />index 445d30a..b969baa 100644<br />--- a/drivers/watchdog/w83697hf_wdt.c<br />+++ b/drivers/watchdog/w83697hf_wdt.c<br />&#64;&#64; -229,7 +229,7 &#64;&#64; static ssize_t wdt_write(struct file *file, const char __user *buf,<br /> 	return count;<br /> }<br /> <br />-static long wdt_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br /> 	int __user *p = argp;<br />diff --git a/drivers/watchdog/w83877f_wdt.c b/drivers/watchdog/w83877f_wdt.c<br />index 24587d2..36ed0b2 100644<br />--- a/drivers/watchdog/w83877f_wdt.c<br />+++ b/drivers/watchdog/w83877f_wdt.c<br />&#64;&#64; -242,7 +242,7 &#64;&#64; static int fop_close(struct inode *inode, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long fop_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int fop_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br /> 	int __user *p = argp;<br />diff --git a/drivers/watchdog/w83977f_wdt.c b/drivers/watchdog/w83977f_wdt.c<br />index 2525da5..ab029dd 100644<br />--- a/drivers/watchdog/w83977f_wdt.c<br />+++ b/drivers/watchdog/w83977f_wdt.c<br />&#64;&#64; -377,7 +377,7 &#64;&#64; static struct watchdog_info ident = {<br /> 	.identity = WATCHDOG_NAME,<br /> };<br /> <br />-static long wdt_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int status;<br /> 	int new_options, retval = -EINVAL;<br />diff --git a/drivers/watchdog/wafer5823wdt.c b/drivers/watchdog/wafer5823wdt.c<br />index 68377ae..06e6cae 100644<br />--- a/drivers/watchdog/wafer5823wdt.c<br />+++ b/drivers/watchdog/wafer5823wdt.c<br />&#64;&#64; -121,7 +121,7 &#64;&#64; static ssize_t wafwdt_write(struct file *file, const char __user *buf,<br /> 	return count;<br /> }<br /> <br />-static long wafwdt_ioctl(struct file *file, unsigned int cmd,<br />+static int wafwdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int new_timeout;<br />diff --git a/drivers/watchdog/wdrtas.c b/drivers/watchdog/wdrtas.c<br />index 5d3b1a8..823ed73 100644<br />--- a/drivers/watchdog/wdrtas.c<br />+++ b/drivers/watchdog/wdrtas.c<br />&#64;&#64; -305,7 +305,7 &#64;&#64; out:<br />  * wdrtas_ioctl implements the watchdog API ioctls<br />  */<br /> <br />-static long wdrtas_ioctl(struct file *file, unsigned int cmd,<br />+static int wdrtas_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int __user *argp = (void __user *)arg;<br />diff --git a/drivers/watchdog/wdt.c b/drivers/watchdog/wdt.c<br />index deeebb2..cfbba80 100644<br />--- a/drivers/watchdog/wdt.c<br />+++ b/drivers/watchdog/wdt.c<br />&#64;&#64; -349,7 +349,7 &#64;&#64; static ssize_t wdt_write(struct file *file, const char __user *buf,<br />  *	querying capabilities and current status.<br />  */<br /> <br />-static long wdt_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int wdt_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = (void __user *)arg;<br /> 	int __user *p = argp;<br />diff --git a/drivers/watchdog/wdt285.c b/drivers/watchdog/wdt285.c<br />index db362c3..e799311 100644<br />--- a/drivers/watchdog/wdt285.c<br />+++ b/drivers/watchdog/wdt285.c<br />&#64;&#64; -132,7 +132,7 &#64;&#64; static const struct watchdog_info ident = {<br /> 	.identity	= "Footbridge Watchdog",<br /> };<br /> <br />-static long watchdog_ioctl(struct file *file, unsigned int cmd,<br />+static int watchdog_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	unsigned int new_margin;<br />diff --git a/drivers/watchdog/wdt977.c b/drivers/watchdog/wdt977.c<br />index 60e28d4..348674f 100644<br />--- a/drivers/watchdog/wdt977.c<br />+++ b/drivers/watchdog/wdt977.c<br />&#64;&#64; -351,7 +351,7 &#64;&#64; static const struct watchdog_info ident = {<br />  *      according to their available features.<br />  */<br /> <br />-static long wdt977_ioctl(struct file *file, unsigned int cmd,<br />+static int wdt977_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int status;<br />diff --git a/drivers/watchdog/wdt_pci.c b/drivers/watchdog/wdt_pci.c<br />index ed02bdb..2d6a3e5 100644<br />--- a/drivers/watchdog/wdt_pci.c<br />+++ b/drivers/watchdog/wdt_pci.c<br />&#64;&#64; -403,7 +403,7 &#64;&#64; static ssize_t wdtpci_write(struct file *file, const char __user *buf,<br />  *	querying capabilities and current status.<br />  */<br /> <br />-static long wdtpci_ioctl(struct file *file, unsigned int cmd,<br />+static int wdtpci_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int new_heartbeat;<br />diff --git a/fs/bad_inode.c b/fs/bad_inode.c<br />index 5f1538c..acb7af1 100644<br />--- a/fs/bad_inode.c<br />+++ b/fs/bad_inode.c<br />&#64;&#64; -61,13 +61,13 &#64;&#64; static int bad_file_ioctl (struct inode *inode, struct file *filp,<br /> 	return -EIO;<br /> }<br /> <br />-static long bad_file_unlocked_ioctl(struct file *file, unsigned cmd,<br />+static int bad_file_unlocked_ioctl(struct inode *inode, struct file *file, unsigned cmd,<br /> 			unsigned long arg)<br /> {<br /> 	return -EIO;<br /> }<br /> <br />-static long bad_file_compat_ioctl(struct file *file, unsigned int cmd,<br />+static int bad_file_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 			unsigned long arg)<br /> {<br /> 	return -EIO;<br />diff --git a/fs/block_dev.c b/fs/block_dev.c<br />index aff5421..d1384f0 100644<br />--- a/fs/block_dev.c<br />+++ b/fs/block_dev.c<br />&#64;&#64; -1150,8 +1150,13 &#64;&#64; static int blkdev_close(struct inode * inode, struct file * filp)<br /> 	return blkdev_put(bdev);<br /> }<br /> <br />-static long block_ioctl(struct file *file, unsigned cmd, unsigned long arg)<br />+static int block_ioctl(struct inode *inode, struct file *file, unsigned cmd, unsigned long arg)<br /> {<br />+	/*<br />+	 * NOTE! We ignore the on-disk inode that was passed as<br />+	 * an argument, and use the "f_mapping-&gt;host" inode for<br />+	 * all block ioctls!<br />+	 */<br /> 	return blkdev_ioctl(file-&gt;f_mapping-&gt;host, file, cmd, arg);<br /> }<br /> <br />diff --git a/fs/cifs/cifsfs.h b/fs/cifs/cifsfs.h<br />index 135c965..f46a281 100644<br />--- a/fs/cifs/cifsfs.h<br />+++ b/fs/cifs/cifsfs.h<br />&#64;&#64; -95,7 +95,7 &#64;&#64; extern int 	cifs_setxattr(struct dentry *, const char *, const void *,<br /> 			size_t, int);<br /> extern ssize_t	cifs_getxattr(struct dentry *, const char *, void *, size_t);<br /> extern ssize_t	cifs_listxattr(struct dentry *, char *, size_t);<br />-extern long cifs_ioctl(struct file *filep, unsigned int cmd, unsigned long arg);<br />+extern int cifs_ioctl(struct inode *inode, struct file *filep, unsigned int cmd, unsigned long arg);<br /> <br /> #ifdef CONFIG_CIFS_EXPERIMENTAL<br /> extern const struct export_operations cifs_export_ops;<br />diff --git a/fs/cifs/ioctl.c b/fs/cifs/ioctl.c<br />index 0088a5b..c6b9fa4 100644<br />--- a/fs/cifs/ioctl.c<br />+++ b/fs/cifs/ioctl.c<br />&#64;&#64; -30,9 +30,8 &#64;&#64;<br /> <br /> #define CIFS_IOC_CHECKUMOUNT _IO(0xCF, 2)<br /> <br />-long cifs_ioctl(struct file *filep, unsigned int command, unsigned long arg)<br />+int cifs_ioctl(struct inode *inode, struct file *filep, unsigned int command, unsigned long arg)<br /> {<br />-	struct inode *inode = filep-&gt;f_dentry-&gt;d_inode;<br /> 	int rc = -ENOTTY; /* strange error - but the precedent */<br /> 	int xid;<br /> 	struct cifs_sb_info *cifs_sb;<br />diff --git a/fs/compat_ioctl.c b/fs/compat_ioctl.c<br />index 5235c67..d3a3093 100644<br />--- a/fs/compat_ioctl.c<br />+++ b/fs/compat_ioctl.c<br />&#64;&#64; -2804,7 +2804,8 &#64;&#64; asmlinkage long compat_sys_ioctl(unsigned int fd, unsigned int cmd,<br /> <br /> 	default:<br /> 		if (filp-&gt;f_op &amp;&amp; filp-&gt;f_op-&gt;compat_ioctl) {<br />-			error = filp-&gt;f_op-&gt;compat_ioctl(filp, cmd, arg);<br />+			struct inode *inode = filp-&gt;f_dentry-&gt;d_inode;<br />+			error = filp-&gt;f_op-&gt;compat_ioctl(inode, filp, cmd, arg);<br /> 			if (error != -ENOIOCTLCMD)<br /> 				goto out_fput;<br /> 		}<br />diff --git a/fs/ext2/ext2.h b/fs/ext2/ext2.h<br />index 47d88da..6924f85 100644<br />--- a/fs/ext2/ext2.h<br />+++ b/fs/ext2/ext2.h<br />&#64;&#64; -138,8 +138,8 &#64;&#64; int __ext2_write_begin(struct file *file, struct address_space *mapping,<br /> 		struct page **pagep, void **fsdata);<br /> <br /> /* ioctl.c */<br />-extern long ext2_ioctl(struct file *, unsigned int, unsigned long);<br />-extern long ext2_compat_ioctl(struct file *, unsigned int, unsigned long);<br />+extern int ext2_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br />+extern int ext2_compat_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br /> <br /> /* namei.c */<br /> struct dentry *ext2_get_parent(struct dentry *child);<br />diff --git a/fs/ext2/ioctl.c b/fs/ext2/ioctl.c<br />index de876fa..ba84585 100644<br />--- a/fs/ext2/ioctl.c<br />+++ b/fs/ext2/ioctl.c<br />&#64;&#64; -18,9 +18,8 &#64;&#64;<br /> #include &lt;asm/uaccess.h&gt;<br /> <br /> <br />-long ext2_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int ext2_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = filp-&gt;f_dentry-&gt;d_inode;<br /> 	struct ext2_inode_info *ei = EXT2_I(inode);<br /> 	unsigned int flags;<br /> 	unsigned short rsv_window_size;<br />&#64;&#64; -156,7 +155,7 &#64;&#64; setflags_out:<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-long ext2_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+int ext2_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	/* These are just misnamed, they actually get/put from/to user an int */<br /> 	switch (cmd) {<br />&#64;&#64; -175,6 +174,6 &#64;&#64; long ext2_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br /> 	default:<br /> 		return -ENOIOCTLCMD;<br /> 	}<br />-	return ext2_ioctl(file, cmd, (unsigned long) compat_ptr(arg));<br />+	return ext2_ioctl(inode, file, cmd, (unsigned long) compat_ptr(arg));<br /> }<br /> #endif<br />diff --git a/fs/ext3/ioctl.c b/fs/ext3/ioctl.c<br />index 0d0c701..7cf4617 100644<br />--- a/fs/ext3/ioctl.c<br />+++ b/fs/ext3/ioctl.c<br />&#64;&#64; -294,9 +294,8 &#64;&#64; group_add_out:<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-long ext3_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+int ext3_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = file-&gt;f_path.dentry-&gt;d_inode;<br /> 	int ret;<br /> <br /> 	/* These are just misnamed, they actually get/put from/to user an int */<br />diff --git a/fs/ext4/ext4.h b/fs/ext4/ext4.h<br />index 2950032..4bee000 100644<br />--- a/fs/ext4/ext4.h<br />+++ b/fs/ext4/ext4.h<br />&#64;&#64; -1079,8 +1079,8 &#64;&#64; extern int ext4_block_truncate_page(handle_t *handle,<br /> extern int ext4_page_mkwrite(struct vm_area_struct *vma, struct page *page);<br /> <br /> /* ioctl.c */<br />-extern long ext4_ioctl(struct file *, unsigned int, unsigned long);<br />-extern long ext4_compat_ioctl (struct file *, unsigned int, unsigned long);<br />+extern int ext4_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br />+extern int ext4_compat_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br /> <br /> /* migrate.c */<br /> extern int ext4_ext_migrate(struct inode *, struct file *, unsigned int,<br />diff --git a/fs/ext4/ioctl.c b/fs/ext4/ioctl.c<br />index 7a6c2f1..f72db70 100644<br />--- a/fs/ext4/ioctl.c<br />+++ b/fs/ext4/ioctl.c<br />&#64;&#64; -18,9 +18,8 &#64;&#64;<br /> #include "ext4_jbd2.h"<br /> #include "ext4.h"<br /> <br />-long ext4_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int ext4_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = filp-&gt;f_dentry-&gt;d_inode;<br /> 	struct ext4_inode_info *ei = EXT4_I(inode);<br /> 	unsigned int flags;<br /> 	unsigned short rsv_window_size;<br />&#64;&#64; -275,7 +274,7 &#64;&#64; setversion_out:<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-long ext4_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+int ext4_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	/* These are just misnamed, they actually get/put from/to user an int */<br /> 	switch (cmd) {<br />&#64;&#64; -316,6 +315,6 &#64;&#64; long ext4_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br /> 	default:<br /> 		return -ENOIOCTLCMD;<br /> 	}<br />-	return ext4_ioctl(file, cmd, (unsigned long) compat_ptr(arg));<br />+	return ext4_ioctl(inode, file, cmd, (unsigned long) compat_ptr(arg));<br /> }<br /> #endif<br />diff --git a/fs/fat/dir.c b/fs/fat/dir.c<br />index cd4a016..32c94b1 100644<br />--- a/fs/fat/dir.c<br />+++ b/fs/fat/dir.c<br />&#64;&#64; -796,10 +796,9 &#64;&#64; static int fat_dir_ioctl(struct inode *inode, struct file *filp,<br /> <br /> FAT_IOCTL_FILLDIR_FUNC(fat_compat_ioctl_filldir, compat_dirent)<br /> <br />-static long fat_compat_dir_ioctl(struct file *filp, unsigned cmd,<br />+static int fat_compat_dir_ioctl(struct inode *inode, struct file *filp, unsigned cmd,<br /> 				 unsigned long arg)<br /> {<br />-	struct inode *inode = filp-&gt;f_path.dentry-&gt;d_inode;<br /> 	struct compat_dirent __user *d1 = compat_ptr(arg);<br /> 	int short_only, both;<br /> <br />diff --git a/fs/gfs2/ops_file.c b/fs/gfs2/ops_file.c<br />index e9a366d..b7bf87c 100644<br />--- a/fs/gfs2/ops_file.c<br />+++ b/fs/gfs2/ops_file.c<br />&#64;&#64; -289,7 +289,7 &#64;&#64; static int gfs2_set_flags(struct file *filp, u32 __user *ptr)<br /> 	return do_gfs2_set_flags(filp, gfsflags, ~GFS2_DIF_JDATA);<br /> }<br /> <br />-static long gfs2_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+static int gfs2_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	switch(cmd) {<br /> 	case FS_IOC_GETFLAGS:<br />diff --git a/fs/inotify_user.c b/fs/inotify_user.c<br />index 6024942..9cfde4e 100644<br />--- a/fs/inotify_user.c<br />+++ b/fs/inotify_user.c<br />&#64;&#64; -533,7 +533,7 &#64;&#64; static int inotify_release(struct inode *ignored, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long inotify_ioctl(struct file *file, unsigned int cmd,<br />+static int inotify_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 			  unsigned long arg)<br /> {<br /> 	struct inotify_device *dev;<br />diff --git a/fs/ioctl.c b/fs/ioctl.c<br />index 7db32b3..2adb993 100644<br />--- a/fs/ioctl.c<br />+++ b/fs/ioctl.c<br />&#64;&#64; -31,20 +31,20 &#64;&#64;<br /> static long vfs_ioctl(struct file *filp, unsigned int cmd,<br /> 		      unsigned long arg)<br /> {<br />+	struct inode *inode;<br /> 	int error = -ENOTTY;<br /> <br /> 	if (!filp-&gt;f_op)<br /> 		goto out;<br /> <br />+	inode = filp-&gt;f_path.dentry-&gt;d_inode;<br /> 	if (filp-&gt;f_op-&gt;unlocked_ioctl) {<br />-		error = filp-&gt;f_op-&gt;unlocked_ioctl(filp, cmd, arg);<br />+		error = filp-&gt;f_op-&gt;unlocked_ioctl(inode, filp, cmd, arg);<br /> 		if (error == -ENOIOCTLCMD)<br /> 			error = -EINVAL;<br />-		goto out;<br /> 	} else if (filp-&gt;f_op-&gt;ioctl) {<br /> 		lock_kernel();<br />-		error = filp-&gt;f_op-&gt;ioctl(filp-&gt;f_path.dentry-&gt;d_inode,<br />-					  filp, cmd, arg);<br />+		error = filp-&gt;f_op-&gt;ioctl(inode, filp, cmd, arg);<br /> 		unlock_kernel();<br /> 	}<br /> <br />diff --git a/fs/jffs2/ioctl.c b/fs/jffs2/ioctl.c<br />index 9d41f43..80aa967 100644<br />--- a/fs/jffs2/ioctl.c<br />+++ b/fs/jffs2/ioctl.c<br />&#64;&#64; -12,7 +12,7 &#64;&#64;<br /> #include &lt;linux/fs.h&gt;<br /> #include "nodelist.h"<br /> <br />-long jffs2_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int jffs2_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	/* Later, this will provide for lsattr.jffs2 and chattr.jffs2, which<br /> 	   will include compression support etc. */<br />diff --git a/fs/jffs2/os-linux.h b/fs/jffs2/os-linux.h<br />index 5e194a5..7ef2c62 100644<br />--- a/fs/jffs2/os-linux.h<br />+++ b/fs/jffs2/os-linux.h<br />&#64;&#64; -167,7 +167,7 &#64;&#64; int jffs2_fsync(struct file *, struct dentry *, int);<br /> int jffs2_do_readpage_unlock (struct inode *inode, struct page *pg);<br /> <br /> /* ioctl.c */<br />-long jffs2_ioctl(struct file *, unsigned int, unsigned long);<br />+int jffs2_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br /> <br /> /* symlink.c */<br /> extern const struct inode_operations jffs2_symlink_inode_operations;<br />diff --git a/fs/jfs/ioctl.c b/fs/jfs/ioctl.c<br />index afe222b..0fdf047 100644<br />--- a/fs/jfs/ioctl.c<br />+++ b/fs/jfs/ioctl.c<br />&#64;&#64; -52,9 +52,8 &#64;&#64; static long jfs_map_ext2(unsigned long flags, int from)<br /> }<br /> <br /> <br />-long jfs_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int jfs_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = filp-&gt;f_dentry-&gt;d_inode;<br /> 	struct jfs_inode_info *jfs_inode = JFS_IP(inode);<br /> 	unsigned int flags;<br /> <br />&#64;&#64; -129,7 +128,7 &#64;&#64; setflags_out:<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-long jfs_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int jfs_compat_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br /> 	/* While these ioctl numbers defined with 'long' and have different<br /> 	 * numbers than the 64bit ABI,<br />&#64;&#64; -143,6 +142,6 &#64;&#64; long jfs_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br /> 		cmd = JFS_IOC_SETFLAGS;<br /> 		break;<br /> 	}<br />-	return jfs_ioctl(filp, cmd, arg);<br />+	return jfs_ioctl(inode, filp, cmd, arg);<br /> }<br /> #endif<br />diff --git a/fs/jfs/jfs_inode.h b/fs/jfs/jfs_inode.h<br />index adb2faf..a94ca32 100644<br />--- a/fs/jfs/jfs_inode.h<br />+++ b/fs/jfs/jfs_inode.h<br />&#64;&#64; -22,8 +22,8 &#64;&#64; struct fid;<br /> <br /> extern struct inode *ialloc(struct inode *, umode_t);<br /> extern int jfs_fsync(struct file *, struct dentry *, int);<br />-extern long jfs_ioctl(struct file *, unsigned int, unsigned long);<br />-extern long jfs_compat_ioctl(struct file *, unsigned int, unsigned long);<br />+extern int jfs_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br />+extern int jfs_compat_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br /> extern struct inode *jfs_iget(struct super_block *, unsigned long);<br /> extern int jfs_commit_inode(struct inode *, int);<br /> extern int jfs_write_inode(struct inode*, int);<br />diff --git a/fs/ncpfs/ioctl.c b/fs/ncpfs/ioctl.c<br />index 3a97c95..75c3c29 100644<br />--- a/fs/ncpfs/ioctl.c<br />+++ b/fs/ncpfs/ioctl.c<br />&#64;&#64; -874,9 +874,8 &#64;&#64; int ncp_ioctl(struct inode *inode, struct file *filp,<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-long ncp_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+int ncp_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = file-&gt;f_path.dentry-&gt;d_inode;<br /> 	int ret;<br /> <br /> 	lock_kernel();<br />diff --git a/fs/ocfs2/ioctl.c b/fs/ocfs2/ioctl.c<br />index 7b142f0..bf5c6a2 100644<br />--- a/fs/ocfs2/ioctl.c<br />+++ b/fs/ocfs2/ioctl.c<br />&#64;&#64; -109,9 +109,8 &#64;&#64; bail:<br /> 	return status;<br /> }<br /> <br />-long ocfs2_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+int ocfs2_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = filp-&gt;f_path.dentry-&gt;d_inode;<br /> 	unsigned int flags;<br /> 	int new_clusters;<br /> 	int status;<br />&#64;&#64; -168,7 +167,7 &#64;&#64; long ocfs2_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-long ocfs2_compat_ioctl(struct file *file, unsigned cmd, unsigned long arg)<br />+int ocfs2_compat_ioctl(struct inode *inode, struct file *file, unsigned cmd, unsigned long arg)<br /> {<br /> 	switch (cmd) {<br /> 	case OCFS2_IOC32_GETFLAGS:<br />&#64;&#64; -189,6 +188,6 &#64;&#64; long ocfs2_compat_ioctl(struct file *file, unsigned cmd, unsigned long arg)<br /> 		return -ENOIOCTLCMD;<br /> 	}<br /> <br />-	return ocfs2_ioctl(file, cmd, arg);<br />+	return ocfs2_ioctl(inode, file, cmd, arg);<br /> }<br /> #endif<br />diff --git a/fs/ocfs2/ioctl.h b/fs/ocfs2/ioctl.h<br />index cf9a5ee..0632b05 100644<br />--- a/fs/ocfs2/ioctl.h<br />+++ b/fs/ocfs2/ioctl.h<br />&#64;&#64; -10,7 +10,7 &#64;&#64;<br /> #ifndef OCFS2_IOCTL_H<br /> #define OCFS2_IOCTL_H<br /> <br />-long ocfs2_ioctl(struct file *filp, unsigned int cmd, unsigned long arg);<br />-long ocfs2_compat_ioctl(struct file *file, unsigned cmd, unsigned long arg);<br />+int ocfs2_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg);<br />+int ocfs2_compat_ioctl(struct inode *inode, struct file *file, unsigned cmd, unsigned long arg);<br /> <br /> #endif /* OCFS2_IOCTL_H */<br />diff --git a/fs/pipe.c b/fs/pipe.c<br />index fcba654..8765108 100644<br />--- a/fs/pipe.c<br />+++ b/fs/pipe.c<br />&#64;&#64; -577,9 +577,8 &#64;&#64; bad_pipe_w(struct file *filp, const char __user *buf, size_t count,<br /> 	return -EBADF;<br /> }<br /> <br />-static long pipe_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)<br />+static int pipe_ioctl(struct inode *inode, struct file *filp, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = filp-&gt;f_path.dentry-&gt;d_inode;<br /> 	struct pipe_inode_info *pipe;<br /> 	int count, buf, nrbufs;<br /> <br />diff --git a/fs/proc/inode.c b/fs/proc/inode.c<br />index 8bb03f0..711bb4f 100644<br />--- a/fs/proc/inode.c<br />+++ b/fs/proc/inode.c<br />&#64;&#64; -239,11 +239,11 &#64;&#64; static unsigned int proc_reg_poll(struct file *file, struct poll_table_struct *p<br /> 	return rv;<br /> }<br /> <br />-static long proc_reg_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int proc_reg_unlocked_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct proc_dir_entry *pde = PDE(file-&gt;f_path.dentry-&gt;d_inode);<br /> 	long rv = -ENOTTY;<br />-	long (*unlocked_ioctl)(struct file *, unsigned int, unsigned long);<br />+	int (*unlocked_ioctl)(struct inode *, struct file *, unsigned int, unsigned long);<br /> 	int (*ioctl)(struct inode *, struct file *, unsigned int, unsigned long);<br /> <br /> 	spin_lock(&amp;pde-&gt;pde_unload_lock);<br />&#64;&#64; -257,12 +257,12 &#64;&#64; static long proc_reg_unlocked_ioctl(struct file *file, unsigned int cmd, unsigne<br /> 	spin_unlock(&amp;pde-&gt;pde_unload_lock);<br /> <br /> 	if (unlocked_ioctl) {<br />-		rv = unlocked_ioctl(file, cmd, arg);<br />+		rv = unlocked_ioctl(inode, file, cmd, arg);<br /> 		if (rv == -ENOIOCTLCMD)<br /> 			rv = -EINVAL;<br /> 	} else if (ioctl) {<br /> 		lock_kernel();<br />-		rv = ioctl(file-&gt;f_path.dentry-&gt;d_inode, file, cmd, arg);<br />+		rv = ioctl(inode, file, cmd, arg);<br /> 		unlock_kernel();<br /> 	}<br /> <br />&#64;&#64; -271,11 +271,11 &#64;&#64; static long proc_reg_unlocked_ioctl(struct file *file, unsigned int cmd, unsigne<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long proc_reg_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int proc_reg_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct proc_dir_entry *pde = PDE(file-&gt;f_path.dentry-&gt;d_inode);<br /> 	long rv = -ENOTTY;<br />-	long (*compat_ioctl)(struct file *, unsigned int, unsigned long);<br />+	int (*compat_ioctl)(struct inode *, struct file *, unsigned int, unsigned long);<br /> <br /> 	spin_lock(&amp;pde-&gt;pde_unload_lock);<br /> 	if (!pde-&gt;proc_fops) {<br />&#64;&#64; -287,7 +287,7 &#64;&#64; static long proc_reg_compat_ioctl(struct file *file, unsigned int cmd, unsigned<br /> 	spin_unlock(&amp;pde-&gt;pde_unload_lock);<br /> <br /> 	if (compat_ioctl)<br />-		rv = compat_ioctl(file, cmd, arg);<br />+		rv = compat_ioctl(inode, file, cmd, arg);<br /> <br /> 	pde_users_dec(pde);<br /> 	return rv;<br />diff --git a/fs/reiserfs/ioctl.c b/fs/reiserfs/ioctl.c<br />index 8303320..d85fe0d 100644<br />--- a/fs/reiserfs/ioctl.c<br />+++ b/fs/reiserfs/ioctl.c<br />&#64;&#64; -115,10 +115,9 &#64;&#64; setversion_out:<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-long reiserfs_compat_ioctl(struct file *file, unsigned int cmd,<br />+int reiserfs_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 				unsigned long arg)<br /> {<br />-	struct inode *inode = file-&gt;f_path.dentry-&gt;d_inode;<br /> 	int ret;<br /> <br /> 	/* These are just misnamed, they actually get/put from/to user an int */<br />diff --git a/fs/ubifs/ioctl.c b/fs/ubifs/ioctl.c<br />index 5e82cff..08cf595 100644<br />--- a/fs/ubifs/ioctl.c<br />+++ b/fs/ubifs/ioctl.c<br />&#64;&#64; -145,10 +145,9 &#64;&#64; out_unlock:<br /> 	return err;<br /> }<br /> <br />-long ubifs_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+int ubifs_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	int flags, err;<br />-	struct inode *inode = file-&gt;f_path.dentry-&gt;d_inode;<br /> <br /> 	switch (cmd) {<br /> 	case FS_IOC_GETFLAGS:<br />&#64;&#64; -187,7 +186,7 &#64;&#64; long ubifs_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br /> }<br /> <br /> #ifdef CONFIG_COMPAT<br />-long ubifs_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+int ubifs_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	switch (cmd) {<br /> 	case FS_IOC32_GETFLAGS:<br />&#64;&#64; -199,6 +198,6 &#64;&#64; long ubifs_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br /> 	default:<br /> 		return -ENOIOCTLCMD;<br /> 	}<br />-	return ubifs_ioctl(file, cmd, (unsigned long)compat_ptr(arg));<br />+	return ubifs_ioctl(inode, file, cmd, (unsigned long)compat_ptr(arg));<br /> }<br /> #endif<br />diff --git a/fs/ubifs/ubifs.h b/fs/ubifs/ubifs.h<br />index d7f706f..d82737e 100644<br />--- a/fs/ubifs/ubifs.h<br />+++ b/fs/ubifs/ubifs.h<br />&#64;&#64; -1639,10 +1639,10 &#64;&#64; int ubifs_recover_size(struct ubifs_info *c);<br /> void ubifs_destroy_size_tree(struct ubifs_info *c);<br /> <br /> /* ioctl.c */<br />-long ubifs_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+int ubifs_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> void ubifs_set_inode_flags(struct inode *inode);<br /> #ifdef CONFIG_COMPAT<br />-long ubifs_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+int ubifs_compat_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> #endif<br /> <br /> /* compressor.c */<br />diff --git a/fs/xfs/linux-2.6/xfs_file.c b/fs/xfs/linux-2.6/xfs_file.c<br />index 5311c1a..a4c1d10 100644<br />--- a/fs/xfs/linux-2.6/xfs_file.c<br />+++ b/fs/xfs/linux-2.6/xfs_file.c<br />&#64;&#64; -376,14 +376,14 &#64;&#64; xfs_file_mmap(<br /> 	return 0;<br /> }<br /> <br />-STATIC long<br />+STATIC int<br /> xfs_file_ioctl(<br />+	struct inode	*inode,<br /> 	struct file	*filp,<br /> 	unsigned int	cmd,<br /> 	unsigned long	p)<br /> {<br /> 	int		error;<br />-	struct inode	*inode = filp-&gt;f_path.dentry-&gt;d_inode;<br /> <br /> 	error = xfs_ioctl(XFS_I(inode), filp, 0, cmd, (void __user *)p);<br /> 	xfs_iflags_set(XFS_I(inode), XFS_IMODIFIED);<br />&#64;&#64; -397,14 +397,14 &#64;&#64; xfs_file_ioctl(<br /> 	return error;<br /> }<br /> <br />-STATIC long<br />+STATIC int<br /> xfs_file_ioctl_invis(<br />+	struct inode	*inode,<br /> 	struct file	*filp,<br /> 	unsigned int	cmd,<br /> 	unsigned long	p)<br /> {<br /> 	int		error;<br />-	struct inode	*inode = filp-&gt;f_path.dentry-&gt;d_inode;<br /> <br /> 	error = xfs_ioctl(XFS_I(inode), filp, IO_INVIS, cmd, (void __user *)p);<br /> 	xfs_iflags_set(XFS_I(inode), XFS_IMODIFIED);<br />diff --git a/fs/xfs/linux-2.6/xfs_ioctl32.c b/fs/xfs/linux-2.6/xfs_ioctl32.c<br />index a4b254e..dfe42ab 100644<br />--- a/fs/xfs/linux-2.6/xfs_ioctl32.c<br />+++ b/fs/xfs/linux-2.6/xfs_ioctl32.c<br />&#64;&#64; -469,8 +469,9 &#64;&#64; xfs_compat_ioctl(<br /> 	return error;<br /> }<br /> <br />-long<br />+int<br /> xfs_file_compat_ioctl(<br />+	struct inode		*inode,<br /> 	struct file		*file,<br /> 	unsigned		cmd,<br /> 	unsigned long		arg)<br />&#64;&#64; -478,8 +479,9 &#64;&#64; xfs_file_compat_ioctl(<br /> 	return xfs_compat_ioctl(0, file, cmd, arg);<br /> }<br /> <br />-long<br />+int<br /> xfs_file_compat_invis_ioctl(<br />+	struct inode		*inode,<br /> 	struct file		*file,<br /> 	unsigned		cmd,<br /> 	unsigned long		arg)<br />diff --git a/fs/xfs/linux-2.6/xfs_ioctl32.h b/fs/xfs/linux-2.6/xfs_ioctl32.h<br />index 02de6e6..7e64783 100644<br />--- a/fs/xfs/linux-2.6/xfs_ioctl32.h<br />+++ b/fs/xfs/linux-2.6/xfs_ioctl32.h<br />&#64;&#64; -18,7 +18,7 &#64;&#64;<br /> #ifndef __XFS_IOCTL32_H__<br /> #define __XFS_IOCTL32_H__<br /> <br />-extern long xfs_file_compat_ioctl(struct file *, unsigned, unsigned long);<br />-extern long xfs_file_compat_invis_ioctl(struct file *, unsigned, unsigned long);<br />+extern int xfs_file_compat_ioctl(struct inode *inode, struct file *, unsigned, unsigned long);<br />+extern int xfs_file_compat_invis_ioctl(struct inode *inode, struct file *, unsigned, unsigned long);<br /> <br /> #endif /* __XFS_IOCTL32_H__ */<br />diff --git a/include/linux/ext3_fs.h b/include/linux/ext3_fs.h<br />index 80171ee..c30e0ab 100644<br />--- a/include/linux/ext3_fs.h<br />+++ b/include/linux/ext3_fs.h<br />&#64;&#64; -841,7 +841,7 &#64;&#64; extern void ext3_set_aops(struct inode *inode);<br /> /* ioctl.c */<br /> extern int ext3_ioctl (struct inode *, struct file *, unsigned int,<br /> 		       unsigned long);<br />-extern long ext3_compat_ioctl (struct file *, unsigned int, unsigned long);<br />+extern int ext3_compat_ioctl (struct inode *, struct file *, unsigned int, unsigned long);<br /> <br /> /* namei.c */<br /> extern int ext3_orphan_add(handle_t *, struct inode *);<br />diff --git a/include/linux/fs.h b/include/linux/fs.h<br />index 580b513..9bcfbcd 100644<br />--- a/include/linux/fs.h<br />+++ b/include/linux/fs.h<br />&#64;&#64; -1211,8 +1211,8 &#64;&#64; struct block_device_operations {<br /> 	int (*open) (struct inode *, struct file *);<br /> 	int (*release) (struct inode *, struct file *);<br /> 	int (*ioctl) (struct inode *, struct file *, unsigned, unsigned long);<br />-	long (*unlocked_ioctl) (struct file *, unsigned, unsigned long);<br />-	long (*compat_ioctl) (struct file *, unsigned, unsigned long);<br />+	int (*unlocked_ioctl) (struct inode *, struct file *, unsigned, unsigned long);<br />+	int (*compat_ioctl) (struct inode *, struct file *, unsigned, unsigned long);<br /> 	int (*direct_access) (struct block_device *, sector_t,<br /> 						void **, unsigned long *);<br /> 	int (*media_changed) (struct gendisk *);<br />&#64;&#64; -1242,8 +1242,8 &#64;&#64; struct file_operations {<br /> 	int (*readdir) (struct file *, void *, filldir_t);<br /> 	unsigned int (*poll) (struct file *, struct poll_table_struct *);<br /> 	int (*ioctl) (struct inode *, struct file *, unsigned int, unsigned long);<br />-	long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);<br />-	long (*compat_ioctl) (struct file *, unsigned int, unsigned long);<br />+	int (*unlocked_ioctl) (struct inode *, struct file *, unsigned int, unsigned long);<br />+	int (*compat_ioctl) (struct inode *,struct file *, unsigned int, unsigned long);<br /> 	int (*mmap) (struct file *, struct vm_area_struct *);<br /> 	int (*open) (struct inode *, struct file *);<br /> 	int (*flush) (struct file *, fl_owner_t id);<br />&#64;&#64; -1656,7 +1656,7 &#64;&#64; extern int blkdev_ioctl(struct inode *, struct file *, unsigned, unsigned long);<br /> extern int blkdev_driver_ioctl(struct inode *inode, struct file *file,<br /> 			       struct gendisk *disk, unsigned cmd,<br /> 			       unsigned long arg);<br />-extern long compat_blkdev_ioctl(struct file *, unsigned, unsigned long);<br />+extern int compat_blkdev_ioctl(struct inode *inode, struct file *, unsigned, unsigned long);<br /> extern int blkdev_get(struct block_device *, mode_t, unsigned);<br /> extern int blkdev_put(struct block_device *);<br /> extern int bd_claim(struct block_device *, void *);<br />diff --git a/include/linux/ncp_fs.h b/include/linux/ncp_fs.h<br />index 9f2d763..af7d026 100644<br />--- a/include/linux/ncp_fs.h<br />+++ b/include/linux/ncp_fs.h<br />&#64;&#64; -211,7 +211,7 &#64;&#64; void ncp_date_unix2dos(int unix_date, __le16 * time, __le16 * date);<br /> <br /> /* linux/fs/ncpfs/ioctl.c */<br /> int ncp_ioctl(struct inode *, struct file *, unsigned int, unsigned long);<br />-long ncp_compat_ioctl(struct file *, unsigned int, unsigned long);<br />+int ncp_compat_ioctl(struct inode *inode, struct file *, unsigned int, unsigned long);<br /> <br /> /* linux/fs/ncpfs/sock.c */<br /> int ncp_request2(struct ncp_server *server, int function,<br />diff --git a/include/linux/reiserfs_fs.h b/include/linux/reiserfs_fs.h<br />index e9963af..3422037 100644<br />--- a/include/linux/reiserfs_fs.h<br />+++ b/include/linux/reiserfs_fs.h<br />&#64;&#64; -2174,7 +2174,7 &#64;&#64; __u32 r5_hash(const signed char *msg, int len);<br /> /* prototypes from ioctl.c */<br /> int reiserfs_ioctl(struct inode *inode, struct file *filp,<br /> 		   unsigned int cmd, unsigned long arg);<br />-long reiserfs_compat_ioctl(struct file *filp,<br />+int reiserfs_compat_ioctl(struct inode *inode, struct file *filp,<br /> 		   unsigned int cmd, unsigned long arg);<br /> int reiserfs_unpack(struct inode *inode, struct file *filp);<br /> <br />diff --git a/include/linux/tty.h b/include/linux/tty.h<br />index 0cbec74..bdb65a2 100644<br />--- a/include/linux/tty.h<br />+++ b/include/linux/tty.h<br />&#64;&#64; -365,7 +365,7 &#64;&#64; extern const struct file_operations tty_ldiscs_proc_fops;<br /> extern void tty_wakeup(struct tty_struct *tty);<br /> extern void tty_ldisc_flush(struct tty_struct *tty);<br /> <br />-extern long tty_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+extern int tty_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> extern int tty_mode_ioctl(struct tty_struct *tty, struct file *file,<br /> 			unsigned int cmd, unsigned long arg);<br /> extern int tty_perform_flush(struct tty_struct *tty, unsigned long arg);<br />diff --git a/include/linux/wanrouter.h b/include/linux/wanrouter.h<br />index e0aa396..82d2547 100644<br />--- a/include/linux/wanrouter.h<br />+++ b/include/linux/wanrouter.h<br />&#64;&#64; -522,7 +522,7 &#64;&#64; extern int wanrouter_proc_init(void);<br /> extern void wanrouter_proc_cleanup(void);<br /> extern int wanrouter_proc_add(struct wan_device *wandev);<br /> extern int wanrouter_proc_delete(struct wan_device *wandev);<br />-extern long wanrouter_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+extern int wanrouter_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> <br /> /* Public Data */<br /> /* list of registered devices */<br />diff --git a/include/media/v4l2-ioctl.h b/include/media/v4l2-ioctl.h<br />index dc64046..9ab9474 100644<br />--- a/include/media/v4l2-ioctl.h<br />+++ b/include/media/v4l2-ioctl.h<br />&#64;&#64; -286,7 +286,7 &#64;&#64; int v4l_compat_translate_ioctl(struct inode *inode, struct file *file,<br /> #endif<br /> <br /> /* 32 Bits compatibility layer for 64 bits processors */<br />-extern long v4l_compat_ioctl32(struct file *file, unsigned int cmd,<br />+extern int v4l_compat_ioctl32(struct inode *inode, struct file *file, unsigned int cmd,<br /> 				unsigned long arg);<br /> <br /> extern int video_ioctl2(struct inode *inode, struct file *file,<br />diff --git a/kernel/power/user.c b/kernel/power/user.c<br />index a6332a3..6f8b19d 100644<br />--- a/kernel/power/user.c<br />+++ b/kernel/power/user.c<br />&#64;&#64; -187,7 +187,7 &#64;&#64; static ssize_t snapshot_write(struct file *filp, const char __user *buf,<br /> 	return res;<br /> }<br /> <br />-static long snapshot_ioctl(struct file *filp, unsigned int cmd,<br />+static int snapshot_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,<br /> 							unsigned long arg)<br /> {<br /> 	int error = 0;<br />diff --git a/net/irda/irnet/irnet_ppp.c b/net/irda/irnet/irnet_ppp.c<br />index 6d8ae03..ae45f37 100644<br />--- a/net/irda/irnet/irnet_ppp.c<br />+++ b/net/irda/irnet/irnet_ppp.c<br />&#64;&#64; -631,8 +631,9 &#64;&#64; dev_irnet_poll(struct file *	file,<br />  * This is the way pppd configure us and control us while the PPP<br />  * instance is active.<br />  */<br />-static long<br />+static int<br /> dev_irnet_ioctl(<br />+		struct inode *	inode,<br /> 		struct file *	file,<br /> 		unsigned int	cmd,<br /> 		unsigned long	arg)<br />diff --git a/net/irda/irnet/irnet_ppp.h b/net/irda/irnet/irnet_ppp.h<br />index d9f8bd4..44bd8ec 100644<br />--- a/net/irda/irnet/irnet_ppp.h<br />+++ b/net/irda/irnet/irnet_ppp.h<br />&#64;&#64; -76,8 +76,9 &#64;&#64; static ssize_t<br /> static unsigned int<br /> 	dev_irnet_poll(struct file *,<br /> 		       poll_table *);<br />-static long<br />-	dev_irnet_ioctl(struct file *,<br />+static int<br />+	dev_irnet_ioctl(struct inode *,<br />+			struct file *,<br /> 			unsigned int,<br /> 			unsigned long);<br /> /* ------------------------ PPP INTERFACE ------------------------ */<br />diff --git a/net/socket.c b/net/socket.c<br />index 8ef8ba8..5d6824b 100644<br />--- a/net/socket.c<br />+++ b/net/socket.c<br />&#64;&#64; -107,9 +107,9 &#64;&#64; static int sock_mmap(struct file *file, struct vm_area_struct *vma);<br /> static int sock_close(struct inode *inode, struct file *file);<br /> static unsigned int sock_poll(struct file *file,<br /> 			      struct poll_table_struct *wait);<br />-static long sock_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+static int sock_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> #ifdef CONFIG_COMPAT<br />-static long compat_sock_ioctl(struct file *file,<br />+static int compat_sock_ioctl(struct inode *inode, struct file *file,<br /> 			      unsigned int cmd, unsigned long arg);<br /> #endif<br /> static int sock_fasync(int fd, struct file *filp, int on);<br />&#64;&#64; -850,7 +850,7 &#64;&#64; EXPORT_SYMBOL(dlci_ioctl_set);<br />  *	what to do with it - that's up to the protocol still.<br />  */<br /> <br />-static long sock_ioctl(struct file *file, unsigned cmd, unsigned long arg)<br />+static int sock_ioctl(struct inode *inode, struct file *file, unsigned cmd, unsigned long arg)<br /> {<br /> 	struct socket *sock;<br /> 	struct sock *sk;<br />&#64;&#64; -2316,7 +2316,7 &#64;&#64; void socket_seq_show(struct seq_file *seq)<br /> #endif				/* CONFIG_PROC_FS */<br /> <br /> #ifdef CONFIG_COMPAT<br />-static long compat_sock_ioctl(struct file *file, unsigned cmd,<br />+static int compat_sock_ioctl(struct inode *inode, struct file *file, unsigned cmd,<br /> 			      unsigned long arg)<br /> {<br /> 	struct socket *sock = file-&gt;private_data;<br />diff --git a/net/wanrouter/wanmain.c b/net/wanrouter/wanmain.c<br />index 7f07152..2974428 100644<br />--- a/net/wanrouter/wanmain.c<br />+++ b/net/wanrouter/wanmain.c<br />&#64;&#64; -349,9 +349,8 &#64;&#64; __be16 wanrouter_type_trans(struct sk_buff *skb, struct net_device *dev)<br />  *	o execute requested action or pass command to the device driver<br />  */<br /> <br />-long wanrouter_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+int wanrouter_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br />-	struct inode *inode = file-&gt;f_path.dentry-&gt;d_inode;<br /> 	int err = 0;<br /> 	struct proc_dir_entry *dent;<br /> 	struct wan_device *wandev;<br />diff --git a/sound/core/control.c b/sound/core/control.c<br />index 281b2e2..f10a3f0 100644<br />--- a/sound/core/control.c<br />+++ b/sound/core/control.c<br />&#64;&#64; -1149,7 +1149,7 &#64;&#64; static int snd_ctl_tlv_ioctl(struct snd_ctl_file *file,<br /> 	return err;<br /> }<br /> <br />-static long snd_ctl_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int snd_ctl_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct snd_ctl_file *ctl;<br /> 	struct snd_card *card;<br />diff --git a/sound/core/control_compat.c b/sound/core/control_compat.c<br />index 6101259..0af5c5b 100644<br />--- a/sound/core/control_compat.c<br />+++ b/sound/core/control_compat.c<br />&#64;&#64; -390,7 +390,7 &#64;&#64; enum {<br /> 	SNDRV_CTL_IOCTL_ELEM_REPLACE32 = _IOWR('U', 0x18, struct snd_ctl_elem_info32),<br /> };<br /> <br />-static inline long snd_ctl_ioctl_compat(struct file *file, unsigned int cmd, unsigned long arg)<br />+static inline int snd_ctl_ioctl_compat(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct snd_ctl_file *ctl;<br /> 	struct snd_kctl_ioctl *p;<br />&#64;&#64; -412,7 +412,7 &#64;&#64; static inline long snd_ctl_ioctl_compat(struct file *file, unsigned int cmd, uns<br /> 	case SNDRV_CTL_IOCTL_TLV_READ:<br /> 	case SNDRV_CTL_IOCTL_TLV_WRITE:<br /> 	case SNDRV_CTL_IOCTL_TLV_COMMAND:<br />-		return snd_ctl_ioctl(file, cmd, (unsigned long)argp);<br />+		return snd_ctl_ioctl(inode, file, cmd, (unsigned long)argp);<br /> 	case SNDRV_CTL_IOCTL_ELEM_LIST32:<br /> 		return snd_ctl_elem_list_compat(ctl-&gt;card, argp);<br /> 	case SNDRV_CTL_IOCTL_ELEM_INFO32:<br />diff --git a/sound/core/hwdep.c b/sound/core/hwdep.c<br />index 6d6589f..7518eaa 100644<br />--- a/sound/core/hwdep.c<br />+++ b/sound/core/hwdep.c<br />&#64;&#64; -231,7 +231,7 &#64;&#64; static int snd_hwdep_dsp_load(struct snd_hwdep *hw,<br /> 	return 0;<br /> }<br /> <br />-static long snd_hwdep_ioctl(struct file * file, unsigned int cmd,<br />+static int snd_hwdep_ioctl(struct inode *inode, struct file * file, unsigned int cmd,<br /> 			    unsigned long arg)<br /> {<br /> 	struct snd_hwdep *hw = file-&gt;private_data;<br />diff --git a/sound/core/hwdep_compat.c b/sound/core/hwdep_compat.c<br />index 3827c0c..3c7cc2a 100644<br />--- a/sound/core/hwdep_compat.c<br />+++ b/sound/core/hwdep_compat.c<br />&#64;&#64; -59,7 +59,7 &#64;&#64; enum {<br /> 	SNDRV_HWDEP_IOCTL_DSP_LOAD32   = _IOW('H', 0x03, struct snd_hwdep_dsp_image32)<br /> };<br /> <br />-static long snd_hwdep_ioctl_compat(struct file * file, unsigned int cmd,<br />+static int snd_hwdep_ioctl_compat(struct inode *inode, struct file * file, unsigned int cmd,<br /> 				   unsigned long arg)<br /> {<br /> 	struct snd_hwdep *hw = file-&gt;private_data;<br />&#64;&#64; -68,7 +68,7 &#64;&#64; static long snd_hwdep_ioctl_compat(struct file * file, unsigned int cmd,<br /> 	case SNDRV_HWDEP_IOCTL_PVERSION:<br /> 	case SNDRV_HWDEP_IOCTL_INFO:<br /> 	case SNDRV_HWDEP_IOCTL_DSP_STATUS:<br />-		return snd_hwdep_ioctl(file, cmd, (unsigned long)argp);<br />+		return snd_hwdep_ioctl(inode, file, cmd, (unsigned long)argp);<br /> 	case SNDRV_HWDEP_IOCTL_DSP_LOAD32:<br /> 		return snd_hwdep_dsp_load_compat(hw, argp);<br /> 	}<br />diff --git a/sound/core/info.c b/sound/core/info.c<br />index c67773a..5f8e1e9 100644<br />--- a/sound/core/info.c<br />+++ b/sound/core/info.c<br />&#64;&#64; -465,7 +465,7 &#64;&#64; static unsigned int snd_info_entry_poll(struct file *file, poll_table * wait)<br /> 	return mask;<br /> }<br /> <br />-static long snd_info_entry_ioctl(struct file *file, unsigned int cmd,<br />+static int snd_info_entry_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 				unsigned long arg)<br /> {<br /> 	struct snd_info_private_data *data;<br />diff --git a/sound/core/init.c b/sound/core/init.c<br />index df46bbc..82323a2 100644<br />--- a/sound/core/init.c<br />+++ b/sound/core/init.c<br />&#64;&#64; -275,7 +275,7 &#64;&#64; static unsigned int snd_disconnect_poll(struct file * file, poll_table * wait)<br /> 	return POLLERR | POLLNVAL;<br /> }<br /> <br />-static long snd_disconnect_ioctl(struct file *file,<br />+static int snd_disconnect_ioctl(struct inode *inode, struct file *file,<br /> 				 unsigned int cmd, unsigned long arg)<br /> {<br /> 	return -ENODEV;<br />diff --git a/sound/core/oss/mixer_oss.c b/sound/core/oss/mixer_oss.c<br />index 581aa2c..273f177 100644<br />--- a/sound/core/oss/mixer_oss.c<br />+++ b/sound/core/oss/mixer_oss.c<br />&#64;&#64; -359,7 +359,7 &#64;&#64; static int snd_mixer_oss_ioctl1(struct snd_mixer_oss_file *fmixer, unsigned int<br /> 	return -ENXIO;<br /> }<br /> <br />-static long snd_mixer_oss_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int snd_mixer_oss_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	return snd_mixer_oss_ioctl1((struct snd_mixer_oss_file *) file-&gt;private_data, cmd, arg);<br /> }<br />diff --git a/sound/core/oss/pcm_oss.c b/sound/core/oss/pcm_oss.c<br />index 4c601b1..229513c 100644<br />--- a/sound/core/oss/pcm_oss.c<br />+++ b/sound/core/oss/pcm_oss.c<br />&#64;&#64; -2428,7 +2428,7 &#64;&#64; static int snd_pcm_oss_release(struct inode *inode, struct file *file)<br /> 	return 0;<br /> }<br /> <br />-static long snd_pcm_oss_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int snd_pcm_oss_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct snd_pcm_oss_file *pcm_oss_file;<br /> 	int __user *p = (int __user *)arg;<br />diff --git a/sound/core/pcm_compat.c b/sound/core/pcm_compat.c<br />index 49aa693..f480fda 100644<br />--- a/sound/core/pcm_compat.c<br />+++ b/sound/core/pcm_compat.c<br />&#64;&#64; -460,7 +460,7 &#64;&#64; enum {<br /> <br /> };<br /> <br />-static long snd_pcm_ioctl_compat(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int snd_pcm_ioctl_compat(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct snd_pcm_file *pcm_file;<br /> 	struct snd_pcm_substream *substream;<br />diff --git a/sound/core/pcm_native.c b/sound/core/pcm_native.c<br />index c49b9d9..4c703aa 100644<br />--- a/sound/core/pcm_native.c<br />+++ b/sound/core/pcm_native.c<br />&#64;&#64; -2726,7 +2726,7 &#64;&#64; static int snd_pcm_capture_ioctl1(struct file *file,<br /> 	return snd_pcm_common_ioctl1(file, substream, cmd, arg);<br /> }<br /> <br />-static long snd_pcm_playback_ioctl(struct file *file, unsigned int cmd,<br />+static int snd_pcm_playback_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 				   unsigned long arg)<br /> {<br /> 	struct snd_pcm_file *pcm_file;<br />&#64;&#64; -2740,7 +2740,7 &#64;&#64; static long snd_pcm_playback_ioctl(struct file *file, unsigned int cmd,<br /> 				       (void __user *)arg);<br /> }<br /> <br />-static long snd_pcm_capture_ioctl(struct file *file, unsigned int cmd,<br />+static int snd_pcm_capture_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 				  unsigned long arg)<br /> {<br /> 	struct snd_pcm_file *pcm_file;<br />diff --git a/sound/core/rawmidi.c b/sound/core/rawmidi.c<br />index f7ea728..8c103ca 100644<br />--- a/sound/core/rawmidi.c<br />+++ b/sound/core/rawmidi.c<br />&#64;&#64; -687,7 +687,7 &#64;&#64; static int snd_rawmidi_input_status(struct snd_rawmidi_substream *substream,<br /> 	return 0;<br /> }<br /> <br />-static long snd_rawmidi_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int snd_rawmidi_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct snd_rawmidi_file *rfile;<br /> 	void __user *argp = (void __user *)arg;<br />diff --git a/sound/core/rawmidi_compat.c b/sound/core/rawmidi_compat.c<br />index 5268c1f..2764275 100644<br />--- a/sound/core/rawmidi_compat.c<br />+++ b/sound/core/rawmidi_compat.c<br />&#64;&#64; -99,7 +99,7 &#64;&#64; enum {<br /> 	SNDRV_RAWMIDI_IOCTL_STATUS32 = _IOWR('W', 0x20, struct snd_rawmidi_status32),<br /> };<br /> <br />-static long snd_rawmidi_ioctl_compat(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int snd_rawmidi_ioctl_compat(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct snd_rawmidi_file *rfile;<br /> 	void __user *argp = compat_ptr(arg);<br />&#64;&#64; -110,7 +110,7 &#64;&#64; static long snd_rawmidi_ioctl_compat(struct file *file, unsigned int cmd, unsign<br /> 	case SNDRV_RAWMIDI_IOCTL_INFO:<br /> 	case SNDRV_RAWMIDI_IOCTL_DROP:<br /> 	case SNDRV_RAWMIDI_IOCTL_DRAIN:<br />-		return snd_rawmidi_ioctl(file, cmd, (unsigned long)argp);<br />+		return snd_rawmidi_ioctl(inode, file, cmd, (unsigned long)argp);<br /> 	case SNDRV_RAWMIDI_IOCTL_PARAMS32:<br /> 		return snd_rawmidi_ioctl_params_compat(rfile, argp);<br /> 	case SNDRV_RAWMIDI_IOCTL_STATUS32:<br />diff --git a/sound/core/seq/oss/seq_oss.c b/sound/core/seq/oss/seq_oss.c<br />index 777796e..b1fd18e 100644<br />--- a/sound/core/seq/oss/seq_oss.c<br />+++ b/sound/core/seq/oss/seq_oss.c<br />&#64;&#64; -63,7 +63,7 &#64;&#64; static int odev_open(struct inode *inode, struct file *file);<br /> static int odev_release(struct inode *inode, struct file *file);<br /> static ssize_t odev_read(struct file *file, char __user *buf, size_t count, loff_t *offset);<br /> static ssize_t odev_write(struct file *file, const char __user *buf, size_t count, loff_t *offset);<br />-static long odev_ioctl(struct file *file, unsigned int cmd, unsigned long arg);<br />+static int odev_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg);<br /> static unsigned int odev_poll(struct file *file, poll_table * wait);<br /> <br /> <br />&#64;&#64; -178,8 +178,8 &#64;&#64; odev_write(struct file *file, const char __user *buf, size_t count, loff_t *offs<br /> 	return snd_seq_oss_write(dp, buf, count, file);<br /> }<br /> <br />-static long<br />-odev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int<br />+odev_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct seq_oss_devinfo *dp;<br /> 	dp = file-&gt;private_data;<br />diff --git a/sound/core/seq/seq_clientmgr.c b/sound/core/seq/seq_clientmgr.c<br />index 7a1545d..d9ebb9d 100644<br />--- a/sound/core/seq/seq_clientmgr.c<br />+++ b/sound/core/seq/seq_clientmgr.c<br />&#64;&#64; -2191,7 +2191,7 &#64;&#64; static int snd_seq_do_ioctl(struct snd_seq_client *client, unsigned int cmd,<br /> }<br /> <br /> <br />-static long snd_seq_ioctl(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int snd_seq_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct snd_seq_client *client = file-&gt;private_data;<br /> <br />diff --git a/sound/core/seq/seq_compat.c b/sound/core/seq/seq_compat.c<br />index 9628c06..f1a7060 100644<br />--- a/sound/core/seq/seq_compat.c<br />+++ b/sound/core/seq/seq_compat.c<br />&#64;&#64; -87,7 +87,7 &#64;&#64; enum {<br /> 	SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT32 = _IOWR('S', 0x52, struct snd_seq_port_info32),<br /> };<br /> <br />-static long snd_seq_ioctl_compat(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int snd_seq_ioctl_compat(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	struct snd_seq_client *client = file-&gt;private_data;<br /> 	void __user *argp = compat_ptr(arg);<br />diff --git a/sound/core/timer.c b/sound/core/timer.c<br />index 0af337e..f505d69 100644<br />--- a/sound/core/timer.c<br />+++ b/sound/core/timer.c<br />&#64;&#64; -1756,7 +1756,7 &#64;&#64; enum {<br /> 	SNDRV_TIMER_IOCTL_PAUSE_OLD = _IO('T', 0x23),<br /> };<br /> <br />-static long snd_timer_user_ioctl(struct file *file, unsigned int cmd,<br />+static int snd_timer_user_ioctl(struct inode *inode, struct file *file, unsigned int cmd,<br /> 				 unsigned long arg)<br /> {<br /> 	struct snd_timer_user *tu;<br />diff --git a/sound/core/timer_compat.c b/sound/core/timer_compat.c<br />index 5512f53..2dc4785 100644<br />--- a/sound/core/timer_compat.c<br />+++ b/sound/core/timer_compat.c<br />&#64;&#64; -93,7 +93,7 &#64;&#64; enum {<br /> 	SNDRV_TIMER_IOCTL_STATUS32 = _IOW('T', 0x14, struct snd_timer_status32),<br /> };<br /> <br />-static long snd_timer_user_ioctl_compat(struct file *file, unsigned int cmd, unsigned long arg)<br />+static int snd_timer_user_ioctl_compat(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)<br /> {<br /> 	void __user *argp = compat_ptr(arg);<br /> <br />&#64;&#64; -114,7 +114,7 &#64;&#64; static long snd_timer_user_ioctl_compat(struct file *file, unsigned int cmd, uns<br /> 	case SNDRV_TIMER_IOCTL_PAUSE:<br /> 	case SNDRV_TIMER_IOCTL_PAUSE_OLD:<br /> 	case SNDRV_TIMER_IOCTL_NEXT_DEVICE:<br />-		return snd_timer_user_ioctl(file, cmd, (unsigned long)argp);<br />+		return snd_timer_user_ioctl(inode, file, cmd, (unsigned long)argp);<br /> 	case SNDRV_TIMER_IOCTL_INFO32:<br /> 		return snd_timer_user_info_compat(file, argp);<br /> 	case SNDRV_TIMER_IOCTL_STATUS32:<br />diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c<br />index 7dd9b0b..51368d7 100644<br />--- a/virt/kvm/kvm_main.c<br />+++ b/virt/kvm/kvm_main.c<br />&#64;&#64; -66,7 +66,7 &#64;&#64; static __read_mostly struct preempt_ops kvm_preempt_ops;<br /> <br /> struct dentry *kvm_debugfs_dir;<br /> <br />-static long kvm_vcpu_ioctl(struct file *file, unsigned int ioctl,<br />+static int kvm_vcpu_ioctl(struct inode *inode, struct file *file, unsigned int ioctl,<br /> 			   unsigned long arg);<br /> <br /> bool kvm_rebooting;<br />&#64;&#64; -1112,7 +1112,7 &#64;&#64; static int kvm_vcpu_ioctl_set_sigmask(struct kvm_vcpu *vcpu, sigset_t *sigset)<br /> 	return 0;<br /> }<br /> <br />-static long kvm_vcpu_ioctl(struct file *filp,<br />+static int kvm_vcpu_ioctl(struct inode *inode, struct file *filp,<br /> 			   unsigned int ioctl, unsigned long arg)<br /> {<br /> 	struct kvm_vcpu *vcpu = filp-&gt;private_data;<br />&#64;&#64; -1295,7 +1295,7 &#64;&#64; out:<br /> 	return r;<br /> }<br /> <br />-static long kvm_vm_ioctl(struct file *filp,<br />+static int kvm_vm_ioctl(struct inode *inode, struct file *filp,<br /> 			   unsigned int ioctl, unsigned long arg)<br /> {<br /> 	struct kvm *kvm = filp-&gt;private_data;<br />&#64;&#64; -1415,7 +1415,7 &#64;&#64; static int kvm_dev_ioctl_create_vm(void)<br /> 	return fd;<br /> }<br /> <br />-static long kvm_dev_ioctl(struct file *filp,<br />+static int kvm_dev_ioctl(struct inode *inode, struct file *filp,<br /> 			  unsigned int ioctl, unsigned long arg)<br /> {<br /> 	long r = -EINVAL;<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
