    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/8/27/544">First message in thread</a></li><li><a href="/lkml/2008/8/27/544">Yinghai Lu</a><ul><li><a href="/lkml/2008/8/28/47">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2008/8/28/302">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/28/302">Ingo Molnar</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 28 Aug 2008 10:20:12 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] resource/x86: add sticky resource type</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 28 Aug 2008, Ingo Molnar wrote:<br />&gt;<br />&gt; Does anyone have any suggestions of how to improve this some more? (or <br />&gt; do it differently)<br /><br />As far as I can see, THIS IS TOTALLY BROKEN.<br /><br />There's a reason why we add the broken resources LATE. There's a reason we <br />_have_ to add them late.<br /><br />Trying to come up with these braindamaged schemes to avoid doing it right <br />is wrong. Don't do it.<br /><br />The reason? Those bogus resources that the BIOS reports are simply NOT <br />TRUSTWORTHY. They may actually be in all the wrong places, including <br />covering a resource half-way, or crossing two real resources.<br /><br />Yes, it's rare. But it happens. Which is why we should not do these broken <br />things that _incorrectly_ assume that the BIOS resources will only ever be <br />totally contained within a BAR, or will totally contain one. Think about <br />the partial overlap case.<br /><br />Guys, until you learn that the BIOS resources are _crap_ and at most <br />random guesses, you shouldn't touch this code! And it has nothing to do <br />with writing "clean" code, or making things "simple", because quite <br />frankly, things simply ARE NOT simple!<br /><br />The fact is, the only reliable way to handle these things has _always_ <br />been to ask the hardware first. Add the broken resources from ACPI and <br />other BIOS tables _later_. If they conflict, it is the ACPI/BIOS tables <br />that should be removed.<br /><br />Why do I have to tell this to people over and over again?<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
