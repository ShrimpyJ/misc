    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/8/28/285">First message in thread</a></li><li><a href="/lkml/2008/8/28/285">Yinghai Lu</a><ul><li class="origin"><a href="/lkml/2008/8/28/303">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/28/303">"Yinghai Lu"</a></li><li><a href="/lkml/2008/8/28/311">"H. Peter Anvin"</a><ul><li><a href="/lkml/2008/8/28/315">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/28/317">"H. Peter Anvin"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 28 Aug 2008 13:05:13 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86: split e820 reserved entries record to late</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 28 Aug 2008, Yinghai Lu wrote:<br />&gt;<br />&gt; so could let BAR res register at first, or even pnp?<br /><br />Well, I'm not sure whether PnP or e820 should be first, as long as any <br />"real hardware" probing takes precedence over either. I _suspect_ that <br />e820 is more trustworthy, which implies that PnP should probably be added <br />last. It would be good to have some idea what Windows does, since usually <br />all the firmware bugs are essentially hidden by whatever that other OS <br />happens to do.<br /><br />The basic rule really should be: "What do we trust most?" and probe things <br />in that order. <br /><br />So e820 is fairly trustworthy, but we know that it will have various <br />random things marked as reserved because they are special in some way (but <br />we don't know _how_ they are special - they may well be real BAR's that <br />just have a fixed meaning to ACPI or whatever).<br /><br />But we obviously trust _part_ of it (the RAM stuff) more than we trust <br />other parts. So it does make sense to consider that separately.<br /><br />PnP I personally wouldn't trust at all, except as a way to keep dynamic <br />resources away from those things, which is why I'd put it last. But that's <br />just my personal gut feeling.<br /><br />Hardware we generally trust more than any firmware, but even hardware can <br />have bugs. And some classes of hardware tends to be less buggy than others <br />(ie I'd trust some on-die APIC base pointer before I would trust a Cardbus <br />controller BAR, for example).<br /><br />But yes, I think your patch looks like it is definitely moving in the <br />right direction. If this means that we can now do PCI probing without <br />having the BAR's move around because they also happened to be covered by <br />an e820 map, then that sounds like a good thing.<br /><br />Of course, I bet there will be cases where this causes problems. It feels <br />like we have _never_ worked around some PCI BAR allocation problem without <br />hitting another unexpected one..<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
