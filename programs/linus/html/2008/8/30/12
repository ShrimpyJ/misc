    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2008/8/28/371">First message in thread</a></li><li><a href="/lkml/2008/8/29/464">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/30/3">"Yinghai Lu"</a><ul><li><a href="/lkml/2008/8/30/4">"Yinghai Lu"</a></li><li class="origin"><a href="/lkml/2008/8/30/16">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/30/16">Linus Torvalds</a><ul><li><a href="/lkml/2008/8/30/28">"Yinghai Lu"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2008/8/30/5">"Yinghai Lu"</a><ul><li><a href="/lkml/2008/8/30/14">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 29 Aug 2008 22:52:40 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 2.6.27-rc5: System boot regression caused by commit a2bd7274b47124d2fc4dfdb8c0591f545ba749dd</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 29 Aug 2008, Yinghai Lu wrote:<br />&gt; <br />&gt; if we don't add the IORESOURCE_BUSY, why bother to add these entries...<br /><br />You don't understand how the resource allocator works.<br /><br />IORESOURCE_BUSY is really more of a "legacy bit". It has almost no bearing <br />on the actual allocations.<br /><br />Just grep for IORSOURCE_BUSY in kernel/resource.c. The _only_ thing that <br />cares about busy/non-busy is the legact "request_region()" function. That <br />one isn't actually used by any core PCI code - it's more of a driver <br />issue to claim exclusive ownership of particular resources by inserting a <br />marker in that resource.<br /><br />So IORESOURCE_BUSY is a red herring. The only reason I said you can clear <br />it is because you claimed it causes problems, but the more I look at it, <br />the more I think you're likely just mistaken - because IORESOURCE_BUSY <br />doesn't make any difference at all to normal resource handling until you <br />get to actual drivers.<br /><br />The bigger issue is that just inserting the resource (and it really <br />doesn't matter if it is marked busy or not) is in itself a mark of <br />"there's something here". THAT is what all the resource code cares about. <br />The IORESOURCE_BUSY bit is almost immaterial (ie _is_ immaterial except <br />for some very specific cases).<br /><br />And the reason we need to add the e820 resources is exactly so that we <br />don't try to allocate PCI resources on top of some system resources we <br />don't even know about!<br /><br />&gt; good layout from BIOS, it should only reserve mmio range is not showing in BAR.<br /><br />I agree, but "good layour" and "BIOS" don't really go together. There's <br />too many broken BIOSes.<br /><br />&gt; if one stupid BIOS set<br />&gt; 0xdc000000 - 0x100000000 for reserved.<br />&gt; <br />&gt; then when in insert that range late<br /><br />Sure, but really, the only point of even caring about e820 resources in <br />the first place has really nothing to do with the BAR's we can see <br />(because the kernel can handle _those_ perfectly well on its own), and has <br />everything to do with teh fact that a lot of devices have invisible <br />resources that we _cannot_ see (ie magic non-standard BAR's for the <br />motherboard chips).<br /><br />And those are exactly why we want to populate the resource map with the <br />e820 information - to avoid having dynamic resources (like Cardbus or PCI <br />hotplug, or just devices that weren't set up statically by the BIOS) be <br />then allocated by the kernel on top of those "invisible" resources.<br /><br />And the dynamic code actually doesn't care about IORESOURCE_BUSY at all: <br />it will avoid _any_ resource it can see. Think about it: it has to - since <br />existing PCI resources we have set up will _not_ have that IORESOURCE_BUSY <br />set.<br /><br />In many ways, IORESOURCE_BUSY is pure legacy stuff, and is meant for "this <br />is a black hole and you must not look into it at all". It originates with <br />a need to originally having to lock drivers away from other drives by <br />marking their resources busy - in an ISA world, where there are no other <br />ways of saying "I own this device".<br /><br />(Yeah, yeah, PCI drivers do the same thing too - they mark their BAR's by <br />inserting a per-driver entry in the BAR to say 'I own this resource').<br /><br />But this is where adding the e820 resources _after_ doing PCI discovery <br />comes in. We don't want to clash with PCI discovery per se - we just want <br />to make sure that later allocations don't allocate over anything that we <br />either saw earlier (the BAR's we found set up in regular PCI discovery) <br />_or_ anything that the system has said is reserved (e820 reserved <br />entries).<br /><br />Doing it before obviously works too - in fact, it has worked for us for <br />years. But it does mean that we consider the e820 reserved areas _so_ <br />reserved that we don't allow PCI BAR's in them. Which is apparently a <br />mistake.<br /><br />We want to consider them so reserved that we don't add _new_ PCI resources <br />to them (and perhaps we might even want to stop regular PCI drivers from <br />attaching to them), but not so exclusive that we don't allow BARs that <br />have been set up by the BIOS in them.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
