    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/8/26/118">First message in thread</a></li><li><a href="/lkml/1998/8/27/11">Linus Torvalds</a><ul><li><a href="/lkml/1998/8/27/14">(Alan Cox)</a><ul><li class="origin"><a href="/lkml/1998/8/27/54">Linus Torvalds</a><ul><li><a href="/lkml/1998/8/27/54">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 26 Aug 1998 14:48:39 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 2.1.118 SMP problem</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 26 Aug 1998, Alan Cox wrote:<br />&gt; <br />&gt; Yes I've just worked it all through and realised that. It does indeed come<br />&gt; out in the wash for UDP<br /><br />The lock_sock() this is more broken than I realized - it should actually<br />work fine, but for all the wrong reasons. I think I remember why it was<br />that way, and it's not doing a "synchronize_bh()" like I thought it was<br />simply because that particular work-around was done before there _was_<br />anything like a synchronize_bh().<br /><br />What lock_sock() should really do is<br /><br />	atomic_inc(&amp;sk-&gt;sock_readers);<br />	synchronize_bh();<br /><br />instead of getting the main interrupt lock. The end result is the same,<br />but at least this way it's clearer what it tries to do (and I can remove<br />the "You don't want to know" comment ;) <br /><br />Anyway, UDP seems to do this all correctly, putting the UDP packet on the<br />backlog if the socket was locked. So I don't think there should be any<br />problems with packet delivery, and the lock_sock() thing is more an issue<br />of performance and clarity than any outright bugs as far as I can tell. <br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
