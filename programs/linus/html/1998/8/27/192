    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/8/26/118">First message in thread</a></li><li><a href="/lkml/1998/8/27/44">Linus Torvalds</a><ul><li><a href="/lkml/1998/8/27/140">Finn Arne Gangstad</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 27 Aug 1998 11:37:09 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 2.1.118 SMP problem</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 27 Aug 1998, Finn Arne Gangstad wrote:<br />&gt; <br />&gt; I don't see how this could the "right thing"? del_timer only removes the<br />&gt; timer from the timer list that run_timer_list traverses to run timer<br />&gt; handlers, and there shouldn't be any races in the two functions.<br /><br />It isn't. I've looked at it a lot more, and the synchronize_bh() thing was<br />definitely a mistake. <br /><br />The reason for synchronize_bh() existing is that while del_timer() is safe<br />in itself, the problem is that there are callers that expect that once<br />del_timer() has been called it can no longer be running. Without the<br />synchronize_bh() that is certainly not true, because the timer might be<br />running on another CPU as we tried to delete it. <br /><br />However, it turns out that the synchronization has to be done at a higher<br />level anyway (and in most cases I've looked at it _is_ done at a higher<br />level already, the other cases I've seen were unaffected by a timer being<br />run concurrently). So removing it is correct.<br /><br />&gt; I tried to make add_timer/del_timer/mod_timer callable from any context,<br />&gt; including the timer handler for the timer itself. Wouldn't del_timer<br />&gt; deadlock if it was called from a timer handler with the synchronize_bh in?<br />&gt; (I may have misread the synchronize_bh function).<br /><br />No, synchronize_bh() will make sure that it doesn't deadlock on itself.<br /><br />However, it _can_ certainly deadlock if there are other locks involved,<br />and that, I suspect, is the reason for this one. There are entities<br />holding various spinlocks while calling del_timer(), and they really don't<br />want to synchronize with bh's.<br /><br />In short, it's been removed since yesterday in my tree, and I've also been<br />able to come up with reasons why it reall yhas to be removed. It had a<br />good reason for being there, but certainly not nearly good enough.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
