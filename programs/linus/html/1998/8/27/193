    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/8/27/173">First message in thread</a></li><li><a href="/lkml/1998/8/27/173">"Stephen C. Tweedie"</a><ul><li class="origin"><a href="/lkml/1998/8/28/20">Linus Torvalds</a><ul><li><a href="/lkml/1998/8/28/20">"Stephen C. Tweedie"</a></li><li><a href="/lkml/1998/8/28/99">"Stephen C. Tweedie"</a><ul><li><a href="/lkml/1998/8/28/170">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 27 Aug 1998 11:40:43 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: PATCH: Fix nbd on 2.1.118 SMP kernels</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 27 Aug 1998, Stephen C. Tweedie wrote:<br />&gt; <br />&gt; The fix is to replace some of the spin_lock_irq/spin_unlock_irq pairs<br />&gt; with irqsave/irqrestore versions, and to forcibly drop the io request<br />&gt; spinlock inside do_nbd_request before calling out to the network.<br /><br />It's otherwise ok, but this part is certainly buggy:<br /><br />&gt; &#64;&#64; -296,7 +303,12 &#64;&#64;<br />&gt;  #endif<br />&gt;  		req-&gt;errors = 0;<br />&gt; <br />&gt; +		spin_unlock_irq(&amp;io_request_lock);<br />&gt;  		nbd_send_req(lo-&gt;sock, req);	/* Why does this block?         */<br />&gt; +		spin_lock_irq(&amp;io_request_lock);<br />&gt; +		<br />&gt; +		if (CURRENT != req) <br />&gt; +			FAIL("CURRENT was modified");<br />&gt;  		CURRENT = CURRENT-&gt;next;<br />&gt;  		req-&gt;next = NULL;<br />&gt;  		if (lo-&gt;head == NULL) {<br /><br />If you drop the io-request lock, and then not expect CURRENT to change,<br />you're just fooling yourself. That's like saying "oh, btw, I now let<br />people change the CURRENT queue, but by God if anybody actually does so<br />I'll panic". That's just too stupid for me to accept as a patch. <br /><br />As far as I can tell, the code will unlink the request immediately<br />afterwards anyway, so the fix is to just unlink it _before_ dropping the<br />IO request lock, so that we don't have to worry about the request lists<br />any more. <br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
