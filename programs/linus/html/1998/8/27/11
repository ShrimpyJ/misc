    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/8/26/118">First message in thread</a></li><li><a href="/lkml/1998/8/26/118">Steffen Luitz</a><ul><li><a href="/lkml/1998/8/27/8">(Alan Cox)</a><ul><li class="origin"><a href="/lkml/1998/8/27/14">Linus Torvalds</a><ul><li><a href="/lkml/1998/8/27/14">(Alan Cox)</a><ul><li><a href="/lkml/1998/8/27/36">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/1998/8/27/44">Linus Torvalds</a><ul><li><a href="/lkml/1998/8/27/140">Finn Arne Gangstad</a><ul><li><a href="/lkml/1998/8/27/192">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1998/8/27/13">(Alan Cox)</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 26 Aug 1998 14:35:27 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 2.1.118 SMP problem</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 26 Aug 1998, Alan Cox wrote:<br />&gt; <br />&gt; I can see this deadlock for 2 or more CPUs in the sunrpc code<br />&gt; <br />&gt; Its <br />&gt; <br />&gt; CPU #0<br />&gt; 	nfs-&gt;sunrpc-&gt;udp_sendmsg-&gt;lock_sock-&gt;copying<br />&gt;    irq,bh<br />&gt; 	net_bh-&gt;udp_recv-&gt;rpc callback-&gt;sk_recv_datagram-lock_sock =&gt; Deadlock<br /><br />If the socket is locked, then it shouldn't call udp_recv, but put the new<br />datagram on the backlog instead.<br /><br />&gt; Im not sure why it should occur SMP only or if its the one you see, but that<br />&gt; does look like a deadlock to me. The lock_sock code also claims its <br />&gt; 'a very broken bottom half synchronization mechanism' which worries me<br />&gt; even more.<br /><br />The lock_sock() code works, it's just fairly inefficient on SMP (it's<br />really effcient on UP). The main cause of inefficiency is that the "socket<br />locked" case really has to wait for all bh's right now, simply because it<br />doesn't know which bh (and when) is being in the critical region. So it<br />does a "bh_synchronize()" even though that is potentially _way_ too much<br />synchronization (it may end up waiting for a timer bh to run, even though<br />the timer bh doesn't actually touch the socket at all). <br /><br />So it's really a granularity issue rather than a correctness issue.<br /><br />IF the NFS queueing really has the deadlock you point out, it should<br />certainly be a deadlock on UP too. It may be that it only shows up on SMP<br />for some magic timing reason rather than anything else.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
