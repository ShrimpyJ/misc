    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/8/6/96">First message in thread</a></li><li><a href="/lkml/1998/8/10/188">Ion Badulescu</a><ul><li><a href="/lkml/1998/8/11/17">George</a></li><li><a href="/lkml/1998/8/21/141">Ion Badulescu</a><ul><li><a href="/lkml/1998/8/21/146">(Alan Cox)</a><ul><li><a href="/lkml/1998/8/22/23">Ion Badulescu</a></li></ul></li><li class="origin"><a href="/lkml/1998/8/22/14">Linus Torvalds</a><ul><li><a href="/lkml/1998/8/22/14">Meelis Roos</a></li><li><a href="/lkml/1998/8/22/22">Ion Badulescu</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/1998/8/21/157/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 21 Aug 1998 18:55:17 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: problem with 114 sched.* changes (not the gcc one)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 21 Aug 1998, Ion Badulescu wrote:<br />&gt; <br />&gt; 1. if an rpciod is already running at the time amd is started (i.e. after<br />&gt; doing a remote-server nfs mount by hand), amd will _not_ hang, in fact it<br />&gt; will run quite happily.<br />&gt; <br />&gt; 2. with the restoral of wchan in 2.1.117 I was able to trace the hang a<br />&gt; little further. The mount hangs in rpciod_up (net/sunrpc/sched.c) in<br />&gt; sleep_on(&amp;rpciod_idle) whereas the rpciod itself is sleeping in<br />&gt; interruptible_sleep_on(&amp;rpciod_idle).<br />&gt; <br />&gt; My humble oppinion is that, with the scheduling change in 2.1.114, rpciod<br />&gt; will start running _before_ rpciod_up calls sleep_on() and therefore the<br />&gt; wake_up() call at the beginning of rpciod becomes ineffective because<br />&gt; nothing is sleeping on rpciod_idle yet. This is pure speculation, but it<br />&gt; kind of makes sense. I'm not sure what the right fix is though...<br /><br />This makes 100% sense, and explains why it was so timing-dependent and<br />dependent on a scheduler change that should have made no difference at<br />all. <br /><br />How does this patch work for you?<br /><br />		Linus<br /><br />-----<br />--- v2.1.117/linux/net/sunrpc/sched.c	Thu Aug 20 17:05:19 1998<br />+++ linux/net/sunrpc/sched.c	Fri Aug 21 18:52:18 1998<br />&#64;&#64; -770,6 +763,8 &#64;&#64;<br /> 	rpc_inhibit--;<br /> }<br /> <br />+static struct semaphore rpciod_running = MUTEX_LOCKED;<br />+<br /> /*<br />  * This is the rpciod kernel thread<br />  */<br />&#64;&#64; -786,11 +781,16 &#64;&#64;<br /> 	 * Let our maker know we're running ...<br /> 	 */<br /> 	rpciod_pid = current-&gt;pid;<br />-	wake_up(&amp;rpciod_idle);<br />+	up(&amp;rpciod_running);<br /> <br /> 	exit_files(current);<br /> 	exit_mm(current);<br />+<br />+	spin_lock_irq(&amp;current-&gt;sigmask_lock);<br /> 	siginitsetinv(&amp;current-&gt;blocked, sigmask(SIGKILL));<br />+	recalc_sigpending(current);<br />+	spin_unlock_irq(&amp;current-&gt;sigmask_lock);<br />+<br /> 	current-&gt;session = 1;<br /> 	current-&gt;pgrp = 1;<br /> 	sprintf(current-&gt;comm, "rpciod");<br />&#64;&#64; -887,7 +882,7 &#64;&#64;<br /> 		printk("rpciod_up: create thread failed, error=%d\n", error);<br /> 		goto out;<br /> 	}<br />-	sleep_on(&amp;rpciod_idle);<br />+	down(&amp;rpciod_running);<br /> 	error = 0;<br /> out:<br /> 	up(&amp;rpciod_sema);<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
