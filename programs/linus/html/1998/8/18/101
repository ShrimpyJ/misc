    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/8/14/66">First message in thread</a></li><li><a href="/lkml/1998/8/14/75">Nomad the Wanderer</a><ul><li><a href="/lkml/1998/8/14/79">David Lang</a><ul><li><a href="/lkml/1998/8/14/78">Nomad the Wanderer</a></li><li><a href="/lkml/1998/8/14/86">Andre Goncalves Zelenkovas</a><ul><li><a href="/lkml/1998/8/17/94">Andrea Arcangeli</a></li></ul></li><li><a href="/lkml/1998/8/16/145">david</a></li></ul></li><li><a href="/lkml/1998/8/16/74">(Alan Cox)</a><ul><li><a href="/lkml/1998/8/16/83">(Linus Torvalds)</a><ul><li><a href="/lkml/1998/8/16/93">"David S. Miller"</a><ul><li><a href="/lkml/1998/8/16/168">"Michael O'Reilly"</a></li><li><a href="/lkml/1998/8/18/114">"Stephen R. van den Berg"</a></li></ul></li><li><a href="/lkml/1998/8/16/105"> &lt;linker&#64;z ...</a></li><li><a href="/lkml/1998/8/16/157">Dax Kelson</a><ul><li><a href="/lkml/1998/8/17/21">Dancer</a></li></ul></li><li><a href="/lkml/1998/8/17/2">"James H. Cloos Jr."</a></li></ul></li><li class="origin"><a href="/lkml/1998/8/18/126">(Linus Torvalds)</a><ul><li><a href="/lkml/1998/8/18/126">(Matthias Urlichs)</a><ul><li><a href="/lkml/1998/8/18/130">(Linus Torvalds)</a></li><li><a href="/lkml/1998/8/18/137">"Richard B. Johnson"</a></li><li><a href="/lkml/1998/8/18/138">Andi Kleen</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Notebooks</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">18 Aug 1998 21:38:07 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;m0z88bh-000aNFC&#64;the-village.bc.nu&gt;,<br />Alan Cox &lt;alan&#64;lxorguk.ukuu.org.uk&gt; wrote:<br />&gt;&gt; We really gotta stop calling them "unstable" as they're not.  They're<br />&gt;&gt; developemental.  Miy firewall's running 2.1.10X and it's been up amost<br />&gt;&gt; 2 months I think.  My desktop is 2.1.115 and the only reason I rebootyed<br />&gt;&gt; it was to install that instead of 2.1.110...<br />&gt;<br />&gt;Squid on 2.1.115 (with or without ac1) lasts 60 seconds on my soak test<br />&gt;before it explodes. Ditto a lot of other high load tests that touch I/O<br />&gt;or VM hard. (Note Im guessing where it dies here). Some of 2.1.x is rock<br />&gt;solid, and some bits of it are solid in non extreme use, but 2.1.x is<br />&gt;not remotely stable for real world hard use yet. Its getting there bit<br />&gt;by bit<br /><br />Ok, I found this.<br /><br />Once more, it was the slab stuff that broke badly.  I'm going to<br />consider just throwing out the slabs for v2.2 unless somebody is willing<br />to stand up and fix it - the multi-page allocation stuff just breaks too<br />horribly. <br /><br />In this case, TCP wanted to allocate a single skb, and due to slabs this<br />got turned into a multi-page request even though it fit perfectly fine<br />into one page.  Thus a critical allocation could fail, and the TCP layer<br />started looping - and kswapd could never even try to fix it up because<br />the TCP code held the kernel lock. <br /><br />I'm going to fix this particular case even with slabs, but this isn't<br />the first time the slabs "optimizations" have just broken code that used<br />to work fine by making it a high-order allocation.  Essentially, the<br />slabsified kmalloc() is just a lot more fragile than the original<br />kmalloc() was. <br /><br />(This also shows a particularly nasty inefficiency - the TCP code<br />explicitly tries to have a "good" MTU for loopback, and it's meant to<br />fit in a single page.  The slab code makes it fail miserably in that<br />objective). <br /><br />All sane architectures are moving to at least 2-way caches and the good<br />ones are 4-way or more. As such, slabs optimizes for the wrong case.<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
