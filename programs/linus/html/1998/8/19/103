    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/8/14/66">First message in thread</a></li><li><a href="/lkml/1998/8/18/130">(Linus Torvalds)</a><ul><li><a href="/lkml/1998/8/19/84">"David S. Miller"</a><ul><li class="origin"><a href="/lkml/1998/8/19/120">Linus Torvalds</a><ul><li><a href="/lkml/1998/8/19/120">(Alan Cox)</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 19 Aug 1998 09:51:49 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Notebooks</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 19 Aug 1998, David S. Miller wrote:<br />&gt; <br />&gt;    That doesn't mean that I like the slab code.  I've never been very<br />&gt;    thrilled about how is blithely assumes that it's ok to just allocate<br />&gt;    higher orders of pages, and this just made it even more clear that that<br />&gt;    was not a good design choice in the slab code.<br />&gt; <br />&gt; Task struct/kstack allocations make the same blithful assumption, what<br />&gt; is the difference?<br /><br />David, maybe the difference is that when the stack allocation fails, it<br />doesn't lock up the whole machine in a endless loop? Think about it for a<br />moment.<br /><br />And yes, it wasn't "slab" that locked the machine. But it was certainly<br />slab that made it almost impossible to see from the sources that it was<br />going to do a multi-page-order allocation and that it was a lot more<br />dangerous than it used to be in 2.0.x.. <br /><br />That code _worked_ in 2.0.x. Not because the 2.0.x memory management was<br />any better than the current one, like some people have tried to maintain. <br />But because of the current slab code. <br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
