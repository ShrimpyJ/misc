    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/12/11/133">First message in thread</a></li><li><a href="/lkml/1998/12/13/52">MOLNAR Ingo</a><ul><li><a href="/lkml/1998/12/14/132">"Stephen C. Tweedie"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 15 Dec 1998 20:17:03 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: PATCH: Raw device IO for 2.1.131</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 14 Dec 1998, Stephen C. Tweedie wrote:<br />&gt; <br />&gt; The advantage of a read/write() O_DIRECT API is that it works<br />&gt; immediately, even if we go through the page cache (assuming only that we<br />&gt; can write through the page cache, and that is really not hard to do).<br /><br />The disadvantage I see, though, is fairly basic:<br /> - it's generic as hell<br /><br />Generic code is good. However, if we're talking performance (and we are),<br />then generic _interfaces_ are bad. They are also bad if we're talking<br />about maintaining them forever, because the very concept of "generic"<br />means that it works on everything. Which means that whenever somebody does<br />something new, it has to support the generic interface.<br /><br />The issue of shared pages has already been discussed. It comes up every<br />time anybody looks into using page mapping or other "direct" access to the<br />data as opposed to just copying it into a private buffer. The other issue<br />that tends to come up (depending on what people want to do) is alignment.<br /><br />This is kind of the same issue as "splice()", which Larry McVoy brings up<br />every once in a while, for good reason. "splice()" is this generic IO<br />thing, and it's cool. It's just that when I actually thought about how to<br />implement it well and efficiently, my head started hurting, and my private<br />areas started to itch (*). <br /><br />As opposed to something very _specific_ like sendfile() which took me half<br />a day to write and basically just worked. <br /><br />So basically, unless you can show that you _need_ the generality, I'd much<br />much more prefer to have a more limited and specific interface. The<br />advantage is that a limited interface can always be implemented on top of<br />the generic one if it later turns out to be necessary - while the reverse<br />is not true.<br /><br />		Linus<br /><br />(*) The latter could be unrelated. But I'm blaming Larry.<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
