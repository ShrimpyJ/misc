    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/12/12/207">First message in thread</a></li><li><a href="/lkml/1998/12/12/207">(Larry McVoy)</a><ul><li class="origin"><a href="/lkml/1998/12/13/15">Linus Torvalds</a><ul><li><a href="/lkml/1998/12/13/15">(Alan Cox)</a><ul><li><a href="/lkml/1998/12/13/36">"David S. Miller"</a><ul><li><a href="/lkml/1998/12/13/47">MOLNAR Ingo</a></li><li><a href="/lkml/1998/12/16/9">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1998/12/13/59">Richard Gooch</a><ul><li><a href="/lkml/1998/12/13/102">Raul Miller</a></li><li><a href="/lkml/1998/12/13/105">(Alan Cox)</a></li><li><a href="/lkml/1998/12/16/3">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1998/12/14/127">Stephen Williams</a></li><li><a href="/lkml/1998/12/15/213">Linus Torvalds</a><ul><li><a href="/lkml/1998/12/16/11">(Alan Cox)</a></li><li><a href="/lkml/1998/12/18/38">Glendon Gross</a></li></ul></li></ul></li><li><a href="/lkml/1998/12/13/91">Gerard Roudier</a><ul><li><a href="/lkml/1998/12/13/104">Jan-Simon Pendry</a><ul><li><a href="/lkml/1998/12/13/135">Gerard Roudier</a></li></ul></li></ul></li><li><a href="/lkml/1998/12/13/96">Jes Sorensen</a></li><li><a href="/lkml/1998/12/13/150">"Stephen C. Tweedie"</a></li><li><a href="/lkml/1998/12/13/162"> &lt;pmonta&#64;halibut ...</a><ul><li><a href="/lkml/1998/12/13/169">Richard Gooch</a><ul><li><a href="/lkml/1998/12/13/183"> &lt;pmonta&#64;halibut ...</a></li><li><a href="/lkml/1998/12/14/14">Jes Sorensen</a></li></ul></li></ul></li><li><a href="/lkml/1998/12/15/43">Harald Milz</a><ul><li><a href="/lkml/1998/12/15/150">Matthew Brown</a><ul><li><a href="/lkml/1998/12/15/182">Harald Milz</a></li><li><a href="/lkml/1998/12/16/165">(Matthias Urlichs)</a></li></ul></li><li><a href="/lkml/1998/12/16/37">Martin Tessun</a><ul><li><a href="/lkml/1998/12/16/175">"James H. Cloos Jr."</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1998/12/13/32">Matthew Jacob</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 12 Dec 1998 14:09:48 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: PATCH: Raw device IO for 2.1.131</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 12 Dec 1998, Larry McVoy wrote:<br />&gt; <br />&gt; So, Linus, I know you haven't been thrilled about "raw I/O" and that you<br />&gt; have some very valid reasons for not wanting it in the kernel.  Does the <br />&gt; patch for raw device I/O come anywhere near being good enough that you <br />&gt; are OK with it?  If not, can you suggest what it would need to look like?<br /><br />I have almost no reason to be thrilled about the patches. Two reasons:<br /> - raw device access is not interesting. It's not performance-critical,<br />   and I think it's stupid to think that it is. In particular, I will<br />   completely ignore anything that does any silly page locking tricks to<br />   send data from user space. Not worth optimizing.<br /> - sendfile() is a completely different issue. Being able to send or<br />   receive directly into the page cache makes sense, and allows (with<br />   mmap) to have user level access to the data too - without any locking<br />   issues or any ugliness at all. All real IO is done in kernel space, the<br />   user just gets a window into it.. Very simple.<br /><br />Quite frankly, nobody has EVER given me a reason that makes any kind of<br />sense at all for supporting raw devices in any other way than we already<br />do. Nobody sane uses a disk without a filesystem, and the insane people<br />that do I feel we can and should ignore. Insanity has a way of dying off<br />over time, when Darvin starts to look into it. <br /><br />I _would_ support the notion of being able to say "push this out now" and<br />"don't leave this lying around in your cache" kind of raw device<br />semantics. However, anybody that brings in performance into the picture I<br />will simply ignore because I don't think raw disk access has anything at<br />all to do with performance.<br /><br />I think a lot of people are deluding themselves by running benchmarks on a<br />raw device, without ever asking themselves whether it makes any sense at<br />all what-so-ever. In my mind, if you can't do it to a file, it's not worth<br />doing at all.<br /><br />I've also become almost completely uninterested in zero-copy schemes. They<br />make for great benchmarks, but have little relevance to anything else. You<br />have two cases:<br /> - sendfile() like copying things around. We want to do zero-copy here,<br />   but it's easy because everything is already in kernel space.<br /> - real work. If zero-copy makes a real difference, you'd better buy a new<br />   computer, because your memory subsystem is too slow. Either you're IO<br />   bound or you aren't, and if you're IO bound and your memory is slower<br />   than your IO then it's not something the OS should do all that much<br />   about. And if you aren't IO-bound, then the whole discussion is moot.<br /><br />Yes, there are still machines with bad memory subsystems compared to their<br />IO systems, but Linus "the Oracle" Torvalds is convinced that they are a<br />short-lived oddity in the industry and shouldn't be designed for, the same<br />way you shouldn't design for direct-mapped caches or for machines without<br />paging hardware.<br /><br />So I want to be able to do things like frame capture (into a _file_, not a<br />partition) etc, and there I think something like sendfile() is the answer<br />(well, "copyfd()", whatever). And there I also think that we currently<br />would do fairly badly on the write-out part due to the known problems with<br />buffer cache behaviour under certain circumstances. But basically I still<br />see absolutely no reason for supporting raw devices per se. <br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
