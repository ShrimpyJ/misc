    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/12/23/118">First message in thread</a></li><li><a href="/lkml/1998/12/23/118">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/1998/12/23/125">Linus Torvalds</a><ul><li><a href="/lkml/1998/12/23/125">Andrea Arcangeli</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Dec 1998 11:35:41 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: if my new update_shared_mappings() races, vmtruncate is just racing , too</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 23 Dec 1998, Andrea Arcangeli wrote:<br />?<br />&gt; It seems to me that vmtruncate is playing with the pte/pgd of other<br />&gt; processes without hoding any mmap_semaphore.<br />&gt; <br />&gt; I guess the reason this is safe is that lock_kernel protect us from<br />&gt; another CPU that would play with pte/pgd at the same time.<br /><br />Yes.<br /><br />I tried to make us able to play with the page table entries without<br />holding the kernel lock, but it wasn't possible to do for 2.2.<br />Conceptually the mm semaphore _should_ serialize all accesses to the page<br />table, but making the page-out logic get the mm semaphore is just too<br />hard: I couldn't do it without some really obvious deadlock issues, and I<br />suspect it needs some serious designing to get right. <br /><br />As a result, the rule really is: it's ok to _remove_ a page table entry<br />without holding the mm lock, but you have to hold the kernel lock to do<br />so. It's not a good rule, but it at least doesn't deadlock.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
