    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/12/19/6">First message in thread</a></li><li><a href="/lkml/1998/12/27/60">Andrea Arcangeli</a><ul><li><a href="/lkml/1998/12/27/72">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/1998/12/27/93">Linus Torvalds</a><ul><li><a href="/lkml/1998/12/27/93">Andrea Arcangeli</a><ul><li><a href="/lkml/1998/12/28/2">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 27 Dec 1998 14:37:51 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] disable_bh/enable_bh race fix [Re: Program to freeze keyboard in 2.1.131]</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 27 Dec 1998, Andrea Arcangeli wrote:<br />&gt; <br />&gt; The synchronize_bh doesn't synchronize if it's run from an irq handler so<br />&gt; we could consider the irq case a special not bh_atomic_safe case? Or<br />&gt; should we go always safe using a spinlock and do many __cli()? <br /><br />You missed the basic problem:<br /><br />	CPU#1			CPU#2<br /><br />	start_bh_atomic()	start_bh_atomic()<br />	access bh count		access bh count<br />	end_bh_atomic()		end_bh_atomic()<br /><br />You can have both processes do the access in parallel with your patch #2.<br /><br />Your first patch was ok - even if they do the bh disable in parallel, at<br />least the bh count is sane because it's updated with an atomic read. The<br />bh masks are another problem, and that should be considered a separate<br />problem. <br /><br />Your second patch is bad: it only fixes the specific race in the console<br />driver, where the other CPU is in a bh context. If the other CPU is _not_<br />in a bh context, then "start_bh_atomic()" doesn't do anything at all for<br />you. <br /><br />A "start_bh_atomic()" does NOT imply any actual critical region locking. <br />It only means that a bottom half will not run (as the name implies). Two<br />CPU's can be in different bh-atomic regions at the same time, it _only_<br />protects against other software interrupt handlers running concurrently.<br /><br />			Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
