    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/9/13/19">First message in thread</a></li><li><a href="/lkml/1998/9/20/16">Donald Becker</a><ul><li><a href="/lkml/1998/9/20/39">Gerard Roudier</a><ul><li><a href="/lkml/1998/9/20/82">Donald Becker</a><ul><li><a href="/lkml/1998/9/20/117">Gerard Roudier</a></li><li><a href="/lkml/1998/9/20/151">Doug Ledford</a><ul><li><a href="/lkml/1998/9/20/160">Gerard Roudier</a></li><li><a href="/lkml/1998/9/20/178">Richard Gooch</a></li><li><a href="/lkml/1998/9/20/180">Andrea Arcangeli</a></li><li><a href="/lkml/1998/9/21/9">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1998/9/20/46">Gerard Roudier</a><ul><li><a href="/lkml/1998/9/20/77">Donald Becker</a><ul><li><a href="/lkml/1998/9/20/98">Gerard Roudier</a><ul><li><a href="/lkml/1998/9/20/162">Matthias Welwarsky</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/1998/9/20/126">Linus Torvalds</a><ul><li><a href="/lkml/1998/9/20/126">Gerard Roudier</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 20 Sep 1998 10:17:33 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Today Linus redesigns the networking driver interface (was Re: tulip driver in ...)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 20 Sep 1998, Gerard Roudier wrote:<br />&gt; <br />&gt; On architectures where consistency is maintained between Hardware<br />&gt; Interrupt Levels and CPU Execution Levels with regards to interruptible<br />&gt; code, you can design kernel data structures so that the actual execution<br />&gt; Level ensures integrity without additionnal synchronisation.  When the<br />&gt; hardware does not implement such a mechanism or when SMP is not consistent<br />&gt; with it, you may want to implement it from software, but even, in the case<br />&gt; it is feasible, such an approach can only be bad for latency and<br />&gt; performances. <br /><br />This is completely and utterly untrue in SMP environments.<br /><br />In SMP, there is only _one_ primitive that makes sense, and trust me,<br />SPL-levels aren't even close. The one primitive that makes sense is<br />spinlocks with a local disable function (ie disable either interrupts<br />locally or disable bottom half handling or similar on that one CPU). <br /><br />Really. The notion of blocking an interrupt (or a group of them) is just<br />very fundamentally and inherently broken as a synchronization primitive. <br /><br />And this is true even when the hardware _does_ support SPL-like things. <br />For example, it's very obvious that intel designed the IO-APIC as being a<br />"global SPL" thing. It's also very obvious that it's completely<br />irrelevant, and that they shouldn't even have tried: even if you block<br />interrupts you have to then synchronize with the other CPU's to make sure<br />there aren't any already executing interrupt threads. <br /><br />In essense, even with spl-levels you still end up having to do the<br />synchronization anyway. As such, you're _much_ better off just forgetting<br />about spl, and do the synchronization right from the start. <br /><br />			Linus<br /><br />[ And yes, I'm aware that we don't reasonably scale to tons of CPU's right<br />  now. My point is that I want to head off any stupidity wrt interrupt<br />  handling long before somebody gets too attached to it. Just say NO to<br />  anything but spinlocks when it comes to device driver interactions. ]<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
