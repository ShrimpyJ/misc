    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/9/13/19">First message in thread</a></li><li><a href="/lkml/1998/9/19/80">Linus Torvalds</a><ul><li><a href="/lkml/1998/9/19/87">(Alan Cox)</a><ul><li class="origin"><a href="/lkml/1998/9/19/95">Linus Torvalds</a><ul><li><a href="/lkml/1998/9/19/95">(Alan Cox)</a></li><li><a href="/lkml/1998/9/19/108"> kuznet&#64;ms2 ...</a><ul><li><a href="/lkml/1998/9/19/118">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1998/9/19/180">(Alan Cox)</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 19 Sep 1998 11:55:50 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Today Linus redesigns the networking driver interface (was Re: tulip driver in ...)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 19 Sep 1998, Alan Cox wrote:<br />&gt; <br />&gt; It is always set by an interrupt or bh atomic code. It is always tested<br />&gt; by bh atomic code. The case where a test returns a stale tbusy=0 is safe<br />&gt; also.<br />&gt; <br />&gt; So its right but for all the wrong reasons<br /><br />Ok. I'll take your word for it. <br /><br />&gt; &gt; 	Ergo, every single use of tbusy seems to be buggy. Better just get<br />&gt; &gt; 	rid of it.<br />&gt; <br />&gt; And later on you propose replacing it with itself but broken. Renaming it<br />&gt; to avoid accidents makes sense. OK<br /><br />I do propose replacing it by itself, but it's really to make sure we get<br />rid of the old and stale use, which at least to me looks to be the bulk of<br />it. <br /><br />&gt; &gt; 	safe - it happens to work apparently because all drivers when they<br />&gt; &gt; 	change their state of tbusy will also force a NET_BH to be run,<br />&gt; &gt; 	even if they don't actually have any incoming packets.<br />&gt; <br />&gt; That is -explicitly- required by the use of tbusy and it was always designed<br />&gt; like that. You have to schedule a bh on a tbusy clear otherwise nothing in<br />&gt; the kernel will feed you packets. You can't change that. Your design<br />&gt; below requires fixing to do this. Someone has to schedule the delivery<br />&gt; of further packets. Therefore you must use mark_bh()<br /><br />No, you're right. My "fix" below just needs to be fixed to also do the<br />NET_BH setting. I thought the network drivers pulled the send queue on<br />their own, but looking closer it's obvious that they don't (and that they<br />should not for locking issues). <br /><br />&gt; It works fine. The broken case is the fact that tbusy isnt enforced on the<br />&gt; first send. To fix that requires putting in a dev-&gt;timeout handler for<br />&gt; each device. If you break that behaviour then the moment your queue is full<br />&gt; and you take a tx timeout you are dead.<br /><br />Eww. Ok, I see why it's not set. It looks like a bad design, but it's<br />obvious we can't fix that for 2.2. <br /><br />&gt; &gt; 		if (!test_and_set_bit(DEV_TRANSMIT, &amp;dev-&gt;flags)) {<br />&gt; <br />&gt; test_and_set_bit has fairly poor performance on some non intel<br />&gt; architectures because it is implemented with spin locks. We want something<br />&gt; that can use things like sparc exchange with 0xFF locking.<br />&gt; <br />&gt; (also dev-&gt;flags is already all reserved). dev-&gt;flow ?<br /><br />Sure. <br /><br />&gt; That adds potential races and makes life extremely hard. It also doesnt<br />&gt; work as you need to mark_bh(NET_BH) so net_bh feeds it more packets.<br /><br />I agree about NET_BH now that I looked at it some more. And if you think<br />clearing it unconditionally makes sense, I'll just take your word for it.<br /><br />So maybe we could just to the minimal rename for 2.2.x and I certainly<br />agree with "dev-&gt;flow" - which makes clear what it is for. Just getting<br />rid of the incorrect uses would be good, you've convinced me that we can't<br />make it pretty.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
