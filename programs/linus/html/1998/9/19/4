    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/9/18/115">First message in thread</a></li><li><a href="/lkml/1998/9/18/115">(Larry McVoy)</a><ul><li><a href="/lkml/1998/9/18/167">Richard Gooch</a><ul><li class="origin"><a href="/lkml/1998/9/21/60">(Linus Torvalds)</a><ul><li><a href="/lkml/1998/9/21/60">Richard Gooch</a></li></ul></li><li><a href="/lkml/1998/9/19/33">Gabriel Paubert</a><ul><li><a href="/lkml/1998/9/22/6">Richard Gooch</a><ul><li><a href="/lkml/1998/9/22/10">"David S. Miller"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1998/9/22/44">Kurt Garloff</a><ul><li><a href="/lkml/1998/9/22/45">Richard Gooch</a><ul><li><a href="/lkml/1998/9/22/97">Kurt Garloff</a><ul><li><a href="/lkml/1998/9/22/127">Jukka Tapani Santala</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Interesting scheduling times - NOT</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">19 Sep 1998 04:42:29 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;199809182339.JAA06430&#64;vindaloo.atnf.CSIRO.AU&gt;,<br />Richard Gooch  &lt;rgooch&#64;atnf.csiro.au&gt; wrote:<br />&gt;<br />&gt;On sucessive runs of the code (no other changes made, no-one else on<br />&gt;the system, no X running), I got 8.2 us and 17.5 us with no extra<br />&gt;processes.<br /><br />Umm, what do you use to make sure that all processes start at the same<br />time? Ie, what's your "start" criterium?<br /><br />It's entirely possible that a large portion of your run is done only<br />with a part of the processes running...  As such, your "minimum" values<br />in particular are especially suspect, because they may be "minima" with<br />no scheduling happening at all, or scheduling between just a few of the<br />runs. <br /><br />&gt;Another pair of successive runs, this time with 12 extra low-priority<br />&gt;processes, I got 35.2 us and 51.0 us. Pentium 100 (this is an old<br />&gt;Intel Neptune board).<br />&gt;<br />&gt;I've now modified my test code to compute minimum and maximum<br />&gt;latencies (no extra processes):<br />&gt;Minimum scheduling latency: 6.2 us<br />&gt;Average scheduling latency: 15.0 us<br />&gt;Maximum scheduling latency: 40.5 us<br />&gt;  and on the very next run:<br />&gt;Minimum scheduling latency: 6.2 us<br />&gt;Average scheduling latency: 8.6 us<br />&gt;Maximum scheduling latency: 38.0 us<br />&gt;  and a few runs later:<br />&gt;Minimum scheduling latency: 7.7 us<br />&gt;Average scheduling latency: 11.8 us<br />&gt;Maximum scheduling latency: 145.9 us<br />&gt;<br />&gt;Looking at the first pair of results, we can see that the minimum<br />&gt;scheduling time is relatively stable and the maximum isn't too bad<br />&gt;either. But the average does indeed change a lot.<br /><br />Which is entirely consistent with the idea that you have a "random"<br />amount of processes during the first and last few thousand iterations. <br /><br />This is why using a "packet" based approach is so stable, and why using<br />"sched_yield()" is so unstable. "lmbench" makes _sure_ that it always<br />gets exactly the expected re-scheduling behaviour by passing along a<br />packet in a pair of pipes. You have no such synchronization as far as I<br />can tell.<br /><br />&gt;						 This must mean that<br />&gt;the distribution of scheduling times has changed from run to run, and<br />&gt;I suspect memory subsystem/cache interactions.<br /><br />There could certainly be cache effects, but if I were you I'd look very<br />very closely at synchronization issues in your program.<br /><br />This could easily explain why you get different results the first time<br />you run the program: you get page-faults in one or more of the threads,<br />so part of the yield() loop won't result in any schedule at all simply<br />because there is only one process runnable, for example.<br /><br />You even have a "usleep()" somewhere in your benchmark, and it's fairly<br />unrealistic to expect the different yield loops to be synchronized to<br />each other..<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
