    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/9/13/19">First message in thread</a></li><li><a href="/lkml/1998/9/19/71">Linus Torvalds</a><ul><li><a href="/lkml/1998/9/19/73">(Alan Cox)</a><ul><li class="origin"><a href="/lkml/1998/9/19/87">Linus Torvalds</a><ul><li><a href="/lkml/1998/9/19/87">(Alan Cox)</a><ul><li><a href="/lkml/1998/9/19/86">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1998/9/19/85"> kuznet&#64;ms2 ...</a><ul><li><a href="/lkml/1998/9/19/94">Linus Torvalds</a><ul><li><a href="/lkml/1998/9/19/89">(Alan Cox)</a><ul><li><a href="/lkml/1998/9/19/129">Jes Sorensen</a></li></ul></li><li><a href="/lkml/1998/9/19/99"> kuznet&#64;ms2 ...</a><ul><li><a href="/lkml/1998/9/19/179">(Alan Cox)</a></li></ul></li><li><a href="/lkml/1998/9/19/121">Andi Kleen</a><ul><li><a href="/lkml/1998/9/19/172">(Alan Cox)</a></li></ul></li><li><a href="/lkml/1998/9/19/128">Jes Sorensen</a></li><li><a href="/lkml/1998/9/21/103">Alex Korobka</a></li></ul></li></ul></li><li><a href="/lkml/1998/9/19/147">"David S. Miller"</a><ul><li><a href="/lkml/1998/9/19/151">Linus Torvalds</a><ul><li><a href="/lkml/1998/9/19/156">"David S. Miller"</a><ul><li><a href="/lkml/1998/9/19/190">"Justin A. Kolodziej"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 19 Sep 1998 11:28:06 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: tulip driver in 2.1.11* - 2.1.21 is broken - new driver</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 19 Sep 1998, Alan Cox wrote:<br /><br />&gt; &gt; I think both dev-&gt;interrupt and dev-&gt;tbusy should just go away. Both of<br />&gt; &gt; them are completely broken, for several reasons:<br />&gt; &gt;  - they use up a long-word for _one_ bit of information. That's 63 wasted<br />&gt; &gt;    bits on some architectures.<br />&gt; <br />&gt; They are performance important. And afaik you btw made dev-&gt;interrupt a long<br />&gt; word to cover for the fact the atomic stuff doesnt work on char ;)<br /><br />Correct. But I did that without grepping for the use of it. Now that I<br />have, it's very obvious that I shouldn't have made it a long, I should<br />just have gotten rid of it completely. I don't find anything actually<br />using it, except for a few drivers who caused the problem in the first<br />place.<br /><br />As for tbusy, I know it's supposed to be used for flow control. Grepping<br />for it in the driver directory showed very few cases of that, and almost<br />every use seemed to be about using it for re-entrancy.<br /><br />More importantly, grepping for it shows that EVERY SINGLE USE OF IT IS<br />WRONG!<br /><br />As such, it would be a lot better to just get rid of it completely, and<br />instead introduce a "dev-&gt;flags" field, and make sure that we _only_ use<br />that for what it's supposed to be used for. <br /><br />Tell me if I'm wrong on any of the following. I may be, but I can't find<br />why:<br /><br />				Chapter 1<br />			  "Why tbusy is wrong"<br />				   by<br />			     Linus Torvalds<br /><br />  - grep for it<br />	99% of all uses are non-atomic. That's obviously wrong in itself,<br />	as most of those are outside any global interrupt locks, and the<br />	flag is tested and set by interrupts, not by bottom half handlers. <br /><br />	The ones that ARE atomic are wrong too, because those seem to all<br />	be used for re-entrancy testing rather than for flow control.<br /><br />	Ergo, every single use of tbusy seems to be buggy. Better just get<br />	rid of it.<br /><br />  - qdisc_wakeup()<br />	This is the main routine that is supposed to do the re-entrancy<br />	test. To some degree this is the "heart" of tbusy. And even this<br />	simple routine gets it utterly wrong.<br /><br />	It's testing tbusy without setting it, and without having disabled<br />	the events that can change it. As such, it is neither UP nor SMP<br />	safe - it happens to work apparently because all drivers when they<br />	change their state of tbusy will also force a NET_BH to be run,<br />	even if they don't actually have any incoming packets.<br /><br />	Or maybe it works due to the window being fairly small, and us<br />	being lucky - packet re-send just restarts the transmission even<br />	if it died for a while. <br /><br />				Chapter 2<br />	  	"How to fix tbusy without going crazy"<br /><br />  - get rid of it<br />	There are no correct users of it right now anyway, so there are no<br />	instances of it being used that we want to save. Getting rid of it<br />	will at least allow the compiler to find all cases where somebody<br />	_tries_ to use it. <br /><br />  - instantiate a new "dev-&gt;flags"<br />	Make qdisk_wakeup() do a<br /><br />		if (!test_and_set_bit(DEV_TRANSMIT, &amp;dev-&gt;flags)) {<br />			struct Qdisc *q = dev-&gt;qdisc;<br />			if (qdisc_restart(dev) &amp;&amp; q-&gt;h.forw == NULL) {<br />				q-&gt;h.forw = qdisc_head.forw;<br />				qdisc_head.forw = &amp;q-&gt;h;<br />			}<br />		}<br /><br />	and then make the cases where the network drivers marked tbusy = 0<br />	(the correct ones - the ones that tell the system that its write<br />	queues are empty - this is about 10% of the tbusy use as far as I <br />	can tell) do a<br /><br />		if (!test_and_clear_bit(DEV_TRANSMIT, &amp;dev-&gt;flags)) {<br />			panic("buggy driver, cleared DEV_TRANSMIT twice");<br />		}<br /><br />	when their transmit buffer empties.<br /><br />The above is what tbusy _should_ be doing already, but implemented right.<br /><br />Am I wrong?<br /><br />(Oh, "Chapter 3" is very short, and only has a heading and no actual text. <br />It says "Remove dev-&gt;interrupt, because nobody is using it"). <br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
