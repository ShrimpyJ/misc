    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/9/13/80">First message in thread</a></li><li class="origin"><a href="/lkml/1998/9/13/96">Linus Torvalds</a><ul><li><a href="/lkml/1998/9/13/96">Gerard Roudier</a><ul><li><a href="/lkml/1998/9/13/102">MOLNAR Ingo</a><ul><li><a href="/lkml/1998/9/14/9">Edward Welbon</a></li><li><a href="/lkml/1998/9/14/114">Gerard Roudier</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 13 Sep 1998 13:28:34 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: A question concerning time outs and possible lost interrupts</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 13 Sep 1998, Edward Welbon wrote:<br />&gt; <br />&gt; I get endless scsi timeouts at various times (usually sometime very soon<br />&gt; after I switch root to drives controlled by ncr53c8xx (raid0 as root)). Do<br />&gt; you have any ideas or suggestions as to how to find out if an interrupt is<br />&gt; really getting lost? How do I learn to interpret the bytes provided by<br />&gt; ncr53c8xx_abort?<br /><br />One thing to look out for is your interrupt setup.<br /><br />If you have edge-triggered IO-APIC interrupts, they happen to not work ok<br />in 2.1.120 and 2.1.121. They should be ok in earlier kernels and again in<br />pre-2.1.122-2. <br /><br />More importantly, though, edge-triggered interrupts are nasty. In<br />particular, two separate interrupts can turn into one interrupt regardless<br />of what the kernel does. So the first thing you should check is whether<br />you can force the BIOS to use a level-triggered interrupt, assuming you<br />don't have one already. <br /><br />The problem is that if the edge-triggered interrupt never goes away, it<br />will just stay active and never show another edge. Even a "good" driver<br />can easily have problems that are very timing-related.. <br /><br />In particular, a common thing for various drivers is to have a ring of<br />events, and traverse the whole ring of events for every interrupt. It<br />works 99.99% of all times, which is why people do this, but it's broken.<br /><br />Let's say that you have a ring of four events: 0 1 2 3, and you have a<br />disk controller that raises an interrupt whenever one of the events is<br />active. Let's further say that event #0 and #3 become active at roughly<br />the same time, and you get an interrupt. The CPU sees the edge, and<br />everything is good. The driver starts looking at the events..<br /><br />Now, the driver sees event #0, and handles it. So far so good. It looks at<br />status #1, and that isn't ready yet, so it looks at #2 which is the same.<br />Finally, it looks at #3 and handles it. However, before/while doing that,<br />event #1 came in and is now active. <br /><br />And now you have a hung system. <br /><br />The reason for the hung system is that while the interrupt dispatch<br />routine correctly handled event #0 and #3, it never handled #1. And we<br />never got another interrupt, because our interrupt was edge-triggered, and<br />we never saw another edge because the interrupt was always active. <br /><br />The correct thing for a driver to do is to do one of two things: <br /><br /> - always require the interrupt to be level-triggered. This is the "good"<br />   solution, but sadly there are setups out there that still use<br />   edge-triggered interrupts. Don't ask me why. <br /><br />   One option migth be to have a way of overriding the edge/level decision<br />   that the BIOS made for us. We could just decide that even though the<br />   BIOS told us to use an edge interrupt, the BIOS is just wrong. <br /><br />   However, sometimes the BIOS might just be right. Certainly some really<br />   stupid devices require a edge interrupt simply because they don't<br />   de-assert their own interrupt line in any sane manner (this is true of<br />   the timer interrupt, for example, which is just a square-wave thing and<br />   thus would generate an endless stream of interrupts for 50% of the time<br />   if it was level-triggered - and there may be other broken hardware out <br />   there with the same bad behaviour)<br /><br /> - if there are multiple status mailboxes like the above, the driver has<br />   to go through each and every one endlessly until it has gone one<br />   complete round without seeing a single event (this assumes that events<br />   don't go away once they are posted - and thus the "not seeing a single<br />   event" guarantees that at some point in time all events were quiescent<br />   and thus that we will get a new edge if some new event ever happens)<br /><br />I don't know whether the ncr driver does this already or not, but if it<br />doesn't, then that may be the cause for the occasional timeouts.. <br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/faq.html">http://www.tux.org/lkml/faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
