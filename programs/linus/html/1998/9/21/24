    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/9/20/141">First message in thread</a></li><li><a href="/lkml/1998/9/20/175">Linus Torvalds</a><ul><li><a href="/lkml/1998/9/20/179">Jamie Lokier</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 20 Sep 1998 18:02:47 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] (please check) Potential security fix for i386/kernel/ptrace.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 21 Sep 1998, Jamie Lokier wrote:<br />&gt;<br />&gt; On Sun, Sep 20, 1998 at 04:09:00PM -0700, Linus Torvalds wrote:<br />&gt; &gt; It should actually be safe. The debug trap handler is careful to not<br />&gt; &gt; aquire any locks (ie no deadlock situations), and should alwasy ignore<br />&gt; &gt; events from kernel space.<br />&gt; <br />&gt; It would still cause a slowdown, perhaps somewhere critical (interrupt<br />&gt; handler, syscall entry point etc).  If a breakpoint is placed in<br />&gt; encryption code or the /dev/random driver, the timing effects would leak<br />&gt; information.<br /><br />Note that it not only ignores the trap, it also clears %db7 if I remember<br />correctly, exactly to make sure that the trap doesn't ever happen again.<br /><br />&gt; What happens if a breakpoint is placed in the debug trap handler, the<br />&gt; syscall entry point, ret_from_syscall etc.?<br /><br />Nothing bad. It will trap once, but once trapped the hardware already<br />protects against "recursive" trapping, and the debug register clear will<br />make sure that it never happens again (or rather - the user needs to set<br />it up again to make it happen again, at which point he is just a small<br />nuisance rather than a real bother). <br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
