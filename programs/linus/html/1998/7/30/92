    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/7/29/107">First message in thread</a></li><li><a href="/lkml/1998/7/30/73">Linus Torvalds</a><ul><li><a href="/lkml/1998/7/30/78">"David S. Miller"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 30 Jul 1998 10:44:47 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] IDE problems on SMP, fixed? (fwd)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 30 Jul 1998, David S. Miller wrote:<br />&gt; <br />&gt; The latest EGCS code has a C parser in the library used for the CPP<br />&gt; preprocessor that is modular and minimal enough for these purposes,<br />&gt; then you could jackhammer the flow analysis pass into it using some<br />&gt; minimalized form of RTL (or better, do control flow the way described<br />&gt; in Chapter 7 of Muchnik's compiler book, via structual analysis).<br />&gt; <br />&gt; Then extend it to work on many files at once, and to combine calls and<br />&gt; scopes into a global "flow" knowledge.<br /><br />I don't think you want to do real C analysis multiple files at a time: you<br />do them one file at a time and output some (easily, and machine-) readable<br />format that contains the internal flows for one file. You only have to do<br />the hard work (linearizing) on a file-per-file (or even function-by-<br />function) basis, after all. <br /><br />Once you have the per-file extended call-graphs, you can do the analysis<br />on the total - possibly even in multiple passes to make each pass simpler<br />(each pass would sort down more information from the previous pass until<br />the information doesn't change and you've found the proper superset of all<br />calls).<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
