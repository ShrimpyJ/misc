    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/7/22/72">First message in thread</a></li><li><a href="/lkml/1998/7/22/138">Linus Torvalds</a><ul><li><a href="/lkml/1998/7/22/175">Andi Kleen</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 22 Jul 1998 20:32:41 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.1.110 freepages.min change</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On 23 Jul 1998, Andi Kleen wrote:<br />&gt; &gt; Yes. And that was also what convinced me that we need some other mechanism<br />&gt; &gt; to get that - thus the changes in arch/i386/kernel/process.c..<br />&gt; <br />&gt; That still does not solve the problem with 8k NFS (which effectively<br />&gt; needs 16K blocks)<br /><br />True. Which is not a new problem - it' sone of the reasons the Linux NFS<br />client used to default to 1kB blocks. <br /><br />It's probably a perfectly fine idea to have a separate pool of larger<br />pages, and not let single-page allocations deplete that pool at all. I<br />would certainly accept something like that if it was cleanly done (the<br />so-called "largearea" patches do this to a limited degree for other<br />reasons - to have DMA'ble contiguous chunks available for drivers that<br />need them). <br /><br />For example, we could just decide that the low 128kB (random number alert) <br />of memory is never added to the page pool at all, but is only used by<br />certain allocators that have some known behaviour pattern (for example,<br />NFS packet allocations have known and controlled behaviour to some degree<br />- and there are other temporary allocations that could maybe also<br />benefit).<br /><br />The point being that we don't _have_ to have a completely unified memory<br />pool. Unified pools have advantages and disadvantages, and sometimes it is<br />useful to be unified on one level but not on another (so temporary buffer<br />allocations could come from a non-unified pool, while "long-term" <br />allocations would come from the unified pool or something). <br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
