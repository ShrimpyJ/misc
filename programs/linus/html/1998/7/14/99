    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/7/11/24">First message in thread</a></li><li><a href="/lkml/1998/7/14/76">Linus Torvalds</a><ul><li><a href="/lkml/1998/7/14/95">Gerard Roudier</a><ul><li class="origin"><a href="/lkml/1998/7/14/101">Linus Torvalds</a><ul><li><a href="/lkml/1998/7/14/101">Alex Buell</a><ul><li><a href="/lkml/1998/7/14/105">Linus Torvalds</a></li><li><a href="/lkml/1998/7/14/121">Gerhard Mack</a></li></ul></li><li><a href="/lkml/1998/7/14/119">MOLNAR Ingo</a></li><li><a href="/lkml/1998/7/15/3">Gerard Roudier</a><ul><li><a href="/lkml/1998/7/15/84">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/1998/7/14/110">Gerard Roudier</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 14 Jul 1998 13:38:59 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Strange interrupt behaviour</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 14 Jul 1998, Gerard Roudier wrote:<br />&gt; <br />&gt; If your program seems to demonstrate that having even up to 5% memory <br />&gt; free does not help a lot and that the ratio of pages you will throw away<br /><br />No, read the math again. <br /><br />The only reason I wrote a program to do the calculations was that I was<br />too lazy (and possibly too inept) to symbolically solve the value of<br /><br />	x * (x-2) * (x-4) * ..  (y times)<br />	-----------------------------<br />		      x ^ y<br /><br />so I just wrote a program to iterate and do the calculations for me.<br /><br />Having 5% memory free almost guarantees that you'll have consecutive pages<br />for an 8MB machine. It also showed very clearly that on a 4MB machine it<br />was getting painful - you needed to keep a fair amount of your memory free<br />to give the same kinds of guarantees. <br /><br />Essentially, the basic rule is that as you increase your memory size, you<br />do need to increase the number of pages you keep free, but the free pages<br />can increase much more slowly than the used pages. And this is why current<br />2.1.x kernels are painful on small-memory machines but not on large-memory<br />machines - because on large-memory machines the likelihood of finding<br />consecutive pages with even just 1% of all pages free is just almost a<br />certainty. <br /><br />Anyway, the point of the excercise was more to show that you don't<br />actually have to page out all that much of your memory to get consecutive<br />areas, even if you page out randomly. We already (for completely unrelated<br />reasons) try to keep a certain amount of memory free, and that amount has<br />been hovering at around the 5% mark anyway. <br /><br />The math just goes to show that 5% free should be plenty for a 8MB<br />machine. <br /><br />The fact that is obviously is _not_ enough is that while we do try to keep<br />something like 5% free by kswapd, we try to do so over time, and not<br />"locally". So locally the number of free pages can dip a lot below 5%, and<br />that's when the problems happen. <br /><br />To re-iterate my argument: the basic approach of randomly keeping free<br />memory seems to be basically a mathematically sound approach. That's all<br />the math I did says (with the caveat I had in my original mail about the<br />model not being exact). As such, the theory says that if my model is<br />accurate enough, then it _should_ be enough to just make sure that<br />allocations are synchronized with the code that keeps the free pages<br />available. <br /><br />That's all I'm saying. Essentially, I've tried to convince people with raw<br />numbers that the VM layer doesn't actually need any major overhaul, it<br />only needs to get the slight fixes. People that have talked about major<br />overhauls haven't shown me either code _or_ reasoning, so..<br /><br />			Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.altern.org/andrebalsa/doc/lkml-faq.html">http://www.altern.org/andrebalsa/doc/lkml-faq.html</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
