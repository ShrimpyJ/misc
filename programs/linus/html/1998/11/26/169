    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/11/26/81">First message in thread</a></li><li><a href="/lkml/1998/11/26/81">Benjamin Redelings I</a><ul><li><a href="/lkml/1998/11/26/116">"Stephen C. Tweedie"</a><ul><li class="origin"><a href="/lkml/1998/11/26/180">Linus Torvalds</a><ul><li><a href="/lkml/1998/11/26/180">"Stephen C. Tweedie"</a></li><li><a href="/lkml/1998/11/26/205">MOLNAR Ingo</a><ul><li><a href="/lkml/1998/11/26/207">MOLNAR Ingo</a></li></ul></li><li><a href="/lkml/1998/11/27/98">"Stephen C. Tweedie"</a><ul><li><a href="/lkml/1998/11/27/111">Chip Salzenberg</a></li><li><a href="/lkml/1998/11/27/116">Benjamin Redelings I</a></li><li><a href="/lkml/1998/11/27/128">Linus Torvalds</a></li><li><a href="/lkml/1998/11/27/151">Zlatko Calusic</a></li></ul></li><li><a href="/lkml/1998/11/28/25">(Rogier Wolff)</a><ul><li><a href="/lkml/1998/11/30/34">"Stephen C. Tweedie"</a></li></ul></li></ul></li><li><a href="/lkml/1998/11/26/179">Helge Hafting</a></li><li><a href="/lkml/1998/11/27/2">Benjamin Redelings I</a><ul><li><a href="/lkml/1998/11/27/31">Rik van Riel</a></li></ul></li></ul></li><li><a href="/lkml/1998/11/26/153">Chris Evans</a><ul><li><a href="/lkml/1998/11/26/142">Benjamin Redelings I</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Nov 1998 09:49:47 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [2.1.130-3] Page cache DEFINATELY too persistant... feature?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 26 Nov 1998, Stephen C. Tweedie wrote:<br />&gt; <br />&gt; Right.  Linus, it looks like this is a result of a long-standing<br />&gt; property of the buffer cache, namely that we only ever throttle writes<br />&gt; when we run out of memory.  If we have large quantities of dirty buffers<br />&gt; due to an install routine, then the shrink_mmap becomes less and less<br />&gt; able to free memory.  The recent vm changes make it a lot easier to<br />&gt; swap things out in this situation. <br /><br />Hmm.. I know we _used_ to do a sync() in do_free_pages() when we started<br />to need to page things out exactly to avoid this issue. Considering how<br />much has changed I wouldn't be surprised if that has been disabled or<br />deleted by mistake, because it tends to happen only under specific<br />circumstances that are _not_ the normal things you tend to test when you<br />test low-memory situations.<br /><br />&gt; The 130-pre3 changes seem to have fixed the swap aggression in the<br />&gt; normal case when we are loading the page cache primarily with reads, but<br />&gt; under high write load we still drop rapidly into swap as soon as the<br />&gt; buffer cache is saturated.<br /><br />We should really be a lot more aggressive about getting rid of dirty<br />buffer cache entries. They are almost never worth having around.<br /><br />&gt; There are basically two ways I think we can address this.  We can either<br />&gt; throttle the writes, or we can extend what we have done recently in<br />&gt; try_to_free_pages to include dirty buffers.<br /><br />I'd _much_ rather do the second thing. We should really consider a dirty<br />buffer to be the same thing as a dirty user page, and write it out the<br />same way we write out user pages. In fact, this whole problem wouldn't<br />exist if we just wrote to the page cache directly and had the page cache<br />do the writeout, but sadly I never sat down and really worked that out.<br /><br />&gt; This looks like a natural way to take advantage of existing behaviour to<br />&gt; fix a very long standing write performance problem.  Comments?  Would<br />&gt; you prefer a more natural way of throttling writes at source?<br /><br />I think throwttling them at the source is just wrong, and think your<br />suggestion makes sense. I don't know whether it makes much sense to do<br />this with bdflush, though - I'd be more inclined to just do it directly. <br /><br />Think of it as the analogous case to kswapd - we count on kswapd to<br />generally keep "enough" memory free and to balance the peak usage. But<br />when we really need more memory for a process, the process will try to<br />free stuff up itself. <br /><br />Now, the same should be true of "bdflush" - we could on bdflush to<br />generally keep the number of dirty pages down, and to balance the peak<br />usage so that we don't get bouts of extremely heavy disk activity (like we<br />did with the old "update" process). But when we really need to write stuff<br />out, the page-out process should really try to free stuff up itself. <br /><br />Would you agree with that analogy?<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
