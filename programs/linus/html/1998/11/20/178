    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/11/19/122">First message in thread</a></li><li><a href="/lkml/1998/11/20/87">Linus Torvalds</a><ul><li><a href="/lkml/1998/11/20/151">Andrea Arcangeli</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Nov 1998 08:25:04 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: arca-24 [Re: new arca-23 released]</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 20 Nov 1998, Andrea Arcangeli wrote:<br />&gt; &#64;&#64; -16,21 +17,47 &#64;&#64;<br />&gt;   * change timeval to jiffies, trying to avoid the<br />&gt;   * most obvious overflows..<br />&gt;   */<br />&gt; -static __inline__ unsigned long<br />&gt; +static __inline__ long<br />&gt;  timespec_to_jiffies(struct timespec *value)<br />&gt;  {<br />&gt; -	unsigned long sec = value-&gt;tv_sec;<br />&gt; -	long nsec = value-&gt;tv_nsec;<br />&gt; +	long sec = value-&gt;tv_sec, nsec = value-&gt;tv_nsec, retval;<br />&gt; <br />&gt; -	if (sec &gt; ((long)(~0UL &gt;&gt; 1) / HZ))<br />&gt; -		return ~0UL &gt;&gt; 1;<br />&gt;  	nsec += 1000000000L / HZ - 1;<br />&gt;  	nsec /= 1000000000L / HZ;<br />&gt; -	return HZ * sec + nsec;<br />&gt; +	retval = HZ * sec + nsec;<br />&gt; +	/*<br />&gt; +	 * Here we are careful to return a positive value. This helps<br />&gt; +	 * when the retval will be a parameter of schedule_timeout()<br />&gt; +	 */<br />&gt; +	if (retval &lt; 0)<br />&gt; +		return LONG_MAX;<br />&gt; +	else<br />&gt; +		return retval;<br />&gt;  }<br /><br />This is still not right.<br /><br />The reason we have the<br /><br />	if (sec &gt; ((long)(~0UL &gt;&gt; 1) / HZ))<br /><br />test early is that it's _not_ sufficient to test the sign after the<br />multiplication. The multiplication by HZ may overflow a _lot_ (ie wrap<br />around multiple times in whatever the word size of the machine is), and<br />the overflow is incorrect - even if that overflow happened to be positive. <br /><br />So the right (as far as I can tell) timespec function is to test<br />beforehand:<br /><br />	static __inline__ unsigned long<br />	timespec_to_jiffies(struct timespec *value)<br />	{<br />	        unsigned long sec = value-&gt;tv_sec;<br />	        long nsec = value-&gt;tv_nsec;<br />	<br />	        if (sec &gt;= (MAX_JIFFY_OFFSET / HZ))<br />	                return MAX_JIFFY_OFFSET;<br />	        nsec += 1000000000L / HZ - 1;<br />	        nsec /= 1000000000L / HZ;<br />	        return HZ * sec + nsec;<br />	}<br /><br /><br />(You can test after the multiply too: you could test something like<br /><br />	mult = HZ * sec + nsec;<br />	if (mult / HZ &lt; sec)<br />		return MAX_JIFFY_OFFSET;<br />	return mult;<br /><br />instead, but that would imply a division that can't be done at compile<br />time (which can be turned into a multiply-high, but the point being that<br />it's still "expensive").<br /><br />And no, I don't guarantee that the above is right either. Maybe<br />MAX_JIFFY_OFFSET should be MAX_LONG-1-(1000000/HZ), to take care of the<br />nsec case causing problems.. <br /><br />Yes, getting all the overflow cases right is really fairly nasty.<br /><br />			Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
