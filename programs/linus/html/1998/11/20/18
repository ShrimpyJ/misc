    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1998/11/17/99">First message in thread</a></li><li><a href="/lkml/1998/11/18/97">Andrea Arcangeli</a><ul><li><a href="/lkml/1998/11/19/106">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/1998/11/20/24">Linus Torvalds</a><ul><li><a href="/lkml/1998/11/20/24">Linus Torvalds</a></li><li><a href="/lkml/1998/11/20/35">Andrea Arcangeli</a></li></ul></li><li><a href="/lkml/1998/11/20/47">"David S. Miller"</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/1998/11/20/18/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 19 Nov 1998 10:01:10 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: entry.S mess with %ebx (&amp;current pointer)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 19 Nov 1998, Andrea Arcangeli wrote:<br />&gt; <br />&gt; I am sure that the kernel run do_signal() from signal_return, even if<br />&gt; sigpending is 0.  This mean that %ebx got corrupted somewhere (and this<br />&gt; explain very well also the need_resched flood I suspected some days ago).<br />&gt; A patch for 2.1.128 that fix the UP hang fine here is this: <br /><br />Good debugging, but the fix is incorrect (or at least unnecessarily slow).<br /><br />I see where the problem is, and I also see why it _only_ happens on UP.<br /><br />The problem is that the fork return point to the new process does not<br />initialize %ebx in the UP case.<br /><br />It _does_ initialize it in the SMP case, and this is basically just an<br />oversight. <br /><br />This patch should fix it properly, please tell me whether that is true..<br /><br />		Linus<br /><br />-----<br />diff -u --recursive --new-file v2.1.129/linux/arch/i386/kernel/entry.S linux/arch/i386/kernel/entry.S<br />--- v2.1.129/linux/arch/i386/kernel/entry.S	Sun Nov  8 14:02:42 1998<br />+++ linux/arch/i386/kernel/entry.S	Thu Nov 19 09:53:08 1998<br />&#64;&#64; -150,14 +150,14 &#64;&#64;<br /> 	jmp ret_from_sys_call<br /> <br /> <br />-#ifdef __SMP__<br /> 	ALIGN<br /> 	.globl	ret_from_smpfork<br />-ret_from_smpfork:<br />+ret_from_fork:<br /> 	GET_CURRENT(%ebx)<br />+#ifdef __SMP__<br /> 	btrl	$0, SYMBOL_NAME(scheduler_lock)<br />-	jmp	ret_from_sys_call<br /> #endif /* __SMP__ */<br />+	jmp	ret_from_sys_call<br /> <br /> /*<br />  * Return to user mode is not as complex as all this looks,<br />diff -u --recursive --new-file v2.1.129/linux/arch/i386/kernel/process.c linux/arch/i386/kernel/process.c<br />--- v2.1.129/linux/arch/i386/kernel/process.c	Fri Oct  9 13:27:05 1998<br />+++ linux/arch/i386/kernel/process.c	Thu Nov 19 09:53:35 1998<br />&#64;&#64; -50,11 +50,7 &#64;&#64;<br /> <br /> spinlock_t semaphore_wake_lock = SPIN_LOCK_UNLOCKED;<br /> <br />-#ifdef __SMP__<br />-asmlinkage void ret_from_fork(void) __asm__("ret_from_smpfork");<br />-#else<br />-asmlinkage void ret_from_fork(void) __asm__("ret_from_sys_call");<br />-#endif<br />+asmlinkage void ret_from_fork(void) __asm__("ret_from_fork");<br /> <br /> #ifdef CONFIG_APM<br /> extern int  apm_do_idle(void);<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
