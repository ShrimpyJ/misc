    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/11/26/951">First message in thread</a></li><li><a href="/lkml/2018/11/29/1161">Peter Zijlstra</a><ul><li><a href="/lkml/2018/11/29/1204">Jiri Kosina</a></li><li><a href="/lkml/2018/11/29/1678">Josh Poimboeuf</a><ul><li><a href="/lkml/2018/11/29/1706">Peter Zijlstra</a><ul><li><a href="/lkml/2018/11/29/1727">Andy Lutomirski</a><ul><li><a href="/lkml/2018/11/29/1750">Josh Poimboeuf</a></li><li><a href="/lkml/2018/11/29/1769">Peter Zijlstra</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2018/11/29/1717">Linus Torvalds</a><ul><li><a href="/lkml/2018/11/29/1717">Steven Rostedt</a></li><li><a href="/lkml/2018/11/29/1734">Andy Lutomirski</a><ul><li><a href="/lkml/2018/11/29/1746">Peter Zijlstra</a></li><li><a href="/lkml/2018/11/29/1756">Steven Rostedt</a></li><li><a href="/lkml/2018/11/29/1786">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Nov 2018 08:50:16 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2 4/4] x86/static_call: Add inline static call implementation for x86-64</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 29, 2018 at 8:33 AM Josh Poimboeuf &lt;jpoimboe&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; This seems to work...<br />&gt;<br />&gt; +       .if \create_gap == 1<br />&gt; +       .rept 6<br />&gt; +       pushq 5*8(%rsp)<br />&gt; +       .endr<br />&gt; +       .endif<br />&gt; +<br />&gt; -idtentry int3                  do_int3                 has_error_code=0<br />&gt; +idtentry int3                  do_int3                 has_error_code=0        create_gap=1<br /><br />Ugh. Doesn't this entirely screw up the stack layout, which then<br />screws up  task_pt_regs(), which then breaks ptrace and friends?<br /><br />... and you'd only notice it for users that use int3 in user space,<br />which now writes random locations on the kernel stack, which is then a<br />huge honking security hole.<br /><br />It's possible that I'm confused, but let's not play random games with<br />the stack like this. The entry code is sacred, in scary ways.<br /><br />So no. Do *not* try to change %rsp on the stack in the bp handler.<br />Instead, I'd suggest:<br /><br /> - just restart the instruction (with the suggested "ptregs-&gt;rip --")<br /><br /> - to avoid any "oh, we're not making progress" issues, just fix the<br />instruction yourself to be the right call, by looking it up in the<br />"what needs to be fixed" tables.<br /><br />No?<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
