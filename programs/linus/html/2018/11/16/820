    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/11/16/301">First message in thread</a></li><li><a href="/lkml/2018/11/16/301">Kyle Sanderson</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Nov 2018 10:56:56 -0600</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Oops: 0003 [#1] PREEMPT SMP NOPTI</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 15, 2018 at 8:29 PM Kyle Sanderson &lt;kyle.leet&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; 2008(!) dual-core Atom box.<br />&gt; [1027541.963573] BUG: unable to handle kernel paging request at ffffffffb0428a44<br />&gt; [1027541.963647] IP: format_decode+0x20/0x3d0<br /><br />The code decodes to:<br /><br />   0: 55                    push   %rbp<br />   1: 48 8d 2e              lea    (%rsi),%rbp<br />   4: 53                    push   %rbx<br />   5: 48 8d 1f              lea    (%rdi),%rbx<br />   8: 48 8d 64 24 f8        lea    -0x8(%rsp),%rsp<br />   d: 0f b6 06              movzbl (%rsi),%eax<br />  10: 48 89 3c 24          mov    %rdi,(%rsp)<br />  14: 3c 01                cmp    $0x1,%al<br />  16: 74 4c                je     0x64<br />  18: 3c 02                cmp    $0x2,%al<br />  1a: 0f 84 a2 01 00 00    je     0x1c2<br />  20:* c6 06 00              movb   $0x0,(%rsi) &lt;-- trapping instruction<br />  23: 0f b6 07              movzbl (%rdi),%eax<br />  26: 84 c0                test   %al,%al<br />  28: 0f 84 db 02 00 00    je     0x309<br /><br />and that trapping instruction is, as far as I can tell, this one:<br /><br />        /* By default */<br />        spec-&gt;type = FORMAT_TYPE_NONE;<br /><br />and the fault seems to be a protection fault due to a write to a<br />read-only area (and yes, we *have* read from that 'spec' pointer<br />before that write.<br /><br />&gt; [1027541.965114] RIP: 0010:format_decode+0x20/0x3d0<br />&gt; [1027541.965463] Call Trace:<br />&gt; [1027541.965501]  vsnprintf+0x56/0x4d0<br /><br />This is all very odd, because that "spec" pointer points to an<br />automatic variable on the stack of the vsnprintf() function, but we<br />have:<br /><br />    RSP: ffff9e8c02267ba0<br />    RSI: ffffffffb0428a44<br /><br />so it looks like some completely crazy register state corruption.<br /><br />Is this repeatable at all? Do you see other random faults?<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
