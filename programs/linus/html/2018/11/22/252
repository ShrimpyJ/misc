    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/11/21/173">First message in thread</a></li><li><a href="/lkml/2018/11/21/225">Linus Torvalds</a><ul><li><a href="/lkml/2018/11/21/367">Jiri Kosina</a></li><li><a href="/lkml/2018/11/21/931">Tim Chen</a><ul><li><a href="/lkml/2018/11/22/178">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2018/11/22/214">Dave Hansen</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 21 Nov 2018 12:26:01 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Patch v6 14/16] x86/speculation: Use STIBP to restrict speculation on non-dumpable task</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 21, 2018 at 12:07 PM Dave Hansen &lt;dave.hansen&#64;intel.com&gt; wrote:<br />&gt;<br />&gt; Repurposing dumpable is really screwy and surely imprecise, but it<br />&gt; really is the closest thing that we have without the new ABI.<br /><br />But we *have* a new ABI.<br /><br />So that's not a valid argument.<br /><br />It's more like "this other thing that some other users use for<br />something *entirely* different has in _one_ case the semantics you'd<br />want, but in most cases not at all".<br /><br />Because gpg really is the odd man out.<br /><br />And it's not at all obvious that you can attack gpg using the hole<br />that STIBP opens, when there are other timing attacks that are likely<br />as good or better, and when we know that people who really care about<br />the issue are already just disabling SMT entirely.<br /><br />That's really the basic issue here: STIBP has horrible overhead, _and_<br />it's not even targeting the people who really want it, so we'd better<br />be very targeted in how it's used.<br /><br />Because we already know how badly things messed up when the use of<br />STIBP wasn't targeted.<br /><br />The _only_ very real and direct advantage "dumpable" has is that it<br />hides the problem from benchmarks. Because benchmarks don't test<br />non-dumpable processes.<br /><br />But honestly, that sounds like a disadvantage to me. It smells like<br />"let's hide the overhead dishonestly".<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
