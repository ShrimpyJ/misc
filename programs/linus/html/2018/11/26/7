    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/11/25/89">First message in thread</a></li><li><a href="/lkml/2018/11/25/89">Hugh Dickins</a><ul><li><a href="/lkml/2018/11/25/95">Andrea Arcangeli</a></li><li class="origin"><a href="/lkml/2018/11/26/224">Linus Torvalds</a><ul><li><a href="/lkml/2018/11/26/224">Hugh Dickins</a><ul><li><a href="/lkml/2018/11/27/77">Tim Chen</a></li><li><a href="/lkml/2018/11/27/78">Hugh Dickins</a><ul><li><a href="/lkml/2018/11/27/81">Linus Torvalds</a></li><li><a href="/lkml/2018/11/27/105">Michal Hocko</a></li><li><a href="/lkml/2018/11/27/149">Matthew Wilcox</a></li><li><a href="/lkml/2018/11/27/614">Vlastimil Babka</a></li><li><a href="/lkml/2018/11/27/833">Mike Rapoport</a></li><li><a href="/lkml/2019/1/10/145">Vlastimil Babka</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 25 Nov 2018 10:30:25 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mm: put_and_wait_on_page_locked() while page is migrated</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Nov 24, 2018 at 7:21 PM Hugh Dickins &lt;hughd&#64;google.com&gt; wrote:<br />&gt;<br />&gt; Linus, I'm addressing this patch to you because I see from Tim Chen's<br />&gt; thread that it would interest you, and you were disappointed not to<br />&gt; root cause the issue back then.  I'm not pushing for you to fast-track<br />&gt; this into 4.20-rc, but I expect Andrew will pick it up for mmotm, and<br />&gt; thence linux-next.  Or you may spot a terrible defect, but I hope not.<br /><br />The only terrible defect I spot is that I wish the change to the<br />'lock' argument in wait_on_page_bit_common() came with a comment<br />explaining the new semantics.<br /><br />The old semantics were somewhat obvious (even if not documented): if<br />'lock' was set,  we'd make the wait exclusive, and we'd lock the page<br />before returning. That kind of matches the intuitive meaning for the<br />function prototype, and it's pretty obvious in the callers too.<br /><br />The new semantics don't have the same kind of really intuitive<br />meaning, I feel. That "-1" doesn't mean "unlock", it means "drop page<br />reference", so there is no longer a fairly intuitive and direct<br />mapping between the argument name and type and the behavior of the<br />function.<br /><br />So I don't hate the concept of the patch at all, but I do ask to:<br /><br /> - better documentation.<br /><br />   This might not be "documentation" at all, maybe that "lock"<br />variable should just be renamed (because it's not about just locking<br />any more), and would be better off as a tristate enum called<br />"behavior" that has "LOCK, DROP, WAIT" values?<br /><br /> - while it sounds likely that this is indeed the same issue that<br />plagues us with the insanely long wait-queues, it would be *really*<br />nice to have that actually confirmed.<br /><br />   Does somebody still have access to the customer load that triggered<br />the horrible scaling issues before?<br /><br />In particular, on that second issue: the "fixes" that went in for the<br />wait-queues didn't really fix any real scalability problem, it really<br />just fixed the excessive irq latency issues due to the long traversal<br />holding a lock.<br /><br />If this really fixes the fundamental issue, that should show up as an<br />actual performance difference, I'd expect..<br /><br />End result: I like and approve of the patch, but I'd like it a lot<br />more if the code behavior was clarified a bit, and I'd really like to<br />close the loop on that old nasty page wait queue issue...<br /><br />                   Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
