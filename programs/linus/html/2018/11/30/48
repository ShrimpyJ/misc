    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/11/26/951">First message in thread</a></li><li><a href="/lkml/2018/11/29/1830">Linus Torvalds</a><ul><li><a href="/lkml/2018/11/30/1">Linus Torvalds</a></li><li><a href="/lkml/2018/11/30/4">Steven Rostedt</a><ul><li><a href="/lkml/2018/11/30/28">Linus Torvalds</a><ul><li><a href="/lkml/2018/11/30/52">Steven Rostedt</a><ul><li><a href="/lkml/2018/11/30/65">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2018/11/30/5">Andy Lutomirski</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2018/11/30/60">Steven Rostedt</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Nov 2018 10:42:09 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2 4/4] x86/static_call: Add inline static call implementation for x86-64</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 29, 2018 at 10:00 AM Andy Lutomirski &lt;luto&#64;amacapital.net&gt; wrote:<br />&gt; &gt; then it really sounds pretty safe to just say "ok, just make it<br />&gt; &gt; aligned and update the instruction with an atomic cmpxchg or<br />&gt; &gt; something".<br />&gt;<br />&gt; And how do we do that?  With a gcc plugin and some asm magic?<br /><br />Asm magic.<br /><br />You already have to mark the call sites with<br /><br />    static_call(fn, arg1, arg2, ...);<br /><br />and while it right now just magically depends on gcc outputting the<br />right code to call the trampoline. But it could do it as a jmp<br />instruction (tail-call), and maybe that works right, maybe it doesn't.<br />And maybe some gcc switch makes it output it as a indirect call due to<br />instrumentation or something. Doing it with asm magic would, I feel,<br />be safer anyway, so that we'd know *exactly* how that call gets done.<br /><br />For example, if gcc does it as a jmp due to a tail-call, the<br />compiler/linker could in theory turn the jump into a short jump if it<br />sees that the trampoline is close enough. Does that happen? Probably<br />not. But I don't see why it *couldn't* happen in the current patch<br />series. The trampoline is just a regular function, even if it has been<br />defined by global asm.<br /><br />Putting the trampoline in a different code section could fix things<br />like that (maybe there was a patch that did that and I missed it?) but<br />I do think that doing the call with an asm would *also* fix it.<br /><br />But the "just always use a trampoline" is certainly the simpler model.<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
