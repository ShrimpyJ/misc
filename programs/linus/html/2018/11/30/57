    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/11/22/1094">First message in thread</a></li><li><a href="/lkml/2018/11/29/1797">Linus Torvalds</a><ul><li><a href="/lkml/2018/11/30/37">Christoph Hellwig</a><ul><li class="origin"><a href="/lkml/2018/11/30/61">Linus Torvalds</a><ul><li><a href="/lkml/2018/11/30/61">Christoph Hellwig</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Nov 2018 10:53:32 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: remove the -&gt;mapping_error method from dma_map_ops V2</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 29, 2018 at 10:31 AM Christoph Hellwig &lt;hch&#64;lst.de&gt; wrote:<br />&gt;<br />&gt; &gt; Or, better yet, plan on removing the single-page dma mappign entirely<br />&gt; &gt; at a later date, and make the issue moot.<br />&gt;<br />&gt; What would be the replacement?  Build a S/G list for every single page<br />&gt; mapping?  Not sure that would create a lot of happy campers..<br /><br />It's what we ended up doing with some other cases, and it didn't<br />really end up hurting as much as I thought it would.<br /><br />I'm thinking of the vfs functions that end up turning "buf, len" into<br /><br />        struct iovec iov = { .iov_base = (void __user *)buf, .iov_len = len };<br /><br />and then passing it around as a single-entry iov instead (not even<br />that - they end up being an iov_iter, which is not just the iov, but<br />the whole "what _kind_ of iov" indirection)<br /><br />Maybe a very similar model could be used for just simplifying the core<br />dma mapping setup: sure, people will want to do single-area dma, but<br />how bad would it be to just turn them into single-entry SG lists on<br />stack, and then the dma-maping internally would just always see that?<br /><br />Most of the high-performance IO is already using SG lists anyway, no?<br />Disk/networking/whatever.<br /><br />But just an idea. And the "map_sg()" error handling isn't actually any<br />better, I think. It returns zero on error, no? So it's not improving<br />the error handling.<br /><br />The whole dma-mapping layer seems full of those kinds of "inspired<br />error handling choices" ;)<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
