    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/10/28/211">First message in thread</a></li><li><a href="/lkml/2018/10/29/680">Linus Torvalds</a><ul><li><a href="/lkml/2018/10/30/1">Harry Cutts</a><ul><li class="origin"><a href="/lkml/2018/10/30/102">Linus Torvalds</a><ul><li><a href="/lkml/2018/10/30/102">Harry Cutts</a><ul><li><a href="/lkml/2018/10/30/113">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 29 Oct 2018 14:11:36 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Logitech high-resolution scrolling..</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Oct 29, 2018 at 12:17 PM Harry Cutts &lt;hcutts&#64;chromium.org&gt; wrote:<br />&gt;<br />&gt; I don't really understand why the half-multiplier thing would cause<br />&gt; the instability; there's still a low-res threshold every 8 high-res<br />&gt; units whichever way you do it<br /><br />No there isn't.<br /><br />So what the half-multiplier did, assuming a multiplier of 8 (which is<br />what my MX Anywhere 2S reports) would be:<br /><br /> - remainder starts at 3<br /> - high-res is +1<br /> - now remainder is 3+1, and it triggers the &gt;= half logic<br /> - 4/8 is 0, but then the code added 1 because high-res was positive,<br />so the code decides to add 1<br /> - the code does a wheel update of 1, and updates remainder with -8,<br />so now it's -4<br /><br />Next time around, if the high-res update is 0 or -1, it will go the<br />other direction. And then it will oscillate.<br /><br />Notice how tiny movements of +1/-1 in the *high-res* count can<br />translate into +1/-1 in the regular wheel movement.<br /><br />And those tiny movements very definitely happen. Maybe it's just my<br />mouse, but the undeniable fact is that the old algorithm was simply<br />not stable.<br /><br />It was literally unusable. I had to be careful not to even touch the<br />wheel at all, or it would scroll randomly.<br /><br />I do not believe that you actually ever *used* that code, or if you<br />did, you only did so with applications that were high-res aware and<br />ignored the regular wheel entirely because you were testing in an<br />environment with other changes than just the kernel.<br /><br />                    Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
