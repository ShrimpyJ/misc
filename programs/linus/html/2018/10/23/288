    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/10/23/288">First message in thread</a></li><li class="origin"><a href="/lkml/2018/10/23/296">Linus Torvalds</a><ul><li><a href="/lkml/2018/10/23/296">Linus Walleij</a><ul><li><a href="/lkml/2018/10/23/317">Linus Torvalds</a><ul><li><a href="/lkml/2018/10/23/341">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2018/10/23/355">Mark Brown</a></li><li><a href="/lkml/2018/10/23/356">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2018/10/23/311">Willy Tarreau</a><ul><li><a href="/lkml/2018/10/23/327">Linus Torvalds</a></li><li><a href="/lkml/2018/10/23/335">Takashi Iwai</a></li></ul></li><li><a href="/lkml/2018/10/23/325">Ingo Molnar</a></li><li><a href="/lkml/2018/10/23/328">Boris Brezillon</a><ul><li><a href="/lkml/2018/10/23/357">Mark Brown</a></li></ul></li><li><a href="/lkml/2018/10/23/329">Mark Brown</a></li><li><a href="/lkml/2018/10/23/339">Greg KH</a></li><li><a href="/lkml/2018/10/23/363">James Morris</a></li><li><a href="/lkml/2018/10/23/366">Jens Axboe</a></li><li><a href="/lkml/2018/10/23/460">Ulf Hansson</a><ul><li><a href="/lkml/2018/10/24/42">Jacek Anaszewski</a></li></ul></li><li><a href="/lkml/2018/10/24/17">Olof Johansson</a></li><li><a href="/lkml/2018/10/25/79">Kees Cook</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 23 Oct 2018 09:41:32 +0100</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Git pull ack emails..</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">So I've obviously started pulling stuff for the merge window, and one<br />of the things I noticed with Greg doing it for the last few weeks was<br />that he has this habit (or automation) to send Ack emails when he<br />pulls.<br /><br />In fact, I reacted to them not being there when he sent himself his<br />fake pull messages. Because he didn't then send himself an ack for<br />having pulled it ;(<br /><br />And I actually went into this saying "I'll try to do the same".<br /><br />But after having actually started doing the pulls, I notice how it<br />doesn't work well with my traditional workflow, and so I haven't been<br />doing it after all.<br /><br />In particular, the issue is that after each pull, I do a build test<br />before the pull is really "final", and while that build test is<br />ongoing (which takes anything from a few minutes to over an hour when<br />I'm on the road and using my laptop), I go on and look at the *next*<br />pull (or one of the other pending ones).<br /><br />So by the time the build test has finished, the original pull request<br />is already long gone - archived and done - and I have moved on.<br /><br />End result: answering the pull request is somewhat inconvenient to my<br />flow, which is why I haven't done it.<br /><br />In contrast, this email is written "after the fact", just scripting<br />"who did I pull for and then push out" by just looking at the git<br />tree. Which sucks, because it means that I don't actually answer the<br />original email at all, and thus lose any cc's for other people or<br />mailing lists.  That would literally be done better by simple<br />automation.<br /><br />So I've got a few options:<br /><br /> - just don't do it<br /><br /> - acking the pull request before it's validated and finalized.<br /><br /> - starting the reply when doing the pull, leaving the email open in a<br />separate window, going on to the next pull request, and then when<br />build tests are done and I'll start the next one, finish off the old<br />pending email.<br /><br />and obviously that first option is the easiest one. I'm not sure what<br />Greg did, and during the later rc's it probably doesn't matter,<br />because there likely simply aren't any overlapping operations.<br /><br />Because yes, the second option likely works fine in most cases, but my<br />pull might not actually be final *if* something goes bad (where  bad<br />might be just "oops, my tests showed a semantic conflict, I'll need to<br />fix up my merge" to "I'm going to have to look more closely at that<br />warning" to "uhhuh, I'm going to just undo the pull entirely because<br />it ended up being broken").<br /><br />The third option would work reliably, and not have the "oh, my pull is<br />only tentatively done" issue. It just adds an annoying back-and-forth<br />switch to my workflow.<br /><br />So I'm mainly pinging people I've already pulled to see how much<br />people actually _care_. Yes, the ack is nice, but do people care<br />enough that I should try to make that workflow change? Traditionally,<br />you can see that I've pulled from just seeing the end result when it<br />actually hits the public tree (which is yet another step removed from<br />the steps above - I do build tests between every pull, but I generally<br />tend to push out the end result in batches, usually a couple of times<br />a day).<br /><br />Comments?<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
