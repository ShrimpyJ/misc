    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/7/9/979">First message in thread</a></li><li><a href="/lkml/2018/7/17/974">"Paul E. McKenney"</a><ul><li><a href="/lkml/2018/7/17/982">Peter Zijlstra</a><ul><li><a href="/lkml/2018/7/17/1011">"Paul E. McKenney"</a></li><li><a href="/lkml/2018/7/17/1018">Alan Stern</a></li></ul></li><li><a href="/lkml/2018/7/17/983">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2018/7/17/1014">Linus Torvalds</a><ul><li><a href="/lkml/2018/7/17/1014">"Paul E. McKenney"</a></li></ul></li><li><a href="/lkml/2018/7/17/1009">"Paul E. McKenney"</a></li><li><a href="/lkml/2018/7/17/1012">Alan Stern</a><ul><li><a href="/lkml/2018/7/17/1063">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2018/7/17/1013">Andrea Parri</a><ul><li><a href="/lkml/2018/7/17/1020">"Paul E. McKenney"</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 17 Jul 2018 11:49:41 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2] tools/memory-model: Add extra ordering for locks and remove it for ordinary release/acquire</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 17, 2018 at 11:44 AM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt;  (a) lwsync is a memory barrier for all the "easy" cases (ie<br />&gt; load-&gt;store, load-&gt;load, and store-&gt;load).<br /><br />That last one should have been "store-&gt;store", of course.<br /><br />So 'lwsync' gives smp_rmb(), smp_wmb(), and smp_load_acquire()<br />semantics (which are the usual "no barrier needed at all" suspects for<br />things like x86).<br /><br />What lwsync lacks is store-&gt;load ordering. So:<br /><br />&gt;  (b) lwsync is *not* a memory barrier for the store-&gt;load case.<br /><br />BUT, this is where isync comes in:<br /><br />&gt;  (c) isync *is* (when in that *sequence*) a memory barrier for a<br />&gt; store-&gt;load case (and has to be: loads inside a spinlocked region MUST<br />&gt; NOT be done earlier than stores outside of it!).<br /><br />which is why I think that a spinlock implementation that uses isync<br />would give us the semantics we want, without the use of the crazy<br />expensive 'sync' that Michael tested (and which apparently gets<br />horrible 10% scheduler performance regressions at least on some<br />powerpc CPU's).<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
