    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/7/6/962">First message in thread</a></li><li><a href="/lkml/2018/7/15/174">Ingo Molnar</a><ul><li><a href="/lkml/2018/7/15/243">Jann Horn</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2018/7/15/250">Al Viro</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 15 Jul 2018 18:46:03 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86/mtrr: don't copy out-of-bounds data in mtrr_write</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Jul 15, 2018 at 6:33 PM Jann Horn &lt;jannh&#64;google.com&gt; wrote:<br />&gt;<br />&gt; +Linus, Andy, Al from the other thread<br />&gt;<br />&gt; On Mon, Jul 16, 2018 at 12:03 AM Ingo Molnar &lt;mingo&#64;kernel.org&gt; wrote:<br />&gt; &gt;<br />&gt; &gt; BTW., a naive question: would it make sense to simply disallow 'special'<br />&gt; &gt; fds to be passed to setuid binaries, and fix any user-space that breaks?<br />&gt; &gt; (i.e. only allow regular files and pipes/sockets.)<br />&gt;<br />&gt; If we do that, we'd probably want to do the same for file descriptor<br />&gt; passing through /dev/binder and SCM_RIGHTS. There are already LSM<br />&gt; hooks for most of that because SELinux filters these.<br /><br />I think it's unlikely to make much sense to try to limit fd passing. I<br />can't really see any sane model for doing so. By definition, the file<br />descriptor was opened by the "weak" party (non-suid), and dammit,<br />that's supposed to be the real permission boundary.<br /><br />So I don't think "don't pass fd to suid binary" makes any sense at<br />all. It might break things, and all it does is to paper over the real<br />issue. It smells like a pointless hack that makes little sense.<br /><br />The fact that we have had problems in this area is sad, but I'm hoping<br />people are at least a bit more aware of it.<br /><br />However:<br /><br />&gt; &gt; Also, don't allow splice() on special files either, except if the driver<br />&gt; &gt; explicitly opts in to it.<br />&gt;<br />&gt; In the thread "[PATCH 24/32] vfs: syscall: Add fsopen() to prepare for<br />&gt; superblock creation [ver #9]", Andy Lutomirski suggested something<br />&gt; similar (<a href="https://lore.kernel.org/lkml/338BC3C4-F3E7-48F0-A82E-2C7295B6640E&#64;amacapital.net/">https://lore.kernel.org/lkml/338BC3C4-F3E7-48F0-A82E-2C7295B6640E&#64;amacapital.net/</a>):<br />&gt; handler<br />&gt; | (Al- can’t we just stop allowing splice() at all on things that<br />&gt; don’t use iov_iter?)<br />&gt;<br />&gt; Linus suggested<br />&gt; (<a href="https://lore.kernel.org/lkml/CA">https://lore.kernel.org/lkml/CA</a>+55aFxGqLfu1pjT5421k7KbSd94NWU4fw0H-zJe-qSWwBfAeQ&#64;mail.gmail.com/):<br />&gt;<br />&gt; | We could add a FMODE_SPLICE_READ/WRITE bit, and let people opt in to<br />&gt; | splice. We probably should have.<br /><br />Right. We already use FMODE_xyz to limit various operations (ie we can<br />already say "this file is not seekable" etc), and I have to say, the<br />special magiuc splice() behavior has been an issue.<br /><br />We did the "FMODE_PREAD/PWRITE" flags exactly because we wanted to<br />have the right ESPIPE behavior from file descriptors that simply<br />couldn't do lseek. And splice() is very much another "some file<br />descriptors do not like it".<br /><br />So adding FMODE_SPLICE_READ/WRITE and then just forcing subsystems to<br />opt in to it sounds fairly simple. The people who really want splice<br />tend to just want pipes, regular files and network sockets, so<br />starting out with those opted it should pretty much cover it.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
