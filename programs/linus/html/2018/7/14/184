    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/7/2/21">First message in thread</a></li><li><a href="/lkml/2018/7/14/181">Al Viro</a><ul><li><a href="/lkml/2018/7/14/182">Al Viro</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2018/7/18/676">Waiman Long</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 14 Jul 2018 11:43:57 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v5 0/6] fs/dcache: Track &amp; limit # of negative dentries</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Jul 14, 2018 at 11:36 AM Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt;<br />&gt; OK, this<br />&gt;         /*<br />&gt;          * No ordinary (disk based) filesystem counts links as inodes;<br />&gt;          * but each new link needs a new dentry, pinning lowmem, and<br />&gt;          * tmpfs dentries cannot be pruned until they are unlinked.<br />&gt;          */<br />&gt;         ret = shmem_reserve_inode(inode-&gt;i_sb);<br />&gt;         if (ret)<br />&gt;                 goto out;<br />&gt; will probably help (on ramfs it won't, though).<br /><br />Nobody who cares about memory use would use ramfs and then allow<br />random users on it.<br /><br />I think you can exhaust memory more easily on ramfs by just writing a<br />huge file. Do we have any limits at all?<br /><br />ramfs is fine for things like initramfs, but I think the comment says it all:<br /><br /> * NOTE! This filesystem is probably most useful<br /> * not as a real filesystem, but as an example of<br /> * how virtual filesystems can be written.<br /><br />and even that comment may have been more correct back in 2000 than it is today.<br /><br />             Linus<br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
