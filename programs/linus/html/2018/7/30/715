    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/7/29/268">First message in thread</a></li><li><a href="/lkml/2018/7/30/68">Amit Pundir</a><ul><li><a href="/lkml/2018/7/30/400">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2018/7/30/445">Amit Pundir</a></li><li class="origin"><a href="/lkml/2018/7/30/877">Linus Torvalds</a><ul><li><a href="/lkml/2018/7/30/877">Hugh Dickins</a><ul><li><a href="/lkml/2018/7/30/995">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 30 Jul 2018 10:32:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 4.18-rc7</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Jul 30, 2018 at 6:01 AM Kirill A. Shutemov &lt;kirill&#64;shutemov.name&gt; wrote:<br />&gt;<br />&gt; I think I missed vma_set_anonymous() somewhere, but I fail to see where.<br /><br />Honestly, by now we just need to revert that commit.<br /><br />It's not even clear that it was a good idea to begin with. The rest of<br />the commits were cleanups, this one was driven by a incorrect<br />VM_BUG_ON() that triggered, and that checked "vma_is_anonymous(vma)"<br />without any explanations of wht it should matter.<br /><br />I think the biggest problem with vma_is_anonymous() may be its name,<br />not what it does.<br /><br />What the code historically *did* (and what vma_is_anonymous() checks)<br />is not "is this anonymous", but rather "does this have any special<br />operations associated with it".<br /><br />The two are similar. But people have grown opinions about exactly what<br />"anonymous" means. If we had named it just "no_vm_ops()", we wouldn't<br />have random crazy checks for "vma_is_anonymous()" in places where it<br />makes no sense.<br /><br />So what I think we want a real explanation for is why people who use<br />"vma_is_anonymous()" care. Instead of trying to change its very<br />historical meaning, we should look at the users, and perhaps change<br />its name.<br /><br />In this case, for example, I think the *real* problem was described by<br />commit 684283988f70 ("huge pagecache: mmap_sem is unlocked when<br />truncation splits pmd"), and the problem is that an existing check<br />that required that mmap_sem was held was changed to say "only for<br />anonymous mappings".<br /><br />But the fact is, you can truncate mappings that don't have any ops just *fine*.<br /><br />So maybe that original BUG() was entirely bogus to begin with, and it<br />shouldn't exist at all?<br /><br />Or maybe the code should test "do I have a vm_file" instead of testing<br />"do I have vm_ops"?<br /><br />What's the problem with just doing split_huge_pmd() there when it's a<br />pmd_trans_huge or pmd_devmap pmd? Why is that VM_BUG_ON_VMA() there in<br />the first place? Why are allegedly "anonymous" mappings so special<br />here for locking?<br /><br />Adding a few more people to the cc, they were involved the last that<br />time VM_BUG_ON_VMA() was modified.<br /><br />New people: see commit bfd40eaff5ab ("mm: fix vma_is_anonymous()<br />false-positives") for details. Right now I think it's getting<br />reverted, but the oops explanation in the commit is about that<br /><br />            kernel BUG at mm/memory.c:1422!<br /><br />which was/is debatable and seems to make no sense (and definitely is<br />still triggerable despite that commit 684283988f70 ("huge pagecache:<br />mmap_sem is unlocked when truncation splits pmd") that limited it a<br />bit - but I think it didn't limit it enough.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
