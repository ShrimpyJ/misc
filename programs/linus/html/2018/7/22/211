    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/7/22/194">First message in thread</a></li><li><a href="/lkml/2018/7/22/194">Andy Lutomirski</a><ul><li><a href="/lkml/2018/7/22/195">Andy Lutomirski</a><ul><li><a href="/lkml/2018/7/22/225">Ingo Molnar</a></li><li><a href="/lkml/2018/7/23/488">Dave Hansen</a><ul><li><a href="/lkml/2018/7/23/1328">Andy Lutomirski</a></li></ul></li></ul></li><li><a href="/lkml/2018/7/22/196">Andy Lutomirski</a><ul><li class="origin"><a href="/lkml/2018/7/22/228">Linus Torvalds</a><ul><li><a href="/lkml/2018/7/22/228">Andy Lutomirski</a></li></ul></li><li><a href="/lkml/2018/7/23/693">Dave Hansen</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 22 Jul 2018 11:27:50 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC 2/2] x86/pti/64: Remove the SYSCALL64 entry trampoline</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Jul 22, 2018 at 10:45 AM Andy Lutomirski &lt;luto&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; This patch changes the code to map the percpu TSS into the user page<br />&gt; tables to allow the non-trampoline SYSCALL64 path to work under PTI.<br /><br />Me likey.<br /><br />However:<br /><br />&gt; This does not add a new direct information leak, since the TSS is<br />&gt; readable by Meltdown from the cpu_entry_area alias regardless.<br /><br />Afaik, it does now potentially expose through meltdown the per-thread<br />entry stack info, which is new.<br /><br />But I don't think that's a show-stopper.<br /><br />&gt;  static void __init pti_clone_user_shared(void)<br />&gt;  {<br />&gt; +       for_each_possible_cpu(cpu) {<br /><br />But this code is pretty disgusting and seems wrong.<br /><br />Do you really want to do all trhe _possible_ cpu's, not just the<br />online ones? I'd rather expose less (think MAXCPU) and then have the<br />CPU hotplug code expose the page as the CPU comes up?<br /><br />&gt; +               unsigned long va = (unsigned long)&amp;per_cpu(cpu_tss_rw, cpu);<br />&gt; +               phys_addr_t pa = per_cpu_ptr_to_phys((void *)va);<br />&gt; +               pte_t *target_pte;<br />&gt; +<br />&gt; +               target_pte = pti_user_pagetable_walk_pte(va);<br /><br />This function only exists if CONFIG_X86_VSYSCALL_EMULATION, so it<br />won't even compile under (very unusual) configurations.<br /><br />The "disgusting" part is that I think it could/should share more code<br />with the vsyscall case, and the whole target-pte checking and setting<br />should be shared too.<br /><br />Beause not being shared, I react to this:<br /><br />&gt; +               set_pte(target_pte, pfn_pte(pa &gt;&gt; PAGE_SHIFT, PAGE_KERNEL));<br /><br />Hmm. The vsyscall code just does<br /><br />        *target_pte = ..<br /><br />without any set_pte() stuff. Do we want/need the PVOP cases, and if<br />so, why doesn't the vsyscall case need it?<br /><br />Anyway, I love the approach, and how this gets rid of the nasty<br />trampoline, so no real complaints, just "this needs some fixups".<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
