    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/11/3/437">First message in thread</a></li><li><a href="/lkml/2018/12/17/754">Linus Torvalds</a><ul><li><a href="/lkml/2018/12/17/763">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2018/12/17/798">Linus Torvalds</a><ul><li><a href="/lkml/2018/12/17/798">Linus Torvalds</a><ul><li><a href="/lkml/2018/12/17/810">James Bottomley</a></li></ul></li><li><a href="/lkml/2018/12/17/843">Mimi Zohar</a><ul><li><a href="/lkml/2018/12/17/850">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2018/12/18/371">Dmitry Vyukov</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Dec 2018 11:06:46 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH RESEND] KEYS: fix parsing invalid pkey info string</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Dec 17, 2018 at 10:49 AM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; So the *simplest* fix would seem to be to literally remove all those<br />&gt; "= -1" for the Opt_err initialization.  Making the code smaller,<br />&gt; simpler, and fixing the bug in the process.<br /><br />Something like this<br /><br />    git  grep -l 'Opt_err = -1' | xargs sed -i 's/Opt_err = -1/Opt_err/'<br /><br />would do it, but I also notice that<br />security/integrity/ima/ima_policy.c then has some truly funky code<br />that plays around with the enum numbers , ie<br /><br />  #define pt(token)     policy_tokens[token + Opt_err].pattern<br /><br />which actually depends on the ordering of policy_tokens[], and depends<br />on the exact values, ie it literally (and quite insanely) sets Opt_err<br />to -1, and then Opt_measure to 1, and leaves 0 unused. That code<br />seriously makes no sense at all, and is fundamentally broken.<br /><br />It would be better to use<br /><br />    #define pt(token)     policy_tokens[token - Opt_measure].pattern<br /><br />instead, but even then you should have a huge comment about how the<br />policy_tokens[] array absolutely has to be properly ordered.<br /><br />Honestly, for being about "security", all of this code seems to be<br />doing some really questionable things with all those Opt_xyz enums.<br /><br />                     Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
