    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/12/21/547">First message in thread</a></li><li><a href="/lkml/2018/12/21/547">Steven Rostedt</a><ul><li><a href="/lkml/2018/12/21/525">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/526">Steven Rostedt</a><ul><li><a href="/lkml/2018/12/22/39">Michael Ellerman</a><ul><li><a href="/lkml/2018/12/22/143">Steven Rostedt</a></li></ul></li></ul></li><li><a href="/lkml/2018/12/21/527">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/528">Steven Rostedt</a><ul><li><a href="/lkml/2018/12/21/579">David Miller</a><ul><li><a href="/lkml/2018/12/21/626">Steven Rostedt</a></li></ul></li></ul></li><li><a href="/lkml/2018/12/21/529">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/530">Steven Rostedt</a><ul><li class="origin"><a href="/lkml/2018/12/21/637">Linus Torvalds</a><ul><li><a href="/lkml/2018/12/21/637">Steven Rostedt</a><ul><li><a href="/lkml/2018/12/21/646">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2018/12/22/59">Malcolm Priestley</a><ul><li><a href="/lkml/2018/12/22/138">Steven Rostedt</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2018/12/21/531">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/532">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/534">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/535">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/536">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/537">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/538">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/539">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/540">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/541">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/542">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/543">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/544">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/545">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/546">Steven Rostedt</a></li><li><a href="/lkml/2018/12/21/550">Steven Rostedt</a><ul><li><a href="/lkml/2018/12/21/553">Steven Rostedt</a><ul><li><a href="/lkml/2018/12/27/3">Michael Ellerman</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 21 Dec 2018 10:51:29 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [for-next][PATCH 23/24] string.h: Add strncmp_prefix() helper macro</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Dec 21, 2018 at 9:57 AM Steven Rostedt &lt;rostedt&#64;goodmis.org&gt; wrote:<br />&gt;<br />&gt; I figured the best thing to do is to create a helper macro and place it<br />&gt; into include/linux/string.h. And go around and fix all the open coded<br />&gt; versions of it later.<br />&gt;<br />&gt; I plan on only applying this patch and updating the tracing hooks for<br />&gt; this merge window. And perhaps use it to fix some of the bugs that were<br />&gt; found.<br /><br />I like the helper function concept, but as they say about CS: "There<br />is only one hard problem in computer science: naming and off-by-one<br />errors".<br /><br />And this one has that problem. The name makes absolutely no sense.<br /><br />Calling it "strncmp_prefix()" when there is no "n" there makes no sense.<br /><br />So drop the "n" from the name.<br /><br />And honestly, maybe it would be better to use a different naming<br />pattern entirely, and avoid the crazy non-boolean "str*cmp()" model.<br />That thing is useful for search comparisons (where "before/after"<br />matters), but it's horrible for the actual "is this true or not",<br />where the code ends up being<br /><br />        if (!strcmp_prefix(a, "prefix")) {<br />                // This is the "Yes, prefix matched" case, despite the<br />"if !" syntax<br /><br />which is just confusing.<br /><br />So I'd really prefer more of a<br /><br />        #define has_prefix(str, prefix) ...<br /><br />model that actually returns a boolean (true if it has a prefix, false<br />if it doesn't), rather than use the "str*cmp" naming and return<br />values.<br /><br />(But I agree that *if* you use the "strcmp" naming, then you do need<br />to hold to the traditional strcmp return value semantics).<br /><br />Hmm?<br /><br />Finally, I also suspect that your helper might be slightly fragile.<br />Doing sizeof() seems broken. I could see somebody using some prefix<br />define for arrays with constant sizes, and doing<br /><br />   #define PFX1 "cpp\0"<br />   #define PFX2 "c\0\0\0"<br />   #define PFX3 "h\0\0\0"<br /><br />or similar. Also, is there a reason you use "&amp;prefix" for the constant<br />test? I don't see that pattern anywhere else. Plus it looks entirely<br />wrong without the parenthesis (ie "&amp;(prefix)" to make sure we group<br />things right).<br /><br />So a lot of small problems, but the naming one is big.<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
