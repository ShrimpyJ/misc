    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/8/20/551">First message in thread</a></li><li><a href="/lkml/2018/8/20/551">Konrad Rzeszutek Wilk</a><ul><li class="origin"><a href="/lkml/2018/8/20/570">Linus Torvalds</a><ul><li><a href="/lkml/2018/8/20/570">Kees Cook</a></li><li><a href="/lkml/2018/8/20/574">Linus Torvalds</a><ul><li><a href="/lkml/2018/8/20/581">Tycho Andersen</a><ul><li><a href="/lkml/2018/8/20/591">Dave Hansen</a></li></ul></li><li><a href="/lkml/2018/8/21/327">David Woodhouse</a><ul><li><a href="/lkml/2018/8/21/454">Liran Alon</a></li></ul></li><li><a href="/lkml/2018/8/31/140">Julian Stecklina</a><ul><li><a href="/lkml/2018/8/31/543">Tycho Andersen</a></li><li><a href="/lkml/2018/9/1/206">Linus Torvalds</a></li><li><a href="/lkml/2018/9/7/1321">Khalid Aziz</a></li></ul></li></ul></li><li><a href="/lkml/2018/8/31/201">James Bottomley</a></li><li><a href="/lkml/2018/9/19/78">Balbir Singh</a><ul><li><a href="/lkml/2018/9/19/711">Jonathan Adams</a><ul><li><a href="/lkml/2018/9/23/18">Balbir Singh</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 20 Aug 2018 14:48:51 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Redoing eXclusive Page Frame Ownership (XPFO) with isolated CPUs in mind (for KVM to isolate its guests per CPU)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 20, 2018 at 2:26 PM Konrad Rzeszutek Wilk<br />&lt;konrad.wilk&#64;oracle.com&gt; wrote:<br />&gt;<br />&gt; See eXclusive Page Frame Ownership (<a href="https://lwn.net/Articles/700606/">https://lwn.net/Articles/700606/</a>) which was posted<br />&gt; way back in in 2016..<br /><br />Ok, so my gut feel is that the above was reasonable within the context<br />of 2016, but that the XPFO model is completely pointless and wrong in<br />the post-Meltdown world we now live in.<br /><br />Why?<br /><br />Because with the Meltdown patches, we ALREADY HAVE the isolated page<br />tables that XPFO tries to do.<br /><br />They are just the normal user page tables.<br /><br />So don't go around doing other crazy things.<br /><br />All you need to do is to literally:<br /><br /> - before you enter VMX mode, switch to the user page tables<br /><br /> - when you exit, switch back to the kernel page tables<br /><br />don't do anything else.  You're done.<br /><br />Now, this is complicated a bit by the fact that in order to enter VMX<br />mode with the user page tables, you do need to add the VMX state<br />itself to those user page tables (and add the actual trampoline code<br />to the vmenter too).<br /><br />So it does imply we need to slightly extend the user mapping with a<br />few new patches, but that doesn't sound bad.<br /><br />In fact, it sounds absolutely trivial to me.<br /><br />The other thing you want to do is is the trivial optimization of "hey.<br />we exited VMX mode due to a host interrupt", which would look like<br />this:<br /><br /> * switch to user page tables in order to do vmenter<br /> * vmenter<br /> * host interrupt happens<br />    - switch to kernel page tables to handle irq<br />    - do_IRQ etc<br />    - switch back to user page tables<br />    - iret<br /> * switch to kernel page tables because the vmenter returned<br /><br />so you want to have some trivial short-circuiting of that last "switch<br />to user page tables and back" dance. It may actually be that we don't<br />even need it, because the irq code may just be looking at what *mode*<br />we were in, not what page tables we were in. I looked at that code<br />back in the meltdown days, but that's already so last-year now that we<br />have all these _other_ CPU bugs we handled.<br /><br />But other than small details like that, doesn't this "use our Meltdown<br />user page table" sound like the right thing to do?<br /><br />And note: no new VM code or complexity. None. We already have the<br />"isolated KVM context with only pages for the KVM process" case<br />handled.<br /><br />Of course, after the long (and entirely unrelated) discussion about<br />the TLB flushing bug we had, I'm starting to worry about my own<br />competence, and maybe I'm missing something really fundamental, and<br />the XPFO patches do something else than what I think they do, or my<br />"hey, let's use our Meltdown code" idea has some fundamental weakness<br />that I'm missing.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
