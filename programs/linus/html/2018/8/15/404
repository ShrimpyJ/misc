    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/8/13/555">First message in thread</a></li><li><a href="/lkml/2018/8/15/325">Linus Torvalds</a><ul><li><a href="/lkml/2018/8/15/382">Kees Cook</a><ul><li class="origin"><a href="/lkml/2018/8/15/432">Linus Torvalds</a><ul><li><a href="/lkml/2018/8/15/432">Alexander Popov</a></li><li><a href="/lkml/2018/8/15/433">Kees Cook</a><ul><li><a href="/lkml/2018/8/15/450">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 15 Aug 2018 12:04:00 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] gcc-plugin updates for v4.19-rc1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 15, 2018 at 11:35 AM Kees Cook &lt;keescook&#64;chromium.org&gt; wrote:<br />&gt;<br />&gt; I swear I'm doing my best. Are you speaking of<br />&gt; stackleak_check_alloca() or stackleak_erase()? These were both<br />&gt; discussed on the list, and we weren't able to come up with<br />&gt; alternatives: in both cases we're off the stack, and recovery is<br />&gt; seemingly impossible.<br /><br />Why do you even *test* that thing? Why don't you just allocate stack<br />and clear it.<br /><br />Dammit, the whole f*cking point of this patch-set is to clear the<br />stack used. It is *not* supposed to do anything else. If the process<br />runs out of stack, that's caught by the vmalloc'ed stack.<br /><br />And if you don't  have vmalloc'ed stack, then clearly you don't care.<br /><br />I refuse to take this kind of code that does stupid things, and then<br />*because* it does those initial stupid things it does even more stupid<br />things to correct for it.<br /><br />I hated the thing to begin with, told people that there are better<br />approaches that don't have the downsides, got ignored, and then I'm<br />pushed crap.<br /><br />No.<br /><br />         Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
