    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2018/8/15/148">First message in thread</a></li><li><a href="/lkml/2018/8/15/488">Linus Torvalds</a><ul><li><a href="/lkml/2018/8/15/491">James Bottomley</a></li><li><a href="/lkml/2018/8/15/496">Yannik Sembritzki</a><ul><li><a href="/lkml/2018/8/15/501">James Bottomley</a><ul><li><a href="/lkml/2018/8/15/509">Yannik Sembritzki</a><ul><li><a href="/lkml/2018/8/15/511">James Bottomley</a></li><li><a href="/lkml/2018/8/15/517">Vivek Goyal</a></li></ul></li><li><a href="/lkml/2018/8/15/514">Vivek Goyal</a><ul><li><a href="/lkml/2018/8/15/516">James Bottomley</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 15 Aug 2018 14:14:27 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Fix kexec forbidding kernels signed with custom platform keys to boot</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 15, 2018 at 2:08 PM Yannik Sembritzki &lt;yannik&#64;sembritzki.me&gt; wrote:<br />&gt;<br />&gt; IMO, this is not okay. The layer of trust should extend from the bottom<br />&gt; (user-provisioned platform key) up. Only trusting the kernel builtin key<br />&gt; later on (wrt. kernel modules) contradicts this principal.<br /><br />This module loading case is not about trusting the *key*.<br /><br />This is about trusting the *build system*.<br /><br />For example, I build my kernels with one single randomly generated key<br />(that gets deleted afterwards). The modules get built with that key<br />too.<br /><br />No amount of added keys later will make a module valid to load.<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
