    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/19/176">First message in thread</a></li><li><a href="/lkml/2004/11/20/20">Nick Piggin</a><ul><li><a href="/lkml/2004/11/20/29">William Lee Irwin III</a></li><li><a href="/lkml/2004/11/20/113">"Martin J. Bligh"</a><ul><li class="origin"><a href="/lkml/2004/11/20/134">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/20/134">William Lee Irwin III</a><ul><li><a href="/lkml/2004/11/20/138">Linus Torvalds</a></li><li><a href="/lkml/2004/11/20/149">Adam Heath</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 20 Nov 2004 09:14:11 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: page fault scalability patch V11 [0/7]: overview</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 20 Nov 2004, Martin J. Bligh wrote:<br />&gt; <br />&gt; Per thread seems much nicer to me - mainly because it degrades cleanly to <br />&gt; a single counter for 99% of processes, which are single threaded.<br /><br />I will pretty much guarantee that if you put the per-thread patches next<br />to some abomination with per-cpu allocation for each mm, the choice will<br />be clear. Especially if the per-cpu/per-mm thing tries to avoid false<br />cacheline sharing, which sounds really "interesting" in itself.<br /><br />And without the cacheline sharing avoidance, what's the point of this <br />again? It sure wasn't to make the code simpler. It was about performance <br />and scalability.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
