    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/18/79">First message in thread</a></li><li><a href="/lkml/2004/11/18/79">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2004/11/18/190">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/18/190">Ingo Molnar</a><ul><li><a href="/lkml/2004/11/18/334">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/18/379">Nick Piggin</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 18 Nov 2004 07:47:45 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch, 2.6.10-rc2] fix __flush_tlb*() preemption bug on CONFIG_PREEMPT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 18 Nov 2004, Ingo Molnar wrote:<br />&gt; <br />&gt; note that reproducing this bug was only possible under PREEMPT_RT (there<br />&gt; it can be triggered in 30 seconds, with the right reproducer) - it needs<br />&gt; a really unlikely scenario which PREEMPT_RT's high concurrency does<br />&gt; offer but which is apparently much harder to reproduce in the vanilla<br />&gt; kernel. The patch fixes x86 and x64. Other architectures are most likely<br />&gt; safe, but they need review as well.<br /><br />Ok, that's a pretty race.<br /><br />However, I'm wondering whether this is the proper approach. After all, a<br />lazy-tlb process should never have any reason to flush its TLB, since "its<br />TLB" just aint there, and it ends up flushing somebody elses.<br /><br />So I assume that this happens only with kswapd or similar? It really might <br />be interesting to make the "we were a lazy tlb, and we're flushing <br />somebody else" case do a stack dump, because I _suspect_ that this really <br />is a special thing, and maybe the right thing to do is to make it special <br />in _that_ path.<br /><br />Very impressive debugging, btw. That must have been painful.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
