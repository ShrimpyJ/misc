    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/26/106">First message in thread</a></li><li><a href="/lkml/2004/11/29/135">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/29/234">Al Viro</a><ul><li><a href="/lkml/2004/12/1/55">Roman Zippel</a></li></ul></li><li><a href="/lkml/2004/11/29/246">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/29/267">(H. Peter Anvin)</a></li><li><a href="/lkml/2004/11/30/2">Herbert Poetzl</a></li><li><a href="/lkml/2004/11/30/7">bert hubert</a></li><li><a href="/lkml/2004/11/30/229">Alexandre Oliva</a><ul><li><a href="/lkml/2004/11/30/251">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/30/269">Alexandre Oliva</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2004/11/30/94">David Howells</a><ul><li><a href="/lkml/2004/11/30/101">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/30/112">David Howells</a></li><li><a href="/lkml/2004/11/30/217">Alexandre Oliva</a><ul><li><a href="/lkml/2004/11/30/222">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2004/11/30/95">David Woodhouse</a><ul><li class="origin"><a href="/lkml/2004/11/30/116">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/30/116">David Woodhouse</a><ul><li><a href="/lkml/2004/11/30/129">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2004/11/30/119">David Howells</a><ul><li><a href="/lkml/2004/11/30/136">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 30 Nov 2004 07:58:05 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] Splitting kernel headers and deprecating __KERNEL__</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 30 Nov 2004, David Woodhouse wrote:<br />&gt;<br />&gt; On Mon, 2004-11-29 at 09:41 -0800, Linus Torvalds wrote:<br />&gt; &gt; In fact, in many ways I'd prefer to have source-level annotations like <br />&gt; &gt; "this is exported to user space" over trying to gather things in one <br />&gt; &gt; place.<br />&gt; <br />&gt; I don't think you would; not once you really tried it. <br />&gt; <br />&gt; That's what the littering of ifdef __KERNEL__ attempts to do, and<br />&gt; there's not really any better way of doing it than that.<br /><br />The fact is, despite this stupid and way-too-long thread, #ifdef <br />__KERNEL__ has worked for over a decade, and works damn well, everything <br />considered. <br /><br />Remember the second-system-syndrome? It comes from people wanting to fix <br />problems in the current implementation, without thinking about all the <br />things that it does _well_ (because the things that work are not on their <br />radar - they just work). And no, __KERNEL__ may not be pretty, but it's <br />damn simple to fix up, and one thing it does really well is allow <br />flexibility in a way that forcing structure does not.<br /><br />I know people like "structure". But it's _waayyy_ overrated. The reason we <br />use C instead of some other programming environment is not that C is the <br />most highly structured language around, but it's the most _flexible_ one, <br />largely because it says "let's give people rope". It allows structure, but <br />if you want to cast things around and use gotos, it says "sure, master, <br />you're the boss".<br /><br />Same thing here. The __KERNEL__ approach says "whatever you want, boss".  <br />It doesn't get in the way. Maybe it doesn't actively _help_ you either,<br />but you never have to fight any structure it imposes on you.<br /><br />Also, there _are_ better ways of annotating it than __KERNEL__. In <br />particular, if we had a "user annotation", I could make sparse sit up and <br />take notice, and _complain_ when you use a non-specific-sized type. That's <br />not just theory - Al Viro was talking about that at some point.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
