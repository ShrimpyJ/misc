    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/26/106">First message in thread</a></li><li><a href="/lkml/2004/11/26/241">Greg KH</a><ul><li><a href="/lkml/2004/11/28/157">Paul Mackerras</a><ul><li class="origin"><a href="/lkml/2004/11/28/176">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/28/176">Jeff Garzik</a><ul><li><a href="/lkml/2004/11/28/178">Al Viro</a></li><li><a href="/lkml/2004/11/29/10">Arjan van de Ven</a></li><li><a href="/lkml/2004/12/4/107">Rob Landley</a></li></ul></li><li><a href="/lkml/2004/11/29/15">David Woodhouse</a><ul><li><a href="/lkml/2004/11/30/21">Alex Riesen</a></li><li><a href="/lkml/2004/12/1/57">Ralf Baechle</a></li></ul></li><li><a href="/lkml/2004/11/29/16">Paul Mackerras</a><ul><li><a href="/lkml/2004/11/29/17">Arjan van de Ven</a></li></ul></li><li><a href="/lkml/2004/11/29/52">Mariusz Mazur</a></li><li><a href="/lkml/2004/11/29/131">Alexandre Oliva</a><ul><li><a href="/lkml/2004/11/29/135">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2004/12/14/7">Werner Almesberger</a><ul><li><a href="/lkml/2004/12/14/72">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 28 Nov 2004 17:28:53 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] Splitting kernel headers and deprecating __KERNEL__</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 29 Nov 2004, Paul Mackerras wrote:<br />&gt; <br />&gt; uint32_t is defined to be exactly 32 bits wide, so where's the problem<br />&gt; in using it instead of __u32 in the headers that describe the<br />&gt; user/kernel interface?  (Ditto for uint{8,16,64}_t, of course.<br /><br />Ok, this discussion has gone on for too long anyway, but let's make it<br />easier for everybody. The kernel uses u8/u16/u32 because:<br /><br />	- the kernel should not depend on, or pollute user-space naming.<br />	  YOU MUST NOT USE "uint32_t" when that may not be defined, and<br />	  user-space rules for when it is defined are arcane and totally<br />	  arbitrary.<br /><br />	- since the kernel cannot use those types for anything that is <br />	  visible to user space anyway, there has to be alternate names. <br />	  The tradition is to prepend two underscores, so the kernel would <br />	  have to use "__uint32_t" etc for its header files.<br /><br />	- at that point, there's no longer any valid argument that it's a <br />	  "standard type" (it ain't), and I personally find it a lot more <br />	  readable to just use the types that the kernel has always used:  <br />	  __u8/__u16/__u32. For stuff that is only used for the kernel, <br />	  the shorter "u8/u16/u32" versions may be used.<br /><br />In short: having the kernel use the same names as user space is ACTIVELY <br />BAD, exactly because those names have standards-defined visibility, which <br />means that the kernel _cannot_ use them in all places anyway. So don't <br />even _try_. <br /><br />On the bigger question of what to do with kernel headers in general, let's <br />just make one thing clear: the kernel headers are for the kernel, and big <br />and painful re-organizations that don't help _existing_ user space are not <br />going to happen.<br /><br />In particular, any re-organization that breaks _existing_ uses is totally<br />pointless. If you break existing uses, you might as well _not_ re-<br />organize, since if you consider kernel headers to be purely kernel-<br />internal (like they should be, but hey, reality trumps any wishes we might <br />have), then the current organization is perfectly fine.<br /><br />So I think this whole discussion has been largely pointless. We undeniably<br />have existing users of kernel headers. That's just a fact.  If we break<br />them, it doesn't _matter_ how the kernel headers look, and then "existing<br />practice" is about as good an organization as anything, and breaking<br />things just to break things is not something I'm in the least interested<br />in. "Beauty"  comes secondary to "usefulness".<br /><br />So I would encourage people to think about ways to clean up some of the <br />worst warts, but take into account:<br /> - testing it out with whatever random collection of old distributions and <br />   special applications is almost impossible. So every single step of the <br />   way should be (a) small and (b) obviously not break any current users.<br /> - cleanup just for the sake of cleanup always needs to take pain into <br />   account. If you cannot make each small step "worth it", then just don't <br />   do it. If the "cleanup" just adds another file and doesn't actually <br />   _help_ anything that you can point to, it's not a cleanup, it's just an <br />   exercise in wanking.<br /><br />IOW, I seriously doubt any "let's reorganize header files just to make it<br />look good" _ever_ accomplished anything. But if there are _specific_<br />header files that have _specific_ problems, let's look at maybe solving<br />those. And if you cannot point to a specific problem with a suggested<br />specific solution, please don't cc me.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
