    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/14/157">First message in thread</a></li><li><a href="/lkml/2004/11/20/125">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/20/136">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/22/229">Len Brown</a></li><li><a href="/lkml/2004/11/26/197">Alan Cox</a></li></ul></li><li><a href="/lkml/2004/11/21/90">Adrian Bunk</a></li><li><a href="/lkml/2004/11/22/221">Len Brown</a><ul><li class="origin"><a href="/lkml/2004/11/22/235">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/22/235">Linus Torvalds</a></li><li><a href="/lkml/2004/11/22/247">Len Brown</a><ul><li><a href="/lkml/2004/11/22/378">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2004/11/22/360">Chris Wright</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 22 Nov 2004 12:02:56 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.6.10-rc2 doesn't boot (if no floppy device)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 22 Nov 2004, Len Brown wrote:<br />&gt; <br />&gt; Windows uses ACPI to probe the legacy motherboard devices, and ACPI uses<br />&gt; what the BIOS finds.  If the BIOS and ACPI don't know about the<br />&gt; motherboard device, then it isn't an ACPI system and among other<br />&gt; failures, it would never have got a nifty Made for Windows sticker, and<br />&gt; thus would have market penetration of approximately 0.<br /><br />One thing that matters is definitely "how does Windows do things", because <br />that's what has been tested. However, "Windows" clearly does not use ACPI <br />for all enumeration, since there are different versions of Windows, and <br />some of them don't (and some of them very much don't boot on all hardware <br />either).<br /><br />In other words, Linux actually needs to be _more_ careful than Windows, <br />because it's supposed to just magically work on pretty much anything out <br />there. Nasty. So "what windows does" can never be anything but a hint on <br />what kind of functionality has ever been tested.<br /><br />&gt; When we enable a link, we must set the ELCR.<br />&gt; When we disable a link, we must clear the ELCR.<br />&gt; We need to be able to enable and disable all links in the system.<br />&gt; <br />&gt; The bug was that while we were were setting the ELCR<br />&gt; when we enabled a link, we were not clearing it when we disabled one.<br /><br />Fair enough. That may be a good fix too, but so far I can see the bug on a <br />system I actually have access to, and my one-liner fixes it in a <br />fundamentally more acceptable manner than any other patch I've seen.<br /><br />Why?  Because _not_ touching things is the other thing that _has_ been<br />tested on machines, ie mb manufacturers actually tend to test things that<br />have no ACPI knowledge at all, still. DOS comes to mind, but so do pretty<br />much all other operating systems.<br /><br />Because of that, there's this dichtonomy: you either do everything exactly<br />like Windows does things, or you try very carefully to do the minimal<br />amount of untrusted accesses possible. Linux ends up mixing the two<br />approaches as best it can.<br /><br />But feel free to send me a patch that doesn't just clear ELCR totally, but<br />clears the bits we are disabling. I just don't believe in the "let's just<br />clear everything" approach. In particular, I don't have the same kind of<br />"ACPI will provide" belief in higher powers that you seem to have.<br /><br />&gt; But if you're more comfortable with disabling the associated ELCR bit<br />&gt; only when we disable links directed at that entry, we can do that too. <br />&gt; The complication with that approach is that links are many to one, so<br />&gt; clearing the bit without disabling all links directed to that entry<br />&gt; would result in a failure.  Also, the SCI uses the ELCR too, and it<br />&gt; isn't described by links at all.<br /><br />Wouldn't it be nicer to take the _reverse_ approach: let's assume that any <br />PCI interrupts that we have already enabled are fine and should not be <br />disabled? Mark them in the ELCR, and _report_ when the ELCR seems to be <br />incorrect (let's make a wild guess here, and realize that the screaming <br />VIA interrupts you talk about are exactly because the ELCR was wrong).<br /><br />This is exactly what you are already doing with SCI, thanks to<br />"acpi_pic_sci_set_trigger()", no?<br /><br />So I'm really suggesting that instead of disabling the PCI irq routing, it <br />should do exactly the same thing that SCI already does. Namely make sure <br />that ELCR is set correctly for it.<br /><br />So in "acpi_pci_link_add()", when you find a link that is enabled, add a<br />call to make sure that it is set to level triggered in the ELCR. That's<br />not even ACPI-specific, now we're talking fundamental PCI behaviour, so <br />the likelihood of that being wrong is pretty low, no?<br /><br />That seems like a _safe_ thing to do.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
