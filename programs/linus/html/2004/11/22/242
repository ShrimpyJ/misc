    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/20/89">First message in thread</a></li><li><a href="/lkml/2004/11/22/160">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/22/196">Jan Engelhardt</a></li><li><a href="/lkml/2004/11/22/201">Mitchell Blank Jr</a><ul><li><a href="/lkml/2004/11/22/205">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/22/249">Duncan Sands</a><ul><li><a href="/lkml/2004/11/23/107">Nix</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 22 Nov 2004 11:16:27 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: sparse segfaults</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 22 Nov 2004, Mitchell Blank Jr wrote:<br />&gt; <br />&gt; When gcc accepts an arbitrary algebraic expression as an lvalue I'll be<br />&gt; impressed :-)<br /><br />Btw, the "+0" thing is something that actually might be dropped pretty <br />early, and as such a compiler _might_ get it wrong just because it ended <br />up optimizing the expression away. So you don't need to be all that <br />impressed, certain trivial expressions might just disappear under some <br />circumstances.<br /><br />Side note: the _biggest_ reason why "+0" is hard to optimize away early is<br />actually type handling, not the expression itself. The C type rules means<br />that "+0" isn't actually a no-op: it implies type expansion for small<br />integer types etc.<br /><br />So I agree that it's unlikely to be a problem in practice, but I literally <br />think that the reason gcc ends up considering a comma-operator to be an <br />lvalue, but not a +-operator really _is_ the type-casting issues. A comma <br />doesn't do implicit type expansion.<br /><br />What I find really strange is the ternary operator lvalue thing, though. A <br />ternary operator _does_ do type expansion, so that extended lvalue thing <br />is really quite complex for ternary ops. Try something like this:<br /><br />	int test(int arg)<br />	{<br />		char c;<br />		int i;<br /><br />		return (arg ? c : i) = 1023;<br />	}<br /><br />and think about what a total disaster that is. Yes, gcc gets it right, but<br />dammit, what a total crock. The people who thought of this feature should<br />just be shot.<br /><br />(Yes, it looks cool. Oh, well. The compiler can always simplify the <br />expression "(a ? b : c) = d" into "tmp = d ; a ? b = tmp : c = tmp", but <br />hey, so can the user, so what's the point? Looking at the output from <br />gcc, it really looks like gcc actually handles it as a special case, <br />rather than as the generic simplification. Scary. Scary. Scary.)<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
