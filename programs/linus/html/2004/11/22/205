    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/20/89">First message in thread</a></li><li><a href="/lkml/2004/11/22/160">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/22/196">Jan Engelhardt</a></li><li><a href="/lkml/2004/11/22/201">Mitchell Blank Jr</a><ul><li class="origin"><a href="/lkml/2004/11/22/249">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/22/249">Duncan Sands</a><ul><li><a href="/lkml/2004/11/23/107">Nix</a></li></ul></li></ul></li><li><a href="/lkml/2004/11/22/242">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 22 Nov 2004 10:54:17 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: sparse segfaults</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 22 Nov 2004, Mitchell Blank Jr wrote:<br />&gt; <br />&gt; When I want to do that I just use:<br />&gt; <br />&gt; 	#define MAX_SOMETHING (max_of_something + 0)<br /><br />Yes, I think I've done that too, and that works. My point is that the <br />silly comma-expression should _also_ work, and I don't see any _valid_ use <br />of the comma-expression as an lvalue.<br /><br />I suspect (but don't have any real argument to back that up) is that the<br />gcc "extended lvalues" fell out as a side effect from how gcc ended up<br />doing some random semantic tree parsing, and it wasn't really "designed"<br />per se, as much as just a random implementation detail. Then somebody <br />noticed it, and said "cool" and documented it.<br /><br />That's actually in my opinion a really good way to occasionally find a<br />more generic form of something - the act of noticing that an algorithm<br />just happens to give unintentional side effects that can actually be<br />mis-used. So I don't think that it's a bad way per se to add features,<br />especially as they then are often free (or even "negative cost", since<br />_not_ adding the feature would entail having to add a check against it).<br /><br />And for all I know, many of the _good_ gcc features ended up being done <br />that way too. <br /><br />But I think the (unintentional) downsides of these features are bigger <br />than the advantages.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
