    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/15/115">First message in thread</a></li><li><a href="/lkml/2004/11/15/138">Linus Torvalds</a><ul><li><a href="/lkml/2004/11/15/179">"Randy.Dunlap"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Nov 2004 15:10:52 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Regparm for x86 machine check handlers</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 15 Nov 2004, Randy.Dunlap wrote:<br />&gt; <br />&gt; and omit "asmlinkage.*sys_xyz".  that leaves a handful of functions<br />&gt; which are &lt;asm&gt;, like:<br />&gt; <br />&gt; acpi_status asmlinkage acpi_enter_sleep_state(u8 sleep_state);<br />&gt; csum_partial(), csum_partial_copy_generic(),<br />&gt; schedule_tail(), aes_enc_blk(), aes_dec_blk().<br /><br />The schedule_tail() usage seems a bit suspect. The asm code on x86 seems <br />to play it safe, and pass the argument _both_ on the stack and in <br />registers. So it looks correct, but a bit schitzo.<br /><br />The others should probably be changed to use register calling conventions,<br />but it might not be worth doing so right now, and at least they seem to<br />agree on how to pass arguments in callers and callee's. The csum functions<br />are certainly performance-critical, but it's not like the argument passing <br />convention is likely to make _that_ big of a difference, and they are <br />"asmcall" not because they are called from asm, but because they are <br />_implemented_ in asm (so unlike the other cases, these guys don't have<br />the problem with the callee thinking it owns the argument frame).<br /><br />&gt; I don't see others than need to be fixed, but a script<br />&gt; would be a safer way to check, so I'm trying to nail down<br />&gt; the requirements ... and what tool to use, like is there<br />&gt; already a PERL [or python or xyz] script that parses C,<br />&gt; or would you *coff* recommend sparse?<br /><br />Sparse can't look into the asm code, but it could certainly be made to <br />report on functions that use "regparm(0)". But it would be good to have <br />something that matches up the functions with the asm code and verifies <br />that they agree on passing convention.<br /><br />There doesn't seem to be enough of them to bother with a tool, though.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
