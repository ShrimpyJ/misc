    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/10/29/445">First message in thread</a></li><li><a href="/lkml/2004/10/30/137">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/30/189">Denis Vlasenko</a><ul><li><a href="/lkml/2004/10/30/193">Lee Revell</a><ul><li><a href="/lkml/2004/10/30/213">Denis Vlasenko</a><ul><li><a href="/lkml/2004/10/30/219">Lee Revell</a></li><li><a href="/lkml/2004/10/30/220">Tim Hockin</a></li></ul></li><li><a href="/lkml/2004/10/31/14">Jan Engelhardt</a></li></ul></li></ul></li><li><a href="/lkml/2004/10/30/268">Andi Kleen</a><ul><li class="origin"><a href="/lkml/2004/10/30/283">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/30/283">Andi Kleen</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Oct 2004 18:43:21 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Semaphore assembly-code bug</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 31 Oct 2004, Andi Kleen wrote:<br />&gt; <br />&gt; Using the long stack setup code was found to be a significant<br />&gt; win when enough registers were saved (several percent in real benchmarks) <br />&gt; on K8 gcc. <br /><br />For _what_?<br /><br />Real applications, or SpecInt?<br /><br />The fact is, SpecInt is not very interesting, because it has almost _zero_<br />icache footprint, and it has generally big repeat-rates, and to make<br />matters worse, you are allowed (and everybody does) warm up the caches by<br />running before you actually do the benchmark run.<br /><br />_None_ of these are realistic for real life workloads. <br /><br />&gt;  It speed up all function calls considerably because it <br />&gt; eliminates several stalls for each function entry/exit. <br /><br />.. it shaves off a few cycles in the cached case, yes.<br /><br />&gt; The popls will all depend on each other because of their implicied<br />&gt; reference to esp.<br /><br />Which is only true on moderately stupid CPU's. Two pop's don't _really_ <br />depend on each other in any real sense, and there are CPU's that will <br />happily dual-issue them, or at least not stall in between (ie the pop's <br />will happily keep the memory unit 100% busy).<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
