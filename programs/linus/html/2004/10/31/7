    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/10/30/293">First message in thread</a></li><li><a href="/lkml/2004/10/30/293">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/31/3">Roland Dreier</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2004/11/11/161">Greg KH</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Oct 2004 22:03:20 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Sparse "context" checking..</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 30 Oct 2004, Roland Dreier wrote:<br />&gt;<br />&gt;     Linus&gt; In particular, this is designed for doing things like<br />&gt;     Linus&gt; matching up a "lock" with the pairing "unlock", and right<br />&gt;     Linus&gt; now that's exactly what the code does: it makes each<br />&gt;     Linus&gt; spinlock count as "+1" in the context, and each spinunlock<br />&gt;     Linus&gt; count as "-1", and then hopefully it should all add up.<br />&gt; <br />&gt; Do you have a plan for how to handle functions like spin_trylock()?  I<br />&gt; notice in the current tree you just didn't annotate spin_trylock().<br /><br />Actually, the _current_ tree does actually annotate spin_trylock() (as of<br />just before I sent out the email). It looks like<br /><br />	#define spin_trylock(lock)      __cond_lock(_spin_trylock(lock))<br /><br />where __cond_lock() for sparse is<br /><br />	include/linux/compiler.h:# define __cond_lock(x)        ((x) ? ({ __context__(1); 1; }) : 0)<br /><br />ie we add a "+1" context marker for the success case.<br /><br />NOTE! This works with sparse only because sparse does immediate constant <br />folding, so if you do<br /><br />	if (spin_trylock(lock)) {<br />		..<br />		spin_unlock(lock);<br />	}<br /><br />sparse linearizes that the right way unconditionally, and even though <br />there is a data-dependency, the data depenency is constant. However, if <br />some code does<br /><br />	success = spin_trylock(lock);<br />	if (success) {<br />		..<br />		spin_unlock(lock);<br />	}<br /><br />sparse would complain about it, because sparse doesn't do any _real_ data <br />flow analysis.<br /><br />So sparse can follow all the obvious cases, including trylock and<br />"atomic_dec_and_lock()".<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
