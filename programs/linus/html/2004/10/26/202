    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/10/26/182">First message in thread</a></li><li><a href="/lkml/2004/10/26/182">"Lincoln D. Durey"</a><ul><li class="origin"><a href="/lkml/2004/10/26/277">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/26/277">David Hinds</a></li><li><a href="/lkml/2004/10/26/292">"Lincoln D. Durey"</a><ul><li><a href="/lkml/2004/10/26/296">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/26/307">William Lee Irwin III</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 26 Oct 2004 11:28:25 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Sony S170 + 1GB ram =&gt; Yenta: ISA IRQ mask 0x0000</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 26 Oct 2004, Lincoln D. Durey wrote:<br />&gt; <br />&gt; So, now we have a new Sony S170 (spiffy ultra-portable laptop) with a <br />&gt; failure to recognize cards when it has 1GB ram installed.  And I'm <br />&gt; wondering if anyone wants to tackle having the kernel PCI system remap this <br />&gt; pcmcia socket's memory so it can see cards ?<br />&gt; <br />&gt;         booting with 1GB ram:<br />&gt; <br />&gt; kernel: Linux Kernel Card Services 3.1.22<br />&gt; kernel:   options:  [pci] [cardbus] [pm]<br />&gt; kernel: Yenta IRQ list 0000, PCI irq9<br />&gt; kernel: Socket status: 00000000<br />&gt; <br />&gt;         revert to 512MB or 768MB ram, and you get a happy PCMCIA slot:<br /><br />Judging by your /proc/iomem, which looks like this:<br /><br />	00100000-3ff6ffff : System RAM<br />	  00100000-002ac223 : Kernel code<br />	  002ac224-003ab5ff : Kernel data<br />	3ff70000-3ff703ff : 0000:00:1f.1		[ ed: IDE controller ]<br />	3ff71000-3ff71fff : 0000:02:04.0		[ ed: cardbus ]<br />	  3ff71000-3ff71fff : yenta_socket<br /><br />the 1GB case should have problem with the IDE controller too, if it has <br />problems with yenta-socket.<br /><br />But maybe you only use PIO mode, in which case I guess it doesn't matter <br />if the MMIO regions are scrogged.<br /><br />Anyway, the problem seems to be that you are doing something bad with the <br />user-defined RAM map, for some reason that is not obvious at all. Your <br />bootup clearly shows:<br /><br />	 BIOS-e820: 0000000000000000 - 000000000009f800 (usable)<br />	 BIOS-e820: 000000000009f800 - 00000000000a0000 (reserved)<br />	 BIOS-e820: 00000000000d8000 - 00000000000e0000 (reserved)<br />	 BIOS-e820: 00000000000e4000 - 0000000000100000 (reserved)<br />	 BIOS-e820: 0000000000100000 - 000000003ff70000 (usable)<br />	 BIOS-e820: 000000003ff70000 - 000000003ff7c000 (ACPI data)<br />	 BIOS-e820: 000000003ff7c000 - 000000003ff80000 (ACPI NVS)<br />	 BIOS-e820: 000000003ff80000 - 0000000040000000 (reserved)<br />	 BIOS-e820: 00000000ff800000 - 00000000ffc00000 (reserved)<br />	 BIOS-e820: 00000000fffff000 - 0000000100000000 (reserved)<br /><br />which means that the BIOS marks the 0x000000003ff70000 - 0000000040000000 <br />region properly reserved, but you bave overridden this (incorrectly) with:<br /><br />	user-defined physical RAM map:<br />	 user: 0000000000000000 - 000000000009f800 (usable)<br />	 user: 000000000009f800 - 00000000000a0000 (reserved)<br />	 user: 00000000000d8000 - 00000000000e0000 (reserved)<br />	 user: 00000000000e4000 - 0000000000100000 (reserved)<br />	 user: 0000000000100000 - 000000003ff70000 (usable)<br /><br />where your manual user-defined RAM map is crap, because it doesn't mark <br />the ACPI region as being reserved.<br /><br />As a result, the kernel doesn't know that there is something there, and <br />will allocate the Cardbus controller (and IDE MMIO) range in that unusable <br />range.<br /><br />So the question is: <br /> - why have you done any user override at all<br /> - and having done so, why aren't the ACPI regions there, marked reserved?<br /><br />It looks like the BIOS is doing everything right, and the problem is <br />entirely with the user-defined values..<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
