    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/10/27/235">First message in thread</a></li><li><a href="/lkml/2004/10/27/241">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/27/399">Thayne Harbaugh</a></li><li><a href="/lkml/2004/10/27/414">Zachary Amsden</a><ul><li class="origin"><a href="/lkml/2004/10/27/463">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/27/463">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/28/408">Zachary Amsden</a></li></ul></li><li><a href="/lkml/2004/10/27/466">"Maciej W. Rozycki"</a></li></ul></li></ul></li><li><a href="/lkml/2004/10/27/424">Zachary Amsden</a><ul><li><a href="/lkml/2004/10/27/371">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2004/10/27/461">Zachary Amsden</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 27 Oct 2004 17:11:37 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Remove some divide instructions</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 27 Oct 2004, Zachary Amsden wrote:<br />&gt; <br />&gt; Backed out everything but i386 and generic.  For the generic version, I <br />&gt; compiled and tested this code outside of the kernel.  Actually, I found <br />&gt; that at least for my tool chain, the generic version<br />&gt; <br />&gt; +# define do_div(n,base) ({                                             \<br />&gt; +       uint32_t __rem;                                                 \<br />&gt; +       if (__builtin_constant_p(base) &amp;&amp; !((base) &amp; ((base)-1))) {     \<br />&gt; +               __rem = ((uint64_t)(n)) % (base);                       \<br />&gt; +               (n) = ((uint64_t)(n)) / (base);                         \<br />&gt; +       } else {                                                        \<br />&gt; +               uint32_t __base = (base);                               \<br />&gt; +               __rem = ((uint64_t)(n)) % __base;                       \<br />&gt; +               (n) = ((uint64_t)(n)) / __base;                         \<br />&gt; +       }                                                               \<br />&gt; +       __rem;          <br />&gt; <br />&gt; Does indeed generate different code for the constant case - without it, <br />&gt; due to the assignment to __base, the shift / mask optimization does not <br />&gt; take place.<br /><br />Oh, damn. That's a separate issue, apparently, and there you just use <br />"__builtin_constant_p()" as a way to check that there are no side effects <br />on "base".<br /><br />Might as well drop the check for the value, since it doesn't matter.<br /><br />Alternatively, we could just document the fact that neither "base" nor "n"<br />are normal arguments to a function. After all, we already _do_ change "n", <br />and the strange calling convention is already documented as nothing but a <br />sick hack to make architectures able to use inline assembly efficiently.<br /><br />I could add a sparse check for "no side effects", if anybody cares (so <br />that you could do<br /><br />	__builtin_warning(<br />		!__builtin_nosideeffects(base),<br />		"expression has side effects");<br /><br />in macros like these.. Sparse already has the logic internally..<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
