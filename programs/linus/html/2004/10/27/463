    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/10/27/235">First message in thread</a></li><li><a href="/lkml/2004/10/27/414">Zachary Amsden</a><ul><li><a href="/lkml/2004/10/27/445">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2004/10/28/408">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/28/408">Zachary Amsden</a><ul><li><a href="/lkml/2004/10/29/6">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2004/10/27/466">"Maciej W. Rozycki"</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 27 Oct 2004 17:47:50 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Remove some divide instructions</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 27 Oct 2004, Linus Torvalds wrote:<br />&gt; <br />&gt; I could add a sparse check for "no side effects", if anybody cares (so <br />&gt; that you could do<br />&gt; <br />&gt; 	__builtin_warning(<br />&gt; 		!__builtin_nosideeffects(base),<br />&gt; 		"expression has side effects");<br />&gt; <br />&gt; in macros like these.. Sparse already has the logic internally..<br /><br />Done. Except I called it __builtin_safe_p(). <br /><br />The kernel sources already know about "__builtin_warning()" (and <br />pre-process it away on gcc), so if you have a new sparse setup (as of two <br />minutes ago ;), you can use this thing to check that arguments to macros <br />do not have side effects.<br /><br />Useful? You be the judge. But it was just a couple of lines in sparse, and<br />doing so also made it obvious how to clean up __builtin_constant_p() a lot<br />at the same time by just re-organizing things a bit.<br /><br />My inliner and statement simplificator isn't perfect, so inline functions<br />sadly are not considered constant (or safe) even if they _do_ end up<br />returning a constant value (or be safe internally).<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
