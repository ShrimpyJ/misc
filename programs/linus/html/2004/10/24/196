    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/10/10/110">First message in thread</a></li><li><a href="/lkml/2004/10/15/118">Linus Torvalds</a><ul><li><a href="/lkml/2004/10/24/192">Pavel Machek</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2004/10/24/196/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 24 Oct 2004 14:18:53 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Totally broken PCI PM calls</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 24 Oct 2004, Pavel Machek wrote:<br />&gt; <br />&gt; Ok, after -Wbitwise for sparse, strict typechecking seems to<br />&gt; work. Unfortunately, it produces a *lot* of noise, for code such as<br />&gt; <br />&gt; static ssize_t disk_show(struct subsystem * subsys, char * buf)<br />&gt; {<br />&gt;         return sprintf(buf, "%s\n", pm_disk_modes[pm_disk_mode]);<br />&gt; }<br />&gt; <br />&gt; ...where pm_disk_mode is __bitwise. That is not really what we<br />&gt; want. Would it be possible to get something similar to __bitwise where<br />&gt; arithmetic is still okay to do?<br /><br />I'll try to get to it - I've spent the last two days on sparse making sure <br />that I can do flow-control checking (things like "a function that gets a <br />spinlock needs to release it"), and it will take a while before I get out <br />of it.<br /><br />But yes, I think it makes sense to have a "unique type" thing that allows <br />arithmetic. And I think it makes sense to have another unique type that <br />disallows _all_ operations (ie truly opaque cookies, where the only valid <br />op is to compare it with another cookie).<br /><br />Maybe Al is interested..<br /><br />		Linus<br /><br />---<br />&gt; With __bitwise, I'd need to do:<br />&gt; <br />&gt; &#64;&#64; -292,15 +297,15 &#64;&#64;<br />&gt;         int i;<br />&gt;         int len;<br />&gt;         char *p;<br />&gt; -       u32 mode = 0;<br />&gt; +       suspend_disk_method_t mode = 0;<br />&gt; <br />&gt;         p = memchr(buf, '\n', n);<br />&gt;         len = p ? p - buf : n;<br />&gt; <br />&gt;         down(&amp;pm_sem);<br />&gt; -       for (i = PM_DISK_FIRMWARE; i &lt; PM_DISK_MAX; i++) {<br />&gt; +       for (i = (int __force) PM_DISK_FIRMWARE; i &lt; (int __force) PM_DISK_MAX; i++) {<br />&gt;                 if (!strncmp(buf, pm_disk_modes[i], len)) {<br />&gt; -                       mode = i;<br />&gt; +                       mode = (suspend_disk_method_t __force) i;<br />&gt;                         break;<br />&gt;                 }<br />&gt;         }<br />&gt; <br />&gt; <br />&gt; ...thats ugly.<br />&gt; <br />&gt; 								Pavel<br />&gt; -- <br />&gt; People were complaining that M$ turns users into beta-testers...<br />&gt; ...jr ghea gurz vagb qrirybcref, naq gurl frrz gb yvxr vg gung jnl!<br />&gt; <br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
