    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/15/196">First message in thread</a></li><li><a href="/lkml/2004/12/30/149">Linus Torvalds</a><ul><li><a href="/lkml/2004/12/30/151">Daniel Jacobowitz</a><ul><li><a href="/lkml/2004/12/30/155">Linus Torvalds</a><ul><li><a href="/lkml/2004/12/31/5">Daniel Jacobowitz</a><ul><li><a href="/lkml/2004/12/31/7">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2004/12/30/154">Andi Kleen</a><ul><li class="origin"><a href="/lkml/2004/12/31/50">Linus Torvalds</a><ul><li><a href="/lkml/2004/12/31/50">Andi Kleen</a><ul><li><a href="/lkml/2004/12/31/71">Davide Libenzi</a></li><li><a href="/lkml/2004/12/31/81">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2004/12/30/200">Jesse Allen</a><ul><li><a href="/lkml/2004/12/31/3">Linus Torvalds</a><ul><li><a href="/lkml/2004/12/31/6">Daniel Jacobowitz</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 30 Dec 2004 16:38:21 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: ptrace single-stepping change breaks Wine</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 31 Dec 2004, Andi Kleen wrote:<br />&gt; <br />&gt; Just looking at all this complexiy and thinking about<br />&gt; making it work on x86-64 too doesn't exactly give a good<br />&gt; feeling in my spine.<br />&gt; <br />&gt; Not to belittle your archivement Linus but it all looks<br />&gt; very overengineered to me.<br /><br />Ehh, do you have any _alternatives_?<br /><br />&gt; I think such complex instruction emulation games will be <br />&gt; hard to maintain and there are very surely bugs in so <br />&gt; much subtle code. <br /><br />There is no complexity anywhere, and we don't actually emulate any <br />instructions at all. The only thing we do is to check _whether_ the <br />instruction is a "popf" - we let the CPU do all the work, we just say "ok, <br />the instruction will set TF, so we should not touch it afterwards.<br /><br />&gt; Can someone repeat again what was wrong with the old ptrace<br />&gt; semantics before the initial change that caused all these complex<br />&gt; changes?  It seemed to work well for years. How about we just<br />&gt; go back to the old state, revert all the recent ptrace changes <br />&gt; and skip all that?<br /><br />Let me count the ways that were wrong before the changes:<br /> - you couldn't debug any code that set TF. Really. ptrace would totally <br />   destroy the TF state in the controlled process, so it would do <br />   something totally different when debugged.<br /> - you couldn't even debug signal handlers, because they were _really_ <br />   hard to get into unless you knew where they were and put a breakpoint <br />   on them.<br /> - you couldn't see the instruction after a system call.<br /> - ptrace returned bogus TF state after a single-step<br /><br />&gt; I would love to skip this all on x86-64, but I would prefer<br />&gt; to not make the behaviour incompatible to i386.<br /><br />I suspect all the code can be shared. In fact, the change to send a<br />SIGTRAP directly rather than play around with "ptrace_notify()" etc is<br />likely totally architecture-independent apart from the calling convention<br />magic, so all of "do_syscall_trace()" could probably be moved into<br />kernel/ptrace.c.<br /><br />The _only_ real complexity is actually following the silly LDT<br />descriptors, and we actually do that (badly) in another place: the AMD<br />"prefetch" check does exactly the same thing except it seems to get a few<br />details wrong (looks like it cannot handle 16-bit code), and only works<br />for the current process.<br /><br />I assume you have that same prefetch thing on x86-64 already, so if<br />anything, you could look at my replacement and see if it would be workable<br />to do the prefetch thing too..<br /><br />IOW, none of the issues involved are new. <br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
