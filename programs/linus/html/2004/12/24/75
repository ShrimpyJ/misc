    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/12/24/74">First message in thread</a></li><li><a href="/lkml/2004/12/24/74">Jim Nelson</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2004/12/25/23">Alan Cox</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 24 Dec 2004 15:28:38 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: A general question on SMP-safe driver code.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 24 Dec 2004, Jim Nelson wrote:<br />&gt; <br />&gt; work if all other areas of the driver that send commands to the board also try for <br />&gt; the semaphore?<br /><br />The most common reason _not_ to use a semaphore, but a single simple <br />spinlock is:<br /> - spinlocks are generally faster. <br /> - you can't use semaphores to protect against interrupts, as interrupts <br />   cannot take semaphores.<br /><br />&gt; Is there an easier way of doing this?<br /><br />The simplest approach tends to be to just have a single spinlock per<br />driver (or, if the driver can drive multiple independent ports, one per<br />port).<br /><br />The only advantage of semaphores is that you can do user accesses and you <br />can sleep during them, but if you're looking at converting a driver that <br />used to just depend on the global interrupt lock, that shouldn't be an <br />issue anyway. Generally, the semaphores are more useful at a higher level <br />(ie there is almost never any reason to protect actual _IO_ accesses with <br />a semaphore).<br /><br />The biggest problem with converting old-style irq locks into spinlocks<br />tends to be that the irq locking allowed nesting (though the use of<br />save_flags/restore_flags), and normal spinlocks don't.<br /><br />You can make your own nesting spinlocks, of course, but the reason there<br />aren't any standard nesting locks in the kernel is that in pretty much all<br />cases you can trivially avoid the nesting by just moving the lock<br />sufficiently far out, or just re-organizing the source a bit.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
