    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/11/15/196">First message in thread</a></li><li><a href="/lkml/2004/12/29/155">Linus Torvalds</a><ul><li><a href="/lkml/2004/12/29/158">Davide Libenzi</a><ul><li class="origin"><a href="/lkml/2004/12/29/191">Linus Torvalds</a><ul><li><a href="/lkml/2004/12/29/191">Linus Torvalds</a><ul><li><a href="/lkml/2004/12/29/194">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2004/12/30/3">Davide Libenzi</a></li></ul></li></ul></li><li><a href="/lkml/2004/12/29/185">Jesse Allen</a></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2004/12/29/164/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Dec 2004 17:55:39 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: ptrace single-stepping change breaks Wine</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 29 Dec 2004, Davide Libenzi wrote:<br />&gt; <br />&gt; That test went in to be able to have ptrace single step, to see even the <br />&gt; instruction following the #int instruction (this was the target of the <br />&gt; patch itself). I just verified that, in 2.6.8 that does not have such test <br />&gt; anymore, the single-step-after-int capability is lost.<br /><br />Ahh. That's because of a separate bug: we have this silly separation of <br />"_TIF_WORK_MASK" (everything but tracing) and "_TIF_ALLWORK_MASK" <br />(everything), and the system call stuff takes over _TIF_SINGLESTEP for <br />some very non-obvious reasons.<br /><br />I don't see why the system-call code thinks _TIF_SINGLESTEP is special, <br />but it certainly explains why it doesn't get handled normally.<br /><br />So the updated patch would look something like the appended.<br /><br />Will test whether it cleanly handles your test-case. Davide - you also <br />added the TIF_SINGLESTEP flag to that _TIF_WORK_MASK, can you explain <br />that?<br /><br />(And yes, I know you'd sent me the test-program before, but I'm about as <br />organized as a Performing Seal with Alzheimers..)<br /><br />		Linus<br /><br />--- 1.23/include/asm-i386/thread_info.h	2004-11-18 23:03:11 -08:00<br />+++ edited/include/asm-i386/thread_info.h	2004-12-29 17:52:16 -08:00<br />&#64;&#64; -153,7 +153,7 &#64;&#64;<br /> <br /> /* work to do on interrupt/exception return */<br /> #define _TIF_WORK_MASK \<br />-  (0x0000FFFF &amp; ~(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT|_TIF_SINGLESTEP))<br />+  (0x0000FFFF &amp; ~(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT))<br /> #define _TIF_ALLWORK_MASK	0x0000FFFF	/* work to do on any return to u-space */<br /> <br /> /*<br />--- 1.28/arch/i386/kernel/ptrace.c	2004-11-22 09:44:52 -08:00<br />+++ edited/arch/i386/kernel/ptrace.c	2004-12-29 17:36:41 -08:00<br />&#64;&#64; -568,15 +568,13 &#64;&#64;<br /> 			audit_syscall_exit(current, regs-&gt;eax);<br /> 	}<br /> <br />-	if (!test_thread_flag(TIF_SYSCALL_TRACE) &amp;&amp;<br />-	    !test_thread_flag(TIF_SINGLESTEP))<br />+	if (!test_thread_flag(TIF_SYSCALL_TRACE))<br /> 		return;<br /> 	if (!(current-&gt;ptrace &amp; PT_PTRACED))<br /> 		return;<br /> 	/* the 0x80 provides a way for the tracing parent to distinguish<br /> 	   between a syscall stop and SIGTRAP delivery */<br />-	ptrace_notify(SIGTRAP | ((current-&gt;ptrace &amp; PT_TRACESYSGOOD) &amp;&amp;<br />-				 !test_thread_flag(TIF_SINGLESTEP) ? 0x80 : 0));<br />+	ptrace_notify(SIGTRAP | ((current-&gt;ptrace &amp; PT_TRACESYSGOOD) ? 0x80 : 0));<br /> <br /> 	/*<br /> 	 * this isn't the same as continuing with a signal, but it will do<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
