    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/8/24/220">First message in thread</a></li><li><a href="/lkml/2004/8/29/229">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/29/241">Trond Myklebust</a><ul><li class="origin"><a href="/lkml/2004/8/29/250">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/29/250">	viro&#64;parcelfa ...</a><ul><li><a href="/lkml/2004/8/29/254">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2004/8/29/251">Trond Myklebust</a></li><li><a href="/lkml/2004/8/30/14">Brad Boyer</a></li><li><a href="/lkml/2004/9/7/286">Tom Vier</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 29 Aug 2004 19:31:49 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: silent semantic changes with reiser4</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 29 Aug 2004, Trond Myklebust wrote:<br />&gt; <br />&gt; Well, yes there has to be a distinction between a true bind mount which<br />&gt; actually covers the file or directory, and something like the stream<br />&gt; "bind mount" which doesn't.<br />&gt; <br />&gt; The stream "bind mount" is just there to allow you to root the<br />&gt; attributes in a single tree. It can be made functionally entirely<br />&gt; equivalent to the openat(), but uses pathname semantics (e.g., "//") to<br />&gt; denote the attribute fork instead of an extra function call.<br /><br />Using '//' would be nice, but would break real apps. If I remember<br />correctly, POSIX specifies that '//' can be special at the _beginning_ of<br />a path, but in the middle, it has to act like a single '/'.<br /><br />And that's not just theory - it's quite common for programs to just <br />concatenate a directory name (which may or may not end with a slash) with <br />another path-name that starts with a slash. So you _will_ see existing <br />scripts and programs using things like "/usr/include//sys/type.h", and <br />they'd break if "//" would switch from "regular namespace" to "attribute <br />namespace".<br /><br />So I don't see any way to extend pathname semantics to distinguish between <br />"directory contents" and "directory attribute stream". <br /><br />&gt; &gt; It's easy enough to do the graph detection at the VFS layer, exactly <br />&gt; &gt; because of the density of the dentry graph. <br />&gt; <br />&gt; Don't you end up having to lock the entire paths b/c/d and a/e/f in<br />&gt; order to prevent "ln a b/c/d/a; ln b a/e/f/b"?<br /><br />That's not the problem - since it's in memory, we can just get the dcache <br />lock, and do it locked for t least local filesystems.<br /><br />However, being prodded by Andries, I think I'm wrong _anyway_. Since the<br />dcache is only "dense" down one path to the root, and doesn't contain all<br />the alternate ways of getting to a particular directory, I came to the<br />conclusion that the VFS layer can't actually do cyclic detection after<br />all...<br /><br />So together with the fact that nobody really _wants_ hardlinks to <br />directories, I think the right answer is "no". It's not a problem as long <br />as the attributes streams are always tied to the file/directory they are <br />attributes of - then the "directory link" is really just a file link, and <br />can't cause any cycles.<br /><br />&gt; &gt;  - how to actually test this out in practice (ie getting reiser4 to do the<br />&gt; &gt;    proper thing wrt the VFS layer, but preferably _also_ having another<br />&gt; &gt;    filesystem like NFSv4 or cifs that actually uses this and shows what<br />&gt; &gt;    the problems are).<br />&gt; <br />&gt; As I said, NFSv4 can be made ready pretty quickly: Bruce is already<br />&gt; finishing up the xattr implementation.<br /><br />Do we have any servers that implement it? I think NFSv4 might be a good <br />test-case if so.<br /><br />&gt; &gt;  - whether it makes any sense at all unless we also make at least a few <br />&gt; &gt;    other filesystems support it, so that people start using it as an <br />&gt; &gt;    "expected feature" rather than a "works only on a couple of machines".<br />&gt; <br />&gt; NTFS? ;-)<br /><br />Hey, I see the smiley, but I'd still like to point out that not many <br />people use it under Linux, and while I think writing to it might be stable <br />these days, I don't believe named streams are necessarily going to <br />materialize all that quickly..<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
