    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/8/24/13">First message in thread</a></li><li><a href="/lkml/2004/8/24/13">Hidetoshi Seto</a><ul><li class="origin"><a href="/lkml/2004/8/24/48">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/24/48">Hidetoshi Seto</a></li><li><a href="/lkml/2004/8/25/30">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2004/8/25/34">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/25/119">Grant Grundler</a></li><li><a href="/lkml/2004/8/25/274">Benjamin Herrenschmidt</a></li></ul></li><li><a href="/lkml/2004/8/25/115">Grant Grundler</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 23 Aug 2004 22:41:41 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC&amp;PATCH 1/2] PCI Error Recovery (readX_check)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 24 Aug 2004, Hidetoshi Seto wrote:<br />&gt; <br />&gt; The basic design of new-found functions are:<br />&gt; <br />&gt; $1. clear_pci_errors(DEVICE)<br />&gt;    - find the highest(host or top PCI-to-PCI) bridge of DEVICE<br />&gt;    - check the status of the highest bridge, and if it indicates error(s):<br />&gt;      - write_lock<br />&gt;      - update each err_status of all devices registered to the working_device<br />&gt;        list of the highest bridge, by "|=" the value of the bridge status<br />&gt;      - clear the bridge status<br />&gt;      - write_unlock<br />&gt;    - clear the err_status of DEVICE<br />&gt;    - register DEVICE to the highest bridge<br />&gt; <br />&gt; $2. readX_check(DEVICE, ADDR)<br />&gt;    - read_lock<br />&gt;    - I/O (read)<br />&gt;    - read_unlock<br />&gt; <br />&gt; $3. read_pci_errors(DEVICE)<br />&gt;    - find the highest bridge of DEVICE<br />&gt;    - store the status of the highest bridge as STATUS<br />&gt;    - check ( STATUS | DEVICE-&gt;err_status )<br />&gt;    - return 1 if error (ex. Master/Target Abort, Party Error), else return 0<br /><br />I'd suggest changing the locking a bit.<br /><br />Just make "clear_pci_errors()" take a spinlock on the bridge, and <br />"read_pci_errors()" unlock it. We need to make sure that if multiple <br />devices on the same bridge try to be careful, they can do so without <br />seeing each others errors.<br /><br />readX_check() itself would do no locking at all, since it is already <br />called with the assumption that the bridge has been locked.<br /><br />I'd also suggest that you make "clear_pci_errors()" return a cookie for <br />read_pci_errors() to use. <br /><br />Also, I assume that the thing would support (and please make the<br />documentation clear on it) multiple IO operations between a<br />"clear_pci_errors()" and it's ending "read_pci_errors()" pair. I can well<br />imagine that a driver might do<br /><br />	int get_data_buffer(struct pci_dev *dev, u32 *buf, int words)<br />	{<br />		int i;<br />		pci_error_t cookie;<br />		unsigned long offset = pci_resource_start(dev, 0) + DATA_OFFSET;<br /><br />		cookie = clear_pci_errors(dev);<br /><br />		/* Get the whole packet of data.. */<br />		for (i = 0; i &lt; words; i++)<br />			*buf++ = readl_check(dev, offset);<br /><br />		/* Did we have any trouble? */<br />		if (read_pci_errors(dev, cookie))<br />			return -EIO;<br /><br />		/* All systems go.. */<br />		return 0;<br />	}<br /><br />to read a "packet" of data from a device. Whatever.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
