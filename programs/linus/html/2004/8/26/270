    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/8/24/220">First message in thread</a></li><li><a href="/lkml/2004/8/26/37">(Markus  =?ISO-8859-1?Q?=20T=F6rnqvist?=)</a><ul><li><a href="/lkml/2004/8/26/262">Jan Harkes</a><ul><li class="origin"><a href="/lkml/2004/8/26/306">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/26/306">Jan Harkes</a></li><li><a href="/lkml/2004/8/30/295">Tom Vier</a><ul><li><a href="/lkml/2004/8/31/3">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2004/9/10/243">Timothy Miller</a><ul><li><a href="/lkml/2004/9/10/287">Elladan</a></li><li><a href="/lkml/2004/9/17/233">Pavel Machek</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2004/9/3/6">=?UTF-8?B?R3J6ZWdvcnogSmHFm2tpZXdpY3o=?=</a><ul><li><a href="/lkml/2004/9/3/11">	viro&#64;parcelfa ...</a><ul><li><a href="/lkml/2004/9/3/15">=?UTF-8?B?R3J6ZWdvcnogSmHFm2tpZXdpY3o=?=</a></li></ul></li><li><a href="/lkml/2004/9/5/53">Tonnerre</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Aug 2004 09:48:04 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: silent semantic changes with reiser4</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 26 Aug 2004, Jan Harkes wrote:<br />&gt; <br />&gt; (btw. the same could be implemented completely in userspace, for<br />&gt; instance in glibc. Whenever an open call gets an EISDIR error, simply<br />&gt; retry the open, but this time with /_contents appended).<br /><br />Yes, and no - just to make it obvious before people jump on this, a lot of <br />things can be prototyped in user space with things like this, but once you <br />have to deal with races and mixed tool environments, user space suddenly <br />doesn't work so well any more.<br /><br />I think Jan understands this distinction, I just wanted to make sure <br />everybody else is aware of the _one_ thing that kernel land does well:<br /><br /> - safely synchronize globally visible data structures<br /><br />That's quite fundamental. 99% of what a kernel does is exactly that. TCP<br />would be in user space too, if it wasn't for _exactly_ this issue. A lot<br />of people think that kernels are about hardware access, and yes, that's<br />the other 99% of the picture (I see the _big_ picture, remember?), but the <br />"safe access to common data" is really very fundamental.<br /><br />The kernel is literally the thing that makes sure that you don't have -<br />and _cannot_ have - user programs that confuse each other by modifying <br />data unsynchronized.<br /><br />For example, a filesystem is really nothing but a way to access a disk in <br />a controlled manner - it's not so much about hardware access, as it is <br />about maintaining a coherent view of how some shared data (disk or <br />whatever) is maintained. <br /><br />Same goes for caches. We could cache things in user space, but if you want <br />to _share_ your caches (so that you don't have to re-load them for every <br />new application), you need some entity that manages those shared data <br />structures in a secure manner. In other words, you need the kernel.<br /><br />The same goes for something like a "container file". Whether you see it as<br />"dir-as-file" or "file-as-dir" (and I agree with Jan that the two are<br />totally equivalent), the point of having the capability in the kernel is<br />not that the operations cannot be done in user space - the point is that<br />they cannot be done in user space _safely_. The kernel is kind of the<br />thing that guarantees that everybody follows the rules.<br /><br />Imagine the security problems if a set-uid program were to (unwittingly) <br />depend on a user-space library that implements what Jan's prototype <br />library would do? Races galore, since a user-space implementation wouldn't <br />have _any_ way to do tests like the above atomically. <br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
