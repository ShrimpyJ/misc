    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/8/24/220">First message in thread</a></li><li><a href="/lkml/2004/8/26/556">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/26/352">Rik van Riel</a><ul><li><a href="/lkml/2004/8/26/356">Christophe Saout</a></li></ul></li><li><a href="/lkml/2004/8/26/360">Rik van Riel</a><ul><li class="origin"><a href="/lkml/2004/8/26/442">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/26/442">Hans Reiser</a><ul><li><a href="/lkml/2004/8/26/460">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2004/8/26/426">Felipe Alfaro Solana</a></li><li><a href="/lkml/2004/8/26/534">Stephen Wille Padnos</a><ul><li><a href="/lkml/2004/9/1/158">(=?ISO-8859-1?Q?Claus_F=E4rber?=)</a><ul><li><a href="/lkml/2004/9/1/190">Alan Cox</a></li></ul></li></ul></li><li><a href="/lkml/2004/8/26/542">Christophe Saout</a><ul><li><a href="/lkml/2004/8/26/538">Jamie Lokier</a></li></ul></li><li><a href="/lkml/2004/8/29/81">Horst von Brand</a><ul><li><a href="/lkml/2004/9/1/347">Jamie Lokier</a><ul><li><a href="/lkml/2004/9/2/2">Olaf Hering</a></li><li><a href="/lkml/2004/9/3/63">Greg KH</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2004/8/26/454">Jamie Lokier</a></li><li><a href="/lkml/2004/8/26/528">Jeremy Allison</a></li><li><a href="/lkml/2004/8/27/10">Hans Reiser</a></li><li><a href="/lkml/2004/8/27/39">Christoph Hellwig</a><ul><li><a href="/lkml/2004/8/27/361">Jeremy Allison</a><ul><li><a href="/lkml/2004/8/28/187">Brad Boyer</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Aug 2004 13:40:14 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: silent semantic changes with reiser4</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 26 Aug 2004, Rik van Riel wrote:<br />&gt; <br />&gt; Thinking about it some more, how would file managers and file chosers<br />&gt; handle this situation ?<br /><br />The same way they already handle it on other platforms that support it? By <br />taking advantage of it..<br /><br />People literally use this for icon and preview information, so some of the<br />stuff shows up very much in file managers. And I'd assume that a normal<br />double-click would just open the main file, and you can right-click for <br />management information, including opening the file.<br /><br />If you want an entity that acts as a directory, you create a directory. <br /><br />Directories don't go away - you still have S_ISDIR() and S_ISREG(), and <br />they still return information. A file that has associated information is <br />still a _file_, and people should treat it that way, it's just that it <br />also has a list of named sub-streams. You can open it as a directory, but <br />the stat information clearly says it is a file, and the "directory" view <br />is very much associated with _that_ file.<br /><br />I definitely don't think you want the file manager to act as if a named <br />stream is exactly the same as a stand-alone file. They have all the same <br />operations, but there's no question that there are differences too. <br />Especially on a conceptual level - but for most filesystems there are <br />likely real technical differences too.<br /><br />For example, it's likely that most filesystems would _not_ allow linking <br />of a named stream anywhere else. And you might not be able to change the <br />permissions or date on the named stream either, since it may or may not <br />have a separate date/permission thing from the container.<br /><br />So don't believe that just because the named streams are _named_ like real <br />files, that they suddenly have any existence beyond the container that <br />they are part of.<br /><br />There may be other limitations too - again depending on how the filesystem<br />actually implements named streams. It might not support more than one<br />level of naming, for example - so you might not be able to create a<br />directory structure within the named streams, for example.<br /><br />In short: the fact that the VFS layer exposes the _capability_ to see the <br />named streams as a full POSIX filesystem of its own does _not_ mean that <br />the low-level filesystem necessarily allows the full possible semantics. <br />So you shouldn't design your apps that know about named streams to think <br />they are normal directories.<br /><br />The directory thing is just a very powerful naming scheme, and one that <br />fits into the existing UNIX model.<br /><br />&gt; Do we really want to have a file paradigm that's different<br />&gt; from the other OSes out there ?<br /><br />Different from what other OSes?<br /><br />Last I looked, Windows, Solaris, and OSX all supported named streams. What <br />other OS's are out there that you care about? <br /><br />In other words, this is _not_ a different paradigm from what others do.  <br />The discussion is whether we want to implement it at all, and more<br />importantly about syntactic issues (ie we clearly already implement<br />extended attributes, just with a much more limited syntactic power).<br /><br />We don't have to go all the way. Solaris has "openat()", which is kind of <br />a half-way there - not really directly available in the same namespace, <br />but at least the result is available as a real file interface (as opposed <br />to the Linux "xattr" interfaces that are _totally_ special-cased system <br />calls).<br /><br />In other words - the paradigm is already there. It's just that currently<br />it's pretty much unusable under Linux, because it requires so much<br />specialized knowledge that it's not worth it to modify existing apps. And<br />the interfaces are really very limited, so even if you _do_ end up using <br />the specialized Linux interfaces, you can't actually do a lot of what you <br />might want to do.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
