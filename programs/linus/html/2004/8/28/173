    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/8/24/220">First message in thread</a></li><li><a href="/lkml/2004/8/27/347">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/28/60">Hans Reiser</a><ul><li><a href="/lkml/2004/8/28/84">Spam</a></li></ul></li><li><a href="/lkml/2004/8/28/156">Helge Hafting</a><ul><li class="origin"><a href="/lkml/2004/8/28/174">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/28/174">Rik van Riel</a></li><li><a href="/lkml/2004/8/28/175">	viro&#64;parcelfa ...</a><ul><li><a href="/lkml/2004/8/28/180">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2004/8/28/259">Hans Reiser</a><ul><li><a href="/lkml/2004/8/28/282">"Alexander G. M. Smith"</a></li><li><a href="/lkml/2004/8/29/4">Linus Torvalds</a></li><li><a href="/lkml/2004/8/30/112">"John Stoffel"</a></li></ul></li><li><a href="/lkml/2004/8/28/272">Jeremy Allison</a></li><li><a href="/lkml/2004/8/30/90">Helge Hafting</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Aug 2004 11:09:38 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: silent semantic changes with reiser4</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 28 Aug 2004, Helge Hafting wrote:<br />&gt;<br />&gt; &gt; I think that lack of distinguishing power is more serious for <br />&gt; &gt; directories. The more I think I think about it, the more I wonder whether <br />&gt; &gt; Solaris did things right - having a special operation to "cross the <br />&gt; &gt; boundary".<br />&gt; &gt; <br />&gt; &gt; I suspect Solaris did it that way because it's a hell of a lot easier to <br />&gt; &gt; do it like that, but regardless, it would solve the issue of real <br />&gt; &gt; directories having both real children _and_ the "extra streams".<br />&gt; <br />&gt; There are many ways of doing this. Several extra streams to a directory<br />&gt; that aren't ordinary files in the directory?<br /><br />Well.. Yes. We already have "." and "..", which are "special extra<br />streams" in a sense. However, people expect them, and know to ignore them. <br />The same wouldn't be true of new naming.<br /><br />&gt; It seems to me that we can get a lot of nice functionality in a simpler way:<br />&gt; Instead of thinking about a number of streams attached to something<br />&gt; that is either an ordinary file or directory, just say that the only<br />&gt; change will be that a directory may have a _single_ file stream in<br />&gt; addition to being a plain directory.<br /><br />That doesn't really help us. What would the name be, and how could you <br />avoid clashes? <br /><br />&gt; If the VFS is to be extended in order to support file-as-directory (or<br />&gt; vice versa) then hopefully it can be done in a simple way.<br /><br />I'm pretty confident that we can extend the VFS layer to support named<br />streams (see the technical discussion with Al, rather than the flames in<br />this thread). I also clearly believe that it is worth it, but I'm starting<br />to wonder if we should have a special open flag to make people select the<br />stream.<br /><br />If you look at the Solaris interface, the _nice_ part about "openat()" is <br />that you can do something like<br /><br />	file = open(filename, O_RDONLY);<br />	if (file &lt; 0)<br />		return -ENOENT;<br />	icon = openat(file, "icon", O_RDONLY | O_XATTR);<br />	if (icon &lt; 0)<br />		icon = default_icon_file;<br />	..<br /><br />and it will work regardless of whether "filename" is a directory or a <br />regular file, if I've understood correctly.<br /><br />Now, I think that makes sense for several reasons:<br /> - single case<br /> - race-free (think "stat()" vs "fstat()" races).<br /> - I think we want to do "openat()" regardless of whether we ever <br />   support extended attributes or not ("openat()" is nice for doing <br />   "namei()" in user space even in the absense of any attributes or <br />   named streams).<br /><br />So what we can do is<br /> - implement openat() regardless, and expect to do the Solaris thing for <br />   it if we ever do streams.<br /> - _also_ support the "implied named attributes" for regular files, so <br />   that you don't have to use "openat()" to access them.<br /><br />Comments? Does anybody hate "openat()" for any reason (regardless of <br />attributes)? We can easily support it, we'd just need to pass in the file <br />to use as part of the "nameidata" thing or add an argument (it would also <br />possibly be cleaner if we made "fs-&gt;pwd" be a "struct file").<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
