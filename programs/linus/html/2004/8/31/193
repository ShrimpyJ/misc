    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2004/8/31/153">First message in thread</a></li><li><a href="/lkml/2004/8/31/153">Albert Cahalan</a><ul><li class="origin"><a href="/lkml/2004/8/31/214">Linus Torvalds</a><ul><li><a href="/lkml/2004/8/31/214">Albert Cahalan</a><ul><li><a href="/lkml/2004/8/31/313">Kyle Moffett</a><ul><li><a href="/lkml/2004/8/31/340">Michael Buesch</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 31 Aug 2004 09:52:30 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: What policy for BUG_ON()?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 31 Aug 2004, Albert Cahalan wrote:<br />&gt; <br />&gt; The normal expectation for non-debug builds<br />&gt; would be this:<br />&gt; <br />&gt; #define BUG_ON(x)<br /><br />No, this is bad, for one big reason: it generates compiler warnings if 'x'<br />happens to be the only thing that uses some value. You get things like<br />"unused variable 'mode'" etc in perfectly good code.<br /><br />For example, the code might look something like<br /><br />	int count = 0;<br /><br />	for_each_online_cpu(cpu) {<br />		... do something ..<br />		.. update count ..<br />	}<br /><br />	BUG_ON(!count);<br /><br />and if you now compile on UP and with debugging enabled, the compiler<br />might complain that you're computing "count" but never _using_ the value.<br /><br />This is generally why you should have macros like this not become empty, <br />but become something that the compiler can compile away. Which is why I'd <br />much rather see<br /><br />	#define BUG_ON(x) (void)(x)<br /><br />regardless of any side-effect issues - it's a way to let the compiler <br />optimize the thing away, but still show that something was used at least <br />"conceptually"..<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
