    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/11/28/395">First message in thread</a></li><li><a href="/lkml/2007/11/29/286">Linus Torvalds</a><ul><li><a href="/lkml/2007/11/29/293">"H. Peter Anvin"</a><ul><li class="origin"><a href="/lkml/2007/11/29/310">Linus Torvalds</a><ul><li><a href="/lkml/2007/11/29/310">"H. Peter Anvin"</a><ul><li><a href="/lkml/2007/11/29/316">Andi Kleen</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Nov 2007 11:08:41 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH x86/mm 6/6] x86-64 ia32 ptrace get/putreg32 current task</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 29 Nov 2007, H. Peter Anvin wrote:<br />&gt; Linus Torvalds wrote:<br />&gt; &gt; <br />&gt; &gt; &gt; It is advantageous for user space to use the register the kernel typically<br />&gt; &gt; &gt; won't, in order to speed up system call entry/exit.<br />&gt; &gt; <br />&gt; &gt; but I'm not seeing the reason for that one. Care to comment more? (Yes,<br />&gt; &gt; there is often a latency from segment reload to use, but the reload latency<br />&gt; &gt; for system call exit *should* be entirely covered by the cost of doing the<br />&gt; &gt; system call return itself, no?)<br />&gt; <br />&gt; I do seem to recall that some processor implementations can load a NULL<br />&gt; segment faster than a non-NULL segment.  This was significant enough that we<br />&gt; wanted to use %fs in x86-64 userspace, as opposed to the original ABI which<br />&gt; used %gs both in userspace and in the kernel.<br /><br />Ahh, I think you may be right for some CPUs. The zero selector is indeed <br />potentially faster to load, since it doesn't have to even bother looking <br />at the GDT/LDT.<br /><br />That said, I doubt it's very noticeable. I just ran tests on both an old <br />P4 and on a more modern Core 2 machine, and for both of those the <br />performance was identical between loading a NUL selector and loading it <br />with a non-zero one.<br /><br />But I could well imagine that it matters a few cycles on other CPU's. But <br />from my testing, it definitely isn't noticeable, and I think the <br />maintenance advantage of using the same segment setup would more than make <br />up for the fact that maybe some odd CPU can see a difference.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
