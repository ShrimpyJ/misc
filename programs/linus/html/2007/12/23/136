    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/12/22/54">First message in thread</a></li><li><a href="/lkml/2007/12/23/10">Jeff Garzik</a><ul><li><a href="/lkml/2007/12/23/29">Loic Prylli</a></li><li><a href="/lkml/2007/12/23/37">Ivan Kokshaysky</a><ul><li class="origin"><a href="/lkml/2007/12/24/11">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/24/11">Jeff Garzik</a><ul><li><a href="/lkml/2007/12/24/93">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2007/12/24/9">Jeff Garzik</a><ul><li><a href="/lkml/2007/12/24/82">Ivan Kokshaysky</a></li></ul></li></ul></li><li><a href="/lkml/2007/12/23/171">Benjamin Herrenschmidt</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 23 Dec 2007 09:32:28 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] Make MMCONFIG space (extended PCI config space) a driver opt-in issue</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 23 Dec 2007, Ivan Kokshaysky wrote:<br />&gt; <br />&gt; This is a result of all-or-none approach, as mmconfig is fundamentally<br />&gt; unsafe until after PCI init is done.<br /><br />Yes. One of the things I want to have happen (and which <br />"pci_enable_mmconf()" would do automatically) is that we always probe <br />using conf1 cycles in any machine where conf1 works at all. <br /><br />Then, some late PCI quirk or some per-device quirk (or driver) can decide <br />to enable mmconf later, and that avoids the current nightmare with the <br />whole resource ordering. <br /><br />Of course, if there really are machines that have somehow disabled conf1 <br />accesses, we'd have to use mmconfig early, but that should automatically <br />be handled by the PCI config probing stuff (ie we already test whether <br />conf1 accesses seem to work, and would fall back on alternate config <br />cycle accesses if conf1 looks broken).<br /><br />Right now, the check that MMCONF space has to be in e820-reserved memory <br />space protects us from *most* of the probe-time problems, but that's also <br />obviously the check that actually means that MMCONF isn't actually used on <br />the vast majority of machines out there.<br /><br />(For example: I have three machines that I know have working MMCONF. On <br />only one of theose does Linux actually even enable MMCONF accesses, <br />because on the two other ones the BIOSes do the crazy "put it in some <br />space that is reserved by PnP crap later", so we actually refuse to touch <br />it. So at least in my limited environment, we hardly get any MMCONFIG test <br />coverage, exactly because we have to be so totally anal about not enabling <br />it early, because we cannot guarantee that it's not clashing with anything <br />else).<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
