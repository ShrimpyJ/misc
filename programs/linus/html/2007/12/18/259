    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/12/17/429">First message in thread</a></li><li><a href="/lkml/2007/12/18/223">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/18/284">Richard Henderson</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2007/12/18/279">Ivan Kokshaysky</a></li><li><a href="/lkml/2007/12/18/289">Chuck Ebbert</a><ul><li><a href="/lkml/2007/12/18/294">Linus Torvalds</a></li><li><a href="/lkml/2007/12/18/335">Richard Henderson</a></li></ul></li><li><a href="/lkml/2007/12/18/291">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/20/38">Ivan Kokshaysky</a><ul><li><a href="/lkml/2007/12/20/477">Benjamin Herrenschmidt</a></li><li><a href="/lkml/2007/12/22/29">Andrew Morton</a></li></ul></li></ul></li><li><a href="/lkml/2007/12/18/292">Richard Henderson</a><ul><li><a href="/lkml/2007/12/18/322">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/18/388">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2007/12/18/357">Bjorn Helgaas</a></li><li><a href="/lkml/2007/12/18/401">Keith Packard</a></li><li><a href="/lkml/2007/12/20/473">Benjamin Herrenschmidt</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 18 Dec 2007 13:09:15 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: PCI resource problems caused by improper address rounding</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 18 Dec 2007, Richard Henderson wrote:<br />&gt; <br />&gt; I've added dmesg, /proc/iomem, and lspci -v output to that bug.<br />&gt; <br />&gt; Basically, we have<br />&gt; <br />&gt; 	c0000000-cfffffff : free<br />&gt; 	ddf00000-dfefffff : PCI Bus #04<br />&gt; 	e0000000-efffffff : pnp 00:0b<br />&gt; 	f0000000-fedfffff : less than 256MB<br /><br />Gaah. <br /><br />That really is very unlucky. That 256M only goes at one point in the low <br />4GB, but the thing is, it fits perfectly well above it, and dammit, that <br />resource is explicitly a 64-bit resource or a really good reason. <br /><br />However, I wonder about that<br /><br />	e0000000-efffffff : pnp 00:0b<br /><br />thing. I actually suspect that that whole allocation is literally *meant* <br />for that 256MB graphics aperture, but the kernel explicitly avoids it <br />because it's listed in the PnP tables.<br /><br />I wonder what the heck is the point of that pnp entry. Just for fun, can <br />you try to just disable CONFIG_PNP, and see if it all works then?<br /><br />Björn Helgaas added to Cc to clarify what those pnp entries tend to mean, <br />and whether there is possibly some way to match up a specific pnp entry <br />with the PCI device that might want to use it. Because that is a nice <br />256MB region that really doesn't seem to make sense for anything else than <br />the graphics buffer - there's nothing else in your system that seems <br />likely (although I guess it could be for some docking port, but even then <br />I'd have expected one of the PCI bridges to map it!)<br /><br />But apart from the question about that pnp 00:0b device, the kernel <br />resource allocation really does look perfectly fine, and while we could <br />shoe-horn it into the low 4GB in this case by just hoping that there is <br />nothing undocumented there (and there probably isn't), it's really <br />annoying considering that big graphics areas are a hell of a good reason <br />to use those 64-bit resources.<br /><br />It's not like 256MB is even as large as they come, half-gig graphics cards <br />are getting to be fairly common at the high end, and X absolutely _has_ to <br />be able to handle a 64-bit address for those. <br /><br />Also, I'm surprised it doesn't work with X already: the ChangeLog for X <br />says that there are "Minor fixes to the handling of 64-bit PCI BARs [..]" <br />in 4.6.99.18, so I'd have assumed that XFree86-4.7.0 should be able to <br />handle this perfectly well.<br /><br />I'll add Keithp to the cc too, to see if the X issues can be clarified. <br />Maybe he can set us right. But maybe you just have an old X server? If so, <br />considering the situation, I really think the kernel has done a good job <br />already, and I'd be *very* nervous about making the kernel allocate new <br />PCI resources right after the end-of-memory thing.<br /><br />I bet it would work in this case, but as mentioned, we definitely know of <br />cases where the BIOS did *not* document the magic memory region that was <br />stolen for UMA graphics, and trying to put PCI devices just after the top <br />of reserved memory in the e820 list causes machines to not work at all <br />because the address decoding will clash.<br /><br />Of course, we could also make the minimum address more of a *hint*, and <br />only make the resource allocator only abut the top-of-known-memory when it <br />absolutely has to, but on the other hand, in this case it really doesn't <br />have to, since there's just _tons_ of space for 64-bit resources. So the <br />correct thing really does seem to be to just use the 64-bit hw that is <br />there.<br /><br />&gt; That would have been an excellent comment to add to that code then,<br />&gt; rather than just "rounding up to the next 1MB area", because purely<br />&gt; as rounding code it is erroneous.<br /><br />Patches to add comments are welcome. There are few enough people who <br />actually work on the PCI resource allocation code these days (I wish there <br />were more), and it's very rare that anybody else than me or Ivan ends up <br />even *looking* at it. So it's not been a big issue.<br /><br />				Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
