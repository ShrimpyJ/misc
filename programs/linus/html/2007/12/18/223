    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/12/17/429">First message in thread</a></li><li><a href="/lkml/2007/12/17/440">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/18/199">Chuck Ebbert</a><ul><li class="origin"><a href="/lkml/2007/12/18/284">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/18/284">Richard Henderson</a><ul><li><a href="/lkml/2007/12/18/259">Linus Torvalds</a></li><li><a href="/lkml/2007/12/18/279">Ivan Kokshaysky</a></li><li><a href="/lkml/2007/12/18/289">Chuck Ebbert</a></li><li><a href="/lkml/2007/12/18/291">Linus Torvalds</a></li><li><a href="/lkml/2007/12/18/292">Richard Henderson</a></li><li><a href="/lkml/2007/12/18/357">Bjorn Helgaas</a></li><li><a href="/lkml/2007/12/18/401">Keith Packard</a></li><li><a href="/lkml/2007/12/20/473">Benjamin Herrenschmidt</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2007/12/18/223/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 18 Dec 2007 10:21:50 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: PCI resource problems caused by improper address rounding</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 18 Dec 2007, Chuck Ebbert wrote:<br />&gt; &gt; <br />&gt; &gt; So why do you want them to be close, anyway? <br />&gt; <br />&gt; Because otherwise some video adapters with 256MB of memory end up with their<br />&gt; resources allocated above 4GB, and that doesn't work very well.<br />&gt; <br />&gt; <a href="https://bugzilla.redhat.com/show_bug.cgi?id=425794#c0">https://bugzilla.redhat.com/show_bug.cgi?id=425794#c0</a><br /><br />That bugzilla entry doesn't even have a dmesg output or anything like <br />that. I'd really like to see what the <br /><br />The fact is, that patch is not safe. We very much _want_ to make the PCI <br />region allocator use a window that is in the *middle* of the gap, and not <br />close to either end of the gap, and the code literally tries to make the <br />default start of the PCI allocation gap start be about 1/16th of the <br />actual gap size in question, so that we don't hit BIOS allocations that <br />it didn't tell us about by mistake.<br /><br />But without dmesg and lspci output to see what the actual allocations are, <br />there's no way to even _guess_ at whether there is a correct fix or not, <br />just the fix that totally misses the point of having any rounding-up at <br />all.<br /><br />That patch might as well just do<br /><br />	pci_mem_start = gapstart;<br /><br />and get rid of all that rounding code entirely, since the patch just <br />assumes that it's safe to use memory after gapstart (which is known to not <br />be true, and is the whole and only reason for that code in the first <br />place: BIOSes *invariably* get resource allocation wrong, and forget to <br />tell us about some resource they set up).<br /><br />Now, it's entirely possible that the only reasonable end result is that we <br />do have to avoid rounding up that far, but I definitely want to see what <br />the actual resource situation is - that patch is *not* obviously correct, <br />and it definitely breaks the whole point of the code. <br /><br />The *other* patch in the bugzilla entry seems more correct, in that yes, <br />we should make sure that we don't allocate resources over 4G if the <br />resource won't fit. That said, I think that patch is wrong too: we should <br />just fix pcibios_align_resource() to check that case for MEM resouces (the <br />same way it already knows about the magic rules for IO resources).<br /><br />So I'd suggest just fixing pcibios_align_resource() instead. Something <br />like the appended might work (and then you could perhaps quirk it to <br />always clear the PCI_BASE_ADDRESS_MEM_TYPE_64 thing for VGA controllers, <br />although I really don't think the kernel is the right place to do that, <br />and that would be an X server issue!).<br /><br />NOTE! This patch is an independent issue of the whole "what window do we <br />use to allocate new resources, and how do we align it" thing.<br /><br />			Linus<br /><br />---<br /> arch/x86/pci/i386.c |   14 ++++++++++++++<br /> 1 files changed, 14 insertions(+), 0 deletions(-)<br /><br />diff --git a/arch/x86/pci/i386.c b/arch/x86/pci/i386.c<br />index 42ba0e2..abc642b 100644<br />--- a/arch/x86/pci/i386.c<br />+++ b/arch/x86/pci/i386.c<br />&#64;&#64; -70,6 +70,20 &#64;&#64; pcibios_align_resource(void *data, struct resource *res,<br /> 			start = (start + 0x3ff) &amp; ~0x3ff;<br /> 			res-&gt;start = start;<br /> 		}<br />+	} else {<br />+		u64 max;<br />+		switch (res-&gt;flags &amp; PCI_BASE_ADDRESS_MEM_MASK) {<br />+		case PCI_BASE_ADDRESS_MEM_TYPE_1M:<br />+			max = 0xfffff;<br />+			break;<br />+		case PCI_BASE_ADDRESS_MEM_TYPE_64:<br />+			max = -1;<br />+			break;<br />+		default:<br />+			max = 0xffffffff;<br />+		}<br />+		if (res-&gt;start &gt; max)<br />+			res-&gt;start = res-&gt;end;<br /> 	}<br /> }<br /> <br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
