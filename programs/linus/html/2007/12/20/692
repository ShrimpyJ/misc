    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/12/20/622">First message in thread</a></li><li><a href="/lkml/2007/12/20/683">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/20/684">Kyle McMartin</a></li><li><a href="/lkml/2007/12/20/686">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/20/689">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/20/693">Kyle McMartin</a></li></ul></li><li class="origin"><a href="/lkml/2007/12/21/180">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/21/180">Junio C Hamano</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2007/12/20/692/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 20 Dec 2007 20:58:42 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 2.6.24-rc6</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 20 Dec 2007, Linus Torvalds wrote:<br />&gt;<br />&gt; And here's the git patch to avoid this optimization when there is <br />&gt; context.<br /><br />Actually, the code to finding one '\n' is still needed to avoid the <br />(pathological) case of getting a "\No newline", so scrap that one which <br />was too aggressive, and use this (simpler) one instead.<br /><br />Not that it matters in real life, since nobody uses -U0, and "git blame" <br />won't care. But let's get it right anyway ;)<br /><br />This whole function has had more bugs than it has lines.<br /><br />		Linus<br /><br />---<br /> xdiff-interface.c |    7 +++++--<br /> 1 files changed, 5 insertions(+), 2 deletions(-)<br /><br />diff --git a/xdiff-interface.c b/xdiff-interface.c<br />index 9ee877c..711029e 100644<br />--- a/xdiff-interface.c<br />+++ b/xdiff-interface.c<br />&#64;&#64; -115,15 +115,18 &#64;&#64; static void trim_common_tail(mmfile_t *a, mmfile_t *b, long ctx)<br /> 	char *bp = b-&gt;ptr + b-&gt;size;<br /> 	long smaller = (a-&gt;size &lt; b-&gt;size) ? a-&gt;size : b-&gt;size;<br /> <br />+	if (ctx)<br />+		return;<br />+<br /> 	while (blk + trimmed &lt;= smaller &amp;&amp; !memcmp(ap - blk, bp - blk, blk)) {<br /> 		trimmed += blk;<br /> 		ap -= blk;<br /> 		bp -= blk;<br /> 	}<br /> <br />-	while (recovered &lt; trimmed &amp;&amp; 0 &lt;= ctx)<br />+	while (recovered &lt; trimmed)<br /> 		if (ap[recovered++] == '\n')<br />-			ctx--;<br />+			break;<br /> 	a-&gt;size -= (trimmed - recovered);<br /> 	b-&gt;size -= (trimmed - recovered);<br /> }<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
