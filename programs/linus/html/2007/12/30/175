    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/12/29/141">First message in thread</a></li><li><a href="/lkml/2007/12/30/133">Ingo Molnar</a><ul><li><a href="/lkml/2007/12/30/136">Alan Cox</a><ul><li><a href="/lkml/2007/12/30/139">Ingo Molnar</a><ul><li><a href="/lkml/2007/12/30/150">Alan Cox</a><ul><li><a href="/lkml/2007/12/30/153">Ingo Molnar</a></li><li><a href="/lkml/2007/12/30/167">Rene Herman</a></li></ul></li></ul></li><li><a href="/lkml/2007/12/30/152">Juergen Beisert</a><ul><li><a href="/lkml/2007/12/30/195">"H. Peter Anvin"</a><ul><li><a href="/lkml/2007/12/30/267">"David P. Reed"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2007/12/30/137">Rene Herman</a><ul><li><a href="/lkml/2007/12/30/142">Ingo Molnar</a><ul><li><a href="/lkml/2007/12/30/146">Rene Herman</a><ul><li><a href="/lkml/2007/12/30/151">Ingo Molnar</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2007/12/30/190">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/30/190">Ingo Molnar</a><ul><li><a href="/lkml/2007/12/30/219">Alan Cox</a></li></ul></li><li><a href="/lkml/2007/12/30/209">Alan Cox</a><ul><li><a href="/lkml/2007/12/31/58">Christer Weinigel</a></li></ul></li><li><a href="/lkml/2007/12/31/30">Pavel Machek</a><ul><li><a href="/lkml/2007/12/31/36">Alan Cox</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 30 Dec 2007 10:40:58 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86: provide a DMI based port 0x80 I/O delay override</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 30 Dec 2007, Rene Herman wrote:<br />&gt; <br />&gt; rene&#64;7ixe4:~/src/port80$ su -c ./port80<br />&gt; cycles: out 2400, in 2401<br />&gt; rene&#64;7ixe4:~/src/port80$ su -c ./port3cc<br />&gt; cycles: out 459, in 394<br />&gt; <br />&gt; As stated a few dozen times by now already, port 0x80 is _decidedly_ _non_<br />&gt; _random_<br /><br />Oh, I agree 100% that port 80 is not random. It's very much selected on <br />purpose.<br /><br />The reason we use port 80 is because it's commonly used as the BIOS POST <br />debug port, which means that it's been a reasonable "safe" port to use, <br />since nobody would be so crazy as to actually hook up a real device behind <br />that port (and since it is below 0x100, it's also part of the "motherboard <br />range", so you won't have any crazy plug-in devices either).<br /><br />Pretty much all other ports in the low 256 bytes of IO have been used at <br />some point or other, because people put special motherboard devices in and <br />pick from the very limited list of open ports at random. So there are <br />ports that are not commonly used (notably 0xB0-0xBF and 0xE0-0xEF), but <br />they are quite often used for stuff like the magic Sony VAIO rocker-button <br />devices etc.<br /><br />So 0x80 _is_ special. We've been able to use it for 15+ years with <br />basically nobody being so insane as to put an anything there.<br /><br />However, I'd like to point out that the *timings* aren't special per se. <br />The only reason you see such slow accesses to port 80 is not because port <br />80 is special from a timing standpoint, but because it falls under the <br />heading of "no device wanted to accept the access", and it wasn't decoded <br />by any bridge or device. So it hits the "access timed out" case, which is <br />just about the slowest access you can have.<br /><br />But that does't mean that other ports won't have the same timings. Also, <br />it doesn't mean that we really need to have exactly *those* timings.<br /><br />But yes, the timeout timing is pretty convenient, because it's basically <br />almost universally always going to take one microsecond to time out, <br />regardless of speed of CPU. It's been impressively stable over the years. <br /><br />But do we *need* it that stable? It probably would be perfectly fine to <br />pick something that gets faster with CPU's getting faster, because it's <br />generally only really old devices that need that delay in the first place. <br /><br />In other words, the really *traditional* delay is not to do an IO port <br />access at all, but to just do two short unconditional jumps. That was <br />enough of a slowdown on the old machines, and the old machines are likely <br />the only machines that really care about or want the slowdown in the first <br />place!<br /><br />In other words, what I'm trying to say is:<br /><br /> - yes, "port 80" is very much special<br /><br /> - yes, the timings on any port that is unconnected (or connected to some <br />   interal ISA bus like the LPC often is) have been impressively stable <br />   over the years at about 1us.<br /><br /> - but no, I don't think we really need those special timings. The fact <br />   is, hardware manufacturers have been *so* careful about backwards <br />   compatibility, that they generally made sure that the "two short jumps" <br />   delay (which is no delay at all these days!) _also_ continued working.<br /><br />I also think that the worries about PCI write posting are unnecessary. IO <br />port accesses (ie a regular "inb()" and "outb()" even _without_ the "_p()" <br />format slowdown) are already synchronous not only by the CPU but by all <br />chipsets. That's why that "outb" to port 0x80 takes a microsecond: because <br />unlike a MMIO write, it's not only synchronous all the way to the chipset, <br />it's even synchronous as far as the CPU core is concerned too (which is <br />also why all high-performance devices avoid PIO like the plague).<br /><br />So even if that "port 80" access will also cause PCI postings to be <br />flushed, so would the actual IO access that accompanies it, so I don't <br />think that is a very strong argument. <br /><br />With all that said: it is certainly possible that the 1us timing makes a <br />difference on some machine, and it is certainly *also* theoretically <br />possible that there is a buggy chipset that posts too much, and the port <br />80 access might make a difference, but it's not all that likely, and I <br />suspect we'd be better off handling those devices/drivers on a one-by-one <br />basis as we find them.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
