    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/12/7/181">First message in thread</a></li><li><a href="/lkml/2007/12/21/271">Andi Kleen</a><ul><li><a href="/lkml/2007/12/21/272">Chuck Ebbert</a></li><li><a href="/lkml/2007/12/21/301">Matt Mackall</a><ul><li><a href="/lkml/2007/12/21/304">Andi Kleen</a></li></ul></li><li><a href="/lkml/2007/12/22/37">Ingo Molnar</a><ul><li><a href="/lkml/2007/12/22/55">Andi Kleen</a><ul><li><a href="/lkml/2007/12/22/59">"Pekka Enberg"</a><ul><li><a href="/lkml/2007/12/22/60">Andi Kleen</a></li></ul></li><li><a href="/lkml/2007/12/22/61">Alexey Dobriyan</a></li></ul></li><li class="origin"><a href="/lkml/2007/12/22/100">Linus Torvalds</a><ul><li><a href="/lkml/2007/12/22/100">Ingo Molnar</a><ul><li><a href="/lkml/2007/12/22/104">Ingo Molnar</a></li><li><a href="/lkml/2007/12/22/138">Jason L Tibbitts III</a></li></ul></li><li><a href="/lkml/2007/12/22/102">Theodore Tso</a><ul><li><a href="/lkml/2007/12/22/120">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2007/12/22/105">Andi Kleen</a><ul><li><a href="/lkml/2007/12/22/136">"Karol Swietlicki"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 22 Dec 2007 10:01:37 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Major regression on hackbench with SLUB (more numbers)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 22 Dec 2007, Ingo Molnar wrote:<br />&gt; &gt; <br />&gt; &gt; It's definitely not a stable ABI. slabtop tends to exit without any <br />&gt; &gt; error message on any slabinfo version number increase and I've seen <br />&gt; &gt; that happen several times in not so old kernels.<br />&gt; <br />&gt; so because we sucked in the past we can continue to suck? ;)<br /><br />Well, I do have to admit that I'm not a huge fan of /proc/slabinfo, and <br />the fact that there hasn't been a lot of complaints about it going away <br />does seem to imply that it wasn't a very important ABI.<br /><br />I'm the first to stand up for backwards compatibility, but I also try to <br />be realistic, and so far nobody has really complained about the fact that <br />/proc/slabinfo went away on any grounds but on the general principle of <br />"it was a user-visible ABI".<br /><br />We've changed user-visible ABI's in the past in the hope that they weren't <br />actually used. Sometimes it worked, sometimes it didn't. In this case, I <br />think it still has the potential of working.<br /><br />That said, I'm not a *huge* fan of /sys/slab/ either. I can get the info I <br />as a developer tend to want from there, but it's really rather less <br />convenient than I'd like. It is really quite hard, for example, to get any <br />kind of "who actually uses the most *memory*" information out of there. <br /><br />You have to use something like this:<br /><br />	for i in *<br />	do<br />		order=$(cat "$i/order")<br />		slabs=$(cat "$i/slabs")<br />		object_size=$(cat "$i/object_size")<br />		objects=$(cat "$i/objects")<br />		truesize=$(( $slabs&lt;&lt;($order+12) ))<br />		size=$(( $object_size*$objects ))<br />		percent=$(( $truesize/100 ))<br />		if [ $percent -gt 0 ]; then<br />			percent=$(( $size / $percent ))<br />		fi<br />		mb=$(( $size &gt;&gt; 10 ))<br />		printf "%10d MB %3d %s\n" $mb $percent $i<br />	done | sort -n | tail<br /><br />which works fine, but while it's actually _much_ more readable than doing <br />the same thing with /proc/slabinfo was, I worry about the lack of <br />atomicity in getting the statistics.<br /><br />I dunno. I do think /sys/slab/ is a better interface than /proc/slabinfo <br />was. I just wonder if it could be better still.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
