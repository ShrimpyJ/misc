    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/8/9/176">First message in thread</a></li><li><a href="/lkml/2007/8/16/371">Paul Mackerras</a><ul><li><a href="/lkml/2007/8/16/372">Nick Piggin</a><ul><li class="origin"><a href="/lkml/2007/8/17/316">Linus Torvalds</a><ul><li><a href="/lkml/2007/8/17/316">"Paul E. McKenney"</a><ul><li><a href="/lkml/2007/8/17/321">Herbert Xu</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2007/8/16/373">Linus Torvalds</a><ul><li><a href="/lkml/2007/8/17/16">"Paul E. McKenney"</a></li><li><a href="/lkml/2007/8/17/25">Satyam Sharma</a><ul><li><a href="/lkml/2007/8/17/45">Nick Piggin</a><ul><li><a href="/lkml/2007/8/17/63">Satyam Sharma</a></li></ul></li><li><a href="/lkml/2007/8/17/301">Segher Boessenkool</a><ul><li><a href="/lkml/2007/8/17/310">Satyam Sharma</a></li></ul></li></ul></li><li><a href="/lkml/2007/8/17/34">Geert Uytterhoeven</a></li><li><a href="/lkml/2007/8/17/75">Andi Kleen</a><ul><li><a href="/lkml/2007/8/17/90">Satyam Sharma</a></li></ul></li><li><a href="/lkml/2007/8/17/303">Segher Boessenkool</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 16 Aug 2007 20:50:30 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/24] make atomic_read() behave consistently across all architectures</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 17 Aug 2007, Nick Piggin wrote:<br />&gt; <br />&gt; I'm surprised too. Numbers were from the "...use asm() like the other<br />&gt; atomic operations already do" thread. According to them,<br />&gt; <br />&gt;   text    data     bss     dec     hex filename<br />&gt; 3434150  249176  176128 3859454  3ae3fe atomic_normal/vmlinux<br />&gt; 3436203  249176  176128 3861507  3aec03 atomic_volatile/vmlinux<br />&gt; <br />&gt; The first one is a stock kenel, the second is with atomic_read/set<br />&gt; cast to volatile. gcc-4.1 -- maybe if you have an earlier gcc it<br />&gt; won't optimise as much?<br /><br />No, see my earlier reply. "volatile" really *is* an incredible piece of <br />crap.<br /><br />Just try it yourself:<br /><br />	volatile int i;<br />	int j;<br /><br />	int testme(void)<br />	{<br />	        return i &lt;= 1;<br />	}<br /><br />	int testme2(void)<br />	{<br />	        return j &lt;= 1;<br />	}<br /><br />and compile with all the optimizations you can.<br /><br />I get:<br /><br />	testme:<br />	        movl    i(%rip), %eax<br />	        subl    $1, %eax<br />	        setle   %al<br />	        movzbl  %al, %eax<br />	        ret<br /><br />vs<br /><br />	testme2:<br />	        xorl    %eax, %eax<br />	        cmpl    $1, j(%rip)<br />	        setle   %al<br />	        ret<br /><br />(now, whether that "xorl + setle" is better than "setle + movzbl", I don't <br />really know - maybe it is. But that's not thepoint. The point is the <br />difference between<br /><br />                movl    i(%rip), %eax<br />                subl    $1, %eax<br /><br />and<br /><br />                cmpl    $1, j(%rip)<br /><br />and imagine this being done for *every* single volatile access.<br /><br />Just do a <br /><br />	git grep atomic_read<br /><br />to see how atomics are actually used. A lot of them are exactly the above <br />kind of "compare against a value".<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
