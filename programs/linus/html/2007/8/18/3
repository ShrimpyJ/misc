    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/8/9/176">First message in thread</a></li><li><a href="/lkml/2007/8/17/339">Christoph Lameter</a><ul><li><a href="/lkml/2007/8/17/340">Satyam Sharma</a><ul><li class="origin"><a href="/lkml/2007/8/18/59">Linus Torvalds</a><ul><li><a href="/lkml/2007/8/18/59">Satyam Sharma</a></li><li><a href="/lkml/2007/8/18/126">"Paul E. McKenney"</a><ul><li><a href="/lkml/2007/8/18/132">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2007/8/24/109">Denys Vlasenko</a><ul><li><a href="/lkml/2007/8/24/253">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2007/8/18/127">"Paul E. McKenney"</a></li><li><a href="/lkml/2007/8/20/90">Chris Snook</a><ul><li><a href="/lkml/2007/8/20/311">Segher Boessenkool</a><ul><li><a href="/lkml/2007/8/20/320">Russell King</a><ul><li><a href="/lkml/2007/8/20/340">Segher Boessenkool</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 17 Aug 2007 21:13:35 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/24] make atomic_read() behave consistently across all architectures</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 18 Aug 2007, Satyam Sharma wrote:<br />&gt; <br />&gt; No code does (or would do, or should do):<br />&gt; <br />&gt; 	x.counter++;<br />&gt; <br />&gt; on an "atomic_t x;" anyway.<br /><br />That's just an example of a general problem.<br /><br />No, you don't use "x.counter++". But you *do* use<br /><br />	if (atomic_read(&amp;x) &lt;= 1)<br /><br />and loading into a register is stupid and pointless, when you could just <br />do it as a regular memory-operand to the cmp instruction.<br /><br />And as far as the compiler is concerned, the problem is the 100% same: <br />combining operations with the volatile memop.<br /><br />The fact is, a compiler that thinks that<br /><br />	movl mem,reg<br />	cmpl $val,reg<br /><br />is any better than<br /><br />	cmpl $val,mem<br /><br />is just not a very good compiler. But when talking about "volatile", <br />that's exactly what ytou always get (and always have gotten - this is <br />not a regression, and I doubt gcc is alone in this).<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
