    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/8/9/176">First message in thread</a></li><li><a href="/lkml/2007/8/17/187">Linus Torvalds</a><ul><li><a href="/lkml/2007/8/17/218">"Chris Friesen"</a><ul><li><a href="/lkml/2007/8/17/219">Arjan van de Ven</a><ul><li><a href="/lkml/2007/8/17/228">"Paul E. McKenney"</a><ul><li><a href="/lkml/2007/8/17/232">Arjan van de Ven</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2007/8/20/84">Chris Snook</a><ul><li><a href="/lkml/2007/8/20/89">Herbert Xu</a><ul><li><a href="/lkml/2007/8/20/91">Chris Snook</a><ul><li><a href="/lkml/2007/8/20/313">Segher Boessenkool</a></li></ul></li></ul></li><li><a href="/lkml/2007/8/21/18">Linus Torvalds</a><ul><li><a href="/lkml/2007/8/21/63">David Miller</a><ul><li><a href="/lkml/2007/8/21/181">Chris Snook</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2007/9/9/81">Denys Vlasenko</a><ul><li><a href="/lkml/2007/9/9/84">Arjan van de Ven</a><ul><li><a href="/lkml/2007/9/10/67">Denys Vlasenko</a><ul><li><a href="/lkml/2007/9/10/80">Herbert Xu</a></li><li><a href="/lkml/2007/9/10/106">Kyle Moffett</a></li><li><a href="/lkml/2007/9/10/142">Arjan van de Ven</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 17 Aug 2007 12:08:31 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/24] make atomic_read() behave consistently across all architectures</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 17 Aug 2007, Chris Friesen wrote:<br />&gt; <br />&gt; I assume you mean "except for IO-related code and 'random' values like<br />&gt; jiffies" as you mention later on?<br /><br />Yes. There *are* valid uses for "volatile", but they have remained the <br />same for the last few years:<br /> - "jiffies"<br /> - internal per-architecture IO implementations that can do them as normal <br />   stores.<br /><br />&gt; I assume other values set in interrupt handlers would count as "random" <br />&gt; from a volatility perspective?<br /><br />I don't really see any valid case. I can imagine that you have your own <br />"jiffy" counter in a driver, but what's the point, really? I'd suggest not <br />using volatile, and using barriers instead.<br /><br />&gt; <br />&gt; &gt; So anybody who argues for "volatile" fixing bugs is fundamentally <br />&gt; &gt; incorrect. It does NO SUCH THING. By arguing that, such people only <br />&gt; &gt; show that you have no idea what they are talking about.<br /><br />&gt; What about reading values modified in interrupt handlers, as in your <br />&gt; "random" case?  Or is this a bug where the user of atomic_read() is <br />&gt; invalidly expecting a read each time it is called?<br /><br />Quite frankly, the biggest reason for using "volatile" on jiffies was <br />really historic. So even the "random" case is not really a very strong <br />one. You'll notice that anybody who is actually careful will be using <br />sequence locks for the jiffy accesses, if only because the *full* jiffy <br />count is actually a 64-bit value, and so you cannot get it atomically on a <br />32-bit architecture even on a single CPU (ie a timer interrupt might <br />happen in between reading the low and the high word, so "volatile" is only <br />used for the low 32 bits).<br /><br />So even for jiffies, we actually have:<br /><br />	extern u64 __jiffy_data jiffies_64;<br />	extern unsigned long volatile __jiffy_data jiffies;<br /><br />where the *real* jiffies is not volatile: the volatile one is using linker <br />tricks to alias the low 32 bits:<br /><br /> - arch/i386/kernel/vmlinux.lds.S:<br /><br />	...<br />	jiffies = jiffies_64;<br />	...<br /><br />and the only reason we do all these games is (a) it works and (b) it's <br />legacy.<br /><br />Note how I do *not* say "(c) it's a good idea".<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
