    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/8/22/94">First message in thread</a></li><li><a href="/lkml/2007/8/30/156">Frederik Deweerdt</a><ul><li><a href="/lkml/2007/8/30/266">Rusty Russell</a></li><li><a href="/lkml/2007/8/30/267">Rusty Russell</a><ul><li class="origin"><a href="/lkml/2007/8/31/37">Linus Torvalds</a><ul><li><a href="/lkml/2007/8/31/37">Rusty Russell</a><ul><li><a href="/lkml/2007/8/31/61">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 30 Aug 2007 21:44:49 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Fix out-by-one error in traps.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 31 Aug 2007, Rusty Russell wrote:<br />&gt;<br />&gt; We don't care if ebp is on the stack, we care about ebp + 4.  Without<br />&gt; this, lguest (with CONFIG_DEBUG_LOCKDEP) can touch a page unmapped by<br />&gt; CONFIG_DEBUG_PAGEALLOC.<br /><br />Hmm.. This *really* cannot happen with a normal kernel - it implies that <br />the stack has crossed into an invalid page. <br /><br />Why is that allowed with lguest? What kind of code could validly *ever* <br />come in here and cause problems?<br /><br />I'm getting the nervous feeling that lguest is really doing things that <br />shouldn't be done, or is using normal kernel functions in ways that they <br />should not be used. <br /><br />In other words, yes, we load off "ebp+4", but I really don't see it being <br />a valid situation wher ebp itself isn't also a valid stack frame. The <br />stack is not sized for "off-by-one" errors - we're supposed to always have <br />plenty of stack space free, and if you care about "off-by-one", you're not <br />just living on the edge, you're way beyond it!<br /><br />IOW, please explain why/how lguest ever triggers a case where this would <br />possibly matter!<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
