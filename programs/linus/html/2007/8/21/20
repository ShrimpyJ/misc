    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/8/13/1006">First message in thread</a></li><li><a href="/lkml/2007/8/21/7">Linus Torvalds</a><ul><li><a href="/lkml/2007/8/21/13">David Brownell</a><ul><li class="origin"><a href="/lkml/2007/8/21/23">Linus Torvalds</a><ul><li><a href="/lkml/2007/8/21/23">Arjan van de Ven</a><ul><li><a href="/lkml/2007/8/21/29">Arjan van de Ven</a></li><li><a href="/lkml/2007/8/21/30">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2007/8/21/24">Linus Torvalds</a><ul><li><a href="/lkml/2007/8/21/34">David Brownell</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 20 Aug 2007 22:31:00 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [linux-usb-devel] [4/4] 2.6.23-rc3: known regressions</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 20 Aug 2007, David Brownell wrote:<br /><br />&gt; On Monday 20 August 2007, Linus Torvalds wrote:<br />&gt; &gt; <br />&gt; &gt; Fair enough. However, it still seems particularly idiotic to<br />&gt; &gt;  - penalize everybody<br />&gt; &gt;  - mix up two totally unrelated areas (cpufreq and USB) for a bug that is <br />&gt; &gt;    extremely rare and could be handled differently.<br />&gt; <br />&gt; Yes on #1, but on #2 ... frequency transitions are a common place<br />&gt; for systems to want to hiccup.<br /><br />I disagree - it's extremely rare. We've probably had more *software* <br />problems with cpufreq than we've had real hardware problems (ie all the <br />locking for cpufreq has been pretty painful).<br /><br />It's also something that probably depends a lot on the particular CPU. <br />Some CPU's have very short PLL relocking, and continue running while the <br />voltage is changed. Others seem to stop for much longer times. This is not <br />somethign that the USB layer should stick its fingers in - because quite <br />frankly, it really doesn't have a clue.<br /><br />&gt; Maybe less so on PCs, but it's hard to say that re-clocking an I/O or <br />&gt; memory bus shouldn't affect the peripherals using it for "realtime" <br />&gt; (deadlines) I/O !!<br /><br />Normally the memory bus isn't reclocked (it's *possible* to do, but it's <br />complex and can be quite fragile). I think the issue was just that the CPU <br />itself was reclocked, and had long latencies for probing the cache. Not <br />unlike a sleep state: there can be long DMA latencies just from the CPU <br />being in S1!<br /><br />So adding this special case for CPU frequency is not at all unlike adding <br />a special case saying that the CPU cannot go into "halt" state, because <br />the DMA latency is too high.<br /><br />Have we done that? Yes. We actually had a "no-hlt" kernel command line <br />flag that literally disabled halting the CPU, because it apparently caused <br />problems for some floppy disk setups (and yes, the main reasonable <br />explanation was some bad DMA interaction, we never figured it out).<br /><br />So it might be much better if we instead re-introduced that kind of "DMA <br />latency requirement", and letting different subsystems react to that as <br />they may.<br /><br />It really can affect more than just cpufreq - I would not be in the <br />*least* surprised if C3 latencies and other things can cause these things <br />too! But even within cpufreq, it's quite likely to hit certain situations <br />more than others.<br /><br />(Of course, if C3 latencies are high on a MB that has known DMA latency <br />issues, you'd hope that the BIOS has simply disabled C3 entirely in the <br />ACPI tables)<br /><br />&gt; transitions if the Broadcom chipset (or maybe it's just specific<br />&gt; boards?) finds itself in the awkward configuration ... penalizing<br />&gt; only the people we know could have trouble.<br /><br />Yes, that would be more acceptable, I think. <br /><br />It is also quite likely that this is not a generic cpufreq issue, but one <br />that happens with just a certain class of CPU's - ie some particular CPU <br />that is just slower than others at re-clocking.<br /><br />Just disabling things blindly on cpufreq events, when what it actually <br />wants to do is say "I need low DMA latency", and then the cpu-freq layer <br />(which can know about these things) may decide internally that it knows <br />that a particular setup is not able to have low-latency DMA durign <br />frequency relocking.<br /><br />On other - saner - CPU's, the frequency relock may take a fraction of the <br />time, and the CPU is running perfectly the whole time - and it would _not_ <br />be affected.<br /><br />&gt; &gt; As far as I know, split transactions aren't required anyway, they are just <br />&gt; &gt; a performance optimization.<br />&gt; <br />&gt; Nope.  Linus, this is at least the second or third time you've<br />&gt; been wrong -- sorry.  But I wish you were right, since they're<br />&gt; such a PITA to cope with.  ;)<br />&gt; <br />&gt; Split transactions are how the full and low speed devices bridge<br />&gt; to high speed busses.  Think of the TT hub as a speed converter,<br />&gt; buffering data and then retransmitting it at the other (slower or<br />&gt; faster) speed.  Some systems don't even have a full/low speed host<br />&gt; adapter ... they just have a high speed root hub and rely on some<br />&gt; external TT hubs (maybe on a mainboard) to handle the rest.<br /><br />Ok. But in the meantime, I really think we should just revert the code <br />that causes a known regression.<br /><br />Because, quite frankly, you may not like VIA, but in the bigger picture, <br />VIA has been a hell of a lot better than Broadcom. <br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
