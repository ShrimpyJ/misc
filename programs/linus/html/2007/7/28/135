    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/7/22/218">First message in thread</a></li><li><a href="/lkml/2007/7/28/117">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/28/122">Kasper Sandberg</a></li><li><a href="/lkml/2007/7/28/130">Jan Engelhardt</a><ul><li class="origin"><a href="/lkml/2007/7/28/158">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/28/158">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/28/160">Jan Engelhardt</a></li></ul></li><li><a href="/lkml/2007/8/1/96">Jan Engelhardt</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Jul 2007 12:34:57 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linus 2.6.23-rc1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 28 Jul 2007, Jan Engelhardt wrote:<br />&gt; <br />&gt; Time to investigate...<br /><br />Well, one thing that would be worth doing is to simply create a trace of <br />time-slices for both schedulers.<br /><br />It could easily be some hacky thing that just saves the process name and <br />TSC at each scheduling event in some fairly small fixed-sized per-CPU <br />circular buffer, and have a /sys interface that reads it out, and then you <br />do<br /><br />	sleep 60 ; cat /sys/cpubuffer &gt; buffer<br /><br />and play the game for 60 seconds (so that you get a buffer that represents <br />perhaps the last 10 seconds of play).<br /><br />It could *literally* just be an effect of the time quanta used, and CFS <br />just deciding that it's not interactive and giving things too long of a <br />CPU slice.<br /><br />Yes, it's what "/proc/sys/kernel/sched_granularity_ns" is supposed to <br />tweak, but maybe there's some misfeature there, or maybe the default is <br />just bad for games, or whatever.<br /><br />Ingo: that sysctl_sched_granularity initialization doesn't make sense. You <br />talk about it being in units of nanoseconds, but then you do<br /><br />	2000000000ULL/HZ<br /><br />which is nonsensical. That value is "2 seconds" (not 2ms like the comment <br />says) in nanoseconds, but then divided by HZ, so what's the meaning of <br />that HZ thing? Nothing in the scheduler should care about jiffies, why is <br />that related to HZ? All the scheduler clocks are in ns.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
