    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/7/22/218">First message in thread</a></li><li><a href="/lkml/2007/7/28/106">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/28/114">Jan Engelhardt</a><ul><li class="origin"><a href="/lkml/2007/7/28/147">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/28/147">Diego Calleja</a><ul><li><a href="/lkml/2007/7/28/150">Jan Engelhardt</a></li><li><a href="/lkml/2007/7/28/156">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2007/7/29/37">Martin Steigerwald</a><ul><li><a href="/lkml/2007/7/29/49">Sam Ravnborg</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2007/7/29/31">Martin Steigerwald</a></li><li><a href="/lkml/2007/7/29/41">Tomas Carnecky</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Jul 2007 11:05:25 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [ck] Re: Linus 2.6.23-rc1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 28 Jul 2007, Jan Engelhardt wrote:<br />&gt; <br />&gt; You cannot please everybody in the scheduler question, that is clear,<br />&gt; then why not offer dedicated scheduling alternatives (plugsched comes to mind)<br />&gt; and let them choose what pleases them most, and handles their workload best?<br /><br />This is one approach, but it's actually one that I personally think is  <br />often the worst possible choice. <br /><br />Why? Because it ends up meaning that you never get the cross-pollination <br />from different approaches (they stay separate "modes"), and it's also <br />usually really bad for users in that it forces the user to make some <br />particular choice that the user is usually not even aware of.<br /><br />So I personally think that it's much better to find a setup that works <br />"well enough" for people, without having modal behaviour. People complain <br />and gripe now, but what people seem to be missing is that it's a journey, <br />not an end-of-the-line destination. We haven't had a single release kernel <br />with the new scheduler yet, so the only people who have tried it are <br />either<br /><br /> (a) interested in schedulers in the first place (which I think is *not* a <br />     good subset, because they have very specific expectations of what is <br />     right and what is wrong, and they come into the whole thing with that <br />     mental baggage)<br /><br /> (b) people who test -rc1 kernels (I love you guys, but sadly, you're not <br />     nearly as common as I'd like ;)<br /><br />so the fact is, we'll find out more information about where CFS falls <br />down, and where it does well,  and we'll be able to *fix* it and tweak it.<br /><br />In contrast, if you go for a modal approach, you tend to always fixate <br />those two modes forever, and you'll never get something that works well: <br />people have to switch modes when they switch workloads.<br /><br />[ This, btw, has nothing to do with schedulers per se. We have had these <br />  exact same issues in the memory management too - which is a lot more <br />  complex than scheduling, btw. The whole page replacement algorithm is <br />  something where you could easily have "specialized" algorithms in order <br />  to work really well under certain loads, but exactly as with scheduling, <br />  I will argue that it's a lot better to be "good across a wide swath of <br />  loads" than to try to be "perfect in one particular modal setup". ]<br /><br />This is also, btw, why I think that people who argue for splitting desktop <br />kernels from server kernels are total morons, and only show that they <br />don't know what the hell they are talking about.<br /><br />The fact is, the work we've done on server loads has improved the desktop <br />experience _immensely_, with all the scalability work (or the work on <br />large memory configurations, etc etc) that went on there, and that used to <br />be totally irrelevant for the desktop.<br /><br />And btw, the same is very much true in reverse: a lot of the stuff that <br />was done for desktop reasons (hotplug etc) has been a _huge_ boon for the <br />server side, and while there were certainly issues that had to be resolved <br />(the sysfs stuff so central to the hotplug model used tons of memory when <br />you had ten thousand disks, and server people were sometimes really <br />unhappy), a lot of the big improvements actually happen because somethng <br />totally _unrelated_ needed them, and then it just turns out that it's good <br />for the desktop too, even if it started out as a server thing or vice <br />versa.<br /><br />This is why the whole "modal" mindset is stupid. It basically freezes a <br />choice that shouldn't be frozen. It sets up an artificial barrier between <br />two kinds of uses (whether they be about "server" vs "desktop" or "3D <br />gaming" vs "audio processing", or anything else), and that frozen choice <br />actually ends up being a barrier to development in the long run.<br /><br />So "modal" things are good for fixing behaviour in the short run. But they <br />are a total disaster in the long run, and even in the short run they tend <br />to have problems (simply because there will be cases that straddle the <br />line, and show some of _both_ issues, and now *neither* mode is the right <br />one)<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
