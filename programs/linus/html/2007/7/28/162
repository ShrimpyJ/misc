    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/7/22/218">First message in thread</a></li><li><a href="/lkml/2007/7/28/153">Diego Calleja</a><ul><li><a href="/lkml/2007/7/28/157">Bill Huey (hui)</a><ul><li class="origin"><a href="/lkml/2007/7/28/186">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/28/186">Bill Huey (hui)</a><ul><li><a href="/lkml/2007/7/29/93">Diego Calleja</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2007/8/7/28">Daniel Phillips</a><ul><li><a href="/lkml/2007/8/7/230">Alan Cox</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Jul 2007 15:18:24 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [ck] Re: Linus 2.6.23-rc1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 28 Jul 2007, Bill Huey wrote:<br />&gt; <br />&gt; My argument is that schedule development is open ended. Although having<br />&gt; a central scheduler to hack is a a good thing, it shouldn't lock out or<br />&gt; supress development from other groups that might be trying to solve the<br />&gt; problem in unique ways.<br /><br />I don't think anything was suppressed here.<br /><br />You seem to say that more modular code would have helped make for a nicer <br />way to do schedulers, but if so, where were those patches to do that? <br />Con's patches didn't do that either. They just replaced the code.<br /><br />In fact, Ingo's patches _do_ add some modularity, and might make it easier <br />to replace the scheduler. So it would seem that you would argue for CFS, <br />not against it?<br /><br />&gt; I think that's kind of a bogus assumption from the very get go. Scheduling<br />&gt; in Linux is one of the most unevolved systems in the kernel that still<br />&gt; could go through a large transformation and get big gains like what<br />&gt; we've had over the last few months. This evident with both schedulers,<br />&gt; both do well and it's a good thing overall the CFS is going in.<br />&gt; <br />&gt; Now, the way it happened is completely screwed up in so many ways that I<br />&gt; don't see how folks can miss it. This is not just Ingo versus Con, this<br />&gt; is the current Linux community and how it makes decision from the top down<br />&gt; and the current cultural attitude towards developers doing things that<br />&gt; are:<br /><br />I don't think so.<br /><br />I think you're barking up the totally wrong tree here.<br /><br />I think that what happened was very simple: somebody showed that we did <br />badly and had benchmarks to show for it, and that in turn resulted in a <br />huge spurt of coding from the people involved.<br /><br />The fact that you think this is "broken" is interesting. I can point to a <br />very real example of where this also happened, and where I bet you don't <br />think the process was "broken".<br /><br />Do you remember the mindcraft study?<br /><br />Exact same thing. Somebody came in, and showed that Linux did really badly <br />on some benchmark, and that an alternate approach was much better.<br /><br />What happened? A huge spurt of development in a pretty short timeframe, <br />that totally _obliterated_ the mindcraft results. <br /><br />It could have happened independently, but the fact is, it didn't. These <br />kinds of events where somebody shows (with real numbers and code) that <br />things can be done better really *are* a good way to do development, and <br />it's how development generally ends up happening. It's hugely <br />motivational, both because competition is motivational in itself, but also <br />because somebody shows that things can be done so much better opens <br />peoples eyes to it.<br /><br />And if you think the scheduler situation is different, why? Was it just <br />because the mindcraft study compared against Windows NT, not another <br />version of Linux patches?<br /><br />The thing is, development is slow and gradual, but at the same time, it <br />happens in spurts (btw, if you have ever studied evolution, you'll find <br />the exact same thing: evolution is slow and gradual, but it also happens <br />in sudden "spurts" where you have relatively much bigger changes happening <br />because you get into a feedback loop).<br /><br />Another comparison to evolution: most of the competitive pressure actually <br />comes from the _same_ species, not from outside. It's not so much rabbits <br />competing against foxes (although that happens too), quite a lot of it is <br />rabbits competing against other rabbits!<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
