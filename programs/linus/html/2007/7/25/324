    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/7/24/259">First message in thread</a></li><li><a href="/lkml/2007/7/25/277">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/25/278">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2007/7/25/281">"H. Peter Anvin"</a></li><li><a href="/lkml/2007/7/25/289">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/25/293">Al Viro</a><ul><li><a href="/lkml/2007/7/25/305">Jeremy Fitzhardinge</a></li></ul></li></ul></li><li><a href="/lkml/2007/7/25/366">David Miller</a></li></ul></li><li><a href="/lkml/2007/7/25/290">Al Viro</a><ul><li><a href="/lkml/2007/7/25/299">"H. Peter Anvin"</a><ul><li><a href="/lkml/2007/7/25/294">Al Viro</a></li><li><a href="/lkml/2007/7/25/302">David Howells</a></li></ul></li><li><a href="/lkml/2007/7/25/306">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2007/7/25/391">Chuck Ebbert</a><ul><li><a href="/lkml/2007/7/25/397">"H. Peter Anvin"</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2007/7/25/304">Al Viro</a><ul><li><a href="/lkml/2007/7/25/310">Jeremy Fitzhardinge</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 25 Jul 2007 11:24:49 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH][RFC] getting rid of stupid loop in BUG()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 25 Jul 2007, Al Viro wrote:<br />&gt; <br />&gt; Umm...  Actually, we might be able to do something like<br />&gt; {<br />&gt; 	l: __builtin_trap();<br />&gt; 	static struct ... v __attribute__((section(...))) = { &amp;&amp;l, n, file };<br /><br />No.<br /><br />A C-level label is a pointer to a C-level construct.<br /><br />The compiler may have reasons to put other instructions in between the <br />label and the final end result of the __builtin_trap. The above may work <br />for some trivial test-case, but in the end, the label and the __builtin <br />are *not* atomic, and the compiler may well end up having register spills <br />etc in there, or having CSE'd two traps, or any number of details meaning <br />that the label doesn't point to the exact ud2 instruction.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
