    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/7/6/255">First message in thread</a></li><li><a href="/lkml/2007/7/17/15">Ian Kent</a><ul><li><a href="/lkml/2007/7/17/67">Ingo Molnar</a><ul><li><a href="/lkml/2007/7/17/161">Ian Kent</a><ul><li><a href="/lkml/2007/7/17/372">Ingo Molnar</a><ul><li><a href="/lkml/2007/7/17/648">Bill Davidsen</a></li></ul></li></ul></li><li><a href="/lkml/2007/7/17/345">Chuck Ebbert</a></li><li><a href="/lkml/2007/7/17/539">"David Schwartz"</a><ul><li><a href="/lkml/2007/7/18/28">Ian Kent</a><ul><li><a href="/lkml/2007/7/18/68">Ingo Molnar</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2007/7/18/311">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/18/311">Ian Kent</a></li><li><a href="/lkml/2007/7/18/421">Bill Davidsen</a><ul><li><a href="/lkml/2007/7/19/72">Ingo Molnar</a></li><li><a href="/lkml/2007/7/19/325">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2007/7/19/98">Ingo Molnar</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2007/7/18/255/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 18 Jul 2007 09:03:45 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] CFS scheduler, -v19</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 17 Jul 2007, Ingo Molnar wrote:<br />&gt; <br />&gt; * Ian Kent &lt;raven&#64;themaw.net&gt; wrote:<br />&gt; &gt; <br />&gt; &gt; In several places I have code similar to:<br />&gt; &gt; <br />&gt; &gt; wait.tv_sec = time(NULL) + 1;<br />&gt; &gt; wait.tv_nsec = 0;<br /><br />Ok, that definitely should work.<br /><br />Does the patch below help?<br /><br />&gt; ah! It passes in a low-res time source into a high-res time interface <br />&gt; (pthread_cond_timedwait()). Could you change the time(NULL) + 1 to <br />&gt; time(NULL) + 2, or change it to:<br />&gt; <br />&gt; 	gettimeofday(&amp;wait, NULL);<br />&gt; 	wait.tv_sec++;<br /><br />This is wrong. It's wrong for two reasons:<br /><br /> - it really shouldn't be needed. I don't think "time()" has to be <br />   *exactly* in sync, but I don't think it can be off by a third of a <br />   second or whatever (as the "30% CPU load" would seem to imply)<br /><br /> - gettimeofday works on a timeval, pthread_cond_timedwait() works on a <br />   timespec.<br /><br />So if it actually makes a difference, it makes a difference for the <br />*wrong* reason: the time is still totally nonsensical in the tv_nsec field <br />(because it actually got filled in with msecs!), but now the tv_sec field <br />is in sync, so it hides the bug.<br /><br />Anyway, hopefully the patch below might help. But we probably should make <br />this whole thing a much more generic routine (ie we have our internal <br />"getnstimeofday()" that still is missing the second-overflow logic, and <br />that is quite possibly the one that triggers the "30% off" behaviour).<br /><br />Ingo, I'd suggest:<br /> - ger rid of "timespec_add_ns()", or at least make it return a return <br />   value for when it overflows.<br /> - make all the people who overflow into tv_sec call a "fix_up_seconds()" <br />   thing that does the xtime overflow handling.<br /><br />		Linus<br /><br />---<br />Subject: time: make sure sys_gettimeofday() and sys_time() are in sync<br />From: Ingo Molnar &lt;mingo&#64;elte.hu&gt;<br /><br />make sure sys_gettimeofday() and sys_time() results are coherent.<br /><br />Signed-off-by: Ingo Molnar &lt;mingo&#64;elte.hu&gt;<br />---<br /> kernel/time/timekeeping.c |   13 +++++++++++++<br /> 1 file changed, 13 insertions(+)<br /><br />Index: linux/kernel/time/timekeeping.c<br />===================================================================<br />--- linux.orig/kernel/time/timekeeping.c<br />+++ linux/kernel/time/timekeeping.c<br />&#64;&#64; -92,6 +92,19 &#64;&#64; static inline void __get_realtime_clock_<br /> 	} while (read_seqretry(&amp;xtime_lock, seq));<br /> <br /> 	timespec_add_ns(ts, nsecs);<br />+	/*<br />+	 * Make sure xtime.tv_sec [returned by sys_time()] always<br />+	 * follows the gettimeofday() result precisely. This<br />+	 * condition is extremely unlikely, it can hit at most<br />+	 * once per second:<br />+	 */<br />+	if (unlikely(xtime.tv_sec != ts-&gt;tv_sec)) {<br />+		unsigned long flags;<br />+<br />+		write_seqlock_irqsave(&amp;xtime_lock, flags);<br />+		update_wall_time();<br />+		write_sequnlock_irqrestore(&amp;xtime_lock, flags);<br />+	}<br /> }<br /> <br /> /**<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
