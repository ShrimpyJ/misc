    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/7/23/249">First message in thread</a></li><li><a href="/lkml/2007/7/24/373">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/24/375">Andi Kleen</a><ul><li class="origin"><a href="/lkml/2007/7/24/447">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/24/447">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2007/7/24/454">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2007/7/25/492">Trent Piepho</a><ul><li><a href="/lkml/2007/7/25/495">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/25/496">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 24 Jul 2007 13:08:37 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 6/8] i386: bitops: Don't mark memory as clobbered unnecessarily</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 24 Jul 2007, Andi Kleen wrote:<br />&gt;<br />&gt; Linus Torvalds &lt;torvalds&#64;linux-foundation.org&gt; writes:<br />&gt; &gt; <br />&gt; &gt; (Yes, the "asm volatile" may do so too, but it's very unclear what the <br />&gt; &gt; "volatile" on the asm actually does, so ..)<br />&gt; <br />&gt; Without the volatile they get completely optimized away :/<br />&gt; [tried that, cost a lot of debugging time -- empty string functions<br />&gt; cause a lot of strange side effects]<br /><br />Sure, that's *one* thing that "volatile" guarantees (it guarantees that <br />gcc won't optimize away things where the end result isn't actually visibly <br />used).<br /><br />But gcc docs also talk about the other things volatile means, including <br />"not significantly moved".<br /><br />Is that "not significantly moved" already equivalent to "not moved past <br />something that can change memory"? Probably not. Which is why it's a good <br />idea to have the "memory" clobber there too, because the semantics of the <br />"volatile" just aren't very well defined from a code movement standpoint <br />(while a general memory clobber is *very* clear: if gcc moves the inline <br />asm across another thing that uses/changes memory, that's a gcc bug, plain <br />and simple (*)).<br /><br />		Linus<br /><br />(*) Other than pure internal gcc spills/reloads. Spilling/reloading local <br />registers that haven't had their address taken obviously cannot be seen as <br />memory accesses.<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
