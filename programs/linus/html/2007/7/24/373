    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/7/23/249">First message in thread</a></li><li><a href="/lkml/2007/7/24/64">Nick Piggin</a><ul><li><a href="/lkml/2007/7/24/95">Satyam Sharma</a><ul><li><a href="/lkml/2007/7/24/101">Nick Piggin</a></li></ul></li><li><a href="/lkml/2007/7/24/100">Trent Piepho</a><ul><li class="origin"><a href="/lkml/2007/7/24/375">Linus Torvalds</a><ul><li><a href="/lkml/2007/7/24/375">Andi Kleen</a><ul><li><a href="/lkml/2007/7/24/395">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2007/7/25/492">Trent Piepho</a><ul><li><a href="/lkml/2007/7/25/495">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 24 Jul 2007 12:39:32 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 6/8] i386: bitops: Don't mark memory as clobbered unnecessarily</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 24 Jul 2007, Trent Piepho wrote:<br />&gt; <br />&gt; Speaking of that, why are all the asm functions in arch/i386/lib/string.c<br />&gt; defined as having a memory clobber, even those which don't modify memory<br />&gt; like strcmp, strchr, strlen and so on?<br /><br />That's because the memory clobber will serialize the inline asm with <br />anything else that reads or writes memory.<br /><br />So even if we don't actually change any memory, if we cannot describe what <br />we *read*, then we need to tell gcc to not re-order us wrt things that <br />could *write*. And the simplest way to do that is to say that you clobber <br />memory, even if you don't.<br /><br />So as a more concrete example: imagine that we're doing a "strlen()" on <br />some local variable. We need to tell gcc that that variable has to be <br />updated in memory before it schedules the asm. The memory clobber does <br />that.<br /><br />(Yes, the "asm volatile" may do so too, but it's very unclear what the <br />"volatile" on the asm actually does, so ..)<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
