    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/10/30/482">First message in thread</a></li><li><a href="/lkml/2007/10/30/482">Jeff Mahoney</a><ul><li class="origin"><a href="/lkml/2007/10/30/509">Linus Torvalds</a><ul><li><a href="/lkml/2007/10/30/509">Randy Dunlap</a><ul><li><a href="/lkml/2007/10/30/569">Jeff Mahoney</a></li></ul></li><li><a href="/lkml/2007/10/30/571">Jeff Mahoney</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2007/10/30/498/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 30 Oct 2007 15:45:56 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mmap: restore -ENODEV on missing f_op-&gt;mmap</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 30 Oct 2007, Jeff Mahoney wrote:<br />&gt; <br />&gt;  Personally, I think this is probably a case of LTP codifying existing<br />&gt;  behavior rather than testing the for the specification. If that's the case<br />&gt;  and nobody really cares about the change in behavior, I'm fine letting this<br />&gt;  drop.<br /><br />Hmm.. I think it's kind of stupid adding that special case early on, just <br />to get one particular error case return when there are multiple possible <br />ones. <br /><br />I don't care deeply, but this does smell like a test issue rather than a <br />code issue.<br /><br />Looking at that path, there are *other* things that might be worth <br />cleaning up, but this wasn't one of them..<br /><br />		Linus<br /><br />---<br />diff --git a/mm/mmap.c b/mm/mmap.c<br />index facc1a7..fe286f7 100644<br />--- a/mm/mmap.c<br />+++ b/mm/mmap.c<br />&#64;&#64; -893,7 +893,6 &#64;&#64; unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,<br /> 			unsigned long flags, unsigned long pgoff)<br /> {<br /> 	struct mm_struct * mm = current-&gt;mm;<br />-	struct inode *inode;<br /> 	unsigned int vm_flags;<br /> 	int error;<br /> 	int accountable = 1;<br />&#64;&#64; -959,9 +958,9 &#64;&#64; unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,<br /> 			return -EAGAIN;<br /> 	}<br /> <br />-	inode = file ? file-&gt;f_path.dentry-&gt;d_inode : NULL;<br />-<br /> 	if (file) {<br />+		struct inode *inode = file-&gt;f_path.dentry-&gt;d_inode;<br />+<br /> 		switch (flags &amp; MAP_TYPE) {<br /> 		case MAP_SHARED:<br /> 			if ((prot&amp;PROT_WRITE) &amp;&amp; !(file-&gt;f_mode&amp;FMODE_WRITE))<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
