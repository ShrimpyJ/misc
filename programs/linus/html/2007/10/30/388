    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/10/29/424">First message in thread</a></li><li><a href="/lkml/2007/10/30/325">Mathieu Desnoyers</a><ul><li><a href="/lkml/2007/10/30/318">Linus Torvalds</a></li><li><a href="/lkml/2007/10/30/320">Peter Zijlstra</a></li><li><a href="/lkml/2007/10/30/324">Christoph Hellwig</a></li><li><a href="/lkml/2007/10/30/343">Mathieu Desnoyers</a><ul><li class="origin"><a href="/lkml/2007/10/30/437">Linus Torvalds</a><ul><li><a href="/lkml/2007/10/30/437">Mathieu Desnoyers</a><ul><li><a href="/lkml/2007/10/31/248">(Frank Ch. Eigler)</a></li></ul></li></ul></li><li><a href="/lkml/2007/10/30/459">Sam Ravnborg</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 30 Oct 2007 12:25:05 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] Create kinst/ or ki/ directory ?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 30 Oct 2007, Mathieu Desnoyers wrote:<br />&gt; <br />&gt; The key idea for collapsing profiling, markup and tracing was that<br />&gt; marking up the code is required for both profiling and tracing. It's<br />&gt; only the code that is called from that markup site that differs.<br /><br />What code is actually shared? <br /><br />Regardless, an internal implementation issue is *not* a good basis for a <br />user-visible interface. <br /><br />&gt; Ok, so maybe we should keep "markup", "tracing" and "profiling"<br />&gt; separately and see how things evolve.<br /><br />I think so. At least conceptually - ie it might be fine to share a Kconfig <br />file, but there probably shouldn't be some forced shared choice about it.<br /><br />&gt; With SMP systems becoming cheap commodity hardware, each and every<br />&gt; developer increasingly face thorny race problems, both in user-space<br />&gt; apps and in the kernel, which may involve hypervisor-kernel-userspace<br />&gt; interaction.<br /><br />Well, the thing is, most of the time, those app developers will not be<br />doing kernel-level markers. But they may well be doing profiling. <br /><br />Speaking as an application developer myself (git), I care deeply about <br />good profiling info, and I love Oprofile. But even though I'm a kernel <br />person too, I'd not want to do kprobes. It's just not relevant to me as a <br />user-land developer.<br /><br />(I might want to extend on strace, but if so, I'd do it generically, not <br />as a "probe". For example, I'd love to see the page faults, but I think <br />they really *are* "system calls", so I think it would make more sense to <br />extend on the ptrace interface than to have any kprobes thing)<br /><br />&gt; &gt; So I actually think that the current Kconfig.instrumentation should be <br />&gt; &gt; *removed*. Rather than adding more groupings based on that <br />&gt; &gt; fundamentally flawed premise of false commonality.<br />&gt; <br />&gt; Should it come with a re-duplication of it's content into each <br />&gt; architecture, which was the case previously ? The oprofile and kprobes <br />&gt; menu entries were litteraly cut and pasted from one architecture to <br />&gt; another. Should we put its content in init/Kconfig then ?<br /><br />I don't think it's a good idea to go back to making it per-architecture, <br />although that extensive "depends on &lt;list-of-archiectures-here&gt;" might <br />indicate that there certainly is room for cleanup there.<br /><br />And I don't think it's wrong keeping it in kernel/Kconfig.xyz per se, I <br />just think it's wrong to (a) lump the code together when it really doesn't <br />necessarily need to and (b) show it to users as some kind of choice that <br />is tied together (whether it then has common code or not).<br /><br />On the per-architecture side, I do think it would be better to *not* have <br />internal architecture knowledge in a generic file, and as such a line like<br /><br />	depends on X86_32 || IA64 || PPC || S390 || SPARC64 || X86_64 || AVR32<br /><br />really shouldn't exist in a file like kernel/Kconfig.instrumentation.<br /><br />It would be much better to do<br /><br />	depends on ARCH_SUPPORTS_KPROBES<br /><br />in that generic file, and then architectures that do support it would just <br />have a<br /><br />	bool ARCH_SUPPORTS_KPROBES<br />		default y<br /><br />in *their* architecture files. That would seem to be much more logical, <br />and is readable both for arch maintainers *and* for people who have no <br />clue - and don't care - about which architecture is supposed to support <br />which interface...<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
