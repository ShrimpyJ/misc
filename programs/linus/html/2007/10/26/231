    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/10/26/213">First message in thread</a></li><li><a href="/lkml/2007/10/26/213">"Bart Van Assche"</a><ul><li class="origin"><a href="/lkml/2007/10/26/246">Linus Torvalds</a><ul><li><a href="/lkml/2007/10/26/246">Andrew Haley</a><ul><li><a href="/lkml/2007/10/26/362">"David Schwartz"</a><ul><li><a href="/lkml/2007/10/30/135">Andrew Haley</a></li></ul></li></ul></li><li><a href="/lkml/2007/10/26/487">Giacomo Catenazzi</a><ul><li><a href="/lkml/2007/10/26/500">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2007/10/26/240">Linus Torvalds</a><ul><li><a href="/lkml/2007/10/26/276">Linus Torvalds</a><ul><li><a href="/lkml/2007/10/26/318">"Bart Van Assche"</a><ul><li><a href="/lkml/2007/10/26/330">Andrew Haley</a></li><li><a href="/lkml/2007/10/26/360">Alan Cox</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 26 Oct 2007 08:09:05 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Is gcc thread-unsafe?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 26 Oct 2007, Bart Van Assche wrote:<br />&gt; On 10/25/07, Linus Torvalds &lt;&gt; wrote:<br />&gt; &gt; <br />&gt; &gt; The gcc developers seem to have had a total disregard for what people<br />&gt; &gt; want or need, and every time some code generation issue comes up, there's<br />&gt; &gt; a lot of people on the list that do language-lawyering, rather than admit<br />&gt; &gt; that there might be a problem.<br />&gt; <br />&gt; Please make a proposal for how gcc should be modified instead of just<br />&gt; shooting on the gcc people -- the root cause here is the way the C/C++<br />&gt; memory model is defined. (Note: I'm not in any way involved in gcc<br />&gt; development.)<br /><br />Note that I'm very ambivalent about gcc. I think it's a *great* compiler. <br />I have my doubts about some of the things it does, but hey, it is an old <br />project, it has accumulated cruft over time, and cleaning things up is <br />often almost impossible.<br /><br />And bugs happen. I'm not complaining about that at all either, even if <br />sometimes a compiler bug is damn frustrating.<br /><br />And the fact is, most of the gcc developers are great.<br /><br />So my basic worry about gcc is in fact none of the individual technical <br />problems themselves - those can be fixed. No, the problem I've seen in gcc <br />is that _some_ of the developers seem to be total d*ckheads when it comes <br />to "language definition", and seem to think that it's more important to <br />read the language spec like a lawyer than it is to solve actual user <br />problems.<br /><br />And that has come up before. It has nothing to do with this particular <br />"gcc doesn't create thread-safe code" issue. We had the exact same issue <br />with gcc creating totally unusable code due to having a fundamentally <br />braindead memory aliasing model. The language-lawyering people basically <br />could push their *idiotic* model onto gcc, just by quoting the standard, <br />and not caring about actual users at all.<br /><br />And that's a problem. In the kernel, we've historically always cared a lot <br />about POSIX and SuS, but while conforming to standards have been primary <br />goals since pretty much day one (ie I asked around about POSIX before the <br />very first release, and it's how I met some suckers^Wupstanding citizens <br />to try those early kernels), it has *always* taken a back seat to things <br />like compatibility with existing apps.<br /><br />The gcc lists seem to often get to the point where people quote the <br />standard, and that's that. In that environment, the paper standard (that <br />hass *nothing* to do with reality) trumps any other argument. "What we do <br />is _allowed_ by the standard" seems to be a good argument, even if it <br />breaks real code and there is no sane way to avoid doing it.<br /><br />And I really don't think it's everybody. At all. But I think it's the case <br />that sometimes it's easier to quote the standard than write good code, and <br />so gcc lists have more people quoting the papers than trying to fix some <br />problem.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
