    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/10/24/673">First message in thread</a></li><li><a href="/lkml/2007/10/25/466">Linus Torvalds</a><ul><li><a href="/lkml/2007/10/25/467">Andi Kleen</a><ul><li class="origin"><a href="/lkml/2007/10/25/486">Linus Torvalds</a><ul><li><a href="/lkml/2007/10/25/486">Andi Kleen</a><ul><li><a href="/lkml/2007/10/25/496">Linus Torvalds</a></li><li><a href="/lkml/2007/10/26/15">Willy Tarreau</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 25 Oct 2007 16:32:53 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Is gcc thread-unsafe?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 26 Oct 2007, Andi Kleen wrote:<br />&gt; <br />&gt; No it can't (at least not on x86) as I have explained in the rest of the mail <br />&gt; you conveniently snipped.<br /><br />I "conveniently snipped it" because it was pointless.<br /><br />"adc" or "cmov" has nothing what-so-ever to do with it. If some routine <br />returns 0-vs-1 and gcc then turns "if (routine()) x++" into <br />"x+=routine()", what does that have to do with adc or cmov?<br /><br />The fact is, these kinds of optimizations are *bogus* and they are <br />dangerous.<br /><br />Now, it's equally true that we probably don't have those kinds of patterns <br />in the kernel, and we'll probabaly not hit it, but wouldn't it be much <br />better to make sure that compilers shouldn't do that?<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
