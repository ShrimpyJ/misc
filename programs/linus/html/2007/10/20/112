    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/10/15/339">First message in thread</a></li><li><a href="/lkml/2007/10/20/91">Sam Ravnborg</a><ul><li><a href="/lkml/2007/10/20/99">Thomas Gleixner</a></li><li><a href="/lkml/2007/10/20/105">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2007/10/20/116">Linus Torvalds</a><ul><li><a href="/lkml/2007/10/20/116">Sam Ravnborg</a><ul><li><a href="/lkml/2007/10/20/125">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2007/10/20/112/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 20 Oct 2007 11:49:51 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: git/cscope with x86 merge</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 20 Oct 2007, Linus Torvalds wrote:<br />&gt; <br />&gt; I could perhaps look at making "git log --follow" also break up files that <br />&gt; got totally rewritten (git already has a notion of "-B" to do that), but <br />&gt; no, we don't do it right now. <br /><br />Ok, if you guys have a current git source, and want to try something out, <br />this fairly small patch does this.<br /><br />As mentioned, git already supports the notion of "try to break files with <br />the same name if the contents are too dissimilar". In other words, even if <br />a file exists under the same name in both the old revision and in the <br />newer one, we'll look at just how big the changes are, and if git decides <br />that it looks like the whole file was rewritten, then git will split up <br />the diff into a "delete old contents" and "create new contents". That then <br />allows it to consider the file for rename detection.<br /><br />(The rename detection may, of course, decide that the original file was <br />the best source after all.. ;)<br /><br />However, "git log --follow" didn't ever actually enable that for the logic <br />that tries to figure out where a file came from, so you would only see <br />this when generating the diffs, never in the file history logic. That's <br />an easy one-liner to tree-diff.c: try_to_follow_renames().<br /><br />However, when I actually tried it, it turns out that the break logic was <br />broken - nobody has ever really depended on it. So while it was a <br />one-liner to make "git log --follow" understand to break files that seem <br />to be totally rewritten, it still didn't actually work, because the <br />changes that totally rewrote vmlinux.lds.S wouldn't trigger the break <br />logic.<br /><br />So most of this (still fairly small patch) is just fixing the break logic <br />in diffcore-break.c:should_break().<br /><br />It hasn't gotten a lot of testing, but it does actually improve other <br />cases too, so I think this is the right thign to do. I'll bring it up on <br />the git lists.<br /><br />Oh, and with this patch, the "break same filename" is still off by <br />default. You need to do<br /><br />	git log --follow -B arch/x86/kernel/vmlinux_64.lds.S<br /><br />to enable the file-rewritten-so-break-associations detection. I suspect <br />it makes sense to enable -B by default when using --follow (--follow <br />already obviously implies rename detection), but that's a separate and <br />independent issue.<br /><br />		Linus<br /><br />----<br /> diffcore-break.c |   11 +++++++----<br /> tree-diff.c      |    1 +<br /> 2 files changed, 8 insertions(+), 4 deletions(-)<br /><br />diff --git a/diffcore-break.c b/diffcore-break.c<br />index ae8a7d0..c71a226 100644<br />--- a/diffcore-break.c<br />+++ b/diffcore-break.c<br />&#64;&#64; -45,8 +45,8 &#64;&#64; static int should_break(struct diff_filespec *src,<br /> 	 * The value we return is 1 if we want the pair to be broken,<br /> 	 * or 0 if we do not.<br /> 	 */<br />-	unsigned long delta_size, base_size, src_copied, literal_added,<br />-		src_removed;<br />+	unsigned long delta_size, base_size, max_size;<br />+	unsigned long src_copied, literal_added, src_removed;<br /> <br /> 	*merge_score_p = 0; /* assume no deletion --- "do not break"<br /> 			     * is the default.<br />&#64;&#64; -63,7 +63,8 &#64;&#64; static int should_break(struct diff_filespec *src,<br /> 		return 0; /* error but caught downstream */<br /> <br /> 	base_size = ((src-&gt;size &lt; dst-&gt;size) ? src-&gt;size : dst-&gt;size);<br />-	if (base_size &lt; MINIMUM_BREAK_SIZE)<br />+	max_size = ((src-&gt;size &gt; dst-&gt;size) ? src-&gt;size : dst-&gt;size);<br />+	if (max_size &lt; MINIMUM_BREAK_SIZE)<br /> 		return 0; /* we do not break too small filepair */<br /> <br /> 	if (diffcore_count_changes(src, dst,<br />&#64;&#64; -89,12 +90,14 &#64;&#64; static int should_break(struct diff_filespec *src,<br /> 	 * less than the minimum, after rename/copy runs.<br /> 	 */<br /> 	*merge_score_p = (int)(src_removed * MAX_SCORE / src-&gt;size);<br />+	if (*merge_score_p &gt; break_score)<br />+		return 1;<br /> <br /> 	/* Extent of damage, which counts both inserts and<br /> 	 * deletes.<br /> 	 */<br /> 	delta_size = src_removed + literal_added;<br />-	if (delta_size * MAX_SCORE / base_size &lt; break_score)<br />+	if (delta_size * MAX_SCORE / max_size &lt; break_score)<br /> 		return 0;<br /> <br /> 	/* If you removed a lot without adding new material, that is<br />diff --git a/tree-diff.c b/tree-diff.c<br />index 26bdbdd..7c261fd 100644<br />--- a/tree-diff.c<br />+++ b/tree-diff.c<br />&#64;&#64; -319,6 +319,7 &#64;&#64; static void try_to_follow_renames(struct tree_desc *t1, struct tree_desc *t2, co<br /> 	diff_opts.detect_rename = DIFF_DETECT_RENAME;<br /> 	diff_opts.output_format = DIFF_FORMAT_NO_OUTPUT;<br /> 	diff_opts.single_follow = opt-&gt;paths[0];<br />+	diff_opts.break_opt = opt-&gt;break_opt;<br /> 	paths[0] = NULL;<br /> 	diff_tree_setup_paths(paths, &amp;diff_opts);<br /> 	if (diff_setup_done(&amp;diff_opts) &lt; 0)<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
