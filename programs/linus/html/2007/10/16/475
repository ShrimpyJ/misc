    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2007/10/16/443">First message in thread</a></li><li><a href="/lkml/2007/10/16/443">Al Viro</a><ul><li><a href="/lkml/2007/10/16/459">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2007/10/17/241">Linus Torvalds</a><ul><li><a href="/lkml/2007/10/17/241">=?iso-8859-1?Q?Bj=F6rn?= Steinbrink</a><ul><li><a href="/lkml/2007/10/17/306">=?iso-8859-1?Q?Bj=F6rn?= Steinbrink</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 16 Oct 2007 19:21:53 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] fix adbhid mismerge</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 16 Oct 2007, Linus Torvalds wrote:<br />&gt; <br />&gt; I don't think you did anything wrong. You used both --full-history <br />&gt; (implicitly: git-whatchanged) and you made sure to see the diffs for both <br />&gt; sides of any merge (-m), and that means that you should see every single <br />&gt; diff involved.<br /><br />Btw, if anybody can come up with a better way to find these kinds of <br />mis-merges, I'd love to hear about it.<br /><br />In *this* particular case, the -c flag ("combined" merge diff) probably <br />comes closest, and is certainly a lot better than passing in -m (which <br />shows each merge against both parents separately), and in fact, I think <br />you would have found the mis-merge immediately if you had used<br /><br />	git whatchanged -p -c v2.6.23.. drivers/macintosh/adbhid.c<br /><br />but I'm not going to guarantee that -c always gives you what you want.<br /><br />In general, the rules are:<br /><br /> - the default for merge diffs is to show "condensed combined" merge, ie <br />   the diff of only those parts where the result actively differs from <br />   *both* parents.<br /><br />   This is very terse, and it has the wonderful property of showing merges <br />   where you actually ended up doing "real work" and not just picking one <br />   side or the other, but in this case the very fact that the mis-merge <br />   had picked one side (and it really would have _needed_ a correct manual <br />   merge) also meant that the default "--cc" format didn't show anything <br />   at all.<br /><br /> - "-c" is for regular combined merges: any file that was modified in both <br />   parents will show up as a combination of the diffs of both sides, while <br />   a file that was taken in its *entirety* is ignored.<br /><br />   In this case that's exactly what you wanted. It's just too noisy to <br />   necessarily be the default, and you can still have a silent mis-merge <br />   if the merger picked *only* one side.<br /><br />   But in general, I suspect that "-c" is often a good thing to try if you <br />   cannot find the cause of some change in a regular commit, and suspect a <br />   merge error.<br /><br /> - "-m" shows each side totally independently. Quite frankly, I've never <br />   found it useful. It is essentially guaranteed to show all changes, <br />   since it shows the patches against all parents individually, so even if <br />   we took only one side, we'll still show the patch against the *other* <br />   side, but quite frankly, while it's thus useful in theory, in practice <br />   the end result is just too noisy to likely ever really be useful as <br />   anything but a "yes, the information is there (..but it's practically <br />   impossible to find for all the other noise that is also there)"<br /><br />The main reason "-m" exists is historical: before Junio implemented the <br />combined formats, -m was the easy way to show *any* information. I bet -m <br />can be useful in some case where you have some pattern you can search for <br />(ie I used -m in this case to find the mis-merge, but realized only later <br />that I would have been better off using -c), but it's not something I'd <br />recommend unless you were really desperate.<br /><br />What I'd actually really like would be something that shows the original <br />conflict, but that's really expensive to compute (it basically involves <br />re-doing the merge from scratch - finding the proper base commit(s) etc). <br />So we never did that.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
