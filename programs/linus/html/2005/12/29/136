    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/12/28/57">First message in thread</a></li><li><a href="/lkml/2005/12/28/221">Andrew Morton</a><ul><li><a href="/lkml/2005/12/29/4">Ingo Molnar</a><ul><li><a href="/lkml/2005/12/29/96">Horst von Brand</a></li><li><a href="/lkml/2005/12/29/102">Adrian Bunk</a></li><li class="origin"><a href="/lkml/2005/12/29/140">Linus Torvalds</a><ul><li><a href="/lkml/2005/12/29/140">Arjan van de Ven</a><ul><li><a href="/lkml/2005/12/29/141">Arjan van de Ven</a></li></ul></li><li><a href="/lkml/2005/12/29/167">Ingo Molnar</a><ul><li><a href="/lkml/2005/12/29/199">Matt Mackall</a></li></ul></li><li><a href="/lkml/2005/12/29/170">Dave Jones</a><ul><li><a href="/lkml/2005/12/29/173">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2005/12/29/212">Willy Tarreau</a><ul><li><a href="/lkml/2005/12/30/23">Arjan van de Ven</a></li><li><a href="/lkml/2005/12/30/29">Jesper Juhl</a></li><li><a href="/lkml/2005/12/30/120">Alistair John Strachan</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2005/12/29/6">Arjan van de Ven</a><ul><li><a href="/lkml/2005/12/29/97">Horst von Brand</a></li></ul></li><li><a href="/lkml/2005/12/30/85">Alan Cox</a><ul><li><a href="/lkml/2005/12/30/130">Adrian Bunk</a></li></ul></li><li><a href="/lkml/2005/12/30/149">Matt Mackall</a><ul><li><a href="/lkml/2005/12/30/192">Adrian Bunk</a></li><li><a href="/lkml/2005/12/31/25">Arjan van de Ven</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Dec 2005 09:41:12 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 00/2] improve .text size on gcc 4.0 and newer compilers</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 29 Dec 2005, Ingo Molnar wrote:<br />&gt; <br />&gt; * Andrew Morton &lt;akpm&#64;osdl.org&gt; wrote:<br />&gt; &gt; <br />&gt; &gt; When it comes to inlining I just don't trust gcc as far as I can spit <br />&gt; &gt; it.  We're putting the kernel at the mercy of future random brainfarts <br />&gt; &gt; and bugs from the gcc guys.  It would be better and safer IMO to <br />&gt; &gt; continue to force `inline' to have strict and sane semamtics, and to <br />&gt; &gt; simply be vigilant about our use of it.<br />&gt; <br />&gt; i think there's quite an attitude here - we are at the mercy of "gcc <br />&gt; brainfarts" anyway, and users are at the mercy of "kernel brainfarts" <br />&gt; just as much.<br /><br />There's a huge difference here. The gcc people very much have a "Oh, we <br />changed old documented behaviour - live with it" attitude, together with <br />"That was a gcc extension, not part of the C language, so when we change <br />how gcc behaves, it's _your_ problem" approach.<br /><br />At least they used to. <br /><br />So yes, there's a huge attitude difference. The gcc people have a BAD <br />attitude. When the meaning of "inline" changed (from a "inline this" to <br />"hey, it's a hint"), the gcc people never EVER said "sorry". They <br />effectively said "screw you".<br /><br />I know this is why I don't trust gcc wrt inlining. It's not so much about <br />any technical issues, as about the fact that the kernel tends to be a lot <br />heavier user of gcc features than most programs, and has correctness <br />issues with them, AND THE GCC PEOPLE SIMPLY DON'T CARE.<br /><br />Comparing it to the kernel is ludicrous. We care about user-space <br />interfaces to an insane degree. We go to extreme lengths to maintain even <br />badly designed or unintentional interfaces. Breaking user programs simply <br />isn't acceptable. We're _not_ like the gcc developers. We know that <br />people use old binaries for years and years, and that making a new <br />release doesn't mean that you can just throw that out. You can trust us.<br /><br />Maybe gcc development has changed. Maybe it hasn't.<br /><br />THAT is what makes me worry. I don't know if this is why Andrew doesn't <br />trust inlining, but I suspect it has similar roots. Not trusting it <br />because we haven't been able to trust the people behind it. No heads-up, <br />no warnings, no discussions. Just a "screw you, things changed, your <br />usage doesn't matter, and we're not even interested in listening to you <br />or telling you why things changed".<br /><br />There have been situations where documented gcc semantics changed, and <br />instead of saying "sorry", the gcc people changed the documentation. What <br />the hell is the point of documented semantics if you can't depend on them <br />anyway?<br /><br />One thing we could do: I think modern gcc's at least have an option to <br />warn when they don't inline something. It might make sense to just enable <br />that warning, and see _which_ functions -Os and -funit-at-a-time say are <br />too large to be inlined.<br /><br />Maybe the right thing to do is to just heed that warning, and remove such <br />functions from header files and make them no-inline? That way we get the <br />size fixes _regardless_ of any compiler options.<br /><br />				Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
