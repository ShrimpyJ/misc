    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/12/15/358">First message in thread</a></li><li><a href="/lkml/2005/12/15/358">Ulrich Drepper</a><ul><li><a href="/lkml/2005/12/15/392">Jeff Garzik</a><ul><li><a href="/lkml/2005/12/15/421">Ulrich Drepper</a><ul><li><a href="/lkml/2005/12/15/424">Jeff Garzik</a></li></ul></li><li><a href="/lkml/2005/12/16/46">Jim Meyering</a><ul><li><a href="/lkml/2005/12/16/154">Ulrich Drepper</a><ul><li><a href="/lkml/2005/12/16/160">Jakub Jelinek</a></li><li><a href="/lkml/2005/12/16/214">Jim Meyering</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2005/12/15/416">Nicholas Miell</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Dec 2005 09:51:35 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/3] *at syscalls: Intro</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 15 Dec 2005, Nicholas Miell wrote:<br />&gt; <br />&gt; Don't take this as an objection to implementation of the *at() syscalls<br />&gt; in Linux, though; rather, look at is as a request for the addition of<br />&gt; int pthread_attr_setfssharing_np(pthread_attr_t *attr, int share) and<br />&gt; int pthread_attr_getfssharing_np(pthread_attr_t *attr) to glibc.<br /><br />I don't think separate fs/files makes sense with pthreads.<br /><br />Why? Signals.<br /><br />Signals are shared in a pthread environment, so signal handlers can happen <br />in any thread. If you don't share the filesystem thing, your signal <br />handlers had better not do any file operations. You'd better not try to <br />use the old "send a byte down a pipe" trick to wake somebody else up, <br />because the thread you may take the signal in may not _have_ that pipe fd <br />open.<br /><br />Now, opening files in a signal handler may be unusual enough that <br />having separate cwd/root (!CLONE_FS as opposed to !CLONE_FILES) might be <br />more commonly usable, but it's still potentially asking for some really <br />funky behaviour.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
