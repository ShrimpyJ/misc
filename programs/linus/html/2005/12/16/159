    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/12/12/244">First message in thread</a></li><li><a href="/lkml/2005/12/16/43">David Howells</a><ul><li><a href="/lkml/2005/12/16/45">David Howells</a><ul><li class="origin"><a href="/lkml/2005/12/16/255">Linus Torvalds</a><ul><li><a href="/lkml/2005/12/16/255">"David S. Miller"</a><ul><li><a href="/lkml/2005/12/16/263">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2005/12/16/88">Nick Piggin</a><ul><li><a href="/lkml/2005/12/16/95">Russell King</a><ul><li><a href="/lkml/2005/12/16/103">Nick Piggin</a></li><li><a href="/lkml/2005/12/16/104">"Linh Dang"</a><ul><li><a href="/lkml/2005/12/16/117">Russell King</a></li></ul></li></ul></li><li><a href="/lkml/2005/12/17/39">Nikita Danilov</a></li></ul></li><li><a href="/lkml/2005/12/16/156">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Dec 2005 08:33:10 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/19] MUTEX: Introduce simple mutex implementation</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 16 Dec 2005, David Howells wrote:<br />&gt; <br />&gt; Of course, CMPXCHG doesn't have to store either, though it still performs a<br />&gt; locked-write-cycle on x86 if I remember correctly.<br /><br />It does so on any sane architecture (side note: you don't do locked <br />memory cycles on the bus these days. You do cache coherency protocols).<br /><br />From a bus standpoint you _have_ to do the initial read with intent to <br />write, nothing else makes any sense. You'll just waste bus cycles <br />otherwise. Sure, the write may never come, but it just isn't sensible to <br />optimize for the case where the compare will fail. If that's the common <br />case, then software is doing something wrong (it should do just a much <br />cheaper "load + compare" first if it knows it's probably going to fail).<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
