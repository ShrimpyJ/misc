    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/12/21/126">First message in thread</a></li><li><a href="/lkml/2005/12/21/126">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2005/12/21/179">Linus Torvalds</a><ul><li><a href="/lkml/2005/12/21/179">Linus Torvalds</a><ul><li><a href="/lkml/2005/12/21/204">Ingo Molnar</a></li><li><a href="/lkml/2005/12/21/210">Daniel Jacobowitz</a><ul><li><a href="/lkml/2005/12/21/217">Nicolas Pitre</a></li></ul></li></ul></li><li><a href="/lkml/2005/12/21/200">Ingo Molnar</a><ul><li><a href="/lkml/2005/12/21/271">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 21 Dec 2005 10:54:20 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 3/8] mutex subsystem, add atomic_*_call_if_*() to i386</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Wed, 21 Dec 2005, Ingo Molnar wrote:<br />&gt;<br />&gt; add two new atomic ops to i386: atomic_dec_call_if_negative() and<br />&gt; atomic_inc_call_if_nonpositive(), which are conditional-call-if<br />&gt; atomic operations. Needed by the new mutex code.<br /><br />Umm. This asm is broken. It doesn't mark %eax as changed, so this is only <br />reliable if the function you call is<br /><br /> - a "fastcall" one<br /> - always returns as its return value the pointer to the atomic count<br /><br />which is not true (you verify that it's a fastcall, but it's of type <br />"void").<br /><br />Now, it's entirely possible that it's only used in situations where the <br />compiler doesn't rely on the value of %eax after the asm anyway, but <br />that's just praying. Either mark the value as being changed, or just <br />save/restore the registers. Ie either something like<br /><br />	__asm__ __volatile__(<br />		LOCK "decl (%0)\n\t"<br />		"js 2f\n"<br />		"1:\n"<br />		LOCK_SECTION_START("")<br />		"2: call "#fn_name"\n\t"<br />		"jmp 1b\n"<br />		LOCK_SECTION_END<br />		:"=a" (dummy)<br />		:"0" (v)<br />		:"memory","cx","dx");<br /><br />or just do<br /><br />	__asm__ __volatile__(<br />		LOCK "decl (%0)\n\t"<br />		"js 2f\n"<br />		"1:\n"<br />		LOCK_SECTION_START("")<br />		"pushl %%ebx\n\t"<br />		"pushl %%ecx\n\t"<br />		"pushl %%eax\n\t"<br />		"call "#fn_name"\n\t"<br />		"popl %%eax\n\t"<br />		"popl %%ecx\n\t"<br />		"popl %%ebx\n\t"<br />		"jmp 1b\n"<br />		LOCK_SECTION_END<br />		:/* no outputs */<br />		:"a" (v)<br />		:"memory");<br /><br />or some in-between thing (that saves only part of the registers).<br /><br />The above has not been tested in any way, shape or form. But you get the idea.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
