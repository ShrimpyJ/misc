    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/12/30/31">First message in thread</a></li><li><a href="/lkml/2005/12/30/31">Yi Yang</a><ul><li class="origin"><a href="/lkml/2005/12/30/217">Linus Torvalds</a><ul><li><a href="/lkml/2005/12/30/217">Yi Yang</a></li><li><a href="/lkml/2005/12/31/26">Coywolf Qi Hunt</a></li><li><a href="/lkml/2005/12/31/56">YOSHIFUJI Hideaki / =?iso-2022-jp?B?GyRCNUhGIzFRTEAbKEI=?=</a></li></ul></li><li><a href="/lkml/2005/12/30/153">(David Wagner)</a></li><li><a href="/lkml/2005/12/31/24">Coywolf Qi Hunt</a><ul><li><a href="/lkml/2005/12/31/27">Yi Yang</a><ul><li><a href="/lkml/2005/12/31/30">Coywolf Qi Hunt</a><ul><li><a href="/lkml/2006/1/3/531">Yi Yang</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2005/12/30/96/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 30 Dec 2005 09:25:35 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Fix user data corrupted by old value return of sysctl</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 30 Dec 2005, Yi Yang wrote:<br />&gt;<br />&gt; If the user reads a sysctl entry which is of string type<br />&gt; by sysctl syscall, this call probably corrupts the user data<br />&gt; right after the old value buffer, the issue lies in sysctl_string<br />&gt; seting 0 to oldval[len], len is the available buffer size<br />&gt; specified by the user, obviously, this will write to the first<br />&gt; byte of the user memory place immediate after the old value buffer,<br />&gt; the correct way is that sysctl_string doesn't set 0, the user<br />&gt; should do it by self in the program.<br /><br />Hmm.. I think this patch is incomplete.<br /><br />We _should_ zero-pad the data, at least if the result fits in the buffer.<br /><br />So I think the correct fix is to just _copy_ the last zero if it fits in <br />the buffer, rather than do the unconditional "add NUL at the end" thing. <br />The simplest way to do that is to just make "l" be "strlen(str)+1", so <br />that we count the ending NUL in the length (and then, if the buffer isn't <br />big enough, we will truncate it).<br /><br />In other words, I would instead suggest a patch like the appended.<br /><br />But even that is questionable: one alternative is to always zero-pad (like <br />we used to), but make sure that the buffer size is sufficient for it (ie <br />instead of adding one to the length of the string, we'd subtract one from <br />the buffer length and make sure that the '\0' fits..<br /><br />Comments?<br /><br />		Linus<br />---<br />diff --git a/kernel/sysctl.c b/kernel/sysctl.c<br />index 9990e10..ad0425a 100644<br />--- a/kernel/sysctl.c<br />+++ b/kernel/sysctl.c<br />&#64;&#64; -2201,14 +2201,12 &#64;&#64; int sysctl_string(ctl_table *table, int <br /> 		if (get_user(len, oldlenp))<br /> 			return -EFAULT;<br /> 		if (len) {<br />-			l = strlen(table-&gt;data);<br />+			l = strlen(table-&gt;data)+1;<br /> 			if (len &gt; l) len = l;<br /> 			if (len &gt;= table-&gt;maxlen)<br /> 				len = table-&gt;maxlen;<br /> 			if(copy_to_user(oldval, table-&gt;data, len))<br /> 				return -EFAULT;<br />-			if(put_user(0, ((char __user *) oldval) + len))<br />-				return -EFAULT;<br /> 			if(put_user(len, oldlenp))<br /> 				return -EFAULT;<br /> 		}<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
