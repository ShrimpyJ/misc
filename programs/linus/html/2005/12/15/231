    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/12/15/124">First message in thread</a></li><li><a href="/lkml/2005/12/15/124">Coywolf Qi Hunt</a><ul><li><a href="/lkml/2005/12/15/132">Matthew Wilcox</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 15 Dec 2005 09:42:48 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] ioctl BLKGETSIZE64 fix</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 15 Dec 2005, Coywolf Qi Hunt wrote:<br />&gt; <br />&gt; Two years ago, "[PATCH] use size_t for the broken ioctl numbers" brought in the problem.<br />&gt; &lt;<a href="https://lkml.org/lkml/2003/9/7/14&gt;">http://lkml.org/lkml/2003/9/7/14&gt;</a> (also FYI: &lt;<a href="https://lwn.net/Articles/48360/&gt;">https://lwn.net/Articles/48360/&gt;</a>)<br />&gt; <br />&gt; The patch below fixes the bug on BLKGETSIZE64. typeof(size_t) == 32, but we expect 64. <br />&gt; The choice of `size_t' is also a mistake. We should have taken `int'.  This also affects<br />&gt; userland linux-kernel-headers.<br />&gt; <br />&gt; Or am I missing something? Thanks.<br /><br />You're missing the fact that we can't just change existing numbers. It <br />just makes the ioctl not work.<br /><br />A lot of the "size_t"'s got added because people had mis-understood the <br />_IOR/W macros, and had done a "sizeof()" by hand, when the macro itself <br />did the sizeof. Which caused the macro to make the ioctl number be based <br />on "sizeof(sizeof(realsize))", which is the same as "sizeof(size_t)".<br /><br />And because we MUST NOT change the ioctl number (regardless of whether the <br />number shows the correct size or not), those got changed to use "size_t" <br />to match historical - if incorrect - numbering.<br /><br />The _IOR/W macros got fixed so that you now _cannot_ use anything but a <br />real type, so the bug shouldn't happen again, but we're stuck with the old <br />broken numbers.<br /><br />The number is just a number, after all. We shouldn't be using the size <br />encoding in the ioctl number, afaik (since for a _lot_ of them we can't <br />depend on it anyway).<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
