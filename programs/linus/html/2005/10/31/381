    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/10/31/373">First message in thread</a></li><li><a href="/lkml/2005/10/31/373">Paul Mackerras</a><ul><li class="origin"><a href="/lkml/2005/10/31/387">Linus Torvalds</a><ul><li><a href="/lkml/2005/10/31/387">Paul Mackerras</a></li><li><a href="/lkml/2005/11/1/174">Alan Stern</a><ul><li><a href="/lkml/2005/11/1/177">Linus Torvalds</a><ul><li><a href="/lkml/2005/11/1/184">Alan Stern</a></li><li><a href="/lkml/2005/11/2/272">Benjamin Herrenschmidt</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2005/10/31/383">David Brownell</a></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2005/10/31/381/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 31 Oct 2005 20:33:53 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Don't touch USB controllers with MMIO disabled in quirks</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 1 Nov 2005, Paul Mackerras wrote:<br />&gt; <br />&gt; I still think that a FIXUP_HEADER header is the wrong place to be<br />&gt; doing this sort of thing, and that code that touches a device without<br />&gt; doing pci_enable_device is just asking for trouble; however, in order<br />&gt; to get my machine to be able to boot, this patch adds a check that<br />&gt; MMIO is enabled for the device, and if it isn't, leaves the device<br />&gt; alone.  With this patch my powerbook will boot.<br /><br />Well, this can't be right, because depending on which controller type it <br />is, the handoff code uses PIO, not MMIO. In fact, a uhci controller <br />wouldn't necessarily ever have PCI_COMMAND_MEMORY set afaik, since it <br />doesn't even _have_ MMIO.<br /><br />Would something like the appended work instead?<br /><br />		Linus<br /><br />---<br />diff --git a/drivers/usb/host/pci-quirks.c b/drivers/usb/host/pci-quirks.c<br />index b7fd3f6..b1aa350 100644<br />--- a/drivers/usb/host/pci-quirks.c<br />+++ b/drivers/usb/host/pci-quirks.c<br />&#64;&#64; -138,11 +138,23 &#64;&#64; reset_needed:<br /> }<br /> EXPORT_SYMBOL_GPL(uhci_check_and_reset_hc);<br /> <br />+static inline int io_type_enabled(struct pci_dev *pdev, unsigned int mask)<br />+{<br />+	u16 cmd;<br />+	return !pci_read_config_word(pdev, PCI_COMMAND, &amp;cmd) &amp;&amp; (cmd &amp; mask);<br />+}<br />+<br />+#define pio_enabled(dev) io_type_enabled(dev, PCI_COMMAND_IO)<br />+#define mmio_enabled(dev) io_type_enabled(dev, PCI_COMMAND_MEMORY)<br />+<br /> static void __devinit quirk_usb_handoff_uhci(struct pci_dev *pdev)<br /> {<br /> 	unsigned long base = 0;<br /> 	int i;<br /> <br />+	if (!pio_enabled(pdev))<br />+		return;<br />+<br /> 	for (i = 0; i &lt; PCI_ROM_RESOURCE; i++)<br /> 		if ((pci_resource_flags(pdev, i) &amp; IORESOURCE_IO)) {<br /> 			base = pci_resource_start(pdev, i);<br />&#64;&#64; -153,12 +165,20 &#64;&#64; static void __devinit quirk_usb_handoff_<br /> 		uhci_check_and_reset_hc(pdev, base);<br /> }<br /> <br />+static int __devinit mmio_resource_enabled(struct pci_dev *pdev, int idx)<br />+{<br />+	return pci_resource_start(pdev, idx) &amp;&amp; mmio_enabled(pdev);<br />+}<br />+<br /> static void __devinit quirk_usb_handoff_ohci(struct pci_dev *pdev)<br /> {<br /> 	void __iomem *base;<br /> 	int wait_time;<br /> 	u32 control;<br /> <br />+	if (!mmio_resource_enabled(pdev, 0))<br />+		return;<br />+<br /> 	base = ioremap_nocache(pci_resource_start(pdev, 0),<br /> 				     pci_resource_len(pdev, 0));<br /> 	if (base == NULL) return;<br />&#64;&#64; -201,6 +221,9 &#64;&#64; static void __devinit quirk_usb_disable_<br /> 	u32 hcc_params, val, temp;<br /> 	u8 cap_length;<br /> <br />+	if (!mmio_resource_enabled(pdev, 0))<br />+		return;<br />+<br /> 	base = ioremap_nocache(pci_resource_start(pdev, 0),<br /> 				pci_resource_len(pdev, 0));<br /> 	if (base == NULL) return;<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
