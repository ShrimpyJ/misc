    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/10/18/174">First message in thread</a></li><li><a href="/lkml/2005/10/19/127">Hugh Dickins</a><ul><li><a href="/lkml/2005/10/19/180">Rohit Seth</a><ul><li class="origin"><a href="/lkml/2005/10/19/220">Linus Torvalds</a><ul><li><a href="/lkml/2005/10/19/220">Tony Luck</a></li><li><a href="/lkml/2005/10/19/242">Rohit Seth</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 19 Oct 2005 13:53:23 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH]: Handling spurious page fault for hugetlb region for 2.6.14-rc4-git5</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 19 Oct 2005, Rohit Seth wrote:<br />&gt; <br />&gt; IA-64 can prefetch any entry from VHPT (last level page table)<br />&gt; irrespective of its value.  You are right that i386 and x86_64 does not<br />&gt; cache !present entry.  Though OS is suppose to handle those faults if<br />&gt; happen.<br /><br />Well.. <br /><br />The fact is, the VM layer is designed for systems that do not cache <br />not-present entries in their TLB. See for example the end of do_no_page() <br />in mm/memory.c:<br /><br />	        /* no need to invalidate: a not-present page shouldn't be cached */<br />	        update_mmu_cache(vma, address, entry);<br />	        lazy_mmu_prot_update(entry);<br />	        spin_unlock(&amp;mm-&gt;page_table_lock);<br />	out:<br />	        return ret;<br /><br />which _allows_ for hardware that caches not-present pages, but the <br />architecture needs to catch them in the "update_mmu_cache()".<br /><br />IOW, the kernel is largely designed for present-only caching, and only has <br />explicit tlb flush macros for that case.<br /><br />If ia64 caches non-present TLB entries, then that would seem to be a bug <br />in the Linux ia64 port:<br /><br /> - include/asm-ia64/pgtable.h:<br />	#define update_mmu_cache(vma, address, pte) do { } while (0)<br /><br />(Of course, you can and maybe do handle it differently: you can also <br />decide to just take the TLB fault, and flush the TLB at fault time in your <br />handler. I don't see that either on ia64, though. Although I didn't look <br />into any of the asm code, so maybe it's hidden somewhere there).<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
