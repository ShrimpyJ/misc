    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/8/14/91">First message in thread</a></li><li><a href="/lkml/2005/8/14/91">Chuck Ebbert</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2005/8/14/117/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 14 Aug 2005 18:16:11 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 2.6.13-rc6] Fix kmem read on 32-bit archs</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 14 Aug 2005, Chuck Ebbert wrote:<br />&gt; <br />&gt;   GCC warns about using llseek and suggests lseek64 instead. That works<br />&gt; for me, but up till 2.6.11 plain lseek worked too.  I guess it really<br />&gt; shouldn't have?<br /><br />Well, we have had various special-cases for /dev/[k]mem to try to make it <br />work even with 32-bit lseek in the past (or with 64-bit lseek on archs <br />that need the high bit set). So I wouldn't say "shouldn't have" - I'd love <br />it if it worked, but my ove for it working is somewhat tempered by the <br />need for it not screwing up everything else in the kernel ;)<br /><br />Now, it's entirely possible that we shoul djust make "sys_lseek()" work<br />differently: right now it _always_ sign-extends its offset from "off_t" to<br />"loff_t", but the thing is, for a SEEK_SET, it probably makes more sense<br />to zero-extend it (since a negative SEEK_SET just doesn't make any sense).<br /><br />So a hacky alternative might be something like the appended, but I have to <br />admit that it's pretty damn hacky even if it makes sense at some level..<br /><br />Oh, btw, this will cause it to still return EOVERFLOW, you'd need to also <br />change that error return logic.<br /><br />		Linus<br /><br />-----<br />diff --git a/fs/read_write.c b/fs/read_write.c<br />--- a/fs/read_write.c<br />+++ b/fs/read_write.c<br />&#64;&#64; -137,7 +137,11 &#64;&#64; asmlinkage off_t sys_lseek(unsigned int <br /> <br /> 	retval = -EINVAL;<br /> 	if (origin &lt;= 2) {<br />-		loff_t res = vfs_llseek(file, offset, origin);<br />+		/* SEEK_SET zero-extends, others sign-extend */<br />+		loff_t res = offset;<br />+		if (!origin)<br />+			res = (unsigned long)offset;<br />+		res = vfs_llseek(file, res, origin);<br /> 		retval = res;<br /> 		if (res != (loff_t)retval)<br /> 			retval = -EOVERFLOW;	/* LFS: should only happen on 32 bit platforms */<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
