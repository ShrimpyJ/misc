    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/7/8/259">First message in thread</a></li><li><a href="/lkml/2005/7/14/122">Linus Torvalds</a><ul><li><a href="/lkml/2005/7/14/126">Arjan van de Ven</a><ul><li><a href="/lkml/2005/7/14/133">Linus Torvalds</a><ul><li><a href="/lkml/2005/7/14/169">Russell King</a><ul><li><a href="/lkml/2005/7/14/193">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2005/7/14/203">Johannes Stezenbach</a></li></ul></li><li><a href="/lkml/2005/7/14/139">"Al Boldi"</a></li><li><a href="/lkml/2005/7/14/180">john stultz</a><ul><li><a href="/lkml/2005/7/14/194">Linus Torvalds</a><ul><li><a href="/lkml/2005/7/14/205">Christoph Lameter</a></li><li><a href="/lkml/2005/7/14/224">john stultz</a></li><li><a href="/lkml/2005/7/14/246">Alan Cox</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2005/7/14/129">Chris Friesen</a><ul><li><a href="/lkml/2005/7/14/136">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2005/7/14/170">john stultz</a></li><li><a href="/lkml/2005/7/14/243">Alan Cox</a><ul><li class="origin"><a href="/lkml/2005/7/14/263">Linus Torvalds</a><ul><li><a href="/lkml/2005/7/14/263">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2005/7/14/287">Eric St-Laurent</a></li></ul></li><li><a href="/lkml/2005/7/14/258">Lee Revell</a><ul><li><a href="/lkml/2005/7/14/261">Linus Torvalds</a><ul><li><a href="/lkml/2005/7/14/265">Lee Revell</a><ul><li><a href="/lkml/2005/7/14/269">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2005/7/14/268">Lee Revell</a></li><li><a href="/lkml/2005/7/15/3">Con Kolivas</a><ul><li><a href="/lkml/2005/7/15/5">Lee Revell</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 14 Jul 2005 16:13:57 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] i386: Selectable Frequency of the Timer Interrupt</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 14 Jul 2005, Alan Cox wrote:<br />&gt;<br />&gt; &gt; just doesn't realize that the latter is a bit more complicated exactly <br />&gt; &gt; because the latter is a hell of a lot more POWERFUL. Trying to get rid of <br />&gt; &gt; jiffies for some religious reason is _stupid_.<br />&gt; <br />&gt; Getting rid of jiffies in its current form is a huge win for very<br />&gt; non-religious reasons. Jiffies is expensive in power management and<br />&gt; virtualisation because you have to maintain it.<br /><br />No, you're now confusing "interrupts" with "jiffies".<br /><br />There is no conceptual 1:1 thing between those two.<br /><br />It so happens that traditionally we've kept them 1:1, but there's nothing <br />that says that we can't slow down the interrupt source and just increment <br />jiffies by a factor of the slowdown when the interrupt _does_ happen.<br /><br />But no, that does NOT mean that "jiffies" should just count nanoseconds, <br />and the problem would be solved. The fact is, most users of jiffies only <br />care about the low 32 bits on 32-bit architectures, and that's fine as <br />long as jiffies are in the millisecond range, since it still leaves a <br />useful timeout value for almost everything (and then only long-range stuff <br />needs to use "u64" for their timeouts).<br /><br />In other words, we want a clock that is _known_ to not be very accurate,<br />but that is easy to just read from a memory location, and that has some<br />relationship to a timer tick in the sense that it should be at least in<br />the order-of-magnitude range for what a timer tick can cause.<br /><br />Anybody who asks for nanoseconds is confused. That just forces you to use <br />a 64-bit value, where no such value is needed. Things like TCP <br />retransmission timeouts would be totally _idiotic_ to be made in <br />nanoseconds: it would just make the socket data structures larger, and it <br />has zero relevance, since the actual timer tick doesn't have that kind of <br />resolution _anyway_.<br /><br />The current "jiffies" actually fits all of these problems _wonderfully_<br />well. Yes, it needs to be converted from "struct timeval" and friends, but<br />it needs to be converted exactly _because_ of the good properties it has,<br />namely that it fits in a word, and is _relevant_ to what a timer interrupt<br />ends up being.<br /><br />Look at 99% of the use of jiffies: it uses _jiffies_. It doesn't use<br />"jiffies_64", even though that's actually what gets updated. And it does<br />that _exactly_ because almost _nobody_ cares to pay the price of 64 bit<br />issues (both structure memory usage, and atomicity costs on 32-bit<br />architectures).<br /><br />And I claim that you _cannot_ do better.<br /><br />But what you can do is to have HZ at some reasonably high value (ie in the <br />kHz range), and then slow down the system clock to conserve energy, and <br />increment jiffies by 16 or 32 when in "slow clock mode". And then, when <br />there is a multimedia app or somethign that asks for high-precision <br />timers, you speed the interrupts up again, and you increment jiffies by 1.<br /><br />It's that simple. And it really _is_ simple. <br /><br />And guys, the fact is, jiffies works _today_. Making this change won't <br />break anything, and won't introduce any new concepts, and won't break any <br />existing drivers. In contrast, introducing _yet_ another timekeeping <br />mechanism is not only going to be objectively _worse_ than jiffies from a <br />technical standpoint, it's going to be a total disaster from a transition <br />standpoint too. <br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
