    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/7/28/64">First message in thread</a></li><li><a href="/lkml/2005/7/31/134">Linus Torvalds</a><ul><li><a href="/lkml/2005/7/31/138">Manuel Lauss</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2005/7/31/178">Stelian Pop</a></li><li><a href="/lkml/2005/8/1/116">Stelian Pop</a><ul><li><a href="/lkml/2005/8/2/56">Stelian Pop</a><ul><li><a href="/lkml/2005/8/2/68">Manuel Lauss</a><ul><li><a href="/lkml/2005/8/2/84">Ivan Kokshaysky</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 31 Jul 2005 11:59:06 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.6.13-rc3-mm3</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 31 Jul 2005, Manuel Lauss wrote:<br />&gt;<br />&gt; Linus Torvalds wrote:<br />&gt; <br />&gt;  &gt;<br />&gt;  &gt;  - The SonyPI driver just allocates IO regions in random areas. It's got a<br />&gt;  &gt;    list of places to try allocating in, and the 1080 area just happens to<br />&gt;  &gt;    be the first on the list, and since it's not used by anything else, it<br />&gt;  &gt;    succeeds (never mind that it's on totally the wrong bus).<br />&gt; <br />&gt; On three different intel-vaios, I've seen the sonypi device always<br />&gt; located at ioport 0x1080. Even the windows driver on these models<br />&gt; always allocates the 0x1080-0x109f io-range for it.<br /><br />I think that's how the Linux driver IO list was gathered - looking at <br />where it tends to sit by default.<br /><br />And the thing is, that would actually be ok too (as I sent in a separate <br />email to Stelian later) - if the BIOS actually sets it up at 1080, we <br />could easily just make a PCI quirk that marks that region _early_ in the <br />bootup sequence as being reserved for SonyPI. That would make any later <br />PCI allocation requests know to avoid it.<br /><br />The problem with the current setup is that the SonyPI driver is a<br />perfectly regular driver, and thus obviously loads _after_ a number of<br />other drivers, and the PCI setup code in particular. So what has happened<br />is that we've set up other PCI IO regious without knowing - or caring -<br />about the SonyPI driver, and then the SonyPI driver comes along and says<br />"oh, btw, I want that region".<br /><br />And _that_ cannot work reliably. If you have a specific pre-allocated<br />region that you want (or must have - some regions are fixed because of <br />things like ACPI tables or SMM etc that depend on them), then you need to <br />tell the world about it _before_ it starts allocating anything else, <br />because otherwise the allocation routines obviously cannot know about that <br />fixed thing.<br /><br />So what the sonypi driver does now is wrong, but there are two choices to<br />do it right: tell the PCI subsystem early (traditionally done as a PCI<br />quirk in drivers/pci/quirks.c, but you could possibly also make it as a<br />driver-specific "subsys_initcall()" - but only if your driver is always<br />compiled in, which sonypi isn't), or then allocate it nicely later.<br /><br />It's the combination of the two that is bad: "just tell somebody later"  <br />doesn't work. They may say that it's easier to get forgiveness than ask<br />for permission, but that's not true in kernels. Because if you do<br />something wrong, the device simply won't _work_, which is exactly what <br />happened here ;).<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
