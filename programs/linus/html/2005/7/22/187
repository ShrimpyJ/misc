    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/7/21/164">First message in thread</a></li><li><a href="/lkml/2005/7/21/164">Chuck Ebbert</a><ul><li><a href="/lkml/2005/7/21/169">Andrew Morton</a><ul><li><a href="/lkml/2005/7/22/15">Linus Torvalds</a><ul><li><a href="/lkml/2005/7/22/59">Arjan van de Ven</a></li></ul></li></ul></li><li><a href="/lkml/2005/7/22/33">Adrian Bunk</a><ul><li><a href="/lkml/2005/7/22/125">Linus Torvalds</a><ul><li><a href="/lkml/2005/7/25/149">Bill Davidsen</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 22 Jul 2005 16:19:25 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 2.6.13-rc3a] i386: inline restore_fpu</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 21 Jul 2005, Chuck Ebbert wrote:<br />&gt; <br />&gt;   This patch makes restore_fpu() an inline.  When L1/L2 cache are saturated<br />&gt; it makes a measurable difference.<br /><br />I've now pushed out an alternative fix for this, which imho is much <br />cleaner.<br /><br />We've long had infrastructure for "alternative asm instructions" that are <br />conditional on CPU features, and I just made restore_fpu() use that <br />instead:<br /><br />	/*<br />	 * The "nop" is needed to make the instructions the same<br />	 * length.<br />	 */<br />	#define restore_fpu(tsk)                        \<br />	        alternative_input(                      \<br />	                "nop ; frstor %1",              \<br />	                "fxrstor %1",                   \<br />	                X86_FEATURE_FXSR,               \<br />	                "m" ((tsk)-&gt;thread.i387.fsave))<br /><br />which not only makes it inline, but makes it a single instruction instead <br />of the mess it was before.<br /><br />Now, we should do the same for "fnsave ; fwait" vs "fxsave ; fnclex" too,<br />but I was lazy. If somebody wants to try that, it would need an <br />"alternative_output()" define but should otherwise be trivial too.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
