    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/9/19/260">First message in thread</a></li><li><a href="/lkml/2005/9/19/260">John McCutchan</a><ul><li><a href="/lkml/2005/9/19/255">John McCutchan</a></li><li><a href="/lkml/2005/9/19/256">Al Viro</a></li><li><a href="/lkml/2005/9/19/259">Linus Torvalds</a></li><li><a href="/lkml/2005/9/20/74">Christoph Hellwig</a></li><li><a href="/lkml/2005/9/19/272">John McCutchan</a><ul><li><a href="/lkml/2005/9/19/257">John McCutchan</a></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2005/9/20/41">John McCutchan</a></li><li><a href="/lkml/2005/9/19/262">Linus Torvalds</a></li><li><a href="/lkml/2005/9/19/267">John McCutchan</a></li><li><a href="/lkml/2005/9/19/268">Al Viro</a></li><li><a href="/lkml/2005/9/20/52">Linus Torvalds</a></li><li><a href="/lkml/2005/9/20/58">Al Viro</a></li><li><a href="/lkml/2005/9/20/75">Al Viro</a></li><li><a href="/lkml/2005/9/20/76">John McCutchan</a></li><li><a href="/lkml/2005/9/20/79">Linus Torvalds</a></li><li><a href="/lkml/2005/9/20/82">Linus Torvalds</a></li><li><a href="/lkml/2005/9/20/84">John McCutchan</a><ul><li><a href="/lkml/2005/9/20/19">Al Viro</a></li><li><a href="/lkml/2005/9/20/40">John McCutchan</a></li><li><a href="/lkml/2005/9/20/57">Al Viro</a></li><li><a href="/lkml/2005/9/20/109">John McCutchan</a><ul><li><a href="/lkml/2005/9/20/168">Al Viro</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 19 Sep 2005 21:52:01 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] stop inotify from sending random DELETE_SELF event under load</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 20 Sep 2005, John McCutchan wrote:<br />&gt; <br />&gt; &gt; 	* removal of this link, at the moment when it stops being accessible<br />&gt; &gt; [ none of the above, better done from vfs_...() ]<br />&gt; <br />&gt; That is the behaviour we want, how does Linus's second patch not<br />&gt; accomplish this? <br /><br />My latest patch will still wait for any other process that has that _path_ <br />open to release it.<br /><br />The reason? It looks "easy" to do it from d_delete(), but the thing is, at<br />the point where we've released the d_lock spinlock, the "struct inode" is<br />gone, gone, gone. And we don't want to do the notification _while_ we hold<br />the spinlocks either.<br /><br />So we can either do it the easy way - _before_ we get any spinlocks (but<br />that means that processes will be notified before the name is actually<br />gone), or we have to wait until _after_ we've unhashed the dentry and<br />released the spinlocks.<br /><br />But waiting until after that automatically means that the inode isn't <br />stable any more: it might be gone.<br /><br />The "fsnotify_nameremove()" thing doesn't have this problem, because it <br />simply doesn't even care about the inode - it only cares about the dentry, <br />which is stable.<br /><br />This is why movign the release to "dentry_iput()" helps us - it's the<br />point where we release the dentry spinlocks, and it's also where the inode<br />actually goes away. In other words, it's the _one_ point where we can<br />insert the notification outside of the dcache locks but before the inode<br />is gone.<br /><br />It's a sligtly inconvenient place, though. And it does mean that if the<br />dentry was in use by something else when the delete happened, the "inode<br />is gone"  notification will be delayed until the dentry is really free'd.<br />However, at least at that point it's really a per-path thing, and it won't <br />have any other global issues (ie hardlinks etc do not come into play with<br />my last patch).<br /><br />If you want immediate notification when the name disappears, you'd better <br />listen to the "nameremove" thing. <br /><br />I don't think we can reasonably do better than the last patch, but maybe <br />Al sees something I've missed.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
