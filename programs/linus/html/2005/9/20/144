    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/9/12/73">First message in thread</a></li><li><a href="/lkml/2005/9/20/133">Paul Jackson</a><ul><li><a href="/lkml/2005/9/20/140">Robin Holt</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2005/9/20/147">Paul Jackson</a></li><li><a href="/lkml/2005/9/20/148">Simon Derr</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 20 Sep 2005 08:07:31 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] cpuset semaphore depth check optimize</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 20 Sep 2005, Robin Holt wrote:<br />&gt; <br />&gt; This makes things even easier!!!<br />&gt; <br />&gt; When you create a cpuset, set the refcount to 0.  The root<br />&gt; cpuset is the exception and has a refcount of 1.<br />&gt; <br />&gt; When tasks are added to the cpuset, increment the refcount.<br />&gt; <br />&gt; When child cpusets are created, increment the refcount.  Each<br />&gt; cpuset has a list of children that is protected by a single<br />&gt; lock.<br /><br />You just described the "dentry" reference counting. Which has the same <br />issues: as long as a dentry has any children, it needs to remain.<br /><br />Except dentries are a lot more complex, because we want to keep cached <br />versions of them around even when the count goes to zero (and zero only <br />means that we're _allowed_ to remove it under memory pressure). And <br />dentries can move from one parent to another. <br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
