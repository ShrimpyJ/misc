    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/9/21/162">First message in thread</a></li><li><a href="/lkml/2005/9/21/175">Paolo 'Blaisorblade' Giarrusso</a><ul><li><a href="/lkml/2005/9/21/231">Andrew Morton</a><ul><li><a href="/lkml/2005/9/21/242">Blaisorblade</a><ul><li><a href="/lkml/2005/9/21/246">Andrew Morton</a><ul><li><a href="/lkml/2005/9/22/243">Blaisorblade</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 21 Sep 2005 13:29:59 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 07/10] uml: avoid fixing faults while atomic</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 21 Sep 2005, Andrew Morton wrote:<br />&gt;<br />&gt; There's an extremely special-case in the pagefault handlers where we fail<br />&gt; the fault if in_atomic().  It's unrelated to spinlocks (spinlocks don't<br />&gt; even cause in_atomic() to become true if !CONFIG_PREEMPT).<br /><br />There's a few other places where we use those semantics, though.<br /><br />Like "get_futex_value_locked()".<br /><br />&gt; So I think this change is only needed if UML implements kmap_atomic, as in<br />&gt; arch/i386/mm/highmem.c, which it surely does not do?<br /><br />No. Every architecture needs to honor it, or they are screwed.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
