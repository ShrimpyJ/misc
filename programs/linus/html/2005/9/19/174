    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/9/19/121">First message in thread</a></li><li><a href="/lkml/2005/9/19/121">Smarduch Mario-CMS063</a><ul><li><a href="/lkml/2005/9/19/156">Hugh Dickins</a><ul><li class="origin"><a href="/lkml/2005/9/19/187">Linus Torvalds</a><ul><li><a href="/lkml/2005/9/19/187">Hugh Dickins</a><ul><li><a href="/lkml/2005/9/19/193">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 19 Sep 2005 12:24:51 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Multi-Threaded fork() correctness on Linux 2.4 &amp; 2.6</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 19 Sep 2005, Hugh Dickins wrote:<br />&gt; On Mon, 19 Sep 2005, Smarduch Mario-CMS063 wrote:<br />&gt; &gt; <br />&gt; &gt;     recently I've been involved in debugging MT forks on IA-64 the issues<br />&gt; &gt; found were related to the way IA64 does its TLB invalidation. But there<br />&gt; &gt; is still one  issue that appears to be Linux in general related, and it<br />&gt; &gt; has to do with MT forks. <br />&gt; &gt; <br />&gt; &gt; For example a process has 3 threads T1, T2, T3.<br />&gt; &gt; <br />&gt; &gt; 1 - T1 issues a fork()<br />&gt; &gt;     - under page_table_lock write bit is reset in src and dest pte's<br />&gt; &gt; 2 - T2 may have a TLB mis, the new write protected pte is inserted<br />&gt; &gt;     (hw walker or sw tlb hdlr)<br />&gt; &gt; 3 - T2 winds up in do_wp_page() the page is copied to a new one<br />&gt; &gt; 4 - In the mean time T3 may be working off the same page, the<br />&gt; &gt;     TLB invalidation (flush_tlb_mm()) has no occurred yet.<br />&gt; &gt; 5 - Eventually TLB is globally flushed so threads will see the new pte.<br />&gt; &gt; 6 - As a result the MT task may experience inconsisitent state.<br />&gt; &gt;     - During 3 &amp; 4. For example locks may be acquired by both<br />&gt; &gt;       threads depending on the timing of the copy.<br />&gt; <br />&gt; I do think you've hit upon something interesting here.  Though it's<br />&gt; not quite as you describe.  We don't have to wait for the flush_tlb_mm<br />&gt; to sort it out: the flush_tlb_page in ptep_establish in break_cow in<br />&gt; do_wp_page resolves the discrepancy much sooner.  But your point is,<br />&gt; that's already too late: T2 inserts a "smudged" copy of the page which<br />&gt; T3 was working on, it does not contain all the data T3 had written there.<br /><br />Hmm. <br /><br />We hold the page_table_lock when doing the fork(), so T2 can't actually be <br />copying the page until we've done the TLB flush, no? And once the TLB <br />flush is done, all the writes by T3 should be in the page, so we copy the <br />right thing at that point, and there is no consistency problems?<br /><br />No? What am I missing?<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
