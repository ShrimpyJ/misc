    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/9/19/121">First message in thread</a></li><li><a href="/lkml/2005/9/19/174">Linus Torvalds</a><ul><li><a href="/lkml/2005/9/19/187">Hugh Dickins</a><ul><li class="origin"><a href="/lkml/2005/9/19/215">Linus Torvalds</a><ul><li><a href="/lkml/2005/9/19/215">Hugh Dickins</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 19 Sep 2005 13:39:38 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Multi-Threaded fork() correctness on Linux 2.4 &amp; 2.6</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 19 Sep 2005, Hugh Dickins wrote:<br />&gt; <br />&gt; I was totally overlooking the page_table_lock during the fork.<br />&gt; <br />&gt; But no matter, it's not good enough: src_mm-&gt;page_table_lock is acquired<br />&gt; and dropped at the inner level, in copy_pte_range (looking at latest 2.6):<br />&gt; it cannot be held across allocating page tables for dst_mm.<br />&gt; <br />&gt; So each time T1 drops it, there's a window for the T2 vs. T3 problem.<br />&gt; Yet we don't much want to flush TLB each time we leave copy_pte_range.<br /><br />Hmm. But we do hold the mmap_sem for writing, and we flush before we <br />release it, so it should still be ok. The page fault case needs to get it <br />for reading anyway.<br /><br />Yeah, the page_table_lock might make more sense, but I think the mmap_sem <br />thing works equally well.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
