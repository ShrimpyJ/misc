    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/9/25/54">First message in thread</a></li><li><a href="/lkml/2005/9/27/166">Linus Torvalds</a><ul><li><a href="/lkml/2005/9/30/57">Harald Welte</a><ul><li class="origin"><a href="/lkml/2005/9/30/175">Linus Torvalds</a><ul><li><a href="/lkml/2005/9/30/175">Chris Wright</a><ul><li><a href="/lkml/2005/9/30/190">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2005/9/30/108/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 30 Sep 2005 07:56:59 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [linux-usb-devel] Re: [Security] [vendor-sec] [BUG/PATCH/RFC] Oops while completing async USB via usbdevio</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 30 Sep 2005, Harald Welte wrote:<br />&gt; <br />&gt; I'm probably the person in this thread who understands the least about<br />&gt; the USB stack and the scheduler, but if there is no implementation of<br />&gt; Linus' suggested "PID approach" yet, I'd be willing to write a patch and<br />&gt; test it. Please let me know.<br /><br />Here's a totally untested patch. It's guaranteed not to do the "right <br />thing", simply because it doesn't _use_ the uid/euid information. But it's <br />in the right kind of direction.<br /><br />If you change the "kill_proc_info()" into a "kill_proc_info_as_uid()" <br />call, and add that to kernel/signal.c (which is basically kill_proc_info() <br />except it uses the passed-in uid/euid for the "check_kill_permission()" <br />tests instead), it should be correct.<br /><br />As-is, it won't work, because it will use a _random_ uid (whatever is the <br />currently running process) for the kill permission. So this really is just <br />a "use this as a template" kind of patch, DO NOT APPLY!<br /><br />		Linus<br /><br />---<br />diff --git a/drivers/usb/core/devio.c b/drivers/usb/core/devio.c<br />--- a/drivers/usb/core/devio.c<br />+++ b/drivers/usb/core/devio.c<br />&#64;&#64; -58,7 +58,8 &#64;&#64; static struct class *usb_device_class;<br /> struct async {<br /> 	struct list_head asynclist;<br /> 	struct dev_state *ps;<br />-	struct task_struct *task;<br />+	pid_t pid;<br />+	uid_t uid, euid;<br /> 	unsigned int signr;<br /> 	unsigned int ifnum;<br /> 	void __user *userbuffer;<br />&#64;&#64; -290,7 +291,14 &#64;&#64; static void async_completed(struct urb *<br /> 		sinfo.si_errno = as-&gt;urb-&gt;status;<br /> 		sinfo.si_code = SI_ASYNCIO;<br /> 		sinfo.si_addr = as-&gt;userurb;<br />-		send_sig_info(as-&gt;signr, &amp;sinfo, as-&gt;task);<br />+		/*<br />+		 * We should have a <br />+		 *<br />+		 *  kill_proc_info_as_uid(signr, info, pid, uid, euid);<br />+		 *<br />+		 * but we don't.<br />+		 */<br />+		kill_proc_info(as-&gt;signr, &amp;sinfo, as-&gt;pid);<br /> 	}<br />         wake_up(&amp;ps-&gt;wait);<br /> }<br />&#64;&#64; -988,7 +996,9 &#64;&#64; static int proc_do_submiturb(struct dev_<br /> 		as-&gt;userbuffer = NULL;<br /> 	as-&gt;signr = uurb-&gt;signr;<br /> 	as-&gt;ifnum = ifnum;<br />-	as-&gt;task = current;<br />+	as-&gt;pid = current-&gt;pid;<br />+	as-&gt;uid = current-&gt;uid;<br />+	as-&gt;euid = current-&gt;euid;<br /> 	if (!(uurb-&gt;endpoint &amp; USB_DIR_IN)) {<br /> 		if (copy_from_user(as-&gt;urb-&gt;transfer_buffer, uurb-&gt;buffer, as-&gt;urb-&gt;transfer_buffer_length)) {<br /> 			free_async(as);<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
