    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/11/20/189">First message in thread</a></li><li><a href="/lkml/2005/11/21/211">Linus Torvalds</a><ul><li><a href="/lkml/2005/11/21/214">Matthew Wilcox</a><ul><li class="origin"><a href="/lkml/2005/11/21/252">Linus Torvalds</a><ul><li><a href="/lkml/2005/11/21/252">Ingo Molnar</a><ul><li><a href="/lkml/2005/11/21/258">Paul Mackerras</a></li><li><a href="/lkml/2005/11/22/393">Pavel Machek</a></li></ul></li><li><a href="/lkml/2005/11/21/255">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2005/11/21/269">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 21 Nov 2005 11:59:05 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 4/5] Centralise NO_IRQ definition</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 21 Nov 2005, Matthew Wilcox wrote:<br />&gt; &gt; <br />&gt; &gt; 	if (!dev-&gt;irq)<br />&gt; &gt; 		return;<br />&gt; &gt; <br />&gt; &gt; (whatever, made up). And that having NO_IRQ be anything but 0 is thus <br />&gt; &gt; fundamentally broken.<br />&gt; <br />&gt; The idea was to give them something better to use instead of this.<br /><br />Why?<br /><br />The above is obvious even to a non-programmer. There _is_ no better thing <br />from a clarity standpoint.<br /><br />&gt; The only relevant thing I found with google was<br />&gt; <a href="https://www.microsoft.com/whdc/archive/pciirq.mspx">http://www.microsoft.com/whdc/archive/pciirq.mspx</a><br /><br />Look at, for example, any cardbus controller. The way to disable <br />generation of the legacy interrupt? Write an irq value of 0 to the <br />interrupt control register.<br /><br />Or check out the irq routers in arch/i386/pci/irq.c. Every _single_ one of <br />them does the same. Zero means disabled.<br /><br />The point I'm trying to make is that there already _is_ a special bit <br />pattern that means "no irq", and it's what<br /><br /> - the kernel has used for the last 14 years<br /> - is the easiest and most logical one to test for<br /> - real hardware uses<br /><br />so why not just use it?<br /><br />Anybody who says that<br /><br />	if (!dev-&gt;irq)<br />		return;<br /><br />isn't logical is just on drugs. It's logical _and_ readable. More so than <br />any alternative, especially as any alternative will always have the <br />problem that some people will write the above _anyway_.<br /><br />If you make NO_IRQ be something else than 0, for safety you should also <br />make the irq thing be a structure so that the test against zero (which is <br />special, as _defined_ by the C language) won't work.<br /><br />At which point you might as well just do something like<br /><br />	struct interrupt_descriptor {<br />		unsigned int nr:31;<br />		unsigned int valid:1;<br />	};<br /><br />and then people can just say<br /><br />	if (!dev-&gt;irq.valid)<br />		return;<br /><br />instead, which is also readable, and where you simply cannot do the old <br />"if (!dev-&gt;irq)" at all.<br /><br />The fact is, 0 _is_ special. Not just for hardware, but because 0 has a <br />magical meaning as "false" in the C language.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
