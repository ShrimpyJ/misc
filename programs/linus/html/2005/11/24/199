    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/11/24/189">First message in thread</a></li><li><a href="/lkml/2005/11/24/189">	linux&#64;horizon ...</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 24 Nov 2005 10:48:59 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] SMP alternatives</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 24 Nov 2005, linux&#64;horizon.com wrote:<br />&gt;<br />&gt; &gt; I suspect that with MAP_SHARED + PROT_WRITE being pretty uncommon anyway, <br />&gt; &gt; we can probably find trivial patterns in the kernel. Like only one process <br />&gt; &gt; holding that file open - which is what you get with things that use mmap() <br />&gt; &gt; to write a new file (I think "ld" used to have a config option to write <br />&gt; &gt; files that way, for example).<br />&gt; <br />&gt; Just a bit of practical experience: I use mmap() to write data a LOT,<br />&gt; because msync(MS_ASYNC) is the most portable way to do an async write.<br /><br />Sure. But I suspect that nobody else has that file open when you do so?<br /><br />In other words, even your usage is something where the OS could tell that <br />you don't actually need atomic operations. It certainly gets slightly more <br />complicated (we'd need to trigger some special stuff if another process <br />does an mmap on it), but it's not conceptually very difficult to just <br />notice automatically and do the right thing(tm).<br /><br />Now, if two programs are using mmap() to write to the same file at the <br />same time, then the kernel can't tell any more. But in that case, you <br />probably _do_ want atomic ops to be guaranteed, so not disabling them is <br />the right thing to do there.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
