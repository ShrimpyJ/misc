    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2005/11/9/403">First message in thread</a></li><li><a href="/lkml/2005/11/23/251">Linus Torvalds</a><ul><li><a href="/lkml/2005/11/23/253">Andi Kleen</a></li><li><a href="/lkml/2005/11/23/254">"Jeff V. Merkey"</a><ul><li><a href="/lkml/2005/11/23/266">Linus Torvalds</a><ul><li><a href="/lkml/2005/11/23/289">	jmerkey&#64;ns1 ...</a></li></ul></li></ul></li><li><a href="/lkml/2005/11/23/273">"H. Peter Anvin"</a><ul><li><a href="/lkml/2005/11/23/288">	jmerkey&#64;ns1 ...</a></li></ul></li><li><a href="/lkml/2005/11/23/345">Alan Cox</a><ul><li><a href="/lkml/2005/11/23/346">Andi Kleen</a><ul><li><a href="/lkml/2005/11/23/358">Alan Cox</a><ul><li><a href="/lkml/2005/11/23/361">Arjan van de Ven</a></li><li><a href="/lkml/2005/11/23/362">Andi Kleen</a></li><li><a href="/lkml/2005/11/23/380">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2005/11/23/368">Jeff Garzik</a><ul><li><a href="/lkml/2005/11/23/395">Andi Kleen</a></li><li><a href="/lkml/2005/11/23/403">Pavel Machek</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2005/11/23/367">Linus Torvalds</a><ul><li><a href="/lkml/2005/11/23/367">Andi Kleen</a><ul><li><a href="/lkml/2005/11/23/382">Linus Torvalds</a></li><li><a href="/lkml/2005/11/23/522">Jeff Garzik</a></li></ul></li><li><a href="/lkml/2005/11/23/369">Daniel Jacobowitz</a><ul><li><a href="/lkml/2005/11/23/371">"H. Peter Anvin"</a></li><li><a href="/lkml/2005/11/23/387">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2005/11/23/385">Alan Cox</a><ul><li><a href="/lkml/2005/11/23/392">"H. Peter Anvin"</a></li></ul></li><li><a href="/lkml/2005/11/25/13">Chris Wedgwood</a><ul><li><a href="/lkml/2005/11/25/93">Linus Torvalds</a></li><li><a href="/lkml/2005/11/25/113">"H. Peter Anvin"</a></li></ul></li></ul></li><li><a href="/lkml/2005/11/23/546">Mikulas Patocka</a></li></ul></li><li><a href="/lkml/2005/11/23/548">Mikulas Patocka</a><ul><li><a href="/lkml/2005/11/23/551">"H. Peter Anvin"</a></li></ul></li><li><a href="/lkml/2005/11/24/239">Ulrich Drepper</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Nov 2005 13:36:08 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] SMP alternatives</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 23 Nov 2005, Alan Cox wrote:<br />&gt; <br />&gt; There is a much much better way to do it than just user space and<br />&gt; without hitting cr3/cr4 - put "lock works" in the PAT and while we'll<br />&gt; have to add PAT support which we need to do anyway we would get a world<br />&gt; where on uniprocessor lock prefix only works on addresse targets we want<br />&gt; it to - ie pci_alloc_consistent() pages.<br /><br />No. That would be wrong.<br /><br />The thing is, "lock" is useless EVEN ON SMP in user space 99% of the time.<br /><br />Think of all the thread locking in libc - where 99% of all processes are <br />single-threaded, and it does nothing but slow things down.<br /><br />Actual UP machines are going to go away - even ARM is going SMP, and in <br />the PC space, we'll have multi-core laptops probably being the rule rather <br />than the exception in a couple of years. So the kernel will need "lock" in <br />the forseeable future, and optimizing for UP is a lost game.<br /><br />But optimizing for a single _thread_ is not a lost game. I don't believe <br />that threaded applications are necessarily going to take over all that <br />much in a lot of areas. Sure, we'll have more threaded apps too, but we'll <br />continue to have tons more of performance-critical non-threaded things <br />like compilers etc.<br /><br />And _that_ is worth optimizing for. General libraries that have to be able <br />to handle the threaded case dynamically, but that are often run with no <br />shared memory anywhere.<br /><br />THAT is what I'd like to have CPU support for. Not for UP (it's going <br />away), and not for the kernel (it's never single-threaded).<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
