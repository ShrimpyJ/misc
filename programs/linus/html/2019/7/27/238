    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/7/27/87">First message in thread</a></li><li><a href="/lkml/2019/7/27/89">Christian Brauner</a><ul><li><a href="/lkml/2019/7/27/237">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2019/7/27/291">Linus Torvalds</a><ul><li><a href="/lkml/2019/7/27/291">Christian Brauner</a></li></ul></li><li><a href="/lkml/2019/7/27/241">Al Viro</a><ul><li><a href="/lkml/2019/7/27/294">Christian Brauner</a></li></ul></li><li><a href="/lkml/2019/7/27/292">Christian Brauner</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 27 Jul 2019 09:41:25 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2 1/2] pidfd: add P_PIDFD to waitid()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Jul 27, 2019 at 9:28 AM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Something like<br />&gt;<br />&gt;   struct pid *fd_to_pid(unsigned int fd)<br />&gt;   {<br />&gt;         struct fd f;<br />&gt;         struct pid *pid;<br />...<br /><br />I forgot to put my usual disclaimer about TOTALLY UNTESTED GARBAGE in<br />that email. I want to make that part clear: that code snippet was<br />meant as a rough guide of direction, not as a "this works".<br /><br />Hopefully that was clear.<br /><br />Also note again that one of the reasons I would prefer that<br />"fd_to_pid()" interface is that you _can_ do it cleverly with RCU<br />lookup, but that requires a lot of care.<br /><br />In particular, I think all of our _existing_<br />"proc_pid(file_inode(file))" users are done while you actually hold a<br />reference to "struct file *", so they don't have to worry about races<br />with another thread doing the final -&gt;release(). So the "clever" thing<br />is possible, but might need a _lot_ of care to make sure the 'struct<br />pid *' associated with the file still exists.<br /><br />The example code sequence was not doing the clever thing, obviously.<br />So it was untested _and_ simple-stupid. But it has the interface that<br />I'd prefer.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
