    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/7/22/1276">First message in thread</a></li><li><a href="/lkml/2019/7/24/457">Yann Droneaud</a><ul><li><a href="/lkml/2019/7/24/491">Rasmus Villemoes</a><ul><li class="origin"><a href="/lkml/2019/7/25/1272">Linus Torvalds</a><ul><li><a href="/lkml/2019/7/25/1272">Kees Cook</a><ul><li><a href="/lkml/2019/7/25/1562">Joe Perches</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 24 Jul 2019 10:08:57 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/2] string: Add stracpy and stracpy_pad mechanisms</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 24, 2019 at 6:09 AM Rasmus Villemoes<br />&lt;linux&#64;rasmusvillemoes.dk&gt; wrote:<br />&gt;<br />&gt; The kernel's snprintf() does not behave in a non-standard way, at least<br />&gt; not with respect to its return value.<br /><br />Note that the kernels snprintf() *does* very much protect against the<br />overflow case - not by changing the return value, but simply by having<br /><br />        /* Reject out-of-range values early.  Large positive sizes are<br />           used for unknown buffer sizes. */<br />        if (WARN_ON_ONCE(size &gt; INT_MAX))<br />                return 0;<br /><br />at the very top.<br /><br />So you can't actually overflow in the kernel by using the repeated<br /><br />        offset += vsnprintf( .. size - offset ..);<br /><br />model.<br /><br />Yes, it's the wrong thing to do, but it is still _safe_.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
