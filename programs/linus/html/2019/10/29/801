    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/10/28/191">First message in thread</a></li><li><a href="/lkml/2019/10/28/334">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2019/10/29/665">Konstantin Khlebnikov</a><ul><li class="origin"><a href="/lkml/2019/10/30/69">Linus Torvalds</a><ul><li><a href="/lkml/2019/10/30/69">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2019/10/30/74">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2019/10/30/245">Steven Whitehouse</a><ul><li><a href="/lkml/2019/10/30/264">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 29 Oct 2019 17:52:05 +0100</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mm/filemap: do not allocate cache pages beyond end of file at read</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Oct 29, 2019 at 3:25 PM Konstantin Khlebnikov<br />&lt;khlebnikov&#64;yandex-team.ru&gt; wrote:<br />&gt;<br />&gt; I think all network filesystems which synchronize metadata lazily should be<br />&gt; marked. For example as "SB_VOLATILE". And vfs could handle them specially.<br /><br />No need. The VFS layer doesn't call generic_file_buffered_read()<br />directly anyway. It's just a helper function for filesystems to use if<br />they want to.<br /><br />They could (and should) make sure the inode size is sufficiently<br />up-to-date before calling it. And if they want something more<br />synchronous, they can do it themselves.<br /><br />But NFS, for example, has open/close consistency, so the metadata<br />revalidation is at open() time, not at read time.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
