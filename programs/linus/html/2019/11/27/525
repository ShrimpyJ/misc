    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/11/26/198">First message in thread</a></li><li><a href="/lkml/2019/11/26/831">Linus Torvalds</a><ul><li><a href="/lkml/2019/11/27/28">Andy Lutomirski</a><ul><li><a href="/lkml/2019/11/27/515">Oleg Nesterov</a></li></ul></li><li><a href="/lkml/2019/11/27/511">Oleg Nesterov</a><ul><li class="origin"><a href="/lkml/2019/11/28/509">Linus Torvalds</a><ul><li><a href="/lkml/2019/11/28/509">Oleg Nesterov</a><ul><li><a href="/lkml/2019/11/28/645">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 27 Nov 2019 09:21:44 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] ptrace/x86: introduce TS_COMPAT_RESTART to fix get_nr_restart_syscall()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 27, 2019 at 9:02 AM Oleg Nesterov &lt;oleg&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; OK, lets add the new restart_block.nr_restart_syscall field, then we need<br />&gt;<br />&gt;         void set_restart_block_fn(restart, fn)<br />&gt;         {<br />&gt;                 restart-&gt;nr_restart_syscall = arch_get_nr_restart_syscall()<br />&gt;                 restart-&gt;fn = fn;<br />&gt;         }<br /><br />No, I'd suggest just adding an arch-specific "unsigned long" to the<br />restart data (and not force the naming to something like the system<br />call number - that's just an x86 detail), and then something like this<br />on x86:<br /><br />   void arch_set_restart_data(restart)<br />   {<br />      restart-&gt;arch_data = x86_get_restart_syscall();<br />  }<br />  #define arch_set_restart_data arch_set_restart_data<br /><br />and then we'd have in generic code something like<br /><br />  #ifndef arch_set_restart_data<br />  #define arch_set_restart_data(block) do { } while (0)<br />  #endif<br /><br />  int set_restart_fn(fn)<br />  {<br />     struct restart_block *restart = &amp;current-&gt;restart_blockl<br />     arch_set_restart_data(restart);<br />     restart-&gt;fn = fn;<br />     return -ERESTART_RESTARTBLOCK;<br />   }<br /><br />or something like that, and we'd just convert the existing (there<br />aren't that many)<br /><br />    restart-&gt;fn = xyz<br />    return -ERESTART_RESTARTBLOCK;<br /><br />cases into<br /><br />    return set_restart_fn(fn);<br /><br />and for bonus points, we probably should rename the "fn" field, but<br />that might be too much work.<br /><br />It doesn't look *too* painful, because we just don't have all that<br />many restarting system calls<br /><br />But the above is handwaving.<br /><br />And yeah, I never understood why the compat and x32 cases should have<br />different system call numbers in the first place. The seccomp argument<br />is garbage, but probably historical stuff that we can no longer<br />change.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
