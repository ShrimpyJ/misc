    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/10/28/191">First message in thread</a></li><li><a href="/lkml/2019/11/25/535">Linus Torvalds</a><ul><li><a href="/lkml/2019/11/27/449">Steven Whitehouse</a><ul><li><a href="/lkml/2019/11/27/480">Andreas Gruenbacher</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 27 Nov 2019 09:29:44 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mm/filemap: do not allocate cache pages beyond end of file at read</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 27, 2019 at 7:42 AM Steven Whitehouse &lt;swhiteho&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; I'll leave the finer details to Andreas here, since it is his patch, and<br />&gt; hopefully we can figure out a good path forward.<br /><br />As mentioned, I don't _hate_ that patch (ok, I seem to have typoed it<br />and said that I don't "gate" it ;), so if that's what you guys really<br />want to do, I'm ok with it. But..<br /><br />I do think you already get the data with the current case, from the<br />"short read" thing. So just changing the current generic read function<br />to check against the size first:<br /><br />  --- a/mm/filemap.c<br />  +++ b/mm/filemap.c<br />  &#64;&#64; -2021,9 +2021,9 &#64;&#64; static ssize_t<br />generic_file_buffered_read(struct kiocb *iocb,<br />        unsigned int prev_offset;<br />        int error = 0;<br /><br />  -     if (unlikely(*ppos &gt;= inode-&gt;i_sb-&gt;s_maxbytes))<br />  +     if (unlikely(*ppos &gt;= inode-&gt;i_size))<br />                return 0;<br />  -     iov_iter_truncate(iter, inode-&gt;i_sb-&gt;s_maxbytes);<br />  +     iov_iter_truncate(iter, inode-&gt;i_size);<br /><br />        index = *ppos &gt;&gt; PAGE_SHIFT;<br />        prev_index = ra-&gt;prev_pos &gt;&gt; PAGE_SHIFT;<br /><br />and you're done. Nice and clean.<br /><br />Then in gfs2 you just notice the short read, and check at that point.<br />Sure, you'll also cut read-ahead to the old size boundary, but does<br />anybody _seriously_ believe that read-ahead matters when you hit the<br />"some other node write more data, we're reading past the old end"<br />case? I don't think that's the case.<br /><br />But I _can_ live with the patch that adds the extra "cached only" bit.<br />It just honestly feels pointless.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
