    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/11/10/111">First message in thread</a></li><li><a href="/lkml/2019/11/12/876">Linus Torvalds</a><ul><li><a href="/lkml/2019/11/17/153">Kirill Smelkov</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2019/11/17/154/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 17 Nov 2019 11:20:48 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: KCSAN: data-race in __alloc_file / __alloc_file</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Nov 17, 2019 at 10:56 AM Kirill Smelkov &lt;kirr&#64;nexedi.com&gt; wrote:<br />&gt;<br />&gt;   I'd like to take a time break for now.<br />&gt;   I will try to return to this topic after finishing my main work first.<br />&gt;   I apologize for the inconvenience. )<br /><br />Sure, no problem, appreciate that you're looking at it.<br /><br />I *think* the pipe and socket case should be fixed by something like<br />this, but it is entirely and utterly untested.<br /><br />              Linus<br /> fs/pipe.c    | 6 ++++--<br /> net/socket.c | 1 +<br /> 2 files changed, 5 insertions(+), 2 deletions(-)<br /><br />diff --git a/fs/pipe.c b/fs/pipe.c<br />index 8a2ab2f974bd..de6dee559d41 100644<br />--- a/fs/pipe.c<br />+++ b/fs/pipe.c<br />&#64;&#64; -783,6 +783,7 &#64;&#64; int create_pipe_files(struct file **res, int flags)<br /> 	}<br /> <br /> 	f-&gt;private_data = inode-&gt;i_pipe;<br />+	stream_open(inode, f);<br /> <br /> 	res[0] = alloc_file_clone(f, O_RDONLY | (flags &amp; O_NONBLOCK),<br /> 				  &amp;pipefifo_fops);<br />&#64;&#64; -791,6 +792,7 &#64;&#64; int create_pipe_files(struct file **res, int flags)<br /> 		fput(f);<br /> 		return PTR_ERR(res[0]);<br /> 	}<br />+	stream_open(inode, f);<br /> 	res[0]-&gt;private_data = inode-&gt;i_pipe;<br /> 	res[1] = f;<br /> 	return 0;<br />&#64;&#64; -931,9 +933,9 &#64;&#64; static int fifo_open(struct inode *inode, struct file *filp)<br /> 	__pipe_lock(pipe);<br /> <br /> 	/* We can only do regular read/write on fifos */<br />-	filp-&gt;f_mode &amp;= (FMODE_READ | FMODE_WRITE);<br />+	stream_open(inode, filp);<br /> <br />-	switch (filp-&gt;f_mode) {<br />+	switch (filp-&gt;f_mode &amp; (FMODE_READ | FMODE_WRITE)) {<br /> 	case FMODE_READ:<br /> 	/*<br /> 	 *  O_RDONLY<br />diff --git a/net/socket.c b/net/socket.c<br />index 6a9ab7a8b1d2..3c6d60eadf7a 100644<br />--- a/net/socket.c<br />+++ b/net/socket.c<br />&#64;&#64; -404,6 +404,7 &#64;&#64; struct file *sock_alloc_file(struct socket *sock, int flags, const char *dname)<br /> <br /> 	sock-&gt;file = file;<br /> 	file-&gt;private_data = sock;<br />+	stream_open(SOCK_INODE(sock), file);<br /> 	return file;<br /> }<br /> EXPORT_SYMBOL(sock_alloc_file);</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
