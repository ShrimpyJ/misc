    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/12/5/774">First message in thread</a></li><li><a href="/lkml/2019/12/18/1290">Josh Triplett</a><ul><li><a href="/lkml/2019/12/18/1313">Linus Torvalds</a><ul><li><a href="/lkml/2019/12/18/1318">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2019/12/19/86">David Howells</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 19 Dec 2019 08:35:46 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/2] pipe: Fixes [ver #2]</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Dec 18, 2019 at 11:56 PM David Howells &lt;dhowells&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; I looked at splitting the waitqueue in to two, but it makes poll tricky.<br /><br />No, it's actually trivial for poll.<br /><br />The thing is, poll can happily just add two wait-queues to the<br />poll_table. In my conversion, I just did<br /><br />-       poll_wait(filp, &amp;pipe-&gt;wait, wait);<br />+       if (filp-&gt;f_mode &amp; FMODE_READ)<br />+               poll_wait(filp, &amp;pipe-&gt;rd_wait, wait);<br />+       if (filp-&gt;f_mode &amp; FMODE_WRITE)<br />+               poll_wait(filp, &amp;pipe-&gt;wr_wait, wait);<br /><br />which changes the unconditional "add one" to two conditional adds.<br />They _could_ have been unconditional too, but why add unnecessary<br />wakeups? So it only really does it twice on named pipes (if opened for<br />reading and writing).<br /><br />It's _unusual_ to add two wait-queues for a single poll, but it's not<br />wrong. The tty layer has always done it - exactly because it has<br />separate wait queues for reading and writing. Some other drivers do<br />too. Sometimes there's a separate wait queue for errors, sometimes<br />there are multiple wait-queues because there are events from the<br />"subsystem" and there are other events from the "device". I think<br />sound does the latter, for example.<br /><br />And no, I don't particularly like the FMODE_READ/WRITE testing above -<br />it would be better to pass in the polling mask and ask "are we waiting<br />for polling for reading or writing?" instead of asking whether the<br />file descriptor was opened for read or write, but hey, it is what it<br />is.<br /><br />Sadly, "poll()" doesn't really get passed the bitmask of what is being<br />waited on (it's there in the poll_tabvle "_key" field, but I don't<br />want to have the pipe code look into those kinds of details.<br /><br />So the named pipe case could be improved, but it's not like anybody<br />really cares. Nobody uses named pipes any more (and few people ever<br />did). So I didn't worry about it.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
