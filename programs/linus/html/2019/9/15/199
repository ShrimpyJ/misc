    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/8/452">First message in thread</a></li><li><a href="/lkml/2019/9/15/187">Willy Tarreau</a><ul><li><a href="/lkml/2019/9/15/190">Willy Tarreau</a><ul><li class="origin"><a href="/lkml/2019/9/15/202">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/15/202">Willy Tarreau</a><ul><li><a href="/lkml/2019/9/15/208">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2019/9/15/197">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/15/200">Willy Tarreau</a></li><li><a href="/lkml/2019/9/15/296">"Ahmed S. Darwish"</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 15 Sep 2019 12:08:31 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH RFC v2] random: optionally block in getrandom(2) when the CRNG is uninitialized</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Sep 15, 2019 at 11:37 AM Willy Tarreau &lt;w&#64;1wt.eu&gt; wrote:<br />&gt;<br />&gt; I also wanted to ask, are we going to enforce the same strategy on<br />&gt; /dev/urandom ?<br /><br />Right now the strategy for /dev/urandom is "print a one-line warning,<br />then do the read".<br /><br />I don't see why we should change that. The whole point of urandom has<br />been that it doesn't block, and doesn't use up entropy.<br /><br />It's the _blocking_ behavior that has always been problematic. It's<br />why almost nobody uses /dev/random in practice.<br /><br />getrandom() looks like /dev/urandom in not using up entropy, but had<br />that blocking behavior of /dev/random that was problematic.<br /><br />And exactly the same way it was problematic for /dev/random users, it<br />has now shown itself to be problematic for getrandom().<br /><br />My suggested patch left the /dev/random blocking behavior, because<br />hopefully people *know* about the problems there.<br /><br />And hopefully people understand that getrandom(GRND_RANDOM) has all<br />the same issues.<br /><br />If you want that behavior, you can still use GRND_RANDOM or<br />/dev/random, but they are simply not acceptable for boot-time<br />schenarios. Never have been,<br /><br />... exactly the way the "block forever" wasn't acceptable for getrandom().<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
