    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/13/45">First message in thread</a></li><li><a href="/lkml/2019/9/16/758">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/16/835">Andy Lutomirski</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 16 Sep 2019 16:26:20 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] Improve memset</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 16, 2019 at 4:14 PM Andy Lutomirski &lt;luto&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; Well, when I wrote this email, I *thought* it was inlining the<br />&gt; 'memset' function, but maybe I just can't read gcc's output today.<br /><br />Not having your compiler, it's also possible that it works for you,<br />but just doesn't work for me.<br /><br />&gt; It seems like gcc is maybe smart enough to occasionally optimize<br />&gt; memset just because it's called 'memset'.  This generates good code:<br /><br />Yup, that does the rigth thing for me and ignores the definition of<br />memset() in favor of the built-in one.<br /><br />However, at least part of this discussion started because of the<br />reverse problem (turning a couple of assignments into memset), and the<br />suggestion that we might be able to use -ffreestanding together with<br /><br />  #define memset __builtin_memset<br /><br />and then your nice code generation goes away, because the magical<br />treatment of memset goes away. I get<br /><br />        one_word:<br />                xorl    %eax, %eax<br />                ret<br /><br />        not_one_word:<br />                movq    %rsi, %rdx<br />                xorl    %esi, %esi<br />                jmp     memset<br /><br />despite having that "inline void *memset()" definition.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
