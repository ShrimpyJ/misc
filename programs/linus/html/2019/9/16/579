    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/8/452">First message in thread</a></li><li><a href="/lkml/2019/9/16/532">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/16/573">"Theodore Y. Ts'o"</a><ul><li class="origin"><a href="/lkml/2019/9/16/584">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/16/584">Serge Belyshev</a></li><li><a href="/lkml/2019/9/16/635">Willy Tarreau</a></li><li><a href="/lkml/2019/9/16/840">Matthew Garrett</a><ul><li><a href="/lkml/2019/9/16/830">Linus Torvalds</a></li><li><a href="/lkml/2019/9/16/831">Matthew Garrett</a></li><li><a href="/lkml/2019/9/16/834">"Alexander E. Patrakov"</a></li><li><a href="/lkml/2019/9/16/836">Matthew Garrett</a></li><li><a href="/lkml/2019/9/16/837">Linus Torvalds</a></li><li><a href="/lkml/2019/9/16/839">"Ahmed S. Darwish"</a></li></ul></li></ul></li><li><a href="/lkml/2019/9/16/587">"Alexander E. Patrakov"</a></li><li><a href="/lkml/2019/9/16/667">"Ahmed S. Darwish"</a></li><li><a href="/lkml/2019/9/17/576">Lennart Poettering</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 16 Sep 2019 10:44:31 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 5.3-rc8</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 16, 2019 at 10:21 AM Theodore Y. Ts'o &lt;tytso&#64;mit.edu&gt; wrote:<br />&gt;<br />&gt; We could create a new flag, GRND_INSECURE, which never blocks.  And<br />&gt; that that allows us to solve the problem for silly applications that<br />&gt; are using getrandom(2) for non-cryptographic use cases.<br /><br />Note that getting "reasonably good random numbers" is definitely not silly.<br /><br />If you are doing things like just shuffling a deck of cards for<br />playing solitaire on your computer, getting a good enough source of<br />randomness is nontrivial. Using getrandom() for that is a _very_ valid<br />use. But it obviously does not need _secure_ random numbers.<br /><br />It is, in fact, _so_ random that we give that AT_RANDOM thing to every<br />new process because people want things like that. Sadly, people often<br />aren't aware of it, and don't use that as much as they could.<br /><br />(Btw, we should probably also mix in other per-process state, because<br />right now people have actually attacked the boot-time AT_RANDOM to<br />find canary data etc).<br /><br />So I think you are completely out to lunch by calling these "insecure"<br />things "silly". They are very very common. *WAY* more common than<br />making a long-term secure key will ever be. There's just a lot of use<br />of reasonable randomness.<br /><br />You also are ignoring that we have an existing problem with existing<br />applications. That happened exactly because those things are so<br />common.<br /><br />So here's my suggestion:<br /><br /> - admit that the current situation actually causes problems, and has<br />_existing_ bugs.<br /><br /> - throw it out the window, with the timeout and big BIG warning when<br />the problem cases trigger<br /><br /> - add new GRND_SECURE and GRND_INSECURE flags that have the actual<br />useful behaviors that we currently pretty much lack<br /><br /> - consider the old 0-3 flag values legacy, deprecated, and unsafe<br />because they _will_ time out to fix the existing problem we have right<br />now because of their bad behavior.<br /><br />And stop with the "insecure is silly". Insecure is not silly, and in<br />fact should have been the default, because<br /><br /> (a) insecure is and basically always will be the common case by far<br /><br /> (b) insecure is the "not thinking about it" case and should thus be default<br /><br />and that (b) is also very much why 0 should have been that insecure case.<br /><br />Part of the problem is exactly the whole "_normally_ it just works, so<br />using 0 without thinking about it tests out well".<br /><br />Which is why getrandom(0) is the main problem we face.<br /><br />Because defaults matter.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
