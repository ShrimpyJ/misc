    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/23/808">First message in thread</a></li><li><a href="/lkml/2019/9/23/808">Casey Schaufler</a><ul><li class="origin"><a href="/lkml/2019/9/23/891">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/23/891">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 23 Sep 2019 14:35:28 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] Smack patches for v5.4 - retry</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 23, 2019 at 1:14 PM Casey Schaufler &lt;casey&#64;schaufler-ca.com&gt; wrote:<br />&gt;<br />&gt; Thank for the instruction. I think this is correct.<br /><br />Looks fine, pulled.<br /><br />That said, when I look closer:<br /><br />&gt; Jia-Ju Bai (1):<br />&gt;       security: smack: Fix possible null-pointer dereferences in smack_socket_sock_rcv_skb()<br /><br />This one seems wrong.<br /><br />Not seriously so, but the quoting the logic from the commit:<br /><br />    In smack_socket_sock_rcv_skb(), there is an if statement<br />    on line 3920 to check whether skb is NULL:<br /><br />        if (skb &amp;&amp; skb-&gt;secmark != 0)<br /><br />    This check indicates skb can be NULL in some cases.<br /><br />and the fact is, skb _cannot_ be NULL, because when you test the<br />security of receiving an skb, you by definition always have an skb.<br /><br />There is one single place that calls security_sock_rcv_skb(), and it<br />very much has a real skb.<br /><br />So instead of adding a _new_ test for skb being NULL, the old test for<br />a NULL skb should just have been removed. It really doesn't make any<br />sense to have a NULL skb in that path - if some memory allocation had<br />failed on the receive path, that just means that the receive is never<br />done, it doesn't mean that you'd test a NULL skb for security policy<br />violations.<br /><br />Anyway, it's pulled, but I think somebody should have checked and<br />thought about the automated tool reports a bit more..<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
