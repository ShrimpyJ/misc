    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/28/96">First message in thread</a></li><li><a href="/lkml/2019/9/29/493">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/30/24">Borislav Petkov</a><ul><li class="origin"><a href="/lkml/2019/10/1/589">Linus Torvalds</a><ul><li><a href="/lkml/2019/10/1/589">Borislav Petkov</a><ul><li><a href="/lkml/2019/10/1/1096">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2019/9/30/596">Kees Cook</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 30 Sep 2019 09:06:36 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: x86/random: Speculation to the rescue</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Sep 29, 2019 at 11:10 PM Borislav Petkov &lt;bp&#64;alien8.de&gt; wrote:<br />&gt;<br />&gt; so sshd does getrandom(2) while those other userspace things don't. Oh<br />&gt; well.<br /><br />Well, that's actually what systems _should_ do. Presumably sshd<br />actually wants secure randomness, and nothing else waits for it.<br /><br />Obviously, that can be a problem if you then need sshd in order to get<br />into a headless box, so my patch fixes things for you too, but at<br />least your box doesn't show the problem that Ahmed had, and the boot<br />completing presumably means that you got more entropy from other disk<br />IO being done by the rest of the boot.<br /><br />If you want to test my hacky "do /dev/urandom too", it was this one-liner:<br /><br />  --- a/drivers/char/random.c<br />  +++ b/drivers/char/random.c<br />  &#64;&#64; -2027,6 +2027,7 &#64;&#64; urandom_read(struct file *file, char __user<br />*buf, size_t nbytes, loff_t *ppos)<br />        static int maxwarn = 10;<br />        int ret;<br /><br />  +     if (!crng_ready()) try_to_generate_entropy();<br />        if (!crng_ready() &amp;&amp; maxwarn &gt; 0) {<br />                maxwarn--;<br />                if (__ratelimit(&amp;urandom_warning))<br /><br />and that should get rid of the warnings.<br /><br />It's not using the full "wait_for_random_bytes()", because in the<br />absence of a cycle counter, that would introduce the boot-time lockup<br />for /dev/urandom too.<br /><br />Doing something like the above to /dev/urandom is likely the right<br />thing to do eventually, but I didn't want to mix up "we can perhaps<br />improve the urandom situation too" with the basic "let's fix the boot<br />problem". The urandom behavior change would be a separate thing.<br /><br />Also, talking about "future changes". Right now<br />"try_to_generate_entropy()" is actually uninterruptible once it gets<br />started. I think we should add a test for signal_pending() too, but it<br />should generally complete really fairly quickly so I left it without<br />one just to see if anybody even notices.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
