    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/8/452">First message in thread</a></li><li><a href="/lkml/2019/9/20/741">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/20/806">Andy Lutomirski</a><ul><li class="origin"><a href="/lkml/2019/9/20/817">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/20/817">Willy Tarreau</a></li><li><a href="/lkml/2019/9/20/857">Andy Lutomirski</a><ul><li><a href="/lkml/2019/9/20/880">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2019/9/21/10">Florian Weimer</a><ul><li><a href="/lkml/2019/9/23/742">Andy Lutomirski</a></li></ul></li></ul></li><li><a href="/lkml/2019/9/20/814">Willy Tarreau</a><ul><li><a href="/lkml/2019/9/20/864">Andy Lutomirski</a><ul><li><a href="/lkml/2019/9/20/870">Willy Tarreau</a></li><li><a href="/lkml/2019/9/20/896">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2019/9/20/816">"Alexander E. Patrakov"</a><ul><li><a href="/lkml/2019/9/20/826">Andy Lutomirski</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Sep 2019 11:09:53 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH RFC v4 1/1] random: WARN on large getrandom() waits and introduce getrandom2()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 20, 2019 at 10:52 AM Andy Lutomirski &lt;luto&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; IMO, from the beginning, we should have done this:<br />&gt;<br />&gt; GRND_INSECURE: insecure.  always works.<br />&gt;<br />&gt; GRND_SECURE_BLOCKING: does exactly what it says.<br />&gt;<br />&gt; 0: -EINVAL.<br /><br />Violently agreed. And that's kind of what the GRND_EXPLICIT is really<br />aiming for.<br /><br />However, it's worth noting that nobody should ever use GRND_EXPLICIT<br />directly. That's just the name for the bit. The actual users would use<br />GRND_INSECURE or GRND_SECURE.<br /><br />And yes, maybe it's worth making the name be GRND_SECURE_BLOCKING just<br />to make people see what the big deal is.<br /><br />In the meantime, we need that new bit just to be able to create the<br />new semantics eventually. With a warning to nudge people in the right<br />direction.<br /><br />We may never be able to return -EINVAL, but we can add the pr_notice()<br />to discourage people from using it.<br /><br />And yes, we'll have to block - at least for a time - to get some<br />entropy. But at some point we either start making entropy up, or we<br />say "0 means jitter-entropy for ten seconds".<br /><br />That will _work_, but it will also make the security-people nervous,<br />which is just one more hint that they should move to<br />GRND_SECURE[_BLOCKING].<br /><br />&gt; getrandom(..., GRND_EXPLICIT): just fscking give me a number.  it<br />&gt; seems to work and it shuts up the warning<br />&gt;<br />&gt; And we're back to square one.<br /><br />Actually, you didn't read the GRND_INSECURE patch, did you.<br /><br />getrandom(GRND_EXPLICIT) on its own returns -EINVAL.<br /><br />Because yes, I thought about it, and yes, I agree that it's the same<br />as the old 0.<br /><br />So GRND_EXPLICIT is a bit that basically means "I am explicit about<br />what behavior I want". But part of that is that you need to _state_<br />the behavior too.<br /><br />So:<br /><br /> - GRND_INSECURE is (GRND_EXPLICIT | GRND_NONBLOCK)<br /><br />   As in "I explicitly ask you not to just not ever block": urandom<br /><br /> - GRND_SECURE_BLOCKING is (GRND_EXPLICIT | GRND_RANDOM)<br /><br />   As in "I explicitly ask you for those secure random numbers"<br /><br /> - GRND_SECURE_NONBLOCKING is (GRND_EXPLICIT | GRND_RANDOM | GRND_NONBLOCK)<br /><br />   As in "I want explicitly secure random numbers, but return -EAGAIN<br />if that would block".<br /><br />Which are the three sane behaviors (that last one is useful for the "I<br />can try to generate entropy if you don't have any" case. I'm not sure<br />anybody will do it, but it definitely conceptually makes sense).<br /><br />And I agree that your naming is better.<br /><br />I had it as just "GRND_SECURE" for the blocking version, and<br />"GRND_SECURE | GRND_NONBLOCK" for the "secure but return EAGAIN if you<br />would need to block for entropy" version.<br /><br />But explicitly stating the blockingness in the name makes it clearer<br />to the people who just want GRND_INSECURE, and makes them realize that<br />they don't want the blocking version.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
