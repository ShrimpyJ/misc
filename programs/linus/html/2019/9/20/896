    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/8/452">First message in thread</a></li><li><a href="/lkml/2019/9/20/814">Willy Tarreau</a><ul><li><a href="/lkml/2019/9/20/864">Andy Lutomirski</a><ul><li><a href="/lkml/2019/9/20/870">Willy Tarreau</a><ul><li><a href="/lkml/2019/9/20/888">Andy Lutomirski</a></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Sep 2019 13:02:50 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH RFC v4 1/1] random: WARN on large getrandom() waits and introduce getrandom2()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 20, 2019 at 12:22 PM Andy Lutomirski &lt;luto&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; Here are some possible approaches that come to mind:<br />&gt;<br />&gt; int count;<br />&gt; while (crng isn't inited) {<br />&gt;   msleep(1);<br />&gt; }<br />&gt;<br />&gt; and modify add_timer_randomness() to at least credit a tiny bit to<br />&gt; crng_init_cnt.<br /><br />I'd love that, but we don't actually call add_timer_randomness() for timers.<br /><br />Yeah, the name is misleading.<br /><br />What the "timer" in add_timer_randomness() means is that we look at<br />the timing between calls. And we may actually have (long ago) called<br />it for timer interrupts. But we don't any more.<br /><br />The only actual users of add_timer_randomness() is<br />add_input_randomness() and add_disk_randomness(). And it turns out<br />that even disk IO doesn't really call add_disk_randomness(), so the<br />only _real_ user is that keyboard input thing.<br /><br />Which means that unless you sit at the machine and type things in,<br />add_timer_randomness() _never_ gets called.<br /><br />No, the real source of entropy right now is<br />add_interrupt_randomness(), which is called for all device interrupts.<br /><br />But note the "device interrupts" part. Not the timer interrupt. That's<br />special, and has its own low-level architecture rules. So only the<br />normal IO interrupts (like disk/network/etc).<br /><br />So timers right now do not add _anything_ to the randomness pool. Not<br />noise, not entropy.<br /><br />But yes, what you can do is a jitter entropy thing, which basically<br />does what you suggest, except instead of "msleep(1)" it does something<br />like<br /><br />   while (crng isn't inited) {<br />       sched_yield();<br />       do_a_round_of_memory_accesses_etc();<br />       add_cycle_counter_entropy();<br />   }<br /><br />and with a lot of handwaving you'll convince a certain amount of<br />people that yes, the timing of the above is unpredictable enough that<br />the entropy you add is real.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
