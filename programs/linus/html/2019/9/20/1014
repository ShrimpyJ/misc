    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/20/111">First message in thread</a></li><li><a href="/lkml/2019/9/20/111">Konstantin Khlebnikov</a><ul><li><a href="/lkml/2019/9/20/114">Konstantin Khlebnikov</a><ul><li><a href="/lkml/2019/9/23/494">Tejun Heo</a><ul><li><a href="/lkml/2019/9/23/517">Konstantin Khlebnikov</a><ul><li><a href="/lkml/2019/9/23/529">Tejun Heo</a></li><li><a href="/lkml/2019/9/24/78">Dave Chinner</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="/lkml/2019/9/20/1016">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/20/1016">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/23/545">Jens Axboe</a><ul><li><a href="/lkml/2019/9/23/582">Konstantin Khlebnikov</a></li></ul></li></ul></li><li><a href="/lkml/2019/9/24/174">Konstantin Khlebnikov</a></li></ul></li><li><a href="/lkml/2019/9/22/12">kbuild test robot</a></li><li><a href="/lkml/2019/9/22/880">kernel test robot</a><ul><li><a href="/lkml/2019/9/23/770">Konstantin Khlebnikov</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Sep 2019 16:05:17 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2] mm: implement write-behind policy for sequential file writes</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 20, 2019 at 12:35 AM Konstantin Khlebnikov<br />&lt;khlebnikov&#64;yandex-team.ru&gt; wrote:<br />&gt;<br />&gt; This patch implements write-behind policy which tracks sequential writes<br />&gt; and starts background writeback when file have enough dirty pages.<br /><br />Apart from a spelling error ("contigious"), my only reaction is that<br />I've wanted this for the multi-file writes, not just for single big<br />files.<br /><br />Yes, single big files may be a simpler and perhaps the "10% effort for<br />90% of the gain", and thus the right thing to do, but I do wonder if<br />you've looked at simply extending it to cover multiple files when<br />people copy a whole directory (or unpack a tar-file, or similar).<br /><br />Now, I hear you say "those are so small these days that it doesn't<br />matter". And maybe you're right. But partiocularly for slow media,<br />triggering good streaming write behavior has been a problem in the<br />past.<br /><br />So I'm wondering whether the "writebehind" state should perhaps be<br />considered be a process state, rather than "struct file" state, and<br />also start triggering for writing smaller files.<br /><br />Maybe this was already discussed and people decided that the big-file<br />case was so much easier that it wasn't worth worrying about<br />writebehind for multiple files.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
