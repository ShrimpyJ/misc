    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/4/1707">First message in thread</a></li><li><a href="/lkml/2019/9/26/628">David Rientjes</a><ul><li><a href="/lkml/2019/9/27/95">Michal Hocko</a><ul><li class="origin"><a href="/lkml/2019/9/30/237">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/30/237">Michal Hocko</a><ul><li><a href="/lkml/2019/10/1/14">Michal Hocko</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Sep 2019 13:59:26 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch for-5.3 0/4] revert immediate fallback to remote hugepages</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 27, 2019 at 12:48 AM Michal Hocko &lt;mhocko&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; -       page = get_page_from_freelist(gfp_mask, order, alloc_flags, ac);<br />&gt; +       if (!order)<br />&gt; +               page = get_page_from_freelist(gfp_mask, order, alloc_flags, ac);<br />&gt;         if (page)<br />&gt;                 goto got_pg;<br />&gt;<br />&gt; The whole point of handling this in the page allocator directly is to<br />&gt; have a unified solutions rather than have each specific caller invent<br />&gt; its own way to achieve higher locality.<br /><br />The above just looks hacky.<br /><br />Why would order-0 be special?<br /><br />It really is hugepages that are special - small orders don't generally<br />need a lot of compaction. and this secondary get_page_from_freelist()<br />is not primarily about compaction, it's about relaxing some of the<br />other constraints, and the actual alloc_flags have changed from the<br />initial ones.<br /><br />I really think that you're missing the big picture. We want node<br />locality, and we want big pages, but those "we want" simply shouldn't<br />be as black-and-white as they sometimes are today. In fact, the whole<br />black-and-white thing is completely crazy for anything but some<br />test-load.<br /><br />I will just do the reverts and apply David's two patches on top. We<br />now have the time to actually test the behavior, and we're not just<br />before a release.<br /><br />The thing is, David has numbers, and the patches make _sense_. There's<br />a description of what they do, there are comments, but the *code*<br />makes sense too. Much more sense than the above kind of insane hack.<br />David's patches literally do two things:<br /><br /> - [3/4] just admit that the allocation failed when you're trying to<br />allocate a huge-page and compaction wasn't successful<br /><br /> - [4/4] when that huge-page allocation failed, retry on another node<br />when appropriate<br /><br />That's _literally_ what David's two patches do. The above is purely<br />the English translation of the patches.<br /><br />And I claim that the English translation also ends up being<br />_sensible_. I go look at those two statements, and my reaction "yeah,<br />that makes sense".<br /><br />So there were numbers, there was "this is sensible", and there were no<br />indications that those sensible choices would actually be problematic.<br />Nobody has actually argued against the patches making sense. Nobody<br />has even argued that the patches would be wrong. The _only_ argument<br />against them were literally "what if this changes something subtle",<br />together with patches like the above that do _not_ make sense either<br />on a big picture level or even locally on a small level.<br /><br />The reason I didn't apply those patches for 5.3 was that they came in<br />very late, and there were horrendous numbers for the 5.2 behavior that<br />caused those two big reverts. But the patches made sense back then,<br />the timing for them just didn't.<br /><br />I was hoping this would just get done in the mm tree, but clearly it<br />isn't, and I'll just do my own mm branch and merge the patches that<br />way.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
