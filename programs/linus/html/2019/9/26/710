    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/26/339">First message in thread</a></li><li><a href="/lkml/2019/9/26/668">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/26/680">=?UTF-8?Q?Thomas_Hellstr=c3=b6m_=28VMware=29?=</a><ul><li class="origin"><a href="/lkml/2019/9/27/43">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/27/43">=?UTF-8?Q?Thomas_Hellstr=c3=b6m_=28VMware=29?=</a><ul><li><a href="/lkml/2019/9/27/193">=?UTF-8?Q?Thomas_Hellstr=c3=b6m_=28VMware=29?=</a></li></ul></li><li><a href="/lkml/2019/9/27/318">"Kirill A. Shutemov"</a></li></ul></li></ul></li><li><a href="/lkml/2019/9/27/314">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2019/9/27/519">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/30/314">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2019/9/30/678">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2019/10/2/167">=?UTF-8?Q?Thomas_Hellstr=c3=b6m_=28VMware=29?=</a><ul><li><a href="/lkml/2019/10/2/340">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2019/10/2/347">=?UTF-8?Q?Thomas_Hellstr=c3=b6m_=28VMware=29?=</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Sep 2019 15:20:42 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Ack to merge through DRM? WAS Re: [PATCH v2 1/5] mm: Add write-protect and clean utilities for address space ranges</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 26, 2019 at 1:55 PM Thomas Hellström (VMware)<br />&lt;thomas_os&#64;shipmail.org&gt; wrote:<br />&gt;<br />&gt; Well, we're working on supporting huge puds and pmds in the graphics<br />&gt; VMAs, although in the write-notify cases we're looking at here, we would<br />&gt; probably want to split them down to PTE level.<br /><br />Well, that's what the existing walker code does if you don't have that<br />"pud_entry()" callback.<br /><br />That said, I assume you would *not* want to do that if the huge<br />pud/pmd is already clean and read-only, but just continue.<br /><br />So you may want to have a special pud_entry() that handles that case.<br />Eventually. Maybe. Although honestly, if you're doing dirty tracking,<br />I doubt it makes much sense to use largepages.<br /><br />&gt; Looking at zap_pud_range() which when called from unmap_mapping_pages()<br />&gt; uses identical locking (no mmap_sem), it seems we should be able to get<br />&gt; away with i_mmap_lock(), making sure the whole page table doesn't<br />&gt; disappear under us. So it's not clear to me why the mmap_sem is strictly<br />&gt; needed here. Better to sort those restrictions out now rather than when<br />&gt; huge entries start appearing.<br /><br />zap_pud_range()actually does have that<br /><br />               VM_BUG_ON_VMA(!rwsem_is_locked(&amp;tlb-&gt;mm-&gt;mmap_sem), vma);<br /><br />exactly for the case where it might have to split the pud entry.<br /><br />Zapping the whole thing it does do without the assert.<br /><br />I'm not going to swear the mmap_sem is absolutely required, since a<br />shared vma should be stable due to the i_mmap_lock, but splitting the<br />hugepage really is a fairly big deal.<br /><br />It can't happen if you zap the *whole* mapping, but it can happen if<br />you have a start/end range. Like you do.<br /><br />Also, in general it's probably not a great idea to look at<br />zap_page_range() (and copy_page_range()) for ideas.<br /><br />They are kind of special, since they tend to be used for fundamental<br />whole-address-space operations (ie fork/exit) and so as a result they<br />get to do special things that a normal page walker generally shouldn't<br />do.<br /><br />It's why they've never gotten translated to use the generic walker code.<br /><br />           Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
