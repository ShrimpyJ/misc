    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/26/339">First message in thread</a></li><li><a href="/lkml/2019/9/26/635">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/26/659">=?UTF-8?Q?Thomas_Hellstr=c3=b6m_=28VMware=29?=</a><ul><li class="origin"><a href="/lkml/2019/9/26/680">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/26/680">=?UTF-8?Q?Thomas_Hellstr=c3=b6m_=28VMware=29?=</a><ul><li><a href="/lkml/2019/9/26/710">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2019/9/27/314">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2019/9/27/519">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2019/10/2/167">=?UTF-8?Q?Thomas_Hellstr=c3=b6m_=28VMware=29?=</a><ul><li><a href="/lkml/2019/10/2/340">"Kirill A. Shutemov"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Sep 2019 13:16:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Ack to merge through DRM? WAS Re: [PATCH v2 1/5] mm: Add write-protect and clean utilities for address space ranges</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 26, 2019 at 1:09 PM Thomas Hellström (VMware)<br />&lt;thomas_os&#64;shipmail.org&gt; wrote:<br />&gt;<br />&gt; That said, if people are OK with me modifying the assert in<br />&gt; pud_trans_huge_lock() and make __walk_page_range non-static, it should<br />&gt; probably be possible to make it work, yes.<br /><br />I don't think you need to modify that assert at all.<br /><br />That thing only exists when there's a "pud_entry" op in the walker,<br />and then you absolutely need to have that mmap_lock.<br /><br />As far as I can tell, you fundamentally only ever work on a pte level<br />in your address space walker already and actually have a WARN_ON() on<br />the pud_huge thing, so no pud entry can possibly apply.<br /><br />So no, the assert in pud_trans_huge_lock() does not seem to be a<br />reason not to just use the existing page table walkers.<br /><br />And once you get rid of the walking, what is left? Just the "iterate<br />over the inode mappings" part. Which could just be done in<br />mm/pagewalk.c, and then you don't even need to remove the static.<br /><br />So making it be just another walking in pagewalk.c would seem to be<br />the simplest model.<br /><br />Call it "walk_page_mapping()". And talk extensively about how the<br />locking differs a lot from the usual "walk_page_vma()" things.<br /><br />The then actual "apply" functions (what a horrid name) could be in the<br />users. They shouldn't be mixed in with the walking functions anyway.<br />They are callbacks, not walkers.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
