    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/9/8/452">First message in thread</a></li><li><a href="/lkml/2019/9/18/996">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/18/1053">Willy Tarreau</a></li><li><a href="/lkml/2019/9/27/388">Lennart Poettering</a><ul><li class="origin"><a href="/lkml/2019/9/29/32">Linus Torvalds</a><ul><li><a href="/lkml/2019/9/29/32">Lennart Poettering</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 27 Sep 2019 08:58:56 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 5.3-rc8</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 27, 2019 at 6:57 AM Lennart Poettering &lt;mzxreary&#64;0pointer.de&gt; wrote:<br />&gt;<br />&gt; Doing the random seed in the boot loader is nice for two reasons:<br />&gt;<br />&gt; 1. It runs very very early, so that the OS can come up with fully<br />&gt;    initialized entropy right from the beginning.<br /><br />Oh, that part I love.<br /><br />But I don't believe in your second case:<br /><br />&gt; 2. The boot loader generally has found some disk to read the kernel from,<br />&gt;    i.e. has a place where stuff can be stored and which can be updated<br />&gt;    (most modern boot loaders can write to disk these days, and so can<br />&gt;    EFI). Thus, it can derive a new random seed from a stored seed on disk<br />&gt;    and pass it to the OS *AND* update it right away on disk ensuring that<br />&gt;    it is never reused again.<br /><br />No. This is absolutely no different at all from user space doing it<br />early with a file.<br /><br />All the same "golden image" issues exist, and in general the less the<br />boot loader writes to disk, the better.<br /><br />Plus it doesn't actually work anyway in the one situation where people<br />_really_ want it - embedded devices, where the kernel image is quite<br />possibly in read-only flash that needs major setup for updates.<br /><br />PLUS.<br /><br />Your "it can update it right away on disk" is just crazy talk. With<br />WHAT? It has no randomness to play with, and it doesn't have time to<br />do jitter entropy stuff.<br /><br />So all it can do is a really bad job at taking the previous random<br />seed, doing some transformation on it, and add a little bit of<br />whatever system randomness it can find. None of which is any better<br />than what the kernel can do.<br /><br />End result: you'd need to have the kernel update whatever bootloader<br />data later on, and I'm not seeing that happening. Afaik the current<br />bootloader interface has no way to specify how to update it when you<br />actually have better randomness.<br /><br />&gt; NVRAM backing EFI vars sucks. Nothing you want to update on every<br />&gt; cycle. It's OK to update during OS installation, but during every<br />&gt; single boot? I'd rather not.<br /><br />I do agree that EFI nvram isn't wonderful, but hopefully nonvolatile<br />storage is improving, and it's conceptually the right thing.<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
