    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/8/27/837">First message in thread</a></li><li><a href="/lkml/2019/8/28/778">Arnd Bergmann</a><ul><li><a href="/lkml/2019/8/28/789">Arnd Bergmann</a><ul><li><a href="/lkml/2019/8/29/1623">Josh Poimboeuf</a><ul><li><a href="/lkml/2019/8/30/392">Arnd Bergmann</a><ul><li><a href="/lkml/2019/8/30/656">Josh Poimboeuf</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2019/8/29/1090">Josh Poimboeuf</a><ul><li class="origin"><a href="/lkml/2019/8/29/1468">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/29/1468">Arnd Bergmann</a><ul><li><a href="/lkml/2019/8/29/1562">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2019/9/4/441">Geert Uytterhoeven</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Aug 2019 11:30:36 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: objtool warning "uses BP as a scratch register" with clang-9</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 29, 2019 at 10:35 AM Josh Poimboeuf &lt;jpoimboe&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; Peter suggested to try WRITE_ONCE for the two zero writes to see if that<br />&gt; "fixes" it.<br /><br />I'm sure it "fixes" it.<br /><br />.. and then where else will we hit this?<br /><br />It's one thing to turn a structure zeroing into "memset()", but some<br />places really can't do it.<br /><br />We use "-ffreestanding" in some places to make sure that gcc doesn't<br />start calling random libc routines. I wonder if we need to make it a<br />general rule that it's done unconditionally.<br /><br />Sadly, I think that ends up also disabling things like<br />"__builtin_memcpy()" and friends. Which we _do_ want to have access<br />to, because then gcc can inline the memcpy() when we _do_ use<br />memcpy().<br /><br />We used to do all of those heuristics by hand, but wanted to let the<br />compiler do them for us.<br /><br />So:<br /><br /> - we do want "memcpy()" to become "__builtin_memcpy()" which can then<br />be optimized to either individual inlined assignments _or_ to an<br />out-of-line call to memcpy().<br /><br /> - we do *not* want individual assignments to be randomly turned into<br />memset/memcpy(), because of various different reasons (including<br />function tracing, but also store tearing, yadda yadda)<br /><br />Conceptually, "-ffreestanding" is definitely what a kernel needs, but<br />it has been *too* big of a hammer and disables real code generation,<br />iirc.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
