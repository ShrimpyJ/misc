    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/8/29/205">First message in thread</a></li><li><a href="/lkml/2019/8/29/205">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/8/29/187">Rasmus Villemoes</a></li><li><a href="/lkml/2019/8/29/200">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/8/29/987">Joe Perches</a></li></ul></li><li><a href="/lkml/2019/8/29/202">Rasmus Villemoes</a></li><li><a href="/lkml/2019/8/29/203">Rasmus Villemoes</a></li><li><a href="/lkml/2019/8/29/204">Rasmus Villemoes</a></li><li class="origin"><a href="/lkml/2019/8/30/212">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/30/212">Rasmus Villemoes</a></li></ul></li><li><a href="/lkml/2019/8/29/1091">Nick Desaulniers</a><ul><li><a href="/lkml/2019/8/29/1273">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/29/1255">Nadav Amit</a></li><li><a href="/lkml/2019/8/29/1347">Borislav Petkov</a></li></ul></li><li><a href="/lkml/2019/8/29/1436">Masahiro Yamada</a></li></ul></li><li><a href="/lkml/2019/8/30/1055">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/8/30/1056">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/9/4/1872">Nick Desaulniers</a></li></ul></li><li><a href="/lkml/2019/8/30/1057">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/9/4/1880">Nick Desaulniers</a><ul><li><a href="/lkml/2019/9/5/272">Rasmus Villemoes</a></li></ul></li></ul></li><li><a href="/lkml/2019/8/30/1058">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/9/4/1885">Nick Desaulniers</a><ul><li><a href="/lkml/2019/9/5/38">Nadav Amit</a></li><li><a href="/lkml/2019/9/5/366">Rasmus Villemoes</a></li></ul></li></ul></li><li><a href="/lkml/2019/8/30/1059">Rasmus Villemoes</a></li><li><a href="/lkml/2019/8/30/1060">Rasmus Villemoes</a></li><li><a href="/lkml/2019/8/30/1061">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/9/4/1875">Nick Desaulniers</a><ul><li><a href="/lkml/2019/9/4/1879">Miguel Ojeda</a></li></ul></li></ul></li><li><a href="/lkml/2019/9/12/642">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/9/12/643">Rasmus Villemoes</a></li><li><a href="/lkml/2019/9/12/644">Rasmus Villemoes</a></li><li><a href="/lkml/2019/9/12/645">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/9/13/10">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2019/9/12/646">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/9/13/9">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2019/9/12/647">Rasmus Villemoes</a></li><li><a href="/lkml/2019/9/12/649">Rasmus Villemoes</a><ul><li><a href="/lkml/2019/9/29/44">Greg Kroah-Hartman</a></li></ul></li><li><a href="/lkml/2019/9/12/650">Miguel Ojeda</a><ul><li><a href="/lkml/2019/9/13/25">Rasmus Villemoes</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Aug 2019 09:05:36 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH 0/5] make use of gcc 9's "asm inline()"</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 29, 2019 at 1:32 AM Rasmus Villemoes<br />&lt;linux&#64;rasmusvillemoes.dk&gt; wrote:<br />&gt;<br />&gt; But since we #define the identifier inline to attach some attributes,<br />&gt; we have to use the alternate spelling __inline__ of that<br />&gt; keyword. Unfortunately, we also currently #define that one (to<br />&gt; inline), so we first have to get rid of all (mis)uses of<br />&gt; __inline__. Hence the huge diffstat.<br /><br />Ugh. Not pretty, but I guess we're stuck with it.<br /><br />However, it worries me a bit that you excluide the UAPI headers where<br />we still use "__inline__", and now the semantics of that will change<br />for the kernel (for some odd gcc versions).<br /><br />I suspect we should just bite the bullet and you should do it to the<br />uapi headers too. We already use "inline" in a lot of them, so it's<br />not the case that we're using __inline__ because of some namespace<br />issue, as far as I can tell.<br /><br />One option might be to just use "__inline" for the asm_inline thing.<br />We have way fewer of those. That would make the noise much less for<br />this patch series.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
