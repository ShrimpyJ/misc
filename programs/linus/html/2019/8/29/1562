    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/8/27/837">First message in thread</a></li><li><a href="/lkml/2019/8/29/1300">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/29/1468">Arnd Bergmann</a><ul><li class="origin"><a href="/lkml/2019/8/30/622">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/30/622">Josh Poimboeuf</a><ul><li><a href="/lkml/2019/8/30/676">David Laight</a></li><li><a href="/lkml/2019/8/30/697">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2019/9/4/441">Geert Uytterhoeven</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Aug 2019 15:26:30 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: objtool warning "uses BP as a scratch register" with clang-9</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 29, 2019 at 1:22 PM Arnd Bergmann &lt;arnd&#64;arndb.de&gt; wrote:<br />&gt;<br />&gt; Maybe we can just pass -fno-builtin-memcpy -fno-builtin-memset<br />&gt; for clang when CONFIG_KASAN is set and hope for the best?<br /><br />I really hate how that disables conversions both ways, which is kind<br />of pointless and wrong.  It's really just "we don't want surprising<br />memcpy calls for single writes".<br /><br />Disabling all the *good* "optimize memset/memcpy" cases is really sad.<br /><br />We actually have a lot of small structures in the kernel on purpose<br />(often for type safety), and I bet we use memcpy on them on purpose at<br />times. I'd hate to see that become a function call rather than "copy<br />two words by hand".<br /><br />Even for KASAN.<br /><br />And I guess that when the compiler sees 20+ "set to zero" it's quite<br />reasonable to say "just turn it into a memset".<br /><br />So maybe the right thing to do is to just special-case this code, and<br />hope for the best. If moving the sas_ss_reset() out of the try/catch<br />thing works, then by all means lets just do that.<br /><br />(Partly because I've actually wanted to turn the try/catchj thing into<br />a _real_ try/catch, not a "fall through and check at the end" like it<br />just happens to be now - the try/catch is actually very misleading as<br />it is now. So if this is the only case that matters, then...).<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
