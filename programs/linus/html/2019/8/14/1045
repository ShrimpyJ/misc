    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/8/14/723">First message in thread</a></li><li><a href="/lkml/2019/8/14/778">Christian Brauner</a><ul><li><a href="/lkml/2019/8/14/793">Rich Felker</a><ul><li><a href="/lkml/2019/8/14/805">Christian Brauner</a></li><li class="origin"><a href="/lkml/2019/8/14/1174">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/14/1174">Rich Felker</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 14 Aug 2019 10:06:19 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v3 1/1] waitid: Add support for waiting for the current process group</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 14, 2019 at 9:55 AM Rich Felker &lt;dalias&#64;libc.org&gt; wrote:<br />&gt;<br />&gt; I don't think "downsides" sufficiently conveys that this is hard<br />&gt; breakage of a requirement for waitpid.<br /><br />Well, let's be honest here. Who has _ever_ seen a signal handler<br />changing the current process group?<br /><br />In fact, the SYSV version of setpgid() takes a process ID to set it<br />*for somebody else*, so the signal safety is not even necessarily<br />relevant, since it might be racing with _another_ thread doing it<br />(which even the kernel side won't fix - it's just user space doing odd<br />things).<br /><br />So yes - it's technically true that it's impossible to emulate<br />properly in user space.<br /><br />But I doubt it makes _any_ difference what-so-ever, and glibc might as<br />well do something like<br /><br />     ret = waitid(P_PGID, 0, ..);<br />     if (ret == -EINVAL) { do the emulation }<br /><br />which makes it work with older kernels, and has zero downside in practice.<br /><br />Hmm?<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
