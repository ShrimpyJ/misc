    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/8/27/837">First message in thread</a></li><li><a href="/lkml/2019/8/30/697">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/30/707">David Laight</a><ul><li class="origin"><a href="/lkml/2019/8/30/775">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/30/775">David Laight</a></li></ul></li></ul></li><li><a href="/lkml/2019/8/30/787">Josh Poimboeuf</a><ul><li><a href="/lkml/2019/9/2/241">David Laight</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 30 Aug 2019 09:01:05 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: objtool warning "uses BP as a scratch register" with clang-9</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Aug 30, 2019 at 8:55 AM David Laight &lt;David.Laight&#64;aculab.com&gt; wrote:<br />&gt;<br />&gt; Even in userspace you might be accessing mmap()ed PCIe device memory.<br />&gt; The last thing you want is the compiler converting anything into<br />&gt; 'rep movsb'.<br /><br />Agreed, although for actual IO accesses you likely should really be<br />doing "volatile" anyway.<br /><br />But yeah, in general it's just not obviously safe to turn individual<br />accesses into memset/memcpy. In contrast, the reverse is obviously<br />fine (and _required_ for any kind of half-way good performance when<br />you do small constant-sized memory copies, which is actually a common<br />pattern partly because the insane C aliasing rules have taught people<br />that it's the _only_ safe pattern in some situations).<br /><br />This is why I think "-ffreestanding" and "-fno-builtin-memcpy" are<br />completely broken as-is: they are an all-or-nothing thing, they don't<br />understand that it's directional.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
