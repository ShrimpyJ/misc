    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2019/8/30/574">First message in thread</a></li><li><a href="/lkml/2019/8/30/574">Russell King - ARM Linux admin</a><ul><li><a href="/lkml/2019/8/30/664">Oleg Nesterov</a></li><li><a href="/lkml/2019/8/30/668">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/30/679">Russell King - ARM Linux admin</a><ul><li><a href="/lkml/2019/8/30/686">Linus Torvalds</a></li></ul></li><li class="origin"><a href="/lkml/2019/8/30/726">Linus Torvalds</a><ul><li><a href="/lkml/2019/8/30/726">Oleg Nesterov</a><ul><li><a href="/lkml/2019/8/30/743">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 30 Aug 2019 08:41:03 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [BUG] Use of probe_kernel_address() in task_rcu_dereference() without checking return value</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Aug 30, 2019 at 8:30 AM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Do you actually see that behavior?<br />&gt;<br />&gt; Because the foillowing lines:<br />&gt;<br />&gt;         smp_rmb();<br />&gt;         if (unlikely(task != READ_ONCE(*ptask)))<br />&gt;                 goto retry;<br /><br />Side note: that code had better not be performance-critical, because<br />"probe_kernel_address()" is actually really really slow.<br /><br />We really should do a real set of "read kernel with fault handling" functions.<br /><br />We have *one* right now: load_unaligned_zeropad(), but that one<br />assumes that at least the first byte is valid and that the fault can<br />only be because of unaligned page crossers.<br /><br />The problem with "probe_kernel_address()" is that it really just<br />re-uses the user access functions, and then plays games to make them<br />work for kernel addresses. Games we shouldn't play, and it's all very<br />expensive when it really shouldn't need to be. Including changing<br />limits, but also doing all the system instructions to allow user<br />accesses (PAN on ARM, clac/stac on x86).<br /><br />Doing a set of "access kernel with error handling" should be trivial,<br />it's just that every architecture needs to do it. So we'd probably<br />need to do something where architectures can say "I have it", and fall<br />back on the silly legacy implementation otherwise..<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
