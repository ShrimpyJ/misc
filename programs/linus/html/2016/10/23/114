    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/10/12/363">First message in thread</a></li><li><a href="/lkml/2016/10/12/456">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/12/476">Joe Perches</a><ul><li><a href="/lkml/2016/10/12/499">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/12/563">Joe Perches</a><ul><li><a href="/lkml/2016/10/13/644">"Rafael J. Wysocki"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2016/10/23/23">Geert Uytterhoeven</a><ul><li class="origin"><a href="/lkml/2016/10/23/121">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/23/121">Joe Perches</a><ul><li><a href="/lkml/2016/10/23/125">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2016/10/25/406">Steven Rostedt</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 23 Oct 2016 11:11:18 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: linux.git: printk() problem</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Oct 23, 2016 at 2:22 AM, Geert Uytterhoeven<br />&lt;geert&#64;linux-m68k.org&gt; wrote:<br />&gt;<br />&gt; These changes have an interesting side-effect on sequences of printk()s that<br />&gt; lack proper continuation: they introduced a discrepancy between dmesg output<br />&gt; and the actual kernel output.<br /><br />Yes.<br /><br />So the "print vs log" handling is really really horrible. I cleaned up<br />some of it, but left the really fundamental problems. I wanted to just<br />rewrite it all, but didn't quite have the heart for it.<br /><br />The best solution by far would be to just not support KERN_CONT at<br />all, but there's too many "silly details" things that keep it from<br />being possible.<br /><br />The basic issue is that we have the line buffer that is used for<br />continuations, and then the record buffer that is used for logging.<br /><br />And those two per se sound fairly easy to handle ("KERN_CONT means<br />append to the line buffer, otherwise flush the line buffer and move to<br />the record buffer").<br /><br />But what complicates things more is then the "console output", which<br />has two issues:<br /><br /> - it is done outside the locking regime for the line buffer and the<br />record buffer.<br /><br /> - it is done on _partial_ line buffers.<br /><br />Again, this would be absolutely trivial if we just said "we only print<br />the record buffer". Easy, and solves all the problems. Except for<br />_one_ problem:<br /><br /> - if a hang occurs in the middle of a continuation, we historically<br />*really* want that continuation to have been printed out.<br /><br />For example, one of the really historical uses for partial lines is this:<br /><br />       pr_info("Checking 'hlt' instruction... ");<br /><br />       if (!boot_cpu_data.hlt_works_ok) {<br />               pr_cont("disabled\n");<br />               return;<br />       }<br />       halt();<br />       halt();<br />       halt();<br />       halt();<br />       pr_cont("OK\n");<br /><br />and the point was that there used to be some really old i386 machines<br />that hung on the "hlt" instruction (probably not because of a CPU bug,<br />but because of either power supply issues or some DMA issues).<br /><br />To support that, we really *had* to print out the continuation lines<br />even when they were partial. And that complicates the printk logic a<br />lot.<br /><br />Now, that "hlt" case is long long gone, and maybe we should just say<br />"screw that". It would be really quite easy to say "we don't print out<br />continuation lines immediately, we just buffer them for 0.1s instead,<br />and KERN_CONT only works for things that really happen more or less<br />immediately".<br /><br />Maybe that really is the right answer. Because the original cause of<br />us having to bend over backwards in this case is really no longer<br />there. And it would simplify printk a *lot*.<br /><br />Let me whip up a minimal patch for you to try.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
