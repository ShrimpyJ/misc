    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/10/12/363">First message in thread</a></li><li><a href="/lkml/2016/10/23/114">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/23/121">Joe Perches</a><ul><li class="origin"><a href="/lkml/2016/10/23/128">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/23/128">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/24/248">Geert Uytterhoeven</a></li><li><a href="/lkml/2016/10/24/379">Sergey Senozhatsky</a></li></ul></li><li><a href="/lkml/2016/10/23/139">Joe Perches</a><ul><li><a href="/lkml/2016/10/23/152">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2016/10/25/406">Steven Rostedt</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 23 Oct 2016 12:32:27 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: linux.git: printk() problem</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Oct 23, 2016 at 12:06 PM, Joe Perches &lt;joe&#64;perches.com&gt; wrote:<br />&gt; On Sun, 2016-10-23 at 11:11 -0700, Linus Torvalds wrote:<br />&gt;&gt;<br />&gt;&gt; And those two per se sound fairly easy to handle ("KERN_CONT means<br />&gt;&gt; append to the line buffer, otherwise flush the line buffer and move to<br />&gt;&gt; the record buffer").<br />&gt;&gt;<br />&gt;&gt; But what complicates things more is then the "console output", which<br />&gt;&gt; has two issues:<br />&gt;&gt;<br />&gt;&gt;  - it is done outside the locking regime for the line buffer and the<br />&gt;&gt; record buffer.<br />&gt;&gt;<br />&gt;&gt;  - it is done on _partial_ line buffers.<br />&gt;<br />&gt; EOL KERN_&lt;LEVEL&gt; and thread interleaving still exists.<br /><br />Note that the thread interleaving is still trivial: it's easily done<br />at the point where we decide "can we append to the line buffer or<br />not". That's pretty simple. Just flush the record when the thread<br />changes.<br /><br />So the interleaving will never go away, it's very fundamental - unless<br />we make the line buffer just be a per-thread thing. And yes, that<br />would be the cleanest solution, but it's also an extra buffer for each<br />thread, so realistically it's just not going to happen.<br /><br />End result: I'm not worried about the interleaving. It will cause ugly<br />output, but we've always had that, and the solution to it is "if you<br />absolutely don't want interleaving, then don't try to print partial<br />lines!".<br /><br />The classic "don't do that then" response, in other world.<br /><br />No, the real complexity comes from that interaction with the console<br />output, which is done outside the core log locks, and which currently<br />has the added thing where we have a "has this line fragment been<br />flushed or not".<br /><br />That "has this line fragment been flushed or not" is particularly<br />painful, because we may have flushed it *partially*. That "cont.cons"<br />thing is a counter of how many bytes have been flushed, and we can be<br />in the situation where we have had multiple continuations added to the<br />line buffer, and only *some* of them have been flushed to the console.<br /><br />(Reasons for not flushing: we couldn't get the console lock because<br />another process held it due to logging or whatever).<br /><br />And then the interface to the actual record logging only has a "all or<br />nothing was flushed" flag (LOG_NOCONS) to avoid flushing things twice.<br />So when we actually log the record, we lose the "this line was only<br />partially printed".<br /><br />That whole "we've flushed part of the line to the console" thing is<br />why it would make things so much easier to just log full records to<br />the console. Getting rid of that gets rid of a lot of ugly and<br />hard-to-read crap. Yes, the line buffer would still remain, and yes,<br />you'd still see the interleaving with threads, but that's not<br />"complexity", that's just "visually ugly output".<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
