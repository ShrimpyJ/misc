    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/10/19/632">First message in thread</a></li><li><a href="/lkml/2016/10/19/632">Johannes Weiner</a><ul><li><a href="/lkml/2016/10/19/633">Johannes Weiner</a></li><li><a href="/lkml/2016/10/19/634">Johannes Weiner</a></li><li><a href="/lkml/2016/10/19/635">Johannes Weiner</a></li><li><a href="/lkml/2016/10/19/636">Johannes Weiner</a></li><li><a href="/lkml/2016/10/19/637">Johannes Weiner</a><ul><li><a href="/lkml/2016/10/20/817">Dave Chinner</a><ul><li><a href="/lkml/2016/10/24/500">Johannes Weiner</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2016/10/24/734">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/24/734">Johannes Weiner</a><ul><li><a href="/lkml/2016/10/26/212">Jan Kara</a><ul><li><a href="/lkml/2016/10/26/933">Johannes Weiner</a></li></ul></li><li><a href="/lkml/2016/10/26/936">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/26/940">Johannes Weiner</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 19 Oct 2016 11:16:30 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/5] mm: workingset: radix tree subtleties &amp; single-page file refaults</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Oct 19, 2016 at 10:24 AM, Johannes Weiner &lt;hannes&#64;cmpxchg.org&gt; wrote:<br />&gt;<br />&gt; These patches make the radix tree code explicitely support and track<br />&gt; such special entries, to eliminate the subtleties and to restore the<br />&gt; thrash detection for single-page files.<br /><br />Ugh. I'm not a huge fan. The patches may be good and be a cleanup in<br />one respect, but they make one of my least favorite parts of the radix<br />tree code worse.<br /><br />The radix tree "tag" thing is really horribly confusing, and part of<br />it is that there are two totally different "tags": the externally<br />visible tags (separate array), and the magical internal tags (low bits<br />of the node pointers that tag the pointers as internal or exceptional<br />entries).<br /><br />And I think this series actually makes things even *more* complicated,<br />because now the radix tree itself uses one magical entry in the<br />externally visible tags for its own internal logic. So now it's<br />*really* messed up - the external tags aren't entirely external any<br />more.<br /><br />Maybe I'm mis-reading it, and I'm just confused by the radix tree<br />implementation? But if so, it's just another sign of just how<br />confusing things are.<br /><br />The external tag array itself is also somewhat nasty, in that it<br />spreads out the tag bits for one entry maximally (ie different bits<br />are in different words) so you can't even clear them together. I know<br />why - it makes both iterating over a specific tag and any_tag_set()<br />simpler, but it does seem confusing to me how we spread out the data<br />almost maximally.<br /><br />I really would love to see somebody take a big look at the two<br />different tagging methods. If nothing else, explain it to me.<br /><br />Because maybe this series is all great, and my objection is just that<br />it makes it even harder for me to understand the code.<br /><br />For example, could we do this simplification:<br /><br /> - get rid of RADIX_TREE_TAG_LONGS entirely<br /> - get rid of CONFIG_BASE_SMALL entirely<br /> - just say that the tag bitmap is one unsigned long<br /> - so RADIX_TREE_MAP_SIZE is just BITS_PER_LONG<br /><br />and then at least we'd get rid of the double array and the confusion<br />about loops that are actually almost never loops. Because right now<br />RADIX_TREE_TAG_LONGS is usually 1, but is 2 if you're a 32-bit<br />platform with !CONFIG_BASE_SMALL. So you need those loops, but it all<br />looks almost entirely pointless.<br /><br />I just get the feeling that we have already have unnecessary<br />complexity here, and that this patch series makes the code even more<br />impenetrable.<br /><br />Comments?<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
