    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/10/12/363">First message in thread</a></li><li><a href="/lkml/2016/10/24/1088">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/25/2">Sergey Senozhatsky</a><ul><li><a href="/lkml/2016/10/25/4">Joe Perches</a></li><li class="origin"><a href="/lkml/2016/10/25/9">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/25/9">Sergey Senozhatsky</a></li></ul></li></ul></li><li><a href="/lkml/2016/10/25/408">Petr Mladek</a></li><li><a href="/lkml/2016/11/9/507">Petr Mladek</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Oct 2016 21:15:41 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: linux.git: printk() problem</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Oct 24, 2016 at 9:06 PM, Sergey Senozhatsky<br />&lt;sergey.senozhatsky.work&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; 1) the way we dumpstack on x86 (at least on x86) is a spaghetti of<br />&gt; printk() and pr_cont() calls. for instance, arch/x86/kernel/dumpstack_64.c<br />&gt; show_regs() does pr_cont() to print out the registers, while the stack and<br />&gt; backtrace are printed with printk(). so, I assume, the backtrace now will<br />&gt; look a bit upside-down, because cont lines are printed with the delay.<br />&gt; correct?<br /><br />No. Most cont lines never hit the delay, because when the line is<br />completed, it is flushed (and then printed synchronously, assuming it<br />can get the console lock).<br /><br />So the timeout only ever comes into effect if the line isn't completed<br />in time at all. Which is actually very rare, and never happens for the<br />"let's print things out in multiple chinks because we're using a<br />loop".<br /><br />Similarly, if a new printk() happens due to interleaving, the previous<br />buffered line is always flushed first, so buffering never causes<br />out-of-order behavior.<br /><br />Basically, the only time the timer actually does anything is if<br />something just does a printk() without a newline, and no other<br />printouts happen for the next 0.1s.<br /><br />&gt; 2) flush on oops.<br /><br />Again, really not an issue for the exact reason above: nothing is ever<br />buffered when something new is printed.<br /><br />And all you need to guarantee that last line of the oops itself is<br />printed is that it has a newline.<br /><br />So again, the timer only matters for the exceptional case, not for the<br />normal situation. It's literally there to guarantee basic timeliness.<br /><br />         Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
