    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/10/11/389">First message in thread</a></li><li><a href="/lkml/2016/10/26/1025">Chris Mason</a><ul><li><a href="/lkml/2016/10/26/1135">Chris Mason</a><ul><li class="origin"><a href="/lkml/2016/10/26/1165">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/26/1165">Dave Jones</a><ul><li><a href="/lkml/2016/10/26/1170">Linus Torvalds</a></li><li><a href="/lkml/2016/10/26/1173">Jens Axboe</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2016/10/26/1144">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/26/1189">Chris Mason</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2016/10/26/1156/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 26 Oct 2016 15:21:53 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: bio linked list corruption.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Oct 26, 2016 at 2:52 PM, Chris Mason &lt;clm&#64;fb.com&gt; wrote:<br />&gt;<br />&gt; This one is special because CONFIG_VMAP_STACK is not set.  Btrfs triggers in &lt; 10 minutes.<br />&gt; I've done 30 minutes each with XFS and Ext4 without luck.<br /><br />Ok, see the email I wrote that crossed yours - if it's really some<br />list corruption on ctx-&gt;rq_list due to some locking problem, I really<br />would expect CONFIG_VMAP_STACK to be entirely irrelevant, except<br />perhaps from a timing standpoint.<br /><br />&gt; WARNING: CPU: 6 PID: 4481 at lib/list_debug.c:33 __list_add+0xbe/0xd0<br />&gt; list_add corruption. prev-&gt;next should be next (ffffe8ffffd80b08), but was ffff88012b65fb88. (prev=ffff880128c8d500).<br />&gt; Modules linked in: crc32c_intel aesni_intel aes_x86_64 glue_helper lrw gf128mul ablk_helper i2c_piix4 cryptd i2c_core virtio_net serio_raw floppy button pcspkr sch_fq_codel autofs4 virtio_blk<br />&gt; CPU: 6 PID: 4481 Comm: dbench Not tainted 4.9.0-rc2-15419-g811d54d #319<br />&gt; Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.9.0-1.fc24 04/01/2014<br />&gt;  ffff880104eff868 ffffffff814fde0f ffffffff8151c46e ffff880104eff8c8<br />&gt;  ffff880104eff8c8 0000000000000000 ffff880104eff8b8 ffffffff810648cf<br />&gt;  ffff880128cab2c0 000000213fc57c68 ffff8801384e8928 ffff880128cab180<br />&gt; Call Trace:<br />&gt;  [&lt;ffffffff814fde0f&gt;] dump_stack+0x53/0x74<br />&gt;  [&lt;ffffffff8151c46e&gt;] ? __list_add+0xbe/0xd0<br />&gt;  [&lt;ffffffff810648cf&gt;] __warn+0xff/0x120<br />&gt;  [&lt;ffffffff810649a9&gt;] warn_slowpath_fmt+0x49/0x50<br />&gt;  [&lt;ffffffff8151c46e&gt;] __list_add+0xbe/0xd0<br />&gt;  [&lt;ffffffff814dec38&gt;] blk_sq_make_request+0x388/0x580<br />&gt;  [&lt;ffffffff814d5444&gt;] generic_make_request+0x104/0x200<br /><br />Well, it's very consistent, I have to say. So I really don't think<br />this is random corruption.<br /><br />Could you try the attached patch? It adds a couple of sanity tests:<br /><br /> - a number of tests to verify that 'rq-&gt;queuelist' isn't already on<br />some queue when it is added to a queue<br /><br /> - one test to verify that rq-&gt;mq_ctx is the same ctx that we have locked.<br /><br />I may be completely full of shit, and this patch may be pure garbage<br />or "obviously will never trigger", but humor me.<br /><br />          Linus<br /> block/blk-mq.c | 9 +++++++++<br /> 1 file changed, 9 insertions(+)<br /><br />diff --git a/block/blk-mq.c b/block/blk-mq.c<br />index ddc2eed64771..4f575de7fdd0 100644<br />--- a/block/blk-mq.c<br />+++ b/block/blk-mq.c<br />&#64;&#64; -521,6 +521,8 &#64;&#64; void blk_mq_add_to_requeue_list(struct request *rq, bool at_head)<br /> 	 */<br /> 	BUG_ON(rq-&gt;cmd_flags &amp; REQ_SOFTBARRIER);<br /> <br />+WARN_ON_ONCE(!list_empty(&amp;rq-&gt;queuelist));<br />+<br /> 	spin_lock_irqsave(&amp;q-&gt;requeue_lock, flags);<br /> 	if (at_head) {<br /> 		rq-&gt;cmd_flags |= REQ_SOFTBARRIER;<br />&#64;&#64; -838,6 +840,7 &#64;&#64; static void __blk_mq_run_hw_queue(struct blk_mq_hw_ctx *hctx)<br /> 			queued++;<br /> 			break;<br /> 		case BLK_MQ_RQ_QUEUE_BUSY:<br />+WARN_ON_ONCE(!list_empty(&amp;rq-&gt;queuelist));<br /> 			list_add(&amp;rq-&gt;queuelist, &amp;rq_list);<br /> 			__blk_mq_requeue_request(rq);<br /> 			break;<br />&#64;&#64; -1034,6 +1037,8 &#64;&#64; static inline void __blk_mq_insert_req_list(struct blk_mq_hw_ctx *hctx,<br /> <br /> 	trace_block_rq_insert(hctx-&gt;queue, rq);<br /> <br />+WARN_ON_ONCE(!list_empty(&amp;rq-&gt;queuelist));<br />+<br /> 	if (at_head)<br /> 		list_add(&amp;rq-&gt;queuelist, &amp;ctx-&gt;rq_list);<br /> 	else<br />&#64;&#64; -1137,6 +1142,7 &#64;&#64; void blk_mq_flush_plug_list(struct blk_plug *plug, bool from_schedule)<br /> 			depth = 0;<br /> 		}<br /> <br />+WARN_ON_ONCE(!list_empty(&amp;rq-&gt;queuelist));<br /> 		depth++;<br /> 		list_add_tail(&amp;rq-&gt;queuelist, &amp;ctx_list);<br /> 	}<br />&#64;&#64; -1172,6 +1178,7 &#64;&#64; static inline bool blk_mq_merge_queue_io(struct blk_mq_hw_ctx *hctx,<br /> 		blk_mq_bio_to_request(rq, bio);<br /> 		spin_lock(&amp;ctx-&gt;lock);<br /> insert_rq:<br />+WARN_ON_ONCE(rq-&gt;mq_ctx != ctx);<br /> 		__blk_mq_insert_request(hctx, rq, false);<br /> 		spin_unlock(&amp;ctx-&gt;lock);<br /> 		return false;<br />&#64;&#64; -1326,6 +1333,7 &#64;&#64; static blk_qc_t blk_mq_make_request(struct request_queue *q, struct bio *bio)<br /> 				old_rq = same_queue_rq;<br /> 				list_del_init(&amp;old_rq-&gt;queuelist);<br /> 			}<br />+WARN_ON_ONCE(!list_empty(&amp;rq-&gt;queuelist));<br /> 			list_add_tail(&amp;rq-&gt;queuelist, &amp;plug-&gt;mq_list);<br /> 		} else /* is_sync */<br /> 			old_rq = rq;<br />&#64;&#64; -1412,6 +1420,7 &#64;&#64; static blk_qc_t blk_sq_make_request(struct request_queue *q, struct bio *bio)<br /> 			trace_block_plug(q);<br /> 		}<br /> <br />+WARN_ON_ONCE(!list_empty(&amp;rq-&gt;queuelist));<br /> 		list_add_tail(&amp;rq-&gt;queuelist, &amp;plug-&gt;mq_list);<br /> 		return cookie;<br /> 	}</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
