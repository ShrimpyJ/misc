    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/10/11/389">First message in thread</a></li><li><a href="/lkml/2016/10/24/843">Andy Lutomirski</a><ul><li><a href="/lkml/2016/10/24/876">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2016/10/24/921">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/24/921">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/24/933">Chris Mason</a></li></ul></li></ul></li><li><a href="/lkml/2016/10/24/969">Andy Lutomirski</a><ul><li><a href="/lkml/2016/10/24/999">Linus Torvalds</a><ul><li><a href="/lkml/2016/10/24/1063">Andy Lutomirski</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Oct 2016 14:17:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: bio linked list corruption.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Oct 24, 2016 at 1:46 PM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; So this is all some really subtle code, but I'm not seeing that it<br />&gt; would be wrong.<br /><br />Ahh... Except maybe..<br /><br />The vmalloc/vfree code itself is a bit scary. In particular, we have a<br />rather insane model of TLB flushing. We leave the virtual area on a<br />lazy purge-list, and we delay flushing the TLB and actually freeing<br />the virtual memory for it so that we can batch things up.<br /><br />But we've free'd the physical pages that are *mapped* by that area<br />when we do the vfree(). So there can be stale TLB entries that point<br />to pages that have gotten re-used. They shouldn't matter, because<br />nothing should be writing to those pages, but it strikes me that this<br />may also be hurting the DEBUG_PAGEALLOC thing. Maybe we're not getting<br />the page fautls that we *should* be getting, and there are hidden<br />reads and writes to those paghes that already got free'd.\<br /><br />There was some nasty reason why we did that insane thing. I think it<br />was just that there are a few high-frequency vmalloc/vfree users and<br />the TLB flushing was killing some performance.<br /><br />But it does strike me that we are playing very fast and loose with the<br />TLB on the vmalloc area.<br /><br />So maybe all the new VMAP code is fine, and it's really vmalloc/vfree<br />that has been subtly broken but nobody has ever cared before?<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
