    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/9/14/696">First message in thread</a></li><li><a href="/lkml/2016/9/14/696">Waiman Long</a><ul><li class="origin"><a href="/lkml/2016/9/14/716">Linus Torvalds</a><ul><li><a href="/lkml/2016/9/14/716">Waiman Long</a></li><li><a href="/lkml/2016/9/14/749">Tejun Heo</a><ul><li><a href="/lkml/2016/9/14/884">Tejun Heo</a></li></ul></li></ul></li><li><a href="/lkml/2016/9/14/710">Waiman Long</a><ul><li><a href="/lkml/2016/9/14/712">Linus Torvalds</a><ul><li><a href="/lkml/2016/9/14/744">Waiman Long</a><ul><li><a href="/lkml/2016/9/14/820">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2016/9/18/442">Waiman Long</a><ul><li><a href="/lkml/2016/9/19/185">Matt Fleming</a></li><li><a href="/lkml/2016/9/19/334">Matt Fleming</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 14 Sep 2016 12:14:30 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] random: Fix kernel panic due to system_wq use before init</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Ugh, I detest this patch.<br /><br />My gut feeling is that a driver (even a fairly core one like the<br />random code) should not have to know these kinds of details like<br />"schedule_work() needs system_wq to have been initialized".<br /><br />I'm wondering if we couldn't just initialize "system_wq" earlier.<br />Right now init_workqueues() is an "early_initcall()", so it's at the<br />same priority as a number of other random early initcalls. My gut<br />feeling is that it should be initialized even earlier, with the<br />scheduler.<br /><br />Because dammit, we use "schedule_work()" as if it was a pretty core<br />scheduler thing, and having to have some odd knowledge of system_wq<br />initialization details in the rest of the kernel sounds really really<br />wrong.<br /><br />I don't think the random code is at all special in maybe wanting to<br />schedule some work despite being an "early" initcall.<br /><br />Adding Tejun to the cc, and quoting the whole email.<br /><br />Tejun, comments?<br /><br />             Linus<br /><br />On Wed, Sep 14, 2016 at 12:03 PM, Waiman Long &lt;Waiman.Long&#64;hpe.com&gt; wrote:<br />&gt; While booting a 4.8-rc6 kernel on a 16-socket 768-thread Broadwell-EX<br />&gt; system, the kernel panic'ed with the following log:<br />&gt;<br />&gt; [   51.837010] BUG: unable to handle kernel NULL pointer dereference at 0000000000000102<br />&gt; [   51.845635] IP: [&lt;ffffffff810a49d2&gt;] __queue_work+0x32/0x420<br />&gt; [   52.004366] Call Trace:<br />&gt; [   52.007053]  &lt;IRQ&gt;<br />&gt; [   52.009171]  [&lt;ffffffff810a4de7&gt;] queue_work_on+0x27/0x40<br />&gt; [   52.015306]  [&lt;ffffffff8146ebd7&gt;] credit_entropy_bits+0x1d7/0x2a0<br />&gt; [   52.022002]  [&lt;ffffffff8146f339&gt;] ?  add_interrupt_randomness+0x1b9/0x210<br />&gt; [   52.029366]  [&lt;ffffffff8146f339&gt;] add_interrupt_randomness+0x1b9/0x210<br />&gt; [   52.036544]  [&lt;ffffffff810ea670&gt;] handle_irq_event_percpu+0x40/0x80<br />&gt; [   52.043430]  [&lt;ffffffff810ea6eb&gt;] handle_irq_event+0x3b/0x60<br />&gt; [   52.049655]  [&lt;ffffffff810ede48&gt;] handle_level_irq+0x88/0x100<br />&gt; [   52.055968]  [&lt;ffffffff8103004b&gt;] handle_irq+0xab/0x130<br />&gt; [   52.061708]  [&lt;ffffffff81092861&gt;] ? _local_bh_enable+0x21/0x50<br />&gt; [   52.068125]  [&lt;ffffffff81037bf5&gt;] ? __exit_idle+0x5/0x30<br />&gt; [   52.073965]  [&lt;ffffffff816fc9ed&gt;] do_IRQ+0x4d/0xd0<br />&gt; [   52.079229]  [&lt;ffffffff816fa88c&gt;] common_interrupt+0x8c/0x8c<br />&gt; [   52.085444]  &lt;EOI&gt;<br />&gt; [   52.087568]  [&lt;ffffffff8106bea9&gt;] ? try_to_free_pmd_page+0x9/0x40<br />&gt; [   52.094462]  [&lt;ffffffff8106bea5&gt;] ? try_to_free_pmd_page+0x5/0x40<br />&gt; [   52.101157]  [&lt;ffffffff8106bf2a&gt;] ?  __unmap_pmd_range.part.5+0x4a/0x70<br />&gt; [   52.108330]  [&lt;ffffffff8106c330&gt;] unmap_pmd_range+0x130/0x250<br />&gt; [   52.114644]  [&lt;ffffffff8106cb7b&gt;] __cpa_process_fault+0x47b/0x5a0<br />&gt; [   52.121339]  [&lt;ffffffff8106d7cb&gt;] __change_page_attr+0x78b/0x9e0<br />&gt; [   52.127946]  [&lt;ffffffff81065e45&gt;] ?  __raw_callee_save___native_queued_spin_unlock+0x15/0x30<br />&gt; [   52.137124]  [&lt;ffffffff8106da98&gt;] __change_page_attr_set_clr+0x78/0x300<br />&gt; [   52.144404]  [&lt;ffffffff81229180&gt;] ? __slab_alloc+0x4d/0x5c<br />&gt; [   52.150436]  [&lt;ffffffff8106f15f&gt;] kernel_map_pages_in_pgd+0x8f/0xd0<br />&gt; [   52.157333]  [&lt;ffffffff81dc0fb0&gt;] efi_setup_page_tables+0xcc/0x1d9<br />&gt; [   52.164124]  [&lt;ffffffff81dc0a8d&gt;] efi_enter_virtual_mode+0x35e/0x4af<br />&gt; [   52.171117]  [&lt;ffffffff81d9e109&gt;] start_kernel+0x41f/0x4c8<br />&gt; [   52.177142]  [&lt;ffffffff81d9dad8&gt;] ? set_init_arg+0x55/0x55<br />&gt; [   52.183168]  [&lt;ffffffff81d9d120&gt;] ?  early_idt_handler_array+0x120/0x120<br />&gt; [   52.190440]  [&lt;ffffffff81d9d5d6&gt;] x86_64_start_reservations+0x2a/0x2c<br />&gt; [   52.197516]  [&lt;ffffffff81d9d724&gt;] x86_64_start_kernel+0x14c/0x16f<br />&gt; [   52.204214] Code: 89 e5 41 57 41 56 49 89 f6 41 55 41 89 fd 41 54 49 89 d4 53 48 83 ec 10 89 7d d4 ff 14 25 a0 a7 c2 81 f6 c4 02 0f 85 0d 03 00 00 &lt;41&gt; f6 86 02 01 00 00 01 0f 85 ae 02 00 00 49 c7 c7 18 41 01 00<br />&gt; [   52.225516] RIP  [&lt;ffffffff810a49d2&gt;] __queue_work+0x32/0x420<br />&gt; [   52.231838]  RSP &lt;ffff88bd7f403de8&gt;<br />&gt; [   52.235667] CR2: 0000000000000102<br />&gt; [   52.239667] ---[ end trace 2ee7ea9d2908eb72 ]---<br />&gt; [   52.244743] Kernel panic - not syncing: Fatal exception in interrupt<br />&gt;<br />&gt; Looking at the panic'ed instruction indicated that system_wq was<br />&gt; used by credit_entropy_bits() before it it was initialized in an<br />&gt; early_initcall.<br />&gt;<br />&gt; This patch prevents the schedule_work() call from being made before<br />&gt; system_wq is initialized.<br />&gt;<br />&gt; Signed-off-by: Waiman Long &lt;Waiman.Long&#64;hpe.com&gt;<br />&gt; ---<br />&gt;  drivers/char/random.c |    8 ++++++--<br />&gt;  1 files changed, 6 insertions(+), 2 deletions(-)<br />&gt;<br />&gt; diff --git a/drivers/char/random.c b/drivers/char/random.c<br />&gt; index 3efb3bf..3afc519 100644<br />&gt; --- a/drivers/char/random.c<br />&gt; +++ b/drivers/char/random.c<br />&gt; &#64;&#64; -730,8 +730,12 &#64;&#64; retry:<br />&gt;                     r-&gt;entropy_total &gt;= 2*random_read_wakeup_bits) {<br />&gt;                         struct entropy_store *other = &amp;blocking_pool;<br />&gt;<br />&gt; -                       if (other-&gt;entropy_count &lt;=<br />&gt; -                           3 * other-&gt;poolinfo-&gt;poolfracbits / 4) {<br />&gt; +                       /*<br />&gt; +                        * We cannot call schedule_work() before system_wq<br />&gt; +                        * is initialized.<br />&gt; +                        */<br />&gt; +                       if (system_wq &amp;&amp; (other-&gt;entropy_count &lt;=<br />&gt; +                           3 * other-&gt;poolinfo-&gt;poolfracbits / 4)) {<br />&gt;                                 schedule_work(&amp;other-&gt;push_work);<br />&gt;                                 r-&gt;entropy_total = 0;<br />&gt;                         }<br />&gt; --<br />&gt; 1.7.1<br />&gt;<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
