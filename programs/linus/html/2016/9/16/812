    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/9/16/479">First message in thread</a></li><li><a href="/lkml/2016/9/16/728">Linus Torvalds</a><ul><li><a href="/lkml/2016/9/16/784">Sam Varshavchik</a><ul><li class="origin"><a href="/lkml/2016/9/16/814">Linus Torvalds</a><ul><li><a href="/lkml/2016/9/16/814">Linus Torvalds</a><ul><li><a href="/lkml/2016/9/17/1">Joe Perches</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2016/9/16/812/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Sep 2016 16:58:52 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [REGRESSION] RLIMIT_DATA crashes named</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 16, 2016 at 3:30 PM, Sam Varshavchik &lt;mrsam&#64;courier-mta.com&gt; wrote:<br />&gt;&gt;<br />&gt;&gt; Sam, do you end up seeing the kernel warning in your logs if you just<br />&gt;&gt; go back earlier in the boot?<br />&gt;<br />&gt; Yes, I found it.<br />&gt;<br />&gt; Sep 10 07:36:29 shorty kernel: mmap: named (1108): VmData 52588544 exceed<br />&gt; data ulimit 20971520. Update limits or use boot option ignore_rlimit_data.<br />&gt;<br />&gt; Now that I know what to search for: this appeared about 300 lines earlier in<br />&gt; /var/log/messages.<br /><br />Ok, so that's a pretty strong argument that we shouldn't just warn once.<br /><br />Maybe the warning happened at bootup, and it is now three months<br />later, and somebody notices that something doesn't work. It might not<br />be *critical* (three months without working implies it isn't), but it<br />sure is silly for the kernel to say "yeah, I already warned you, I'm<br />not going to tell you why it's not working any more".<br /><br />So it sounds like if the kernel had just had a that warning be<br />rate-limited instead of happening only once, there would never have<br />been any confusion about the RLIMIT_DATA change.<br /><br />Doing a grep for "pr_warn_once()", I get the feeling that we could<br />just change the definition of "once" to be "at most once per minute"<br />and everybody would be happy.<br /><br />Maybe we could change all the "pr_xyz_once()" to consider "once" to be<br />a softer "at most once per minute" thing. After all, these things are<br />*supposed* to be very uncommon to begin with, but when they do happen<br />we do want the user to be aware of them.<br /><br />Here's a totally untested patch. What do people say?<br /><br />                 Linus<br /> include/linux/printk.h | 38 +++++++++++++++-----------------------<br /> 1 file changed, 15 insertions(+), 23 deletions(-)<br /><br />diff --git a/include/linux/printk.h b/include/linux/printk.h<br />index 696a56be7d3e..ae98c388a377 100644<br />--- a/include/linux/printk.h<br />+++ b/include/linux/printk.h<br />&#64;&#64; -316,31 +316,23 &#64;&#64; extern asmlinkage void dump_stack(void) __cold;<br /> <br /> /*<br />  * Print a one-time message (analogous to WARN_ONCE() et al):<br />+ *<br />+ * "once" here is a misnomer. It's shorthand for "at most once a minute".<br />  */<br />-<br /> #ifdef CONFIG_PRINTK<br />-#define printk_once(fmt, ...)					\<br />-({								\<br />-	static bool __print_once __read_mostly;			\<br />-	bool __ret_print_once = !__print_once;			\<br />-								\<br />-	if (!__print_once) {					\<br />-		__print_once = true;				\<br />-		printk(fmt, ##__VA_ARGS__);			\<br />-	}							\<br />-	unlikely(__ret_print_once);				\<br />-})<br />-#define printk_deferred_once(fmt, ...)				\<br />-({								\<br />-	static bool __print_once __read_mostly;			\<br />-	bool __ret_print_once = !__print_once;			\<br />-								\<br />-	if (!__print_once) {					\<br />-		__print_once = true;				\<br />-		printk_deferred(fmt, ##__VA_ARGS__);		\<br />-	}							\<br />-	unlikely(__ret_print_once);				\<br />-})<br />+<br />+#define do_just_once(stmt)	({			\<br />+	static DEFINE_RATELIMIT_STATE(_rs, HZ*60, 1);	\<br />+	bool __do_it = __ratelimit(&amp;_rs);		\<br />+	if (unlikely(__do_it))				\<br />+		stmt;					\<br />+	unlikely(__do_it); })<br />+<br />+#define printk_once(fmt, ...) \<br />+	do_just_once(printk(fmt, ##__VA_ARGS__))<br />+#define printk_deferred_once(fmt, ...) \<br />+	do_just_once(printk_deferred(fmt, ##__VA_ARGS__))<br />+<br /> #else<br /> #define printk_once(fmt, ...)					\<br /> 	no_printk(fmt, ##__VA_ARGS__)</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
