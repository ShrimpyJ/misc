    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/9/14/849">First message in thread</a></li><li><a href="/lkml/2016/9/15/785">Al Viro</a><ul><li><a href="/lkml/2016/9/15/790">Linus Torvalds</a></li><li><a href="/lkml/2016/9/15/791">Cedric Blancher</a></li><li><a href="/lkml/2016/9/16/351">One Thousand Gnomes</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Sep 2016 11:36:54 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] writev() semantics with invalid iovec in the middle</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 16, 2016 at 6:25 AM, One Thousand Gnomes<br />&lt;gnomes&#64;lxorguk.ukuu.org.uk&gt; wrote:<br />&gt;<br />&gt; 1003.1 says<br />&gt;<br />&gt; "Each iovec entry specifies the base address and length of an area in<br />&gt; memory from which data should be written. The writev() function shall<br />&gt; always write a complete area before proceeding to the next."<br />&gt;<br />&gt; and I imagine that is what LTP is attempting to test.<br /><br />Ahh. Yes. But as you note, the EFAULT case is undefined behavior, so<br />what that POSIX language is *really* about is presumably making sure<br />that readers of a file cannot see the "later" writes without seeing<br />the earlier ones.<br /><br />So you cannot do some fancy threaded thing where you do different<br />iovec parts concurrently, because that could be seen by a reader (or<br />more likely mmap) as doing the writes out of order.<br /><br />Or, as you mention, the disk-full case.<br /><br />                   Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
