    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/9/22/597">First message in thread</a></li><li><a href="/lkml/2016/9/22/729">Linus Torvalds</a><ul><li><a href="/lkml/2016/9/23/711">Matthew Wilcox</a><ul><li class="origin"><a href="/lkml/2016/9/24/217">Linus Torvalds</a><ul><li><a href="/lkml/2016/9/24/217">Linus Torvalds</a></li><li><a href="/lkml/2016/9/24/219">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2016/9/24/225">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 24 Sep 2016 13:21:36 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 2/2] radix-tree: Fix optimisation problem</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 23, 2016 at 1:16 PM, Matthew Wilcox &lt;mawilcox&#64;microsoft.com&gt; wrote:<br />&gt;<br />&gt;  #ifdef CONFIG_RADIX_TREE_MULTIORDER<br />&gt;         if (radix_tree_is_internal_node(entry)) {<br />&gt; -               unsigned long siboff = get_slot_offset(parent, entry);<br />&gt; +               unsigned long siboff = get_slot_offset(parent,<br />&gt; +                                               (void **)entry_to_node(entry));<br /><br />I feel that it is *this* part that I think needs a huge honking comment.<br /><br />If you are going to make get_slot_offset() different, then you could<br />just rewrite get_slot_offset() to do<br /><br />        unsigned long diff = (unsigned long) slot - (unsigned<br />long)parent-&gt;slots;<br />        return diff / sizeof(void *);<br /><br />and add a comment to say "don't do this as a pointer diff, because<br />'slot' may not be an aligned pointer". No BUG_ON() necessary, because<br />it "just works".<br /><br />At that point, gcc should just generate the right code, because it<br />doesn't see it as a pointer subtraction followed by a pointer<br />addition.<br /><br />And yes, that crazy " (void **)entry_to_node(entry)" fixes it *too*,<br />but it needs a *comment*.<br /><br />Why is that special, when all the other uses of get_slot_offset()<br />don't have that? *That* is what should be explained. Not some internal<br />detail.<br /><br />That said, if this code isn't even used, as Konstantin says (THP<br />selects it - doesn't THP use it?), then the fix really should be to<br />just remove the odd code instead of adding to it.<br /><br />Looking around for uses that set "order" to anything but zero, I<br />really don't see it. So maybe we should just do *that* trivial thing<br />instead, and remove CONFIG_RADIX_TREE_MULTIORDER, since it's appears<br />to be buggy and always has been.<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
