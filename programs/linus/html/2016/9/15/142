    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/9/13/684">First message in thread</a></li><li><a href="/lkml/2016/9/13/684">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/13/685">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/15/140">tip-bot for Andy Lutomirski</a></li></ul></li><li><a href="/lkml/2016/9/13/686">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/15/26">Ingo Molnar</a></li><li><a href="/lkml/2016/9/15/150">tip-bot for Linus Torvalds</a></li></ul></li><li><a href="/lkml/2016/9/13/687">Andy Lutomirski</a></li><li><a href="/lkml/2016/9/13/688">Andy Lutomirski</a></li><li><a href="/lkml/2016/9/13/689">Andy Lutomirski</a></li><li><a href="/lkml/2016/9/13/690">Andy Lutomirski</a></li><li><a href="/lkml/2016/9/13/691">Andy Lutomirski</a></li><li><a href="/lkml/2016/9/13/692">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/14/557">Josh Poimboeuf</a><ul><li><a href="/lkml/2016/9/14/666">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/14/676">Josh Poimboeuf</a></li></ul></li></ul></li><li><a href="/lkml/2016/9/15/37">Ingo Molnar</a><ul><li><a href="/lkml/2016/9/15/103">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/2016/9/13/693">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/16/836">Jann Horn</a><ul><li><a href="/lkml/2016/9/22/1153">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/22/1155">Andy Lutomirski</a></li><li><a href="/lkml/2016/9/23/78">Jann Horn</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2016/9/13/695">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/15/146">tip-bot for Andy Lutomirski</a></li></ul></li><li><a href="/lkml/2016/9/13/696">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/15/151">tip-bot for Andy Lutomirski</a></li></ul></li><li><a href="/lkml/2016/9/13/698">Andy Lutomirski</a><ul><li><a href="/lkml/2016/9/15/25">Ingo Molnar</a></li><li class="origin"><a href="">tip-bot for Linus Torvalds</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2016/9/15/142/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 15 Sep 2016 03:42:18 -0700</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">tip-bot for Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">[tip:x86/asm] x86/entry: Get rid of pt_regs_to_thread_info()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Commit-ID:  97245d00585d82540f4538cf72d92a1e853c7b0e<br />Gitweb:     <a href="https://git.kernel.org/tip/97245d00585d82540f4538cf72d92a1e853c7b0e">http://git.kernel.org/tip/97245d00585d82540f4538cf72d92a1e853c7b0e</a><br />Author:     Linus Torvalds &lt;torvalds&#64;linux-foundation.org&gt;<br />AuthorDate: Tue, 13 Sep 2016 14:29:22 -0700<br />Committer:  Ingo Molnar &lt;mingo&#64;kernel.org&gt;<br />CommitDate: Thu, 15 Sep 2016 08:25:12 +0200<br /><br />x86/entry: Get rid of pt_regs_to_thread_info()<br /><br />It was a nice optimization while it lasted, but thread_info is moving<br />and this optimization will no longer work.<br /><br />Quoting Linus:<br /><br />    Oh Gods, Andy. That pt_regs_to_thread_info() thing made me want<br />    to do unspeakable acts on a poor innocent wax figure that looked<br />    _exactly_ like you.<br /><br />[ Changelog written by Andy. ]<br />Signed-off-by: Linus Torvalds &lt;torvalds&#64;linux-foundation.org&gt;<br />Signed-off-by: Andy Lutomirski &lt;luto&#64;kernel.org&gt;<br />Cc: Borislav Petkov &lt;bp&#64;alien8.de&gt;<br />Cc: Brian Gerst &lt;brgerst&#64;gmail.com&gt;<br />Cc: Denys Vlasenko &lt;dvlasenk&#64;redhat.com&gt;<br />Cc: H. Peter Anvin &lt;hpa&#64;zytor.com&gt;<br />Cc: Jann Horn &lt;jann&#64;thejh.net&gt;<br />Cc: Josh Poimboeuf &lt;jpoimboe&#64;redhat.com&gt;<br />Cc: Peter Zijlstra &lt;peterz&#64;infradead.org&gt;<br />Cc: Thomas Gleixner &lt;tglx&#64;linutronix.de&gt;<br />Link: <a href="https://lkml.kernel.org/r/6376aa81c68798cc81631673f52bd91a3e078944.1473801993.git.luto&#64;kernel.org">http://lkml.kernel.org/r/6376aa81c68798cc81631673f52bd91a3e078944.1473801993.git.luto&#64;kernel.org</a><br />Signed-off-by: Ingo Molnar &lt;mingo&#64;kernel.org&gt;<br />---<br /> arch/x86/entry/common.c | 20 ++++++--------------<br /> 1 file changed, 6 insertions(+), 14 deletions(-)<br /><br />diff --git a/arch/x86/entry/common.c b/arch/x86/entry/common.c<br />index 871bbf9..bdd9cc5 100644<br />--- a/arch/x86/entry/common.c<br />+++ b/arch/x86/entry/common.c<br />&#64;&#64; -31,13 +31,6 &#64;&#64;<br /> #define CREATE_TRACE_POINTS<br /> #include &lt;trace/events/syscalls.h&gt;<br /> <br />-static struct thread_info *pt_regs_to_thread_info(struct pt_regs *regs)<br />-{<br />-	unsigned long top_of_stack =<br />-		(unsigned long)(regs + 1) + TOP_OF_KERNEL_STACK_PADDING;<br />-	return (struct thread_info *)(top_of_stack - THREAD_SIZE);<br />-}<br />-<br /> #ifdef CONFIG_CONTEXT_TRACKING<br /> /* Called on entry from user mode with IRQs off. */<br /> __visible inline void enter_from_user_mode(void)<br />&#64;&#64; -71,7 +64,7 &#64;&#64; static long syscall_trace_enter(struct pt_regs *regs)<br /> {<br /> 	u32 arch = in_ia32_syscall() ? AUDIT_ARCH_I386 : AUDIT_ARCH_X86_64;<br /> <br />-	struct thread_info *ti = pt_regs_to_thread_info(regs);<br />+	struct thread_info *ti = current_thread_info();<br /> 	unsigned long ret = 0;<br /> 	bool emulated = false;<br /> 	u32 work;<br />&#64;&#64; -173,18 +166,17 &#64;&#64; static void exit_to_usermode_loop(struct pt_regs *regs, u32 cached_flags)<br /> 		/* Disable IRQs and retry */<br /> 		local_irq_disable();<br /> <br />-		cached_flags = READ_ONCE(pt_regs_to_thread_info(regs)-&gt;flags);<br />+		cached_flags = READ_ONCE(current_thread_info()-&gt;flags);<br /> <br /> 		if (!(cached_flags &amp; EXIT_TO_USERMODE_LOOP_FLAGS))<br /> 			break;<br />-<br /> 	}<br /> }<br /> <br /> /* Called with IRQs disabled. */<br /> __visible inline void prepare_exit_to_usermode(struct pt_regs *regs)<br /> {<br />-	struct thread_info *ti = pt_regs_to_thread_info(regs);<br />+	struct thread_info *ti = current_thread_info();<br /> 	u32 cached_flags;<br /> <br /> 	if (IS_ENABLED(CONFIG_PROVE_LOCKING) &amp;&amp; WARN_ON(!irqs_disabled()))<br />&#64;&#64; -247,7 +239,7 &#64;&#64; static void syscall_slow_exit_work(struct pt_regs *regs, u32 cached_flags)<br />  */<br /> __visible inline void syscall_return_slowpath(struct pt_regs *regs)<br /> {<br />-	struct thread_info *ti = pt_regs_to_thread_info(regs);<br />+	struct thread_info *ti = current_thread_info();<br /> 	u32 cached_flags = READ_ONCE(ti-&gt;flags);<br /> <br /> 	CT_WARN_ON(ct_state() != CONTEXT_KERNEL);<br />&#64;&#64; -270,7 +262,7 &#64;&#64; __visible inline void syscall_return_slowpath(struct pt_regs *regs)<br /> #ifdef CONFIG_X86_64<br /> __visible void do_syscall_64(struct pt_regs *regs)<br /> {<br />-	struct thread_info *ti = pt_regs_to_thread_info(regs);<br />+	struct thread_info *ti = current_thread_info();<br /> 	unsigned long nr = regs-&gt;orig_ax;<br /> <br /> 	enter_from_user_mode();<br />&#64;&#64; -303,7 +295,7 &#64;&#64; __visible void do_syscall_64(struct pt_regs *regs)<br />  */<br /> static __always_inline void do_syscall_32_irqs_on(struct pt_regs *regs)<br /> {<br />-	struct thread_info *ti = pt_regs_to_thread_info(regs);<br />+	struct thread_info *ti = current_thread_info();<br /> 	unsigned int nr = (unsigned int)regs-&gt;orig_ax;<br /> <br /> #ifdef CONFIG_IA32_EMULATION<br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
