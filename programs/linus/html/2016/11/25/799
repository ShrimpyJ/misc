    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/11/23/585">First message in thread</a></li><li><a href="/lkml/2016/11/25/733">Linus Torvalds</a><ul><li><a href="/lkml/2016/11/25/743">Mike Marshall</a></li><li><a href="/lkml/2016/11/25/780">Theodore Ts'o</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2016/11/28/85">Jan Kara</a></li></ul></li><li><a href="/lkml/2016/11/27/130">Dave Chinner</a><ul><li><a href="/lkml/2016/11/27/154">Linus Torvalds</a><ul><li><a href="/lkml/2016/11/27/164">Al Viro</a></li><li><a href="/lkml/2016/11/28/109">Dave Chinner</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 25 Nov 2016 15:38:41 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 3/6] dax: add tracepoint infrastructure, PMD tracing</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Nov 25, 2016 at 1:48 PM, Theodore Ts'o &lt;tytso&#64;mit.edu&gt; wrote:<br />&gt;<br />&gt; There is a reason why people want to be able to do that, and that's<br />&gt; because kprobes doesn't give you access to the arguments and return<br />&gt; codes to the functions.<br /><br />Honestly, that's simply not a good reason.<br /><br />What if everybody did this? Do we pollute the whole kernel with this crap? No.<br /><br />And if not, then what's so special about something like afs that it<br />would make sense there?<br /><br />The thing is, with function tracing, you *can* get the return value<br />and arguments. Sure, you'll probably need to write eBPF and just<br />attach it to that fentry call point, and yes, if something is inlined<br />you're just screwed, but Christ, if you do debugging that way you<br />shouldn't be writing kernel code in the first place.<br /><br />If you cannot do filesystem debugging without tracing every single<br />function entry, you are doing something seriously wrong. Add a couple<br />of relevant and valid trace points to get the initial arguments etc<br />(and perhaps to turn on the function tracing going down the stack).<br /><br />&gt; After all, we need *some* way of saying this can never be considered<br />&gt; stable.<br /><br />Oh, if you pollute the kernel with random idiotic trace points, not<br />only are they not going to be considered stable, after a while people<br />should stop pulling from you.<br /><br />I do think we should probably add a few generic VFS level breakpoints<br />to make it easier for people to catch the arguments they get from the<br />VFS layer (not every system call - if you're a filesystem person, you<br />_shouldn't_ care about all the stuff that the VFS layer caches for you<br />so that you never even have to see it). I do think that Al's "no trace<br />points what-so-ever" is too strict.<br /><br />But I think a lot of people add complete crap with the "maybe it's<br />needed some day" kind of mentality.<br /><br />The tracepoints should have a good _specific_ reason, and they should<br />make sense. Not be randomly sprinkled "just because".<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
