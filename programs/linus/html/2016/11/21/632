    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/11/19/308">First message in thread</a></li><li><a href="/lkml/2016/11/19/310">Andy Lutomirski</a><ul><li><a href="/lkml/2016/11/21/59">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2016/11/21/645">Linus Torvalds</a><ul><li><a href="/lkml/2016/11/21/645">"H. Peter Anvin"</a><ul><li><a href="/lkml/2016/11/21/722">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2016/11/22/82">Ingo Molnar</a><ul><li><a href="/lkml/2016/11/22/541">Andy Lutomirski</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 21 Nov 2016 10:00:56 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: What exactly do 32-bit x86 exceptions push on the stack in the CS slot?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Nov 20, 2016 at 11:13 PM, Ingo Molnar &lt;mingo&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; So I have applied your fix that addresses the worst fallout directly:<br />&gt;<br />&gt;   fc0e81b2bea0 x86/traps: Ignore high word of regs-&gt;cs in early_fixup_exception()<br />&gt;<br />&gt; ... but otherwise we might be better off zeroing out the high bits of segment<br />&gt; registers stored on the stack, in all entry code pathways<br /><br />Ugh.<br /><br />I'd much rather we go back to just making the "cs" entry explicitly<br />16-bit, and have a separate padding entry, the way we used to long<br />long ago.<br /><br />Or just rename it to something that you're not supposed to access<br />directly, and a helper accessor function that masks off the high bits.<br /><br />The entry code-paths are *much* more critical than any of the few user<br />codepaths. Let's not add complexity to entry. Make the structure<br />actually reflect reality instead.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
