    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/12/24/103">First message in thread</a></li><li><a href="/lkml/2016/12/24/103">Nicholas Piggin</a><ul><li><a href="/lkml/2016/12/24/104">Nicholas Piggin</a><ul><li class="origin"><a href="/lkml/2016/12/25/113">Linus Torvalds</a><ul><li><a href="/lkml/2016/12/25/113">Nicholas Piggin</a><ul><li><a href="/lkml/2016/12/26/128">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2016/12/24/105">Nicholas Piggin</a><ul><li><a href="/lkml/2016/12/25/2">Hugh Dickins</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 25 Dec 2016 13:51:17 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 2/2] mm: add PageWaiters indicating tasks are waiting for a page bit</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Dec 24, 2016 at 7:00 PM, Nicholas Piggin &lt;npiggin&#64;gmail.com&gt; wrote:<br />&gt; Add a new page flag, PageWaiters, to indicate the page waitqueue has<br />&gt; tasks waiting. This can be tested rather than testing waitqueue_active<br />&gt; which requires another cacheline load.<br /><br />Ok, I applied this one too. I think there's room for improvement, but<br />I don't think it's going to help to just wait another release cycle<br />and hope something happens.<br /><br />Example room for improvement from a profile of unlock_page():<br /><br />   46.44 │      lock   andb $0xfe,(%rdi)<br />   34.22 │      mov    (%rdi),%rax<br /><br />this has the old "do atomic op on a byte, then load the whole word"<br />issue that we used to have with the nasty zone lookup code too. And it<br />causes a horrible pipeline hickup because the load will not forward<br />the data from the (partial) store.<br /><br /> Its' really a misfeature of our asm optimizations of the atomic bit<br />ops. Using "andb" is slightly smaller, but in this case in particular,<br />an "andq" would be a ton faster, and the mask still fits in an imm8,<br />so it's not even hugely larger.<br /><br />But it might also be a good idea to simply use a "cmpxchg" loop here.<br />That also gives atomicity guarantees that we don't have with the<br />"clear bit and then load the value".<br /><br />Regardless, I think this is worth more people looking at and testing.<br />And merging it is probably the best way for that to happen.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
