    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/12/21/277">First message in thread</a></li><li><a href="/lkml/2016/12/21/277">Nicholas Piggin</a><ul><li><a href="/lkml/2016/12/21/278">Nicholas Piggin</a><ul><li><a href="/lkml/2016/12/22/417">Hugh Dickins</a><ul><li><a href="/lkml/2016/12/24/93">Nicholas Piggin</a></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2016/12/21/279">Nicholas Piggin</a></li><li><a href="/lkml/2016/12/21/356">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 24 Dec 2016 11:51:13 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/2] mm: Use owner_priv bit for PageSwapCache, valid when PageSwapBacked</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Nick,<br />mind adding a changelog and a sign-off for these two patches?<br /><br />I'd like to apply at least the first one asap, just to get as much<br />verification of the page flag bits as possible.<br /><br />             Linus<br /><br />On Wed, Dec 21, 2016 at 7:19 AM, Nicholas Piggin &lt;npiggin&#64;gmail.com&gt; wrote:<br />&gt; ---<br />&gt;  include/linux/page-flags.h     | 24 ++++++++++++++++--------<br />&gt;  include/trace/events/mmflags.h |  1 -<br />&gt;  2 files changed, 16 insertions(+), 9 deletions(-)<br />&gt;<br />&gt; diff --git a/include/linux/page-flags.h b/include/linux/page-flags.h<br />&gt; index 74e4dda91238..a57c909a15e4 100644<br />&gt; --- a/include/linux/page-flags.h<br />&gt; +++ b/include/linux/page-flags.h<br />&gt; &#64;&#64; -87,7 +87,6 &#64;&#64; enum pageflags {<br />&gt;         PG_private_2,           /* If pagecache, has fs aux data */<br />&gt;         PG_writeback,           /* Page is under writeback */<br />&gt;         PG_head,                /* A head page */<br />&gt; -       PG_swapcache,           /* Swap page: swp_entry_t in private */<br />&gt;         PG_mappedtodisk,        /* Has blocks allocated on-disk */<br />&gt;         PG_reclaim,             /* To be reclaimed asap */<br />&gt;         PG_swapbacked,          /* Page is backed by RAM/swap */<br />&gt; &#64;&#64; -110,6 +109,9 &#64;&#64; enum pageflags {<br />&gt;         /* Filesystems */<br />&gt;         PG_checked = PG_owner_priv_1,<br />&gt;<br />&gt; +       /* SwapBacked */<br />&gt; +       PG_swapcache = PG_owner_priv_1, /* Swap page: swp_entry_t in private */<br />&gt; +<br />&gt;         /* Two page bits are conscripted by FS-Cache to maintain local caching<br />&gt;          * state.  These bits are set on pages belonging to the netfs's inodes<br />&gt;          * when those inodes are being locally cached.<br />&gt; &#64;&#64; -314,7 +316,13 &#64;&#64; PAGEFLAG_FALSE(HighMem)<br />&gt;  #endif<br />&gt;<br />&gt;  #ifdef CONFIG_SWAP<br />&gt; -PAGEFLAG(SwapCache, swapcache, PF_NO_COMPOUND)<br />&gt; +static __always_inline int PageSwapCache(struct page *page)<br />&gt; +{<br />&gt; +       return PageSwapBacked(page) &amp;&amp; test_bit(PG_swapcache, &amp;page-&gt;flags);<br />&gt; +<br />&gt; +}<br />&gt; +SETPAGEFLAG(SwapCache, swapcache, PF_NO_COMPOUND)<br />&gt; +CLEARPAGEFLAG(SwapCache, swapcache, PF_NO_COMPOUND)<br />&gt;  #else<br />&gt;  PAGEFLAG_FALSE(SwapCache)<br />&gt;  #endif<br />&gt; &#64;&#64; -701,12 +709,12 &#64;&#64; static inline void ClearPageSlabPfmemalloc(struct page *page)<br />&gt;   * Flags checked when a page is freed.  Pages being freed should not have<br />&gt;   * these flags set.  It they are, there is a problem.<br />&gt;   */<br />&gt; -#define PAGE_FLAGS_CHECK_AT_FREE \<br />&gt; -       (1UL &lt;&lt; PG_lru   | 1UL &lt;&lt; PG_locked    | \<br />&gt; -        1UL &lt;&lt; PG_private | 1UL &lt;&lt; PG_private_2 | \<br />&gt; -        1UL &lt;&lt; PG_writeback | 1UL &lt;&lt; PG_reserved | \<br />&gt; -        1UL &lt;&lt; PG_slab  | 1UL &lt;&lt; PG_swapcache | 1UL &lt;&lt; PG_active | \<br />&gt; -        1UL &lt;&lt; PG_unevictable | __PG_MLOCKED)<br />&gt; +#define PAGE_FLAGS_CHECK_AT_FREE                               \<br />&gt; +       (1UL &lt;&lt; PG_lru          | 1UL &lt;&lt; PG_locked      |       \<br />&gt; +        1UL &lt;&lt; PG_private      | 1UL &lt;&lt; PG_private_2   |       \<br />&gt; +        1UL &lt;&lt; PG_writeback    | 1UL &lt;&lt; PG_reserved    |       \<br />&gt; +        1UL &lt;&lt; PG_slab         | 1UL &lt;&lt; PG_active      |       \<br />&gt; +        1UL &lt;&lt; PG_unevictable  | __PG_MLOCKED)<br />&gt;<br />&gt;  /*<br />&gt;   * Flags checked when a page is prepped for return by the page allocator.<br />&gt; diff --git a/include/trace/events/mmflags.h b/include/trace/events/mmflags.h<br />&gt; index 5a81ab48a2fb..30c2adbdebe8 100644<br />&gt; --- a/include/trace/events/mmflags.h<br />&gt; +++ b/include/trace/events/mmflags.h<br />&gt; &#64;&#64; -95,7 +95,6 &#64;&#64;<br />&gt;         {1UL &lt;&lt; PG_private_2,           "private_2"     },              \<br />&gt;         {1UL &lt;&lt; PG_writeback,           "writeback"     },              \<br />&gt;         {1UL &lt;&lt; PG_head,                "head"          },              \<br />&gt; -       {1UL &lt;&lt; PG_swapcache,           "swapcache"     },              \<br />&gt;         {1UL &lt;&lt; PG_mappedtodisk,        "mappedtodisk"  },              \<br />&gt;         {1UL &lt;&lt; PG_reclaim,             "reclaim"       },              \<br />&gt;         {1UL &lt;&lt; PG_swapbacked,          "swapbacked"    },              \<br />&gt; --<br />&gt; 2.11.0<br />&gt;<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
