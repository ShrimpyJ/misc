    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/17/407">First message in thread</a></li><li><a href="/lkml/2016/8/17/488">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/17/481">Denys Vlasenko</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2016/8/17/482">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/17/552">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/17/556">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/17/566">Andy Lutomirski</a></li><li><a href="/lkml/2016/8/18/132">Denys Vlasenko</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 17 Aug 2016 12:54:04 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: RFC: Petition Intel/AMD to add POPF_IF insn</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 17, 2016 at 12:35 PM, Denys Vlasenko &lt;dvlasenk&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; Experimentally, POPF is stupidly slow _always_. 6 cycles<br />&gt; even if none of the "scary" flags are changed.<br /><br />6 cycles is nothing.<br /><br />That's basically the overhead of "oops, I need to use the microcode sequencer".<br /><br />One issue is that the intel decoders (AMD too, for that matter) can<br />only generate a fairly small set of uops for any instruction. Some<br />instructions are really trivial to decode (popf definitely falls under<br />that heading), but are more than just a couple of uops, so you end up<br />having to use the uop sequencer logic.<br /><br />According to Agner Fog's tables, there's one or two<br />micro-architectures that actually dot he simple "popf" case with a<br />single cycle throughput, but that's the very unusual case.<br /><br />You can't even fit the "pop a value, see if only the arithmetic flags<br />changed, trap to microcode otherwise" into the three of four uops that<br />the "complex decoder" can generate directly.<br /><br />And that "fall back to the uop sequencer engine" tends to just always<br />cause several cycles regardless. So yes, microcode tends to be slow<br />even for what would otherwise be trivial operations. You'd think Intel<br />could do as well as they do for the L0 uop cache, but afaik they<br />don't.<br /><br />Anyway, six cycles is fast. I'd *love* for popf to actually be just 6<br />cycles when IF changes.  It's much much worse iirc (although honestly,<br />I haven't timed it in years - it's much easier to time just the<br />arithmetic flag changes).<br /><br />It used to be more like a hundred cycles on Prescott.<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
