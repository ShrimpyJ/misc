    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/17/407">First message in thread</a></li><li><a href="/lkml/2016/8/17/451">Denys Vlasenko</a><ul><li><a href="/lkml/2016/8/17/461">Andy Lutomirski</a><ul><li><a href="/lkml/2016/8/17/470">Denys Vlasenko</a><ul><li><a href="/lkml/2016/8/17/488">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/17/481">Denys Vlasenko</a></li><li><a href="/lkml/2016/8/17/482">Linus Torvalds</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 17 Aug 2016 12:29:19 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: RFC: Petition Intel/AMD to add POPF_IF insn</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 17, 2016 at 12:13 PM, Andy Lutomirski &lt;luto&#64;amacapital.net&gt; wrote:<br />&gt;<br />&gt; It wouldn't surprise me if that were easier said than done.  popf<br />&gt; potentially changes AC, and AC affects address translation.<br /><br />Rigth. A lot of magical flags are in eflags, and popf *may* change them.<br /><br />But that's why it's slow today. The popf microcode probably<br />unconditionally serializes things exactly because "things may change".<br />And the interrupt flag actually *is* pretty special too, in some<br />respects more so than AC (because it needs to serialize with any<br />pending interrupts).<br /><br />And the microcode probably already has code that says "let's handle<br />the easy case quickly", where the easy case is "only the arithmetic<br />flags changed".<br /><br />The arithmetic flags are special anyway, because they aren't actually<br />physically in the same register any more, but are separately tracked<br />and renamed etc.<br /><br />But I'm sure Intel already treats IF specially in microcode, because<br />IF is really special in other ways (VIF handling in vm86 mode, but<br />also modern virtualization).<br /><br />Yes, intel people tend to be afraid of the microcode stuff, and<br />generally not touch it. But the good news about popf is that is isn't<br />a serializing instruction, so it really *could* be optimized pretty<br />aggressively. And it does have to check for pending interrupts (and<br />*clearing* IF in particular needs to make sure that there isn't some<br />pending interrupt that the CPU is about to react to).<br /><br />So it's not trivial. But the "enable interrupts" case for popf is<br />actually easier for hardware than the disable case from a serializing<br />standpoint, and I suspect the ucode doesn't take advantage of that<br />right now, and it's all just fairly unoptimized microcode.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
