    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/17/583">First message in thread</a></li><li><a href="/lkml/2016/8/19/681">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/19/696">Kees Cook</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 19 Aug 2016 13:07:53 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] usercopy: Skip multi-page bounds checking on SLOB</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Aug 19, 2016 at 1:03 PM, Kees Cook &lt;keescook&#64;chromium.org&gt; wrote:<br />&gt;<br />&gt; Okay, I can live with that. I'd hoped to keep the general split<br />&gt; between the other checks (i.e. stack) and the allocator, but if this<br />&gt; is preferred, that's cool. :)<br /><br />If it had been anything else than SLOB, I might have cared. As it was,<br />I didn't think it was worth worrying about SLOB together with<br />hardening.<br /><br />It was also about the __check_object_size() modification just being<br />very ugly, with a "return NULL" in the middle of the function. I<br />looked at just splitting that function up, and having a part of it<br />that would just go away when the slab allocator wasn't smart enough,<br />but that would have been a bigger change that I'm not interested in<br />taking right now. So it could be a future improvement, and maybe we<br />could then re-instate SLOB with partial checking.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
