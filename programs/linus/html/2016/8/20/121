    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/19/671">First message in thread</a></li><li><a href="/lkml/2016/8/20/117">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/20/118">Al Viro</a><ul><li class="origin"><a href="/lkml/2016/8/20/122">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/20/122">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/20/124">"H. Peter Anvin"</a></li></ul></li><li><a href="/lkml/2016/8/21/3">Jakub Jelinek</a><ul><li><a href="/lkml/2016/8/21/9">Al Viro</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 20 Aug 2016 17:45:00 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] ARC: uaccess: get_user to zero out dest in cause of fault</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Aug 20, 2016 at 5:11 PM, Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt;<br />&gt; Interesting...  BTW, how's this in the "really vile tricks" department?<br />&gt;<br />&gt;         if (!uaccess_begin())<br />&gt;                 goto fail;<br /><br />So I slightly considered it, because gcc actually has support for that<br />kind of behavior thanks to setjmp/longjmp (and yes, the compiler<br />actually needs to know about the magic "this code can be entered a<br />second time from elsewhere" - it _used_ to be purely a library thing<br />back in the days of stupid compilers, but no more).<br /><br />And I'm not saying it's wrong, but I'm not a huge fan of<br />setjmp/longjmp. Afaik it tends to make gcc generate potentially much<br />worse code in the function that uses setjmp.<br /><br />That said, you have a really strong argument that I hadn't even thought about:<br /><br />&gt; AFAICS, it should avoid the problems with asm goto, right?<br /><br />Yes. That was something I never even thought about. I just thought<br />"asm goto has some limitations, but they aren't _fundamental_, so<br />hopefully they get fixed". But they may not be fundamental, but it<br />will take a long time. If ever.<br /><br />And you're right, using setjmp semantics would avoid all that and<br />"just work". Even for "get_user()" that needs to return a value.<br /><br />Hmm.<br /><br />You have to save the stack pointer at the setjmp point too. And there<br />might be other architecture-specific ABI rules for that. But you're<br />right, it might be worth it.<br /><br />I *would* be a bit worried about code generation issues.<br />setjmp/longjmp is so seldom used that it's one of those things where<br />it might be best to verify with some gcc person that it doesn't cause<br />huge code-gen problems.<br /><br />Adding Jakub just to check: Jakub, would a setjump/longjump kind of<br />interface for exception handling going to cause us problems<br />(performance or correctness) with gcc?<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
