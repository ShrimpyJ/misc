    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/19/671">First message in thread</a></li><li><a href="/lkml/2016/8/20/118">Al Viro</a><ul><li><a href="/lkml/2016/8/20/121">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2016/8/20/124">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/20/124">"H. Peter Anvin"</a><ul><li><a href="/lkml/2016/8/20/125">Al Viro</a></li></ul></li></ul></li><li><a href="/lkml/2016/8/21/3">Jakub Jelinek</a><ul><li><a href="/lkml/2016/8/21/9">Al Viro</a><ul><li><a href="/lkml/2016/8/21/277">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 20 Aug 2016 18:00:17 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] ARC: uaccess: get_user to zero out dest in cause of fault</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Aug 20, 2016 at 5:45 PM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; So I slightly considered it, because gcc actually has support for that<br />&gt; kind of behavior thanks to setjmp/longjmp (and yes, the compiler<br />&gt; actually needs to know about the magic "this code can be entered a<br />&gt; second time from elsewhere" - it _used_ to be purely a library thing<br />&gt; back in the days of stupid compilers, but no more).<br /><br />Hmm. I may just be full of sh*t.<br /><br />I was pretty sure that there used to be a "setjmp" attribute that gcc<br />used to make sure that "setjmp()" really could return twice, without<br />bad things happening on the stack.<br /><br />But looking at the normal user space headers, I see nothing like that. It's just<br /><br />    extern int setjmp (jmp_buf __env) __THROWNL;<br /><br />where __THROWNL just sets the __nothrow__ attribute, which shouldn't<br />even matter in the kernel since we use -fno-exceptions.<br /><br />So my "setjmp does potentially bad things to the optimization of the<br />function calling it" seems to have been just some drug-induced fever<br />dream of mine.<br /><br />Sorry for the bogus noise. I don't know why I was so convinced setjmp<br />needed special gcc semantics.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
