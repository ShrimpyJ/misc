    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/18/393">First message in thread</a></li><li><a href="/lkml/2016/8/18/393">Josh Poimboeuf</a><ul><li><a href="/lkml/2016/8/18/362">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/363">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/364">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/365">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/367">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/368">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/369">Josh Poimboeuf</a><ul><li><a href="/lkml/2016/8/19/659">Kees Cook</a><ul><li><a href="/lkml/2016/8/19/756">Josh Poimboeuf</a><ul><li><a href="/lkml/2016/8/22/752">Josh Poimboeuf</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2016/8/22/997">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/22/997">Kees Cook</a><ul><li><a href="/lkml/2016/8/23/455">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/23/778">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2016/8/23/436">Josh Poimboeuf</a><ul><li><a href="/lkml/2016/8/23/568">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/23/569">Josh Poimboeuf</a></li></ul></li><li><a href="/lkml/2016/8/23/615">Andy Lutomirski</a><ul><li><a href="/lkml/2016/8/23/642">Linus Torvalds</a></li><li><a href="/lkml/2016/8/23/643">Josh Poimboeuf</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2016/8/18/371">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/374">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/376">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/378">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/379">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/382">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/389">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/390">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/391">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/392">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/394">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/397">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/398">Josh Poimboeuf</a><ul><li><a href="/lkml/2016/8/19/58">Sebastian Andrzej Siewior</a></li></ul></li><li><a href="/lkml/2016/8/18/400">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/402">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/405">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/406">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/408">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/409">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/410">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/414">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/415">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/416">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/417">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/418">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/419">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/420">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/421">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/422">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/423">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/424">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/429">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/430">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/431">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/432">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/435">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/436">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/437">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/438">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/439">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/440">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/441">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/442">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/444">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/447">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/448">Frederic Weisbecker</a><ul><li><a href="/lkml/2016/8/18/459">Ingo Molnar</a><ul><li><a href="/lkml/2016/8/18/643">Josh Poimboeuf</a><ul><li><a href="/lkml/2016/8/18/681">Steven Rostedt</a></li><li><a href="/lkml/2016/8/19/18">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2016/8/18/656">Steven Rostedt</a></li></ul></li></ul></li><li><a href="/lkml/2016/8/18/449">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/450">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/451">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/457">Josh Poimboeuf</a></li><li><a href="/lkml/2016/8/18/458">Josh Poimboeuf</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 22 Aug 2016 15:11:32 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v4 54/57] x86/mm: convert arch_within_stack_frames() to use the new unwinder</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 18, 2016 at 6:06 AM, Josh Poimboeuf &lt;jpoimboe&#64;redhat.com&gt; wrote:<br />&gt; Convert arch_within_stack_frames() to use the new unwinder.<br /><br />Please don't do this.<br /><br />There's no real reason to unwind the stack frame. If it's not on the<br />current stack page, it shouldn't be a valid source anyway, so<br />unwidning things just seems entirely pointless.<br /><br />Quite frankly, I think the whole "look at the stack frames" logic<br />should be removed from this. It's classic crap that external patches<br />do. How many call-sites does it actually check, and how many of them<br />aren't already checked by the existing static checks for constant<br />addresses within existing objects?<br /><br />It's entirely possible that there is simply no point what-so-ever to<br />this all, and it mostly triggers on things like the fs/stat.c code<br />that does<br /><br />        struct stat tmp;<br />    ...<br />        return copy_to_user(statbuf,&amp;tmp,sizeof(tmp)) ? -EFAULT : 0;<br /><br />where the new useraccess.c code is pure masturbatory crap.<br /><br />One of the reasons I had for merging that code was that I was hoping<br />that it would improve by being in the  kernel. And by "improve" I mean<br />"get rid of crap" rather than make it more expensive and even more<br />self-congratulatory stupidity.<br /><br />Right now, I suspect 99% of all the stack checks in usercopy.c are<br />solidly in the "mindbogglingly stupid crap" camp.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
