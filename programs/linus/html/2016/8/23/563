    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/22/184">First message in thread</a></li><li><a href="/lkml/2016/8/23/16">Joonsoo Kim</a><ul><li><a href="/lkml/2016/8/23/94">Michal Hocko</a><ul><li><a href="/lkml/2016/8/23/99">Markus Trippelsdorf</a><ul><li><a href="/lkml/2016/8/23/103">Michal Hocko</a></li></ul></li><li class="origin"><a href="/lkml/2016/8/24/43">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/24/43">Michal Hocko</a></li></ul></li><li><a href="/lkml/2016/8/24/66">Joonsoo Kim</a><ul><li><a href="/lkml/2016/8/24/65">Michal Hocko</a><ul><li><a href="/lkml/2016/8/24/75">Joonsoo Kim</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 23 Aug 2016 15:08:05 -0400</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: OOM detection regressions since 4.7</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Aug 23, 2016 at 3:33 AM, Michal Hocko &lt;mhocko&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; I would argue that CONFIG_COMPACTION=n behaves so arbitrary for high<br />&gt; order workloads that calling any change in that behavior a regression<br />&gt; is little bit exaggerated.<br /><br />Well, the thread info allocations certainly haven't been big problems<br />before. So regressing those would seem to be a real regression.<br /><br />What happened? We've done the order-2 allocation for the stack since<br />May 2014, so that isn't new. Did we cut off retries for low orders?<br /><br />So I would not say that it's an exaggeration to say that order-2<br />allocations failing is a regression.<br /><br />Yes, yes, for 4.9 we may well end up using vmalloc for the kernel<br />stack, but there are certainly other things that want low-order<br />(non-hugepage) allocations. Like kmalloc(), which often ends up using<br />small orders just to pack data more efficiently (allocating a single<br />page can be hugely wasteful even if the individual allocations are<br />smaller than that - so allocating a few pages and packing more<br />allocations into it helps fight internal fragmentation)<br /><br />So this definitely needs to be fixed for 4.7 (and apparently there's a<br />few patches still pending even for 4.8)<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
