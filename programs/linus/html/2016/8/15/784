    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/9/440">First message in thread</a></li><li><a href="/lkml/2016/8/15/731">Dave Chinner</a><ul><li><a href="/lkml/2016/8/15/753">Dave Chinner</a><ul><li class="origin"><a href="/lkml/2016/8/15/801">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/15/801">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/15/830">Dave Chinner</a></li><li><a href="/lkml/2016/8/16/507">Mel Gorman</a></li></ul></li><li><a href="/lkml/2016/8/15/807">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/15/828">Dave Chinner</a></li></ul></li><li><a href="/lkml/2016/8/15/829">Dave Chinner</a><ul><li><a href="/lkml/2016/8/15/864">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2016/8/15/767">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/15/826">Dave Chinner</a><ul><li><a href="/lkml/2016/8/15/831">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Aug 2016 16:20:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [LKP] [lkp] [xfs] 68a9f5e700: aim7.jobs-per-min -13.6% regression</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 15, 2016 at 3:42 PM, Dave Chinner &lt;david&#64;fromorbit.com&gt; wrote:<br />&gt;<br />&gt;   31.18%  [kernel]  [k] __pv_queued_spin_lock_slowpath<br />&gt;    9.90%  [kernel]  [k] copy_user_generic_string<br />&gt;    3.65%  [kernel]  [k] __raw_callee_save___pv_queued_spin_unlock<br />&gt;    2.62%  [kernel]  [k] __block_commit_write.isra.29<br />&gt;    2.26%  [kernel]  [k] _raw_spin_lock_irqsave<br />&gt;    1.72%  [kernel]  [k] _raw_spin_lock<br /><br />Ok, this is more like it.<br /><br />I'd still like to see it on raw hardware, just to see if we may have a<br />bug in the PV code. Because that code has been buggy before. I<br />*thought* we fixed it, but ...<br /><br />In fact, you don't even need to do it outside of virtualization, but<br />with paravirt disabled (so that it runs the native non-pv locking in<br />the virtual machine).<br /><br />&gt;    36.60%     0.00%  [kernel]            [k] kswapd<br />&gt;    - 30.29% kswapd<br />&gt;       - 30.23% shrink_node<br />&gt;          - 30.07% shrink_node_memcg.isra.75<br />&gt;             - 30.15% shrink_inactive_list<br />&gt;                - 29.49% shrink_page_list<br />&gt;                   - 22.79% __remove_mapping<br />&gt;                      - 22.27% _raw_spin_lock_irqsave<br />&gt;                           __pv_queued_spin_lock_slowpath<br /><br />How I dislike the way perf shows the call graph data... Just last week<br />I was talking to Arnaldo about how to better visualize the cost of<br />spinlocks, because the normal way "perf" shows costs is so nasty.<br /><br />What happens is that you see that 36% of CPU time is attributed to<br />kswapd, and then you can drill down and see where that 36% comes from.<br />So far so good, and that's what perf does fairly well.<br /><br />But then when you find the spinlock, you actually want to go the other<br />way, and instead ask it to show "who were the callers to this routine<br />and what were the percentages", so that you can then see whether (for<br />example) it's just that __remove_mapping() use that contends with<br />itself, or whether it's contending with the page additions or<br />whatever..<br /><br />And perf makes that unnecessarily much too hard to see.<br /><br />So what I'd like to see (and this is where it becomes *so* much more<br />useful to be able to recreate it myself so that I can play with the<br />perf data several different ways) is to see what the profile looks<br />like in that spinlocked region.<br /><br />Hmm. I guess you could just send me the "perf.data" and "vmlinux"<br />files, and I can look at it that way. But I'll try to see what happens<br />on my profile, even if I can't recreate the contention itself, just<br />trying to see what happens inside of that region.<br /><br />None of this code is all that new, which is annoying. This must have<br />gone on forever,<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
