    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/9/440">First message in thread</a></li><li><a href="/lkml/2016/8/15/753">Dave Chinner</a><ul><li><a href="/lkml/2016/8/15/784">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2016/8/15/830">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/15/830">Dave Chinner</a></li><li><a href="/lkml/2016/8/16/507">Mel Gorman</a><ul><li><a href="/lkml/2016/8/16/611">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2016/8/15/807">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/15/828">Dave Chinner</a><ul><li><a href="/lkml/2016/8/15/832">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2016/8/15/829">Dave Chinner</a><ul><li><a href="/lkml/2016/8/15/864">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/16/838">Dave Chinner</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Aug 2016 16:48:36 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [LKP] [lkp] [xfs] 68a9f5e700: aim7.jobs-per-min -13.6% regression</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 15, 2016 at 4:20 PM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; None of this code is all that new, which is annoying. This must have<br />&gt; gone on forever,<br /><br />... ooh.<br /><br />Wait, I take that back.<br /><br />We actually have some very recent changes that I didn't even think<br />about that went into this very merge window.<br /><br />In particular, I wonder if it's all (or at least partly) due to the<br />new per-node LRU lists.<br /><br />So in shrink_page_list(), when kswapd is encountering a page that is<br />under page writeback due to page reclaim, it does:<br /><br />                        if (current_is_kswapd() &amp;&amp;<br />                            PageReclaim(page) &amp;&amp;<br />                            test_bit(PGDAT_WRITEBACK, &amp;pgdat-&gt;flags)) {<br />                                nr_immediate++;<br />                                goto keep_locked;<br /><br />which basically ignores that page and puts it back on the LRU list.<br /><br />But that "is this node under writeback" is new - it now does that per<br />node, and it *used* to do it per zone (so it _used_ to test "is this<br />zone under writeback").<br /><br />All the mapping pages used to be in the same zone, so I think it<br />effectively single-threaded the kswapd reclaim for one mapping under<br />reclaim writeback. But in your cases, you have multiple nodes...<br /><br />Ok, that's a lot of hand-wavy new-age crystal healing thinking.<br /><br />Really, I haven't looked at it more than "this is one thing that has<br />changed recently, I wonder if it changes the patterns and could<br />explain much higher spin_lock contention on the mapping-&gt;tree_lock".<br /><br />I'm adding Mel Gorman and his band of miscreants to the cc, so that<br />they can tell me that I'm full of shit, and completely missed on what<br />that zone-&gt;node change actually ends up meaning.<br /><br />Mel? The issue is that Dave Chinner is seeing some nasty spinlock<br />contention on "mapping-&gt;tree_lock":<br /><br />&gt;   31.18%  [kernel]  [k] __pv_queued_spin_lock_slowpath<br /><br />and one of the main paths is this:<br /><br />&gt;    - 30.29% kswapd<br />&gt;       - 30.23% shrink_node<br />&gt;          - 30.07% shrink_node_memcg.isra.75<br />&gt;             - 30.15% shrink_inactive_list<br />&gt;                - 29.49% shrink_page_list<br />&gt;                   - 22.79% __remove_mapping<br />&gt;                      - 22.27% _raw_spin_lock_irqsave<br />&gt;                           __pv_queued_spin_lock_slowpath<br /><br />so there's something ridiculously bad going on with a fairly simple benchmark.<br /><br />Dave's benchmark is literally just a "write a new 48GB file in<br />single-page chunks on a 4-node machine". Nothing odd - not rewriting<br />files, not seeking around, no nothing.<br /><br />You can probably recreate it with a silly<br /><br />  dd bs=4096 count=$((12*1024*1024)) if=/dev/zero of=bigfile<br /><br />although Dave actually had something rather fancier, I think.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
