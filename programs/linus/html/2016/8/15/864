    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/9/440">First message in thread</a></li><li><a href="/lkml/2016/8/15/784">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/15/801">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/15/830">Dave Chinner</a></li><li><a href="/lkml/2016/8/16/507">Mel Gorman</a><ul><li><a href="/lkml/2016/8/16/611">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/17/360">Michal Hocko</a></li><li><a href="/lkml/2016/8/17/361">Mel Gorman</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2016/8/15/807">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/15/828">Dave Chinner</a><ul><li><a href="/lkml/2016/8/15/832">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2016/8/15/829">Dave Chinner</a><ul><li class="origin"><a href="/lkml/2016/8/16/838">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/16/838">Dave Chinner</a><ul><li><a href="/lkml/2016/8/16/876">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Aug 2016 18:51:42 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [LKP] [lkp] [xfs] 68a9f5e700: aim7.jobs-per-min -13.6% regression</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 15, 2016 at 5:19 PM, Dave Chinner &lt;david&#64;fromorbit.com&gt; wrote:<br />&gt;<br />&gt;&gt; None of this code is all that new, which is annoying. This must have<br />&gt;&gt; gone on forever,<br />&gt;<br />&gt; Yes, it has been. Just worse than I've notice before, probably<br />&gt; because of all the stuff put under the tree lock in the past couple<br />&gt; of years.<br /><br />So this is where a good profile can matter.<br /><br />Particularly if it's all about kswapd, and all the contention is just<br />from __remove_mapping(), what should matter is the "all the stuff"<br />added *there* and absolutely nowhere else.<br /><br />Sadly (well, not for me), in my profiles I have<br /><br /> --3.37%--kswapd<br />   |<br />    --3.36%--shrink_node<br />      |<br />      |--2.88%--shrink_node_memcg<br />      |  |<br />      |   --2.87%--shrink_inactive_list<br />      |     |<br />      |     |--2.55%--shrink_page_list<br />      |     |  |<br />      |     |  |--0.84%--__remove_mapping<br />      |     |  |  |<br />      |     |  |  |--0.37%--__delete_from_page_cache<br />      |     |  |  |  |<br />      |     |  |  |   --0.21%--radix_tree_replace_clear_tags<br />      |     |  |  |     |<br />      |     |  |  |      --0.12%--__radix_tree_lookup<br />      |     |  |  |<br />      |     |  |   --0.23%--_raw_spin_lock_irqsave<br />      |     |  |     |<br />      |     |  |      --0.11%--queued_spin_lock_slowpath<br />      |     |  |<br />   ................<br /><br /><br />which is rather different from your 22% spin-lock overhead.<br /><br />Anyway, including the direct reclaim call paths gets<br />__remove_mapping() a bit higher, and _raw_spin_lock_irqsave climbs to<br />0.26%. But perhaps more importlantly, looking at what __remove_mapping<br />actually *does* (apart from the spinlock) gives us:<br /><br /> - inside remove_mapping itself (0.11% on its own - flat cost, no<br />child accounting)<br /><br />    48.50 │       lock   cmpxchg %edx,0x1c(%rbx)<br /><br />    so that's about 0.05%<br /><br /> - 0.40% __delete_from_page_cache (0.22%<br />radix_tree_replace_clear_tags, 0.13%__radix_tree_lookup)<br /><br /> - 0.06% workingset_eviction()<br /><br />so I'm not actually seeing anything *new* expensive in there. The<br />__delete_from_page_cache() overhead may have changed a bit with the<br />tagged tree changes, but this doesn't look like memcg.<br /><br />But we clearly have very different situations.<br /><br />What does your profile show for when you actually dig into<br />__remove_mapping() itself?, Looking at your flat profile, I'm assuming<br />you get<br /><br />   1.31%  [kernel]  [k] __radix_tree_lookup<br />   1.22%  [kernel]  [k] radix_tree_tag_set<br />   1.14%  [kernel]  [k] __remove_mapping<br /><br />which is higher (but part of why my percentages are lower is that I<br />have that "50% CPU used for encryption" on my machine).<br /><br />But I'm not seeing anything I'd attribute to "all the stuff added".<br />For example, originally I would have blamed memcg, but that's not<br />actually in this path at all.<br /><br />I come back to wondering whether maybe you're hitting some PV-lock problem.<br /><br />I know queued_spin_lock_slowpath() is ok. I'm not entirely sure<br />__pv_queued_spin_lock_slowpath() is.<br /><br />So I'd love to see you try the non-PV case, but I also think it might<br />be interesting to see what the instruction profile for<br />__pv_queued_spin_lock_slowpath() itself is. They share a lot of code<br />(there's some interesting #include games going on to make<br />queued_spin_lock_slowpath() actually *be*<br />__pv_queued_spin_lock_slowpath() with some magic hooks), but there<br />might be issues.<br /><br />For example, if you run a virtual 16-core system on a physical machine<br />that then doesn't consistently give 16 cores to the virtual machine,<br />you'll get no end of hiccups.<br /><br />Because as mentioned, we've had bugs ("performance anomalies") there before.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
