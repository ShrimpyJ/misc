    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/17/407">First message in thread</a></li><li><a href="/lkml/2016/8/17/584">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/18/445">Denys Vlasenko</a><ul><li class="origin"><a href="/lkml/2016/8/18/799">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/18/799">Denys Vlasenko</a></li><li><a href="/lkml/2016/8/18/831">Denys Vlasenko</a></li><li><a href="/lkml/2016/8/19/319">Paolo Bonzini</a><ul><li><a href="/lkml/2016/8/31/317">Denys Vlasenko</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 18 Aug 2016 10:24:07 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: RFC: Petition Intel/AMD to add POPF_IF insn</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 18, 2016 at 6:26 AM, Denys Vlasenko &lt;dvlasenk&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; I didn't do CPL0 tests yet. Realized that cli/sti can be tested in userspace<br />&gt; if we set iopl(3) first.<br /><br />Yes, but it might not be the same. So the timings could be very<br />different from a cpl0 case.<br /><br />Also:<br /><br />&gt; Surprisingly, STI is slower than CLI. A loop with 27 CLI's and one STI<br />&gt; converges to about ~0.5 insn/cycle:<br /><br />You really really should not check "sti" together with immediately<br />following sti or cli.<br /><br />The sti instruction has an architecturally defined magical<br />one-instruction window following it when interrupts stay disabled. I<br />could easily see that resulting in strange special cases - Intel<br />actually at some point documented that a sequence of 'sti'<br />instructions are not going to disable interrupts forever (there was a<br />question of what happens if you start out with interrupts disabled, go<br />to a 16-bit code segment that is all filled with "sti" instructions so<br />that the 16-bit EIP will wrap around and continually do an infinite<br />series of 'sti' - do interrupts ever get enabled?)<br /><br />I think intel clarified that when you have a sequence of 'sti'<br />instructions, interrupts will get enabled after the second one, but<br />the point is that this is all "special" from a front-end angle. So<br />putting multiple 'sti' instructions in a bunch may be testing the<br />magical special case more than it would test anything *real*.<br /><br />So at a minimum, make the sequence be "sti; nop" if you do it in a<br />loop. It may not change anything, but at least that way you'll know it<br />doesn't just test the magical case.<br /><br />Realistically, it's better to instead test a *real* instruction<br />sequence, ie just compare something like<br /><br />    pushf<br />    cli<br />    .. do a memory operation here or something half-way real ..<br />    pop<br />    sti<br /><br />and<br /><br />    pushf<br />    cli<br />    .. do the same half-way real memory op here ..<br />    popf<br /><br />and see which one is faster in a loop.<br /><br />That said, your numbers really aren't very convincing. If popf really<br />is just 10 cycles on modern Intel hardware, it's already fast enough<br />that I really don't think it matters. Especially with "sti" being ~4<br />cycles, and there being a question about branch overhead anyway. You<br />win some, you lose some, but on the whole it sounds like "leave it<br />alone" wins.<br /><br />Now, I know for a fact that there have been other x86 uarchitectres<br />that sucked at "popf", but they may suck almost equally at "sti". So<br />this might well be worth testing out on something that isn't Skylake.<br /><br />Modern intel cores really are pretty good at even the slow operations.<br />Things used to be much much worse in the bad old P4 days. I'm very<br />impressed with the big intel cores.<br /><br />                    Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
