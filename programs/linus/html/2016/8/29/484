    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2016/8/22/184">First message in thread</a></li><li><a href="/lkml/2016/8/25/116">Olaf Hering</a><ul><li><a href="/lkml/2016/8/29/381">Olaf Hering</a><ul><li><a href="/lkml/2016/8/29/382">Olaf Hering</a></li><li><a href="/lkml/2016/8/29/387">Michal Hocko</a><ul><li><a href="/lkml/2016/8/29/434">Olaf Hering</a></li></ul></li><li class="origin"><a href="/lkml/2016/8/29/503">Linus Torvalds</a><ul><li><a href="/lkml/2016/8/29/503">Jeff Layton</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 29 Aug 2016 10:28:10 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: OOM detection regressions since 4.7</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 29, 2016 at 7:52 AM, Olaf Hering &lt;olaf&#64;aepfle.de&gt; wrote:<br />&gt;<br />&gt; Today I noticed the nfsserver was disabled, probably since months already.<br />&gt; Starting it gives a OOM, not sure if this is new with 4.7+.<br /><br />That's not an oom, that's just an allocation failure.<br /><br />And with order-4, that's actually pretty normal. Nobody should use<br />order-4 (that's 16 contiguous pages, fragmentation can easily make<br />that hard - *much* harder than the small order-2 or order-2 cases that<br />we should largely be able to rely on).<br /><br />In fact, people who do multi-order allocations should always have a<br />fallback, and use __GFP_NOWARN.<br /><br />&gt; [93348.306406] Call Trace:<br />&gt; [93348.306490]  [&lt;ffffffff81198cef&gt;] __alloc_pages_slowpath+0x1af/0xa10<br />&gt; [93348.306501]  [&lt;ffffffff811997a0&gt;] __alloc_pages_nodemask+0x250/0x290<br />&gt; [93348.306511]  [&lt;ffffffff811f1c3d&gt;] cache_grow_begin+0x8d/0x540<br />&gt; [93348.306520]  [&lt;ffffffff811f23d1&gt;] fallback_alloc+0x161/0x200<br />&gt; [93348.306530]  [&lt;ffffffff811f43f2&gt;] __kmalloc+0x1d2/0x570<br />&gt; [93348.306589]  [&lt;ffffffffa08f025a&gt;] nfsd_reply_cache_init+0xaa/0x110 [nfsd]<br /><br />Hmm. That's kmalloc itself falling back after already failing to grow<br />the slab cache earlier (the earlier allocations *were* done with<br />NOWARN afaik).<br /><br />It does look like nfsdstarts out by allocating the hash table with one<br />single fairly big allocation, and has no fallback position.<br /><br />I suspect the code expects to be started at boot time, when this just<br />isn't an issue. The fact that you loaded the nfsd kernel module with<br />memory already fragmented after heavy use is likely why nobody else<br />has seen this.<br /><br />Adding the nfsd people to the cc, because just from a robustness<br />standpoint I suspect it would be better if the code did something like<br /><br /> (a) shrink the hash table if the allocation fails (we've got some<br />examples of that elsewhere)<br /><br />or<br /><br /> (b) fall back on a vmalloc allocation (that's certainly the simpler model)<br /><br />We do have a "kvfree()" helper function for the "free either a kmalloc<br />or vmalloc allocation" but we don't actually have a good helper<br />pattern for the allocation side. People just do it by hand, at least<br />partly because we have so many different ways to allocate things -<br />zeroing, non-zeroing, node-specific or not, atomic or not (atomic<br />cannot fall back to vmalloc, obviously) etc etc.<br /><br />Bruce, Jeff, comments?<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
