    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/9/20/170">First message in thread</a></li><li><a href="/lkml/2015/9/20/170">Andy Lutomirski</a><ul><li><a href="/lkml/2015/9/20/171">Andy Lutomirski</a><ul><li class="origin"><a href="/lkml/2015/9/20/176">Linus Torvalds</a><ul><li><a href="/lkml/2015/9/20/176">Andy Lutomirski</a><ul><li><a href="/lkml/2015/9/21/118">Ingo Molnar</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2015/9/20/172">Andy Lutomirski</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 20 Sep 2015 17:15:48 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2 1/2] x86/msr: Carry on after a non-"safe" MSR access fails without !panic_on_oops</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Sep 20, 2015 at 5:02 PM, Andy Lutomirski &lt;luto&#64;kernel.org&gt; wrote:<br />&gt; This demotes an OOPS and likely panic due to a failed non-"safe" MSR<br />&gt; access to a WARN_ON_ONCE and a return of zero (in the RDMSR case).<br />&gt; We still write a pr_info entry unconditionally for debugging.<br /><br />No, this is wrong.<br /><br />If you really want to do something like this, then just make all MSR<br />reads safe. So the only difference between "safe" and "unsafe" is that<br />the unsafe version just doesn't check the return value, and silently<br />just returns zero for reads (or writes nothing).<br /><br />To quote Obi-Wan: "Use the exception table, Luke".<br /><br />Because decoding instructions is just too ugly. We'll do it for CPU<br />errata where we might have to do it for user space code too (ie the<br />AMD prefetch mess), but for code that _we_ control? Hell no.<br /><br />So NAK on this.<br /><br />                   Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
