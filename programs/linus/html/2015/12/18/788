    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/12/17/792">First message in thread</a></li><li><a href="/lkml/2015/12/18/737">Linus Torvalds</a><ul><li><a href="/lkml/2015/12/18/750">Linus Torvalds</a></li><li><a href="/lkml/2015/12/18/753">Dave Hansen</a><ul><li class="origin"><a href="/lkml/2015/12/18/801">Linus Torvalds</a><ul><li><a href="/lkml/2015/12/18/801">Andy Lutomirski</a><ul><li><a href="/lkml/2015/12/18/816">Linus Torvalds</a></li><li><a href="/lkml/2015/12/21/519">Dave Hansen</a></li></ul></li><li><a href="/lkml/2015/12/29/329">Dave Hansen</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 18 Dec 2015 13:45:06 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Rethinking sigcontext's xfeatures slightly for PKRU's benefit?</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Dec 18, 2015 at 1:12 PM, Dave Hansen<br />&lt;dave.hansen&#64;linux.intel.com&gt; wrote:<br />&gt;<br />&gt; But, if we are picking out an execute-only pkey more dynamically, we've<br />&gt; got to keep the default value for the entire process somewhere.<br /><br />How dynamic do we want to make this, though?<br /><br />I haven't looked at the details, and perhaps more importantly, I don't<br />know what exactly are the requirements you've gotten from the people<br />who are expected to actually use this.<br /><br />I think we might want to hardcode a couple of keys as "kernel<br />reserved". And I'd rather reserve them up-front than have some user<br />program be unhappy later when we want to use them.<br /><br />I guess we want to leave key #0 for "normal page", so my suggesting to<br />use that for the execute-only was probably misguided.<br /><br />But I do think we might want to have that "no read access" as a real<br />fixed key too, because I think the kernel itself would want to use it:<br /><br /> (a) to make sure that it gets the right fault when user space passes<br />in a execute-only address to a system call.<br /><br /> (b) for much more efficient PAGEALLOC_DEBUG for kernel mappings.<br /><br />so I do think that we'd want to reserve two of the 16 keys up front.<br /><br />Would it be ok for the expected users to have those keys simply be<br />fixed? With key 0 being used for all default pages, and key 1 being<br />used for all execute-only pages? And then defaulting PKRU to 4,<br />disallowing access to that key #1?<br /><br />I could imagine that some kernel person would want to use even more<br />keys, but I think two fixed keys are kind of the minimal we'd want to<br />use.<br /><br />           Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
