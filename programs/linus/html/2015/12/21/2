    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/12/20/120">First message in thread</a></li><li><a href="/lkml/2015/12/20/120">Linus Torvalds</a><ul><li><a href="/lkml/2015/12/20/126">Christoph Hellwig</a><ul><li><a href="/lkml/2015/12/20/142">Linus Torvalds</a><ul><li><a href="/lkml/2015/12/20/187">"Artem S. Tashkinov"</a></li><li><a href="/lkml/2015/12/21/145">Dan Aloni</a></li></ul></li><li><a href="/lkml/2015/12/20/143">Kent Overstreet</a><ul><li><a href="/lkml/2015/12/20/188">"Artem S. Tashkinov"</a></li></ul></li><li><a href="/lkml/2015/12/20/185">"Artem S. Tashkinov"</a><ul><li><a href="/lkml/2015/12/20/189">Kent Overstreet</a><ul><li><a href="/lkml/2015/12/20/190">"Artem S. Tashkinov"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2015/12/20/184">"Artem S. Tashkinov"</a></li><li><a href="/lkml/2015/12/20/205">Ming Lei</a><ul><li><a href="/lkml/2015/12/20/208">"Artem S. Tashkinov"</a><ul><li><a href="/lkml/2015/12/20/214">Ming Lei</a><ul><li><a href="/lkml/2015/12/20/216">"Artem S. Tashkinov"</a></li></ul></li><li><a href="/lkml/2015/12/20/218">Kent Overstreet</a><ul><li><a href="/lkml/2015/12/20/229">Ming Lei</a></li></ul></li><li><a href="/lkml/2015/12/20/234">Linus Torvalds</a><ul><li><a href="/lkml/2015/12/20/237">"Artem S. Tashkinov"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2015/12/20/233">Tejun Heo</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2015/12/21/18">Tejun Heo</a><ul><li><a href="/lkml/2015/12/21/26">"Artem S. Tashkinov"</a><ul><li><a href="/lkml/2015/12/21/411">Tejun Heo</a><ul><li><a href="/lkml/2015/12/21/423">Tejun Heo</a></li><li><a href="/lkml/2015/12/21/510">Ming Lei</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 20 Dec 2015 21:10:19 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: IO errors after "block: remove bio_get_nr_vecs()"</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Dec 20, 2015 at 8:26 PM, Tejun Heo &lt;tj&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; I wonder whether ahci is screwing up command / sg table setup in a way<br />&gt; that e.g. if there are too many segments the sg table overflows into<br />&gt; the neighboring one which is now being exposed by upper layer being<br />&gt; fixed to send down larger commands.  Looking into it.<br /><br />That would explain the<br /><br />  Corrupted low memory at c0001000 ...<br /><br />that Artem also saw.<br /><br />Anyway, it would be lovely to have some verification in the ATA<br />routines that the passed-on IO actually h9onors the limits it set.<br />Could you add a WARN_ON_ONCE(check_io_limits())" or similar, and maybe<br />we could catch whatever causes the overflow red-handed?<br /><br />On a totally separate issue:<br /><br />Just looking at some of the merging code, and I have to say that it<br />strikes me as insane. This in particular:<br /><br />  #define __BIO_SEG_BOUNDARY(addr1, addr2, mask) \<br />        (((addr1) | (mask)) == (((addr2) - 1) | (mask)))<br />  #define BIOVEC_SEG_BOUNDARY(q, b1, b2) \<br />        __BIO_SEG_BOUNDARY(bvec_to_phys((b1)), bvec_to_phys((b2)) +<br />(b2)-&gt;bv_len, queue_segment_boundary((q)))<br /><br />seems just *stupid*.<br /><br />Why does it do that "bvec_to_phys((b2)) + (b2)-&gt;bv_len -1" on the<br />second bvec? That's the :"physical address of the last byte of the<br />second bvec".<br /><br />I understand the "round both addresses up by the mask, and we want to<br />make sure that they are in the same segment" part.<br /><br />But since an individual bvec had better be fully inside one segment<br />(since we split at bvec boundaries anyway, so if ). why do all that<br />crap anyway? The end address doesn't matter, you could just use the<br />beginning.<br /><br />So remove the "-1" and remove the "+bv_len".<br /><br />At which it would become just<br /><br />  #define __BIO_SEG_BOUNDARY(addr1, addr2, mask) \<br />        ((addr1) | (mask) == (addr2)|(mask))<br />  #define BIOVEC_SEG_BOUNDARY(q, b1, b2) \<br />        __BIO_SEG_BOUNDARY(bvec_to_phys((b1)), bvec_to_phys((b2)),<br />queue_segment_boundary((q)))<br /><br />which seems simpler and more understandable. "Are the beginning<br />addresses in within the same segment"<br /><br />Or are there ever bv_len == 0 things at the boundary that we want to<br />merge. Because then the "-1+bv_len" case migth make sense.<br /><br />Anyway, that shouldn't change the end result in any way, so that<br />doesn't all *matter*, but it worries me when things look more<br />complicated than I think they should be.<br /><br />Is there something I'm missing?<br /><br />               Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
