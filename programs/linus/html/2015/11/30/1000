    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/11/30/939">First message in thread</a></li><li><a href="/lkml/2015/11/30/943">Linus Torvalds</a><ul><li><a href="/lkml/2015/11/30/973">Rik van Riel</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 30 Nov 2015 19:14:02 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] sched: remove false-positive warning from wake_up_process()</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Nov 30, 2015 at 6:48 PM, Rik van Riel &lt;riel&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; What would the correct behaviour in that case be?<br />&gt;<br />&gt; Does waking up the task while it is being traced, and ptrace<br />&gt; (or gdb) is not expecting a wakeup, break the tracing?<br /><br />It would.<br /><br />We already do the right thing (thanks to that commit 9067ac85d533),<br />namely just ignore the spurious wakeup.<br /><br />Basically, all "normal" wait events have to be in a loop around the<br />event condition because of spurious wakeups like this, and they<br />already are (ie helpers like "wait_event()" etc do the right thing,<br />and in general it's actually fairly hard to do the wrong thing).<br /><br />And special things like TASK_STOPPED now only get woken up by properly<br />serialized things that are supposed to wake them up.<br /><br />So we're ok. It's just that the sanity check WARN_ON() was racily too<br />eager to warn about mis-use. The warning was *meant* to trigger in<br />case somebody depended on the old broken behavior of<br />"wake_up_process() wakes up anything" that the code moved away from.<br />But the warning also triggered for this race condition, that was<br />actually fixed by the commit in question.<br /><br />             Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
