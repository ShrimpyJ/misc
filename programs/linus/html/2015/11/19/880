    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/11/19/754">First message in thread</a></li><li><a href="/lkml/2015/11/19/874">Al Viro</a><ul><li><a href="/lkml/2015/11/19/877">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2015/11/19/881">Linus Torvalds</a><ul><li><a href="/lkml/2015/11/19/881">Al Viro</a></li></ul></li></ul></li><li><a href="/lkml/2015/11/20/198">David Howells</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 19 Nov 2015 19:16:32 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] readlink()-related oddities</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 19, 2015 at 7:09 PM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; So there is *potential* for just making it generic, but that doesn't<br />&gt; mean that it necessarily has to act that way.<br /><br />.. it's not necessarily just readlink() either. I still think it might<br />be a perfectly fine idea to allow non-directories to act as<br />directories in some case (by exposing "readdir" and "lookup").<br /><br />But readdir() really doesn't sound horrible either. how about unix<br />domain sockets (or named pipes) giving their link information when you<br />do readdir() on them?<br /><br />Quite frankly, I think allowing those kinds of unified interfaces is<br />better than the current situation where you have to use a<br />"getpeername()" system call etc. If it's a filesystem object, why not<br />allow filesystem operations to work on it?<br /><br />We expose some things in /proc as symlinks things that actually would<br />work better as non-symlinks, exactly *because* we want to expose not<br />just the end result of what they point to, but also a *description* of<br />what they point to. So we have those odd "pseudo-symlinks" in /proc<br />that don't actually really do a pathname walk on the symlink content<br />they expose, but still *look* like symlinks just because readdir() is<br />such a useful thing to have.<br /><br />No wonder other users have wanted to use it.<br /><br />                    Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
