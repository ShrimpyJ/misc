    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/11/24/724">First message in thread</a></li><li><a href="/lkml/2015/11/26/354">Andy Lutomirski</a><ul><li><a href="/lkml/2015/11/27/66">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2015/11/27/380">Linus Torvalds</a><ul><li><a href="/lkml/2015/11/27/380">Linus Torvalds</a></li><li><a href="/lkml/2015/11/27/407">Kees Cook</a><ul><li><a href="/lkml/2015/11/27/410">Andy Lutomirski</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 27 Nov 2015 10:00:36 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [kernel-hardening] [PATCH 0/2] introduce post-init read-only memory</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 26, 2015 at 11:59 PM, Ingo Molnar &lt;mingo&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; * Andy Lutomirski &lt;luto&#64;amacapital.net&gt; wrote:<br />&gt;<br />&gt;&gt; &gt; Can you see any fragility in such a technique?<br />&gt;&gt;<br />&gt;&gt; After Linus shot down my rdmsr/rwmsr decoding patch, good luck...<br />&gt;<br />&gt; I think that case was entirely different, but I've Cc:-ed Linus to shoot my idea<br />&gt; down if it's crap.<br /><br />Yeah, no, I hate it. I'm with the PaX team on this one - I think there<br />are three valid responses, and I think we might want to have a dynamic<br />config option (kernel command line or proc or whatever) to pick<br />between the two:<br /><br /> - just oops and kill the machine, like for any other unhandled kernel<br />page fault. This is probably what you should have on a server<br /><br /> - print a warning and a backtrace, and just mark the page read-write<br />so that the machine survives, but we get notified and can fix whatever<br />broken code<br /><br /> - have an option to disable the RO data logic.<br /><br />I think that second option is good for debugging. In some places,<br />oopses that kill things are just too hard to debug (ie it might be the<br />modesetting or early boot or whatever).<br /><br />In fact, I think we should _start_ with the second option - perhaps<br />just during the rc's - and then when we're pretty sure all the silly<br />bugs it finds (maybe none, who knows) are handled, we should go to the<br />first one.<br /><br />The third option would be purely for "user that cannot fix things<br />directly and has reported the problem can now turn off the distracting<br />warning". We should never default to it.<br /><br />Trying to actually *recover* any other way thanm by turning the area<br />read-write is just too damn fragile. You can't just skip over the<br />instruction that does the write - there are flags values etc that get<br />updated by read-modify-write instructions, but as PaX says, there nmay<br />also be subsequent logic that gets confused and actually introduces<br />even *more* problems downstream if the write is just discarded.<br /><br />So maybe we could have some kind of "mark it read-only again later"<br />thing that tries to make sure it doesn't stay writable for a long<br />time, but quite frankly, I don't think it's worth it. Once the write<br />has been done, and the warning has been emitted, there's likely very<br />little upside to then trying to close the barn doors after that horse<br />has bolted.<br /><br />                 Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
