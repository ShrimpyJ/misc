    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/8/14/55">First message in thread</a></li><li><a href="/lkml/2015/8/14/549">Andy Lutomirski</a><ul><li><a href="/lkml/2015/8/14/554">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2015/8/14/570">Linus Torvalds</a><ul><li><a href="/lkml/2015/8/14/570">Andy Lutomirski</a><ul><li><a href="/lkml/2015/8/14/579">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2015/8/14/568">Andy Lutomirski</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 14 Aug 2015 12:06:24 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] x86 fixes</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Aug 14, 2015 at 11:57 AM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; That code seems fine to me (and explicitly errors out when it's not in<br />&gt; the LDT). FPU_CS is actually the CS selector value.<br />&gt;<br />&gt; So testing that for being in the LDT by checking bit #2, and then<br />&gt; using FPU_get_ldt_descriptor() on it actually seems *correct*.<br />&gt;<br />&gt; It's the actual instruction data segment handling that looks entirely<br />&gt; broken, and was explicitly made *more* broken by that commit.<br /><br />Note that in practice, it's *probably* true that if CS ends up being<br />in the LDT (so we're running something odd like Wine), then *probably*<br />the data segments are going to be in the LDT too. So the old code that<br />unconditionally looked things up in the LDT probably worked in<br />practice, even if it was wrong.<br /><br />The new code cannot *possibly* work at all, because even if the data<br />segment register is in the LDT, it uses the wrong thing to look up the<br />LDT entry, so it will get the wrong base.<br /><br />But as mentioned, it will only *matter* on something like a 486SX, and<br />only when the whole "CS/DS didn't match the default flat segments"<br />case triggers, so not only do you have to run on a 486SX, you will<br />have to run something like Wine on it. So it sounds very very unlikely<br />that this bug matters in practice.<br /><br />                      Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
