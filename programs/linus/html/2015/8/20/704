    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/8/20/189">First message in thread</a></li><li><a href="/lkml/2015/8/20/189">yalin wang</a><ul><li><a href="/lkml/2015/8/20/257">Frans Klaver</a><ul><li><a href="/lkml/2015/8/20/296">yalin wang</a></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 20 Aug 2015 17:05:47 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] fs/kcore: change copy_to_user to copy_in_user</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 20, 2015 at 1:59 AM, yalin wang &lt;yalin.wang2010&#64;gmail.com&gt; wrote:<br />&gt; -<br />&gt; -                               n = copy_to_user(buffer, (char *)start, tsz);<br />&gt; +                               if ((start + tsz &lt; tsz) ||<br />&gt; +                                               (start + tsz) &gt; TASK_SIZE)<br />&gt; +                                       return -EFAULT;<br /><br />This is wrong. You apparently want to have<br /><br />        if (!access_ok(start, tsz))<br />                return -EFAULT;<br /><br />&gt; +                               set_fs(KERNEL_DS);<br />&gt; +                               n = copy_in_user(buffer, (char *)start, tsz);<br />&gt; +                               set_fs(USER_DS);<br /><br />.. and this is actually worse and even less portable than what we have<br />now, in that it's actively wrong on platforms that may have a user<br />address and a kernel address with the same value (ie they have<br />explicitly separate kernel/user address spaces).<br /><br />Now, that's admittedly unusual, but I think sparc32 actually can do that.<br /><br />Anyway, I absolutely detest this patch. It replaces one piece of code<br />that admittedly doesn't work on all architectures because kernel<br />memory is accessed without testing, with another hack that happens to<br />work on other architectures and is fragile and prone to be a security<br />issue.<br /><br />In other words, I think the end result is _worse_ than the current situation.<br /><br />You probably want to use "probe_kernel_read()" and do it into a<br />temporary buffer, and then just do the copy_to_user() from the<br />temporary buffer. Sure, it's less efficient, but at least it's not<br />actively wrong and a possible security problem in the long run.<br /><br />                    Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
