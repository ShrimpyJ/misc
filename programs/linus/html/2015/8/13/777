    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/8/11/800">First message in thread</a></li><li><a href="/lkml/2015/8/13/742">Raymond Jennings</a><ul><li><a href="/lkml/2015/8/13/744">Stas Sergeev</a></li><li><a href="/lkml/2015/8/13/767">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2015/8/13/784">Linus Torvalds</a><ul><li><a href="/lkml/2015/8/13/784">Raymond Jennings</a></li><li><a href="/lkml/2015/8/13/786">Stas Sergeev</a><ul><li><a href="/lkml/2015/8/13/796">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 13 Aug 2015 16:18:17 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [regression] x86/signal/64: Fix SS handling for signals delivered to 64-bit programs breaks dosemu</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 13, 2015 at 4:05 PM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; The _only_ thing that matters is that something broke.<br /><br />To clarify: things like test programs etc don't matter. Real<br />applications, used by real users. That's what regressions cover. If<br />you have a workflow that isn't just some random kernel test thing, and<br />you depend on it, and we break it, the kernel is supposed to fix it.<br /><br />There are some (very few) exceptions.<br /><br />If it's a security issue, we may not be able to "fix" it, because<br />other concerns can obviously take precedence.<br /><br />Also, sometimes the reports come in way too late - if you were running<br />some stable distro kernel for several years, and updated, and notice a<br />change that happened four years ago and modern applications now rely<br />on the _new_ behavior, we may not be able to fix the regression any<br />more.<br /><br />But no, "it was an unintentional kernel bug and clearly just stupid<br />crap code, and we fixed it and now the kernel is much better and<br />cleaner" is not a valid reason for regressions. We'll go back to the<br />stupid and crap code if necessary, however much that may annoy us.<br /><br />For an example of the kind of things we may have to do, see commits<br /><br />    64f371bc3107 autofs: make the autofsv5 packet file descriptor use<br />a packetized pipe<br />    9883035ae7ed pipes: add a "packetized pipe" mode for writing<br /><br />and just wonder at the insanity. That's the kinds of things that<br />happen when one application had actively worked around a bug in<br />compatibility handling, and then trying to "fix" that bug just caused<br />another application to break instead.<br /><br />                       Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
