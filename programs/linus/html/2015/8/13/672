    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/8/11/800">First message in thread</a></li><li><a href="/lkml/2015/8/13/612">Andy Lutomirski</a><ul><li><a href="/lkml/2015/8/13/622">Stas Sergeev</a><ul><li class="origin"><a href="/lkml/2015/8/13/682">Linus Torvalds</a><ul><li><a href="/lkml/2015/8/13/682">Stas Sergeev</a><ul><li><a href="/lkml/2015/8/13/685">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 13 Aug 2015 12:37:57 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [regression] x86/signal/64: Fix SS handling for signals delivered to 64-bit programs breaks dosemu</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 13, 2015 at 12:13 PM, Stas Sergeev &lt;stsp&#64;list.ru&gt; wrote:<br />&gt;<br />&gt; As for the compilation failure - I am surprised you even care.<br />&gt; I thought the "we don't break userspace" covers only run-time,<br />&gt; not compile-time. Oh well.<br /><br />I definitely care.<br /><br />Compile issues may be slightly lower on my radar, but the basic rule<br />should be that upgrading a kernel shouldn't cause problems.<br /><br />The only exception is for stuff that gets very intimate with the<br />kernel itself - ie things like external modules etc. Those we don't<br />really try to cater to, or care about.<br /><br />Things that actually include internal kernel headers tend to have just<br />themselves to blame and historically we really didn't care very much<br />(long long ago we had issues with ext3fs-tools etc until those kinds<br />of things just ended up making their own copies).<br /><br />But the point of the uabi headers was that even _that_ is supposed to<br />actually work, at least for the limited case of those headers.. So if<br />a uabi header change causes problems, we really *should* care, because<br />otherwise, what was the point of that whole uabi rework, really?<br /><br />(And no, we've not always succeeded in that "shouldn't cause problems"<br />space.  So I'm not claiming we have a perfect track record, but I do<br />claim that I at least care very deeply)<br /><br />                   Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
