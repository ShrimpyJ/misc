    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/7/23/820">First message in thread</a></li><li><a href="/lkml/2015/7/25/4">Borislav Petkov</a><ul><li><a href="/lkml/2015/7/25/7">Andy Lutomirski</a><ul><li><a href="/lkml/2015/7/25/75">Borislav Petkov</a></li><li class="origin"><a href="/lkml/2015/7/25/137">Linus Torvalds</a><ul><li><a href="/lkml/2015/7/25/137">Andy Lutomirski</a><ul><li><a href="/lkml/2015/7/25/138">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 25 Jul 2015 10:56:00 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/3] x86/entry/64: Refactor IRQ stacks and make then NMI-safe</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Jul 24, 2015 at 9:59 PM, Andy Lutomirski &lt;luto&#64;amacapital.net&gt; wrote:<br />&gt;<br />&gt; And people will give me five new heads if I ignore Linus and do RET<br />&gt; even with IF=1, saving 300 cycles?<br /><br />So I'm still nervous about that "sti; ret" when we're back on the<br />original kernel stack that took the original fault or interrupt.  But<br />it's probably ok.<br /><br />Yes, it's irq-safe. But it's not NMI-safe, so if an NMI happens there,<br />when the NMI returns, an interrupt might occur there too. But since<br />we're back on the original stack where the original fault happened,<br />and since interrupts were enabled, I don't see why that would be<br />horrible. In theory, we might have a growing stack if this keeps<br />happening, but since the only way to get that is to get the NMI in<br />that one-instruction window (and apparently on at least _some_<br />microarchitectures the sti shadow stops even NMI's), I don't see how<br />any kind of unbounded growth would happen.<br /><br />So.<br /><br />I think it would work, and it might even be good for "coverage" (ie<br />the whole "iret-to-ret-conversion" will not have a lot of testing if<br />it only happens for faults with interrupts disabled).<br /><br />But it still worries me a bit.<br /><br />                  Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
