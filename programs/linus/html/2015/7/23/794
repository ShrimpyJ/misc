    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/7/23/722">First message in thread</a></li><li><a href="/lkml/2015/7/23/776">Linus Torvalds</a><ul><li><a href="/lkml/2015/7/23/782">Andy Lutomirski</a><ul><li class="origin"><a href="/lkml/2015/7/23/805">Linus Torvalds</a><ul><li><a href="/lkml/2015/7/23/805">Andy Lutomirski</a><ul><li><a href="/lkml/2015/7/23/806">Linus Torvalds</a></li><li><a href="/lkml/2015/7/24/210">Peter Zijlstra</a></li></ul></li><li><a href="/lkml/2015/7/24/245">Peter Zijlstra</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 23 Jul 2015 14:54:54 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Dealing with the NMI mess</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Jul 23, 2015 at 2:45 PM, Andy Lutomirski &lt;luto&#64;amacapital.net&gt; wrote:<br />&gt;<br />&gt; Or we just re-enable them on the way out of NMI (i.e. the very last<br />&gt; thing we do in the NMI handler).  I don't want to break regular<br />&gt; userspace gdb when perf is running.<br /><br />I'd really prefer it if we don't touch NMI code in those kinds of<br />ways. The NMI code is fragile as hell. All the problems we have with<br />it is exactly due to "where is the boundary" issues.<br /><br />That's why I *don't* want NMI code to do magic crap. Anything that<br />says "disable this during this magic window" is broken. The problems<br />we've had are exactly about atomicity of the entry/exit conditions,<br />and there is no really good way to get them right.<br /><br />I'd be much happier with a _TIF_USER_WORK_MASK approach exactly<br />because it's so *obvious* that it's not a boundary condition.<br /><br />I dislike the "disable and re-enable dr7 in the NMI handler" exactly<br />because it smells like "we can only handle faults in _this_ region".<br />It may be true, but it's also what I want us to get away from. I'd<br />much rather have the "big picture" be that we can take faults anywhere<br />at all (*), and that none of the core code really cares. Then we "fix<br />up" user space.<br /><br />                   Linus<br /><br />(*) And yes, sysenter and not having a stack at all is very special,<br />and I think we will *always* have to have that magical special case of<br />the first few instructions there. But that's a separate hardware<br />limitation we can't get around.<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
