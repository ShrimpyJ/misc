    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/6/22/218">First message in thread</a></li><li><a href="/lkml/2015/7/2/176">Peter Zijlstra</a><ul><li><a href="/lkml/2015/7/20/19">Daniel Wagner</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 20 Jul 2015 11:44:04 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC][PATCH 00/13] percpu rwsem -v2</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Jul 19, 2015 at 10:53 PM, Daniel Wagner &lt;wagi&#64;monom.org&gt; wrote:<br />&gt;<br />&gt; Turning them back into arch_spinlock_t gives almost the same numbers as<br />&gt; with spinlock_t.<br />&gt;<br />&gt; Then Peter suggested to change the code to<br />&gt;<br />&gt;         preempt_disable();<br />&gt;         spin_unlock();<br />&gt;         preempt_enable_no_resched();<br />&gt;<br />&gt; to verify if arch_spin_lock() is buggy and does not disable preemption<br />&gt; and we see a lock holder preemption on non virt setups.<br /><br />Hmm. "arch_spin_lock()" isn't _supposed_ to disable preemption. The<br />caller should do that (possibly by disabling interrupts). See<br />include/linux/spinlock_api_smp.h for details.<br /><br />But yes, that's a *very* subtle difference between "arch_spin_lock()"<br />and "spin_lock()". The former doesn't do lockdep or other debugging<br />and it doesn't disable preemption. So they are not interchangeable.<br /><br />The current lglocks uses arch_spin_lock exactly because it does not<br />*want* lockdep tracking (it does its own) and because it does its own<br />preemption handling.<br /><br />So saying "verify if arch_spin_lock() is buggy and does not disable<br />preemption" is complete BS. If arch_spin_lock() were to disable<br />preemption, _that_ would be a bug.<br /><br />                Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
