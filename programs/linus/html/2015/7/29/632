    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/7/29/27">First message in thread</a></li><li><a href="/lkml/2015/7/29/621">Linus Torvalds</a><ul><li><a href="/lkml/2015/7/29/627">Brian Gerst</a><ul><li class="origin"><a href="/lkml/2015/7/29/635">Linus Torvalds</a><ul><li><a href="/lkml/2015/7/29/635">Andy Lutomirski</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Jul 2015 10:47:17 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 4/8] x86/vm86: Use the normal pt_regs area for vm86</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 29, 2015 at 10:36 AM, Brian Gerst &lt;brgerst&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; I think I remember now what the issue was.  Since entering vm86 mode<br />&gt; uses force_iret(), the work_pending code path was being taken.  I had<br />&gt; to move the call to save_v86_state out of here to handle_signal(),<br />&gt; otherwise it would just restore the 32-bit regs and exit the syscall<br />&gt; without ever entering vm86 mode.  But that meant that the test for<br />&gt; kernel CS was seeing the vm86 regs instead of 32-bit regs, and was<br />&gt; failing because it didn't account for the VM bit (if the real-mode CS<br />&gt; looked like RPL 0).  A fault would get stuck in a loop because it<br />&gt; couldn't exit to the signal handling code.<br /><br />Hmm. I think we'd want a big comment about that code then, and how it<br />is only used for user-space (including vm86 mode).<br /><br />                Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
