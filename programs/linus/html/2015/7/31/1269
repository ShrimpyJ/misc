    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/7/31/708">First message in thread</a></li><li><a href="/lkml/2015/7/31/760">Hugh Dickins</a><ul><li><a href="/lkml/2015/7/31/1007">Dominique Martinet</a><ul><li class="origin"><a href="/lkml/2015/7/31/1343">Linus Torvalds</a><ul><li><a href="/lkml/2015/7/31/1343">Hugh Dickins</a><ul><li><a href="/lkml/2015/8/1/12">Dominique Martinet</a></li></ul></li><li><a href="/lkml/2015/8/1/26">Al Viro</a><ul><li><a href="/lkml/2015/8/1/38">Dominique Martinet</a></li><li><a href="/lkml/2015/8/1/84">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2015/7/31/1338">Hugh Dickins</a></li></ul></li><li><a href="/lkml/2015/8/1/1">Hugh Dickins</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 31 Jul 2015 15:52:38 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: v4.2-rc dcache regression, probably 75a6f82a0d10</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Jul 31, 2015 at 1:50 PM, Dominique Martinet<br />&lt;asmadeus&#64;codewreck.org&gt; wrote:<br />&gt;<br />&gt; It's probably an old race that was very hard to hit because of cache<br />&gt; coherency.<br />&gt; Basically, before the wmb/rmb, the dentry was always updated closely to<br />&gt; its flags, so the other CPU would "usually" get both updates at the same<br />&gt; time; the barriers make it so the updates are split and it's possible to<br />&gt; get it, and would explain why I could pick 4bf46a2726 as "the one"<br /><br />I doubt that's it. wmb/rmb is actually a no-op on x86, and only<br />affects instruction scheduling. So yes, timing could be affected, but<br />it's such a _tiny_ effect that I don't really believe it's an issue.<br /><br />I'd be more suspicious about other effects. For example, iot's not at<br />all obvious that the commit in question just changes the order of the<br />flags/inode field accesses, there are potentialy bigger changes there.<br />For example, this part (in __d_obtain_alias):<br /><br />-       tmp-&gt;d_inode = inode;<br />-       tmp-&gt;d_flags |= add_flags;<br />+       __d_set_inode_and_type(tmp, inode, add_flags);<br /><br />looks a bit off, because it *used* to just add those flags, but now,<br />through __d_set_inode_and_type, it does<br /><br />+       dentry-&gt;d_inode = inode;<br />+       smp_wmb();<br />+       flags = READ_ONCE(dentry-&gt;d_flags);<br />+       flags &amp;= ~(DCACHE_ENTRY_TYPE | DCACHE_FALLTHRU);<br />+       flags |= type_flags;<br />+       WRITE_ONCE(dentry-&gt;d_flags, flags);<br /><br />so it clears DCACHE_ENTRY_TYPE | DCACHE_FALLTHRU.<br /><br />Is that correct? Maybe, I haven't checked. And maybe it's a big bad<br />bug. Regardless, it sure as hell isn't just changing the order of the<br />access to those fields. That "DCACHE_ENTRY_TYPE | DCACHE_FALLTHRU"<br />clearing came from __d_instantiate(), but now it hits __d_obtain_alias<br />too.<br /><br />There may be other changes like that for all I know. I didn't look<br />more closely.  But I'd blame changes like that rather than any timing<br />by rmb/wmb.<br /><br />(Side note: the instruction scheduling changes can be big - especially<br />together with the changes to use READ_ONCE/WRITE_ONCE, it basically<br />means that gcc won't be using r-m-w instructions etc to set flags, so<br />I'm not saying rmb/wmb is necessarily a no-op in general, but it's<br />definitely generally not a hugely noticeable thing).<br /><br />Added DavidH to the cc list, since it's his commit. But Dominique, it<br />would probably be a good idea for you to try to double-check that that<br />commit really is what matters for you and causes problems.<br /><br />                 Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
