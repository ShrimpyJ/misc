    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/7/3/461">First message in thread</a></li><li><a href="/lkml/2015/7/7/269">tip-bot for Andy Lutomirski</a><ul><li><a href="/lkml/2015/7/14/812">Frederic Weisbecker</a><ul><li class="origin"><a href="/lkml/2015/7/15/813">Linus Torvalds</a><ul><li><a href="/lkml/2015/7/15/813">Andy Lutomirski</a><ul><li><a href="/lkml/2015/7/15/832">Andy Lutomirski</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 15 Jul 2015 12:56:35 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [tip:x86/asm] x86/entry: Add new, comprehensible entry and exit handlers written in C</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 14, 2015 at 4:07 PM, Frederic Weisbecker &lt;fweisbec&#64;gmail.com&gt; wrote:<br />&gt; On Tue, Jul 07, 2015 at 03:51:48AM -0700, tip-bot for Andy Lutomirski wrote:<br />&gt;&gt; +     while (true) {<br />&gt;&gt; +             u32 cached_flags =<br />&gt;&gt; +                     READ_ONCE(pt_regs_to_thread_info(regs)-&gt;flags);<br />&gt;&gt; +<br />&gt;&gt; +             if (!(cached_flags &amp; (_TIF_SIGPENDING | _TIF_NOTIFY_RESUME |<br />&gt;&gt; +                                   _TIF_UPROBE | _TIF_NEED_RESCHED)))<br />&gt;&gt; +                     break;<br />&gt;&gt; +<br />&gt;&gt; +             /* We have work to do. */<br />&gt;&gt; +             local_irq_enable();<br />&gt;&gt; +<br />&gt;&gt; +             if (cached_flags &amp; _TIF_NEED_RESCHED)<br />&gt;&gt; +                     schedule();<br />&gt;&gt; +<br />&gt;&gt; +             if (cached_flags &amp; _TIF_UPROBE)<br />&gt;&gt; +                     uprobe_notify_resume(regs);<br />&gt;&gt; +<br />&gt;&gt; +             /* deal with pending signal delivery */<br />&gt;&gt; +             if (cached_flags &amp; _TIF_SIGPENDING)<br />&gt;&gt; +                     do_signal(regs);<br />&gt;&gt; +<br />&gt;&gt; +             if (cached_flags &amp; _TIF_NOTIFY_RESUME) {<br />&gt;&gt; +                     clear_thread_flag(TIF_NOTIFY_RESUME);<br />&gt;&gt; +                     tracehook_notify_resume(regs);<br />&gt;&gt; +             }<br />&gt;&gt; +<br />&gt;&gt; +             if (cached_flags &amp; _TIF_USER_RETURN_NOTIFY)<br />&gt;&gt; +                     fire_user_return_notifiers();<br />&gt;&gt; +<br />&gt;&gt; +             /* Disable IRQs and retry */<br />&gt;&gt; +             local_irq_disable();<br />&gt;&gt; +     }<br />&gt;<br />&gt; I dreamed so many times about this loop in C!<br /><br />So this made me look at it again, and now I'm worried.<br /><br />There's that "early break", but it doesn't check<br />_TIF_USER_RETURN_NOTIFY. So if *only* USER_RETURN_NOTIFY is set, we're<br />screwed.<br /><br />It migth be that that doesn't happen for some reason, but I'm not<br />seeing what that reason would be.<br /><br />The other thing that worries me is that this depends on all the<br />handler routines to clear the flags (except for<br />tracehook_notify_resume()). Which they hopefully do. But that means<br />that just looking at this locally, it's not at all obvious that it<br />works right.<br /><br />So wouldn't it be much nicer to do:<br /><br />        u32 cached_flags = READ_ONCE(pt_regs_to_thread_info(regs)-&gt;flags);<br /><br />        cached_flags &amp;= _TIF_SIGPENDING | _TIF_NOTIFY_RESUME |<br />_TIF_USER_RETURN_NOTIFY | _TIF_UPROBE | _TIF_NEED_RESCHED;<br /><br />        if (!cached_flags)<br />                break;<br /><br />        atomic_clear_mask(cached_flags, &amp;pt_regs_to_thread_info(regs)-&gt;flags);<br /><br />and then have those bit tests after that?<br /><br />                   Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
