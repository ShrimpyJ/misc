    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/10/28/49">First message in thread</a></li><li><a href="/lkml/2015/10/28/49">David Miller</a><ul><li class="origin"><a href="/lkml/2015/10/28/267">Linus Torvalds</a><ul><li><a href="/lkml/2015/10/28/267">Hannes Frederic Sowa</a><ul><li><a href="/lkml/2015/10/28/547">Rasmus Villemoes</a><ul><li><a href="/lkml/2015/11/9/253">Hannes Frederic Sowa</a></li></ul></li></ul></li><li><a href="/lkml/2015/10/28/358">David Miller</a></li><li><a href="/lkml/2015/11/2/624">Andy Lutomirski</a><ul><li><a href="/lkml/2015/11/2/656">Linus Torvalds</a><ul><li><a href="/lkml/2015/11/2/658">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 28 Oct 2015 18:39:56 +0900</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT] Networking</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Oct 28, 2015 at 3:32 PM, David Miller &lt;davem&#64;davemloft.net&gt; wrote:<br />&gt;<br />&gt; This may look a bit scary this late in the release cycle, but as is typically<br />&gt; the case it's predominantly small driver fixes all over the place.<br /><br />Christ people. This is just sh*t.<br /><br />The conflict I get is due to stupid new gcc header file crap. But what<br />makes me upset is that the crap is for completely bogus reasons.<br /><br />This is the old code in net/ipv6/ip6_output.c:<br /><br />        mtu -= hlen + sizeof(struct frag_hdr);<br /><br />and this is the new "improved" code that uses fancy stuff that wants<br />magical built-in compiler support and has silly wrapper functions for<br />when it doesn't exist:<br /><br />        if (overflow_usub(mtu, hlen + sizeof(struct frag_hdr), &amp;mtu) ||<br />            mtu &lt;= 7)<br />                goto fail_toobig;<br /><br />and anybody who thinks that the above is<br /><br /> (a) legible<br /> (b) efficient (even with the magical compiler support)<br /> (c) particularly safe<br /><br />is just incompetent and out to lunch.<br /><br />The above code is sh*t, and it generates shit code. It looks bad, and<br />there's no reason for it.<br /><br />The code could *easily* have been done with just a single and<br />understandable conditional, and the compiler would actually have<br />generated better code, and the code would look better and more<br />understandable. Why is this not<br /><br />        if (mtu &lt; hlen + sizeof(struct frag_hdr) + 8)<br />                goto fail_toobig;<br />        mtu -= hlen + sizeof(struct frag_hdr);<br /><br />which is the same number of lines, doesn't use crazy helper functions<br />that nobody knows what they do, and is much more obvious what it<br />actually does.<br /><br />I guarantee that the second more obvious version is easier to read and<br />understand. Does anybody really want to dispute this?<br /><br />Really. Give me *one* reason why it was written in that idiotic way<br />with two different conditionals, and a shiny new nonstandard function<br />that wants particular compiler support to generate even half-way sane<br />code, and even then generates worse code? A shiny function that we<br />have never ever needed anywhere else, and that is just<br />compiler-masturbation.<br /><br />And yes, you still could have overflow issues if the whole "hlen +<br />xyz" expression overflows, but quite frankly, the "overflow_usub()"<br />code had that too. So if you worry about that, then you damn well<br />didn't do the right thing to begin with.<br /><br />So I really see no reason for this kind of complete idiotic crap.<br /><br />Tell me why. Because I'm not pulling this kind of completely insane<br />stuff that generates conflicts at rc7 time, and that seems to have<br />absolutely no reason for being anm idiotic unreadable mess.<br /><br />The code seems *designed* to use that new "overflow_usub()" code. It<br />seems to be an excuse to use that function.<br /><br />And it's a f*cking bad excuse for that braindamage.<br /><br />I'm sorry, but we don't add idiotic new interfaces like this for<br />idiotic new code like that.<br /><br />Yes, yes, if this had stayed inside the network layer I would never<br />have noticed. But since I *did* notice, I really don't want to pull<br />this. In fact, I want to make it clear to *everybody* that code like<br />this is completely unacceptable. Anybody who thinks that code like<br />this is "safe" and "secure" because it uses fancy overflow detection<br />functions is so far out to lunch that it's not even funny. All this<br />kind of crap does is to make the code a unreadable mess with code that<br />no sane person will ever really understand what it actually does.<br /><br />Get rid of it. And I don't *ever* want to see that shit again.<br /><br />                Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
