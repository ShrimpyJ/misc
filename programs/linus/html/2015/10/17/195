    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/10/17/120">First message in thread</a></li><li><a href="/lkml/2015/10/17/188">Linus Torvalds</a><ul><li><a href="/lkml/2015/10/17/189">Alexander Holler</a><ul><li><a href="/lkml/2015/10/17/194">Greg Kroah-Hartman</a><ul><li><a href="/lkml/2015/10/17/200">Alexander Holler</a><ul><li><a href="/lkml/2015/10/17/232">Alexander Holler</a></li></ul></li><li><a href="/lkml/2015/10/18/115">Alexander Holler</a><ul><li><a href="/lkml/2015/10/18/120">Greg Kroah-Hartman</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2015/10/17/236">Alexander Holler</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 17 Oct 2015 12:37:19 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 04/14] init: deps: order network interfaces by link order</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Oct 17, 2015 at 12:14 PM, Alexander Holler &lt;holler&#64;ahsoftware.de&gt; wrote:<br />&gt;<br />&gt; It's impossible to take it into account because I don't want to miss the<br />&gt; parallelize functionality. And without that, all the stuff doesn't offer<br />&gt; enough benefits to be worse the effort but just adds some time necessary to<br />&gt; do the sorting. It might solve the deferred probe problems, but without much<br />&gt; benefit.<br /><br />Quite frankly, the alleged advantage of parallelization of the init<br />sequence is *very* questionable.<br /><br />But even if you were to want to parallelize things at that level, you'd still<br /><br /> (a) want to make *that* a flag (to debug) and make it opt-in (so<br />you'd have another "this module can be done in parallel" marker)<br /><br /> (b) end up with all the other drivers *not* being parallel, because<br />they were all written to not have everything happen at once.<br /><br /> (c) want to avoid the whole flag-day things<br /><br />so even then you'd want to sort everything using that topological<br />stable sort, so that you can sanely mix things, and then mark<br />individual drivers as "I'd like to run in parallel with the rest of<br />the init sequence".<br /><br />The main thing that being parallel would change is likely that you'd<br />also have to add some kind of "I'm done" completion for each module<br />(or dependency point), so that things that depend on other things<br />(that have *started*) can explicitly wait for those other things to<br />actually end.<br /><br />We have something like that for our "sync" points right now with the<br />whole asynchronous machinery. It's somewhat general (although I think<br />almost all users end up just doing "async_synchronize_full()", even<br />though we do have a cookie-based one) and I suspect the cookie-based<br />one could be used for individual drivers and their completions.<br /><br />But I really think the whole "do initcalls in parallel" is a very bad<br />idea _regardless_ of anything else. We almost never actually have<br />initcalls that really take a lot of time, and when we do, we already<br />handle the big ones with the async machinery, which is actually a lot<br />more powerful and flexible than some "run initcalls in parallel",<br />exactly because you can run *parts* serially (like basic discovery),<br />and then run other parts asynchronously (like "spin up disk" or "wait<br />for power stable" or whatever - *after* you have discovered the<br />device).<br /><br />So I personally think our async thing is much more powerful and useful<br />than some random "let's run initcalls in parallel".<br /><br />                 Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
