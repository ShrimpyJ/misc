    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/10/17/120">First message in thread</a></li><li><a href="/lkml/2015/10/17/167">Linus Torvalds</a><ul><li><a href="/lkml/2015/10/17/172">Alexander Holler</a><ul><li><a href="/lkml/2015/10/17/179">Linus Torvalds</a><ul><li><a href="/lkml/2015/10/17/183">Alexander Holler</a><ul><li><a href="/lkml/2015/10/17/188">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2015/10/17/180">Greg Kroah-Hartman</a></li><li class="origin"><a href="/lkml/2015/10/17/187">Linus Torvalds</a><ul><li><a href="/lkml/2015/10/17/187">Alexander Holler</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 17 Oct 2015 12:03:43 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 04/14] init: deps: order network interfaces by link order</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Oct 17, 2015 at 11:37 AM, Alexander Holler &lt;holler&#64;ahsoftware.de&gt; wrote:<br />&gt;<br />&gt; Otherwise it's impossible to call initcalls in parallel. I've seen a stable<br />&gt; topological sort somewhere, but whenever you want to parallelize the<br />&gt; initcalls, the stable ordering would be gone anyway. So I've decided not to<br />&gt; look further at a stable topological sort.<br /><br />So five seconds of googling gave me freely usable source code for a<br />stable topological sort, that also has a nice reported added<br />advantage:<br /><br /> "An interesting property of a stable topological sort is that cyclic<br />dependencies are tolerated and resolved according to original order of<br />elements in sequence. This is a desirable feature for many<br />applications because it allows to sort any sequence with any<br />imaginable dependencies between the elements"<br /><br />which seems to be *exactly* what you'd want, especially considering<br />that right now your patches add extra "no-dependency" markers exactly<br />because of the cyclical problem.<br /><br />I think it was the #2 hit on google for "stable topological sort". I<br />didn't look closely at the source code, but it was not big.<br /><br />And no, since we don't actually want to parallelize the initcalls<br />anyway (I had this discussion with you just a month ago), your<br />objections seem even more questionable. We have separate machinery for<br />"do this asynchronously", and we want to _keep_ that separate.<br /><br />                 Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
