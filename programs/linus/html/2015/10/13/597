    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2015/9/17/633">First message in thread</a></li><li><a href="/lkml/2015/10/12/808">Linus Torvalds</a><ul><li><a href="/lkml/2015/10/13/363">Tetsuo Handa</a><ul><li class="origin"><a href="/lkml/2015/10/14/337">Linus Torvalds</a><ul><li><a href="/lkml/2015/10/14/337">Tetsuo Handa</a></li><li><a href="/lkml/2015/10/15/404">Michal Hocko</a><ul><li><a href="/lkml/2015/10/16/619">Michal Hocko</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 13 Oct 2015 09:37:06 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Silent hang up caused by pages being not scanned?</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Oct 13, 2015 at 5:21 AM, Tetsuo Handa<br />&lt;penguin-kernel&#64;i-love.sakura.ne.jp&gt; wrote:<br />&gt;<br />&gt; If I remove<br />&gt;<br />&gt;         /* Any of the zones still reclaimable?  Don't OOM. */<br />&gt;         if (zones_reclaimable)<br />&gt;                 return 1;<br />&gt;<br />&gt; the OOM killer is invoked even when there are so much memory which can be<br />&gt; reclaimed after written to disk. This is definitely premature invocation of<br />&gt; the OOM killer.<br /><br />Right. The rest of the code knows that the return value right now<br />means "there is no memory at all" rather than "I made progress".<br /><br />&gt; Yes. But we can't simply do<br />&gt;<br />&gt;         if (order &lt;= PAGE_ALLOC_COSTLY_ORDER || ..<br />&gt;<br />&gt; because we won't be able to call out_of_memory(), can we?<br /><br />So I think that whole thing is kind of senseless. Not just that<br />particular conditional, but what it *does* too.<br /><br />What can easily happen is that we are a blocking allocation, but<br />because we're __GFP_FS or something, the code doesn't actually start<br />writing anything out. Nor is anything congested. So the thing just<br />loops.<br /><br />And looping is stupid, because we may be not able to actually free<br />anything exactly because of limitations like __GFP_FS.<br /><br />So<br /><br /> (a) the looping condition is senseless<br /><br /> (b) what we do when looping is senseless<br /><br />and we actually do try to wake up kswapd in the loop, but we never<br />*wait* for it, so that's largely pointless too.<br /><br />So *of*course* the direct reclaim code has to set "I made progress",<br />because if it doesn't lie and say so, then the code will randomly not<br />loop, and will oom, and things go to hell.<br /><br />But I hate the "let's tweak the zone_reclaimable" idea, because it<br />doesn't actually fix anything. It just perpetuates this "the code<br />doesn't make sense, so let's add *more* senseless heusristics to this<br />whole loop".<br /><br />So instead of that senseless thing, how about trying something<br />*sensible*. Make the code do something that we can actually explain as<br />making sense.<br /><br />I'd suggest something like:<br /><br /> - add a "retry count"<br /><br /> - if direct reclaim made no progress, or made less progress than the target:<br /><br />      if (order &gt; PAGE_ALLOC_COSTLY_ORDER) goto noretry;<br /><br /> - regardless of whether we made progress or not:<br /><br />      if (retry count &lt; X) goto retry;<br /><br />      if (retry count &lt; 2*X) yield/sleep 10ms/wait-for-kswapd and then<br />goto retry<br /><br />   where 'X" is something sane that limits our CPU use, but also<br />guarantees that we don't end up waiting *too* long (if a single<br />allocation takes more than a big fraction of a second, we should<br />probably stop trying).<br /><br />The whole time-based thing might even be explicit. There's nothing<br />wrong with doing something like<br /><br />    unsigned long timeout = jiffies + HZ/4;<br /><br />at the top of the function, and making the whole retry logic actually<br />say something like<br /><br />    if (time_after(timeout, jiffies)) goto noretry;<br /><br />(or make *that* trigger the oom logic, or whatever).<br /><br />Now, I realize the above suggestions are big changes, and they'll<br />likely break things and we'll still need to tweak things, but dammit,<br />wouldn't that be better than just randomly tweaking the insane<br />zone_reclaimable logic?<br /><br />                    Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
