    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/7/14/1092">First message in thread</a></li><li><a href="/lkml/2021/7/14/1092">"Gustavo A. R. Silva"</a><ul><li><a href="/lkml/2021/7/15/1923">   pr-tracker-bot&#64;kernel ...</a></li><li class="origin"><a href="/lkml/2021/7/15/2075">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/15/2075">"Gustavo A. R. Silva"</a><ul><li><a href="/lkml/2021/7/15/2072">Linus Torvalds</a></li><li><a href="/lkml/2021/7/15/2073">"Gustavo A. R. Silva"</a></li></ul></li><li><a href="/lkml/2021/7/16/694">Nathan Chancellor</a><ul><li><a href="/lkml/2021/7/16/701">"Gustavo A. R. Silva"</a><ul><li><a href="/lkml/2021/7/16/715">Nathan Chancellor</a></li></ul></li><li><a href="/lkml/2021/7/16/720">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 15 Jul 2021 18:04:15 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] fallthrough fixes for Clang for 5.14-rc2</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 14, 2021 at 1:03 PM Gustavo A. R. Silva<br />&lt;gustavoars&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt;   git://git.kernel.org/pub/scm/linux/kernel/git/gustavoars/linux.git tags/Wimplicit-fallthrough-clang-5.14-rc2<br /><br />Grr.<br /><br />I merged this, but when I actually tested it on my clang build, it<br />turns out that the clang "-Wimplicit-fallthrough" flag is unbelievable<br />garbage.<br /><br />I get<br /><br />   warning: fallthrough annotation in unreachable code [-Wimplicit-fallthrough]<br /><br />and the stupid warning doesn't even say WHERE THE PROBLEM HAPPENS.<br /><br />No file name, no line numbers. Just this pointless garbage warning.<br /><br />Honestly, how does a compiler even do something that broken? Am I<br />supposed to use my sixth sense to guide me in finding the warning?<br /><br />I like the concept of the fallthrough warning, but it looks like the<br />clang implementation of it is so unbelievably broken that it's getting<br />disabled again.<br /><br />Yeah, I can<br /><br /> (a) build the kernel without any parallelism<br /><br /> (b) use "&gt;&amp;" to get both output and errors into the same file<br /><br /> (c) see that it says<br /><br />    CC      kernel/sched/core.o<br />  warning: fallthrough annotation in unreachable code [-Wimplicit-fallthrough]<br />  1 warning generated.<br /><br />and now I see at least which _file_ it is that causes that warning.<br /><br />I can then use my incredible powers of deduction (it's almost like a<br />sixth sense, but helped by the fact that there's only one single<br />"fallthrough" statement in that file) to figure out that it's<br />triggered by this code:<br /><br />                case cpuset:<br />                        if (IS_ENABLED(CONFIG_CPUSETS)) {<br />                                cpuset_cpus_allowed_fallback(p);<br />                                state = possible;<br />                                break;<br />                        }<br />                        fallthrough;<br />                case possible:<br /><br />and it all makes it clear that the clang warning is just incredibly<br />broken garbage not only in that lack of filename and line number, but<br />just in general.<br /><br />Yeah, I'm a bit pissed off at this. This clang warning really is<br />WRONG. It's so wrong in so many ways that I don't know what to say.<br /><br />Except "yeah, that broken option is getting reverted again, because<br />the clang people messed up completely".<br /><br />It's sad to see that people wasted time and effort on trying to make<br />clang happy, when it turns out that clang just gets this so _totally_<br />wrong.<br /><br />                     Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
