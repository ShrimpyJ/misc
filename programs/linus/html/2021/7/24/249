    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/7/24/158">First message in thread</a></li><li><a href="/lkml/2021/7/24/178">Jens Axboe</a><ul><li><a href="/lkml/2021/7/24/219">Jens Axboe</a><ul><li><a href="/lkml/2021/7/24/225">Andy Shevchenko</a><ul><li><a href="/lkml/2021/7/24/235">Jens Axboe</a><ul><li><a href="/lkml/2021/7/24/256">Andy Shevchenko</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2021/7/24/252">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/24/252">Andy Shevchenko</a></li></ul></li></ul></li><li><a href="/lkml/2021/7/24/221">Andy Shevchenko</a><ul><li><a href="/lkml/2021/7/24/231">Daniel Scally</a></li><li><a href="/lkml/2021/7/24/237">Jens Axboe</a><ul><li><a href="/lkml/2021/7/24/243">Jens Axboe</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 24 Jul 2021 13:48:14 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 5.14-rc failure to resume</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Jul 24, 2021 at 12:44 PM Jens Axboe &lt;axboe&#64;kernel.dk&gt; wrote:<br />&gt;<br />&gt; This does appear to be the culprit. With it reverted on top of current<br />&gt; master (and with the block and io_uring changes pulled in too), the<br />&gt; kernel survives many resumes without issue.<br /><br />That commit seems fundamentally buggy.<br /><br />It makes "acpi_dev_get_next_match_dev()" always do<br /><br />        acpi_dev_put(adev);<br /><br />to put the previous device, but "adev" is perfectly valid as NULL, and<br />acpi_dev_get_next_match_dev() even tests for it:<br /><br />        struct device *start = adev ? &amp;adev-&gt;dev : NULL;<br /><br />so it can - and will - do<br /><br />        acpi_dev_put(NULL);<br /><br />which does<br /><br />        put_device(&amp;adev-&gt;dev);<br /><br />and passes in an invalid pointer to put_device().<br /><br />And yes, that adev very much can be NULL, with drivers/acpi/utils.c<br />even passing it in explicitly:<br /><br />  struct acpi_device *<br />  acpi_dev_get_first_match_dev(const char *hid, const char *uid, s64 hrv)<br />  {<br />        return acpi_dev_get_next_match_dev(NULL, hid, uid, hrv);<br />  }<br />  EXPORT_SYMBOL(acpi_dev_get_first_match_dev);<br /><br />Am I missing something? How does that code work at all for anybody?<br /><br />I probably _am_ missing something.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
