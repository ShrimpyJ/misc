    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/7/21/524">First message in thread</a></li><li><a href="/lkml/2021/7/21/524">Nikolay Borisov</a><ul><li><a href="/lkml/2021/7/21/563">Christoph Hellwig</a><ul><li><a href="/lkml/2021/7/21/568">Nikolay Borisov</a><ul><li><a href="/lkml/2021/7/21/574">Christoph Hellwig</a><ul><li><a href="/lkml/2021/7/21/578">Matthew Wilcox</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="/lkml/2021/7/21/799">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/21/799">Nikolay Borisov</a><ul><li><a href="/lkml/2021/7/21/846">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/21/849">Linus Torvalds</a></li><li><a href="/lkml/2021/7/21/871">Linus Torvalds</a></li><li><a href="/lkml/2021/7/22/180">Nikolay Borisov</a></li><li><a href="/lkml/2021/7/23/492">David Laight</a></li></ul></li></ul></li><li><a href="/lkml/2021/7/21/914">David Sterba</a><ul><li><a href="/lkml/2021/7/21/945">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/22/46">Nikolay Borisov</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/7/28/1009">Florian Weimer</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 21 Jul 2021 11:00:59 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] lib/string: Bring optimized memcmp from glibc</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 21, 2021 at 6:59 AM Nikolay Borisov &lt;nborisov&#64;suse.com&gt; wrote:<br />&gt;<br />&gt; This is glibc's memcmp version. The upside is that for architectures<br />&gt; which don't have an optimized version the kernel can provide some<br />&gt; solace in the form of a generic, word-sized optimized memcmp. I tested<br />&gt; this with a heavy IOCTL_FIDEDUPERANGE(2) workload and here are the<br />&gt; results I got:<br /><br />Hmm. I suspect the usual kernel use of memcmp() is _very_ skewed to<br />very small memcmp calls, and I don't think I've ever seen that<br />(horribly bad) byte-wise default memcmp in most profiles.<br /><br />I suspect that FIDEDUPERANGE thing is most likely a very special case.<br /><br />So I don't think you're wrong to look at this, but I think you've gone<br />from our old "spend no effort at all" to "look at one special case".<br /><br />And I think the glibc implementation is horrible and doesn't know<br />about machines where unaligned loads are cheap - which is all<br />reasonable ones.<br /><br />That MERGE() macro is disgusting, and memcmp_not_common_alignment()<br />should not exist on any sane architecture. It's literally doing extra<br />work to make for slower accesses, when the hardware does it better<br />natively.<br /><br />So honestly, I'd much rather see a much saner and simpler<br />implementation that works well on the architectures that matter, and<br />that don't want that "align things by hand".<br /><br />Aligning one of the sources by hand is fine and makes sense - so that<br />_if_ the two strings end up being mutually aligned, all subsequent<br />accesses are aligned.<br /><br /> But then trying to do shift-and-masking for the possibly remaining<br />unaligned source is crazy and garbage. Don't do it.<br /><br />And you never saw that, because your special FIDEDUPERANGE testcase<br />will never have anything but mutually aligned cases.<br /><br />Which just shows that going from "don't care at all' to "care about<br />one special case" is not the way to go.<br /><br />So I'd much rather see a simple default function that works well for<br />the sane architectures, than go with the default code from glibc - and<br />bad for the common modern architectures.<br /><br />Then architectures could choose that one with some<br /><br />        select GENERIC_MEMCMP<br /><br />the same way we have<br /><br />        select GENERIC_STRNCPY_FROM_USER<br /><br />for the (sane, for normal architectures) common optimized case for a<br />special string instruction that matters a lot for the kernel.<br /><br />                     Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
