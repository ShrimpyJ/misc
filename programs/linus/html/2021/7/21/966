    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/7/21/922">First message in thread</a></li><li><a href="/lkml/2021/7/21/922">"Paul E. McKenney"</a><ul><li><a href="/lkml/2021/7/21/923">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/924">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/925">"Paul E. McKenney"</a><ul><li><a href="/lkml/2021/8/3/770">Qais Yousef</a><ul><li><a href="/lkml/2021/8/3/859">"Paul E. McKenney"</a><ul><li><a href="/lkml/2021/8/3/887">Qais Yousef</a></li></ul></li></ul></li><li><a href="/lkml/2021/8/6/404">Qais Yousef</a><ul><li><a href="/lkml/2021/8/6/537">"Paul E. McKenney"</a><ul><li><a href="/lkml/2021/8/6/579">Qais Yousef</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/7/21/926">"Paul E. McKenney"</a><ul><li class="origin"><a href="/lkml/2021/7/21/1037">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/21/1037">"Paul E. McKenney"</a></li></ul></li><li><a href="/lkml/2021/7/28/895">"Paul E. McKenney"</a><ul><li><a href="/lkml/2021/7/28/919">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/28/941">Mathieu Desnoyers</a></li><li><a href="/lkml/2021/7/28/960">"Paul E. McKenney"</a></li></ul></li><li><a href="/lkml/2021/7/28/946">Mathieu Desnoyers</a><ul><li><a href="/lkml/2021/7/28/973">"Paul E. McKenney"</a></li></ul></li><li><a href="/lkml/2021/7/28/1020">Josh Triplett</a><ul><li><a href="/lkml/2021/7/28/1036">"Paul E. McKenney"</a></li></ul></li></ul></li><li><a href="/lkml/2021/7/29/150">Boqun Feng</a><ul><li><a href="/lkml/2021/7/29/293">Frederic Weisbecker</a><ul><li><a href="/lkml/2021/7/30/49">Boqun Feng</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/7/21/927">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/928">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/929">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/930">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/931">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/932">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/933">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/934">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/935">"Paul E. McKenney"</a><ul><li><a href="/lkml/2021/8/3/941">Joe Perches</a><ul><li><a href="/lkml/2021/8/3/986">"Paul E. McKenney"</a></li></ul></li></ul></li><li><a href="/lkml/2021/7/21/936">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/937">"Paul E. McKenney"</a></li><li><a href="/lkml/2021/7/21/960">"Paul E. McKenney"</a><ul><li><a href="/lkml/2021/7/29/171">Boqun Feng</a><ul><li><a href="/lkml/2021/7/29/485">"Paul E. McKenney"</a></li></ul></li></ul></li><li><a href="/lkml/2021/7/21/961">"Paul E. McKenney"</a><ul><li><a href="/lkml/2021/7/29/193">Boqun Feng</a><ul><li><a href="/lkml/2021/7/29/634">"Paul E. McKenney"</a><ul><li><a href="/lkml/2021/7/29/1211">Boqun Feng</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/7/21/962">"Paul E. McKenney"</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 21 Jul 2021 13:41:46 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH rcu 04/18] rcu: Weaken -&gt;dynticks accesses and updates</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Hmm.<br /><br />This actually seems to make some of the ordering worse.<br /><br />I'm not seeing a lot of weakening or optimization, but it depends a<br />bit on what is common and what is not.<br /><br />On Wed, Jul 21, 2021 at 1:21 PM Paul E. McKenney &lt;paulmck&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; +/*<br />&gt; + * Increment the current CPU's rcu_data structure's -&gt;dynticks field<br />&gt; + * with ordering.  Return the new value.<br />&gt; + */<br />&gt; +static noinstr unsigned long rcu_dynticks_inc(int incby)<br />&gt; +{<br />&gt; +       struct rcu_data *rdp = this_cpu_ptr(&amp;rcu_data);<br />&gt; +       int seq;<br />&gt; +<br />&gt; +       seq = READ_ONCE(rdp-&gt;dynticks) + incby;<br />&gt; +       smp_store_release(&amp;rdp-&gt;dynticks, seq);<br />&gt; +       smp_mb();  // Fundamental RCU ordering guarantee.<br />&gt; +       return seq;<br />&gt; +}<br /><br />So this is actually likely *more* expensive than the old code was, at<br />least on x86.<br /><br />The READ_ONCE/smp_store_release are cheap, but then the smp_mb() is expensive.<br /><br />The old code did just arch_atomic_inc_return(), which included the<br />memory barrier.<br /><br />There *might* be some cache ordering advantage to letting the<br />READ_ONCE() float upwards, but from a pure barrier standpoint this is<br />more expensive than what we used to have.<br /><br />&gt; -       if (atomic_read(&amp;rdp-&gt;dynticks) &amp; 0x1)<br />&gt; +       if (READ_ONCE(rdp-&gt;dynticks) &amp; 0x1)<br />&gt;                 return;<br />&gt; -       atomic_inc(&amp;rdp-&gt;dynticks);<br />&gt; +       rcu_dynticks_inc(1);<br /><br />And this one seems to not take advantage of the new rule, so we end up<br />having two reads, and then that potentially more expensive sequence.<br /><br />&gt;  static int rcu_dynticks_snap(struct rcu_data *rdp)<br />&gt;  {<br />&gt; -       return atomic_add_return(0, &amp;rdp-&gt;dynticks);<br />&gt; +       smp_mb();  // Fundamental RCU ordering guarantee.<br />&gt; +       return smp_load_acquire(&amp;rdp-&gt;dynticks);<br />&gt;  }<br /><br />This is likely cheaper - not because of barriers, but simply because<br />it avoids dirtying the cacheline.<br /><br />So which operation do we _care_ about, and do we have numbers for why<br />this improves anything? Because looking at the patch, it's not obvious<br />that this is an improvement.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
