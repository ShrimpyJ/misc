    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/7/21/843">First message in thread</a></li><li><a href="/lkml/2021/7/21/843">"Matthew Wilcox (Oracle)"</a><ul><li class="origin"><a href="/lkml/2021/7/21/1122">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/21/1122">Matthew Wilcox</a></li></ul></li><li><a href="/lkml/2021/7/22/485">"Theodore Ts'o"</a></li><li><a href="/lkml/2021/7/27/198">Michal Hocko</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 21 Jul 2021 13:46:09 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mm: Make kvmalloc refuse to allocate more than 2GB</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 21, 2021 at 11:42 AM Matthew Wilcox (Oracle)<br />&lt;willy&#64;infradead.org&gt; wrote:<br />&gt;<br />&gt; It's generally dangerous to allocate such large quantities of memory<br />&gt; within the kernel owing to our propensity to use 'int' to represent<br />&gt; a length.  If somebody really needs it, we can add a kvmalloc_large()<br />&gt; later, but let's default to "You can't allocate that much memory".<br /><br />I really think that without the WARN_ON_ONCE(), this is just moving<br />that failure point from a known good place ("we know this must not<br />succeed") to a possibly bad place ("this might cause silent and<br />hard-to-understand failures elsewhere").<br /><br />IOW, in seq_buf_alloc() there's no need to warn. It's clear that a<br />bigger allocation can never be valid.<br /><br />But in kvmalloc(), it needs to warn, because if it ever triggers we<br />need to check what triggered it.<br /><br />So this is not just moving code from one place to another equivalent one.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
