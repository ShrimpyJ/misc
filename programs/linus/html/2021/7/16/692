    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/7/15/2088">First message in thread</a></li><li><a href="/lkml/2021/7/16/666">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/16/681">Steven Rostedt</a><ul><li class="origin"><a href="/lkml/2021/7/16/808">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/16/808">Steven Rostedt</a><ul><li><a href="/lkml/2021/7/16/884">Chuck Lever III</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Jul 2021 11:45:57 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] tracing: histogram fix and take 2 on the __string_len() marcros</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Jul 16, 2021 at 11:37 AM Steven Rostedt &lt;rostedt&#64;goodmis.org&gt; wrote:<br />&gt;<br />&gt;<br />&gt; So how do you want this implemented?<br />&gt;<br />&gt; #define __assign_str_len(dst, src, len)                                 \<br />&gt;         do {                                                            \<br />&gt;                 strscpy(__get_str(dst), (src) ? (const char *)(src) : "(null)", len); \<br />&gt;                 __get_str(dst)[len] = '\0';<br /><br />What? That "__get_str(dst)[len] = '\0';" is pointless and wrong.<br /><br />That's the _point_. strscpy() does the whole NUL termination<br />correctly, in ways that strncpy() never ever did.<br /><br />But I also want to know what the actual _semantics_ of the source is.<br />Your "memcpy()" example implies that the source is always a fixed-size<br />thing. In that case, maybe that's the rigth thing to do, and you<br />should just create a real function for it.<br /><br />So two choices:<br /><br /> (a) either just plain strscpy() works (or, if you want NUL padding,<br />use strscpy_pad()).<br /><br /> (b) you have very odd source/destination semantics, and it should be<br />its own function that explains it.<br /><br />Note how in neither case is it ok to just make random inline code with<br />no explanations for the odd crazy code. Make a function that actually<br />describes what you want, documents it, and be done with it.<br /><br />strncpy() is garbage. It should never be used in new code.<br /><br />And random semantics that are undocumented and just implemented as a<br />illegible mess in a header file is not ok either.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
