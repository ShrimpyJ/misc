    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/7/24/210">First message in thread</a></li><li><a href="/lkml/2021/7/27/269">David Laight</a><ul><li><a href="/lkml/2021/7/27/395">Andreas Gruenbacher</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 27 Jul 2021 10:51:38 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v4 1/8] iov_iter: Introduce iov_iter_fault_in_writeable helper</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 27, 2021 at 4:14 AM Andreas Gruenbacher &lt;agruenba&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; On Tue, Jul 27, 2021 at 11:30 AM David Laight &lt;David.Laight&#64;aculab.com&gt; wrote:<br />&gt; &gt;<br />&gt; &gt; Is it actually worth doing any more than ensuring the first byte<br />&gt; &gt; of the buffer is paged in before entering the block that has<br />&gt; &gt; to disable page faults?<br />&gt;<br />&gt; We definitely do want to process as many pages as we can, especially<br />&gt; if allocations are involved during a write.<br /><br />Yeah, from an efficiency standpoint, once you start walking page<br />tables, it's probably best to just handle as much as you can.<br /><br />But once you get an error, I don't think it should be "everything is bad".<br /><br />This is a bit annoying, because while *most* users really just want<br />that "everything is good", *some* users might just want to handle the<br />partial success case.<br /><br />It's why "copy_to/from_user()" returns the number of bytes *not*<br />written, rather than -EFAULT like get/put_user(). 99% of all users<br />just want to know "did I write all bytes" (and then checking for a<br />zero return is a simple and cheap verification of "everything was<br />ok").<br /><br />But then very occasionally, you hit a case where you actually want to<br />know how much of a copy worked. It's rare, but it happens, and the<br />read/write system calls tend to be the main user of it.<br /><br />And yes, the fact that "copy_to/from_user()" doesn't return an error<br />(like get/put_user() does) has confused people many times over the<br />years. It's annoying, but it's required by those (few) users that<br />really do want to handle that partial case.<br /><br />I think this iov_iter_fault_in_readable/writeable() case should do the same.<br /><br />And no, it's not new to Andreas' patch. iov_iter_fault_in_readable()<br />is doing the "everything has to be good" thing already.<br /><br />Which maybe implies that nobody cares about partial reads/writes. Or<br />it's very very rare - I've seen code that handles page faults in user<br />space, but it's admittedly been some very special CPU<br />simulator/emulator checkpointing stuff.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
