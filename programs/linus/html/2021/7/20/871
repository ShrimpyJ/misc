    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/7/8/674">First message in thread</a></li><li><a href="/lkml/2021/7/20/739">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/20/816">Arnd Bergmann</a><ul><li><a href="/lkml/2021/7/20/827">Nick Desaulniers</a></li><li><a href="/lkml/2021/7/20/1028">Masahiro Yamada</a><ul><li><a href="/lkml/2021/7/23/790">Geert Uytterhoeven</a><ul><li><a href="/lkml/2021/7/24/138">Masahiro Yamada</a></li></ul></li><li><a href="/lkml/2021/7/26/1701">(Eric W. Biederman)</a><ul><li><a href="/lkml/2021/7/27/174">Geert Uytterhoeven</a></li><li><a href="/lkml/2021/7/27/309">Masahiro Yamada</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/7/20/841">Nick Desaulniers</a><ul><li><a href="/lkml/2021/7/20/853">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/20/859">Nick Desaulniers</a></li></ul></li><li><a href="/lkml/2021/7/21/14">Masahiro Yamada</a></li></ul></li><li><a href="/lkml/2021/7/20/860">Nick Desaulniers</a><ul><li class="origin"><a href="/lkml/2021/7/20/913">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/20/913">Linus Torvalds</a><ul><li><a href="/lkml/2021/7/20/914">Linus Torvalds</a></li><li><a href="/lkml/2021/7/21/27">Masahiro Yamada</a></li></ul></li><li><a href="/lkml/2021/7/21/12">Christoph Hellwig</a><ul><li><a href="/lkml/2021/7/21/37">Masahiro Yamada</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/7/20/1036">Masahiro Yamada</a></li><li><a href="/lkml/2021/7/21/5">Christoph Hellwig</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 20 Jul 2021 14:54:35 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2 2/2] Makefile: infer CROSS_COMPILE from SRCARCH for LLVM=1 LLVM_IAS=1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 20, 2021 at 2:29 PM Nick Desaulniers<br />&lt;ndesaulniers&#64;google.com&gt; wrote:<br />&gt;<br />&gt; There's still some that we can eliminate for BOTH configure and actual<br />&gt; build, like CROSS_COMPILE. :^)<br /><br />I have this (perhaps odd) model where I use separate trees for<br />different things, which is something git obviously is partly designed<br />for.<br /><br />So when I create a source tree, I usually create it for one particular<br />use - whether it be for one particular configuration (ie "build with<br />clang" or "set up a tree for a 32-bit cross compile" or whatever), or<br />whether it be for some particular development issue ("long-term branch<br />for testing asm goto with inputs").<br /><br />Yeah, sometimes I use multiple git branches in the same tree for<br />things - but I tend to do that mainly for short-term things where I<br />don't expect to keep working on it over time.<br /><br />End result: I find 'make' command line flags to be really really<br />annoying, because then I have to match them to whatever tree I'm in.<br /><br />I'd much rather have a local per-tree configuration that just sticks<br />around. It's why ".config" works fairly well for me.<br /><br />But there are other things that stick around. In particular, I have<br />considered simply using git config variables for that.<br /><br />Something like this in the main Makefile:<br /><br />    ARCH=$(shell git config build.arch)<br />    CC=$(shell git config --default=gcc build.cc)<br /><br />would actually be optimal for what _I_ do. Then for my clang build tree, I'd do<br /><br />    git config build.cc clang<br /><br />and it would stick in that tree. If you don't set the option, it would use gcc.<br /><br />Maybe that would be an acceptable model these days? We've used git<br />long enough that non-git worries aren't a big deal any more, and I<br />guess people could use the old-fashioned<br /><br />    make CC=clang<br /><br />if they don't use git.<br /><br />We could get rid of all the CROSS_COMPILE etc garbage that way,<br />because you'd just set it in the .git/config file. Those are really<br />convenient and easy to edit.<br /><br />Would people hate that kind of model?<br /><br />                   Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
