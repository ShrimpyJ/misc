    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/11/28/151">First message in thread</a></li><li><a href="/lkml/2021/11/28/151">Thomas Gleixner</a><ul><li><a href="/lkml/2021/11/28/149">Thomas Gleixner</a><ul><li><a href="/lkml/2021/11/28/191">   pr-tracker-bot&#64;kernel ...</a></li></ul></li><li><a href="/lkml/2021/11/28/150">Thomas Gleixner</a><ul><li><a href="/lkml/2021/11/28/187">   pr-tracker-bot&#64;kernel ...</a></li></ul></li><li><a href="/lkml/2021/11/28/152">Thomas Gleixner</a><ul><li><a href="/lkml/2021/11/28/189">   pr-tracker-bot&#64;kernel ...</a></li></ul></li><li class="origin"><a href="/lkml/2021/11/29/142">Linus Torvalds</a><ul><li><a href="/lkml/2021/11/29/142">Peter Zijlstra</a></li></ul></li><li><a href="/lkml/2021/11/28/188">   pr-tracker-bot&#64;kernel ...</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 28 Nov 2021 09:15:10 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT pull] locking/urgent for v5.16-rc3</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Nov 28, 2021 at 8:35 AM Thomas Gleixner &lt;tglx&#64;linutronix.de&gt; wrote:<br />&gt;<br />&gt;  - down_read_trylock() is suboptimal when the lock is contended and<br />&gt;    multiple readers trylock concurrently. That's due to the initial value<br />&gt;    being read non-atomically which results in at least two compare exchange<br />&gt;    loops. Making the initial readout atomic reduces this significantly.<br />&gt;    Whith 40 readers by 11% in a benchmark which enforces contention on<br />&gt;    mmap_sem.<br /><br />This was an intentional optimization to avoid unnecessary cache<br />protocol cycles for when the lock isn't contended - first getting a<br />cacheline for read ownership, only to then get it for write.<br /><br />But I guess we don't have any good benchmarks for non-contention, so ...<br /><br />I also hope that maybe modern hardware is smart enough to see "I will<br />write to it later" and avoid the "get line for shared access only to<br />get it for exclusive access immediately afterwards" issue.<br /><br />             Linus<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
