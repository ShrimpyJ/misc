    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/11/14/298">First message in thread</a></li><li><a href="/lkml/2021/11/17/922">Geert Uytterhoeven</a><ul><li><a href="/lkml/2021/11/17/1106">Anton Altaparmakov</a><ul><li class="origin"><a href="/lkml/2021/11/17/1167">Linus Torvalds</a><ul><li><a href="/lkml/2021/11/17/1167">Anton Altaparmakov</a><ul><li><a href="/lkml/2021/11/17/1182">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 17 Nov 2021 16:28:42 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 5.16-rc1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 17, 2021 at 3:29 PM Anton Altaparmakov &lt;anton&#64;tuxera.com&gt; wrote:<br />&gt;<br />&gt; What we need here is an array to store pointers to in-memory inodes that correspond to inodes in the inode table page being written out.<br /><br />Do we actually need the array?<br /><br />The ntfs_inode pointers in that array are always locked (using<br />'mrec_lock'), so ti could be just a linked list of entries.<br /><br />Yeah, that would require adding a 'next' pointer to 'struct<br />_ntfs_inode', but maybe that would be the right thing to do?<br /><br />I don't know the code, but it looks to me like it's literally just a<br />stack of locked ntfs_inode pointers - where the lock is taken before<br />adding it to the stack, and released after taking it off the stack. So<br />a singly-linked list would seem to be a very simple implementation.<br /><br />                      Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
