    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/11/17/843">First message in thread</a></li><li><a href="/lkml/2021/11/17/1095">Linus Torvalds</a><ul><li><a href="/lkml/2021/11/17/1118">Kees Cook</a><ul><li><a href="/lkml/2021/11/17/1125">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2021/11/17/1142">Kyle Huey</a><ul><li class="origin"><a href="/lkml/2021/11/17/1161">Linus Torvalds</a><ul><li><a href="/lkml/2021/11/17/1161">Kyle Huey</a><ul><li><a href="/lkml/2021/11/17/1169">Kees Cook</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 17 Nov 2021 17:11:14 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [REGRESSION] 5.16rc1: SA_IMMUTABLE breaks debuggers</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 17, 2021 at 4:37 PM Kyle Huey &lt;me&#64;kylehuey.com&gt; wrote:<br />&gt;<br />&gt; This fixes most of the issues with rr, but it still changes the ptrace<br />&gt; behavior for the double-SIGSEGV case<br /><br />Hmm. I think that's because of how "force_sigsgv()" works.<br /><br />I absolutely detest that function.<br /><br />So we have signal_setup_done() doing that<br /><br />        if (failed)<br />                force_sigsegv(ksig-&gt;sig);<br /><br />and then force_sigsegv() has that completely insane<br /><br />        if (sig == SIGSEGV)<br />                force_fatal_sig(SIGSEGV);<br />        else<br />                force_sig(SIGSEGV);<br /><br />behavior.<br /><br />And I think I know the _reason_ for that complete insanity: when<br />SIGSEGV takes a SIGSEGV, and there is a handler, we need to stop<br />trying to send more SIGSEGV's.<br /><br />But it does mean that with my change, that second SIGSEGV now ends up<br />being that SA_IMMUTABLE kind, so yeah, it broke the debugger test -<br />where catching the second SIGSEGV is actually somewhat sensible (ok,<br />not really, but at least understandable)<br /><br />End result: I think we want not a boolean, but a three-way choice for<br />that force_sig_info_to_task() thing:<br /><br /> - unconditionally fatal (for things that just want to force an exit<br />and used to do do_exit())<br /><br /> - ignore valid and unblocked handler (for that SIGSEGV recursion<br />case, aka force "sigdfl")<br /><br /> - catching signal ok<br /><br />So my one-liner isn't sufficient. It wants some kind of nasty enum.<br /><br />At least the enum can be entirely internal to kernel/signal.c, I<br />think. No need to expose this all to anything else.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
