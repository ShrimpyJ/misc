    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/8/30/641">First message in thread</a></li><li><a href="/lkml/2021/8/30/876">Thomas Gleixner</a><ul><li><a href="/lkml/2021/8/30/925">Al Viro</a><ul><li class="origin"><a href="/lkml/2021/8/30/957">Linus Torvalds</a><ul><li><a href="/lkml/2021/8/30/957">Al Viro</a><ul><li><a href="/lkml/2021/8/30/978">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2021/8/30/979">Thomas Gleixner</a><ul><li><a href="/lkml/2021/8/30/993">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2021/9/1/454">Thomas Gleixner</a><ul><li><a href="/lkml/2021/9/1/982">Thomas Gleixner</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 30 Aug 2021 14:26:12 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 01/10] x86/fpu/signal: Clarify exception handling in restore_fpregs_from_user()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 30, 2021 at 2:07 PM Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt;<br />&gt; Incidentally, why do we bother with negation in those?  Why not have<br />&gt; user_insn(), XSTATE_OP() and kernel_insn_err() return 0 or trap number...<br /><br />I really wish we didn't have that odd _ASM_EXTABLE_FAULT/<br />ex_handler_fault() special case at all.<br /><br />It's *very* confusing, and it actually seems to be mis-used. It looks<br />like the "copy_mc_fragile" code uses it by mistake, and doesn't<br />actually want that "modify %%rax" behavior of that exception handler<br />AT ALL.<br /><br />If I read that code correctly, it almost by mistake doesn't actually<br />care, and will overwrite %%rax with the right result, but it doesn't<br />look like the "fault code in %eax" was ever *intentional*. There's no<br />mention of it.<br /><br />Maybe I'm misreading that code, but I look at it and just go "Whaa?"<br /><br />The code in user_insn() clearly *does* use that fault number (and, as<br />you say, inverts it for some reason), but I wonder how much it really<br />cares? Could we get rid of it, and just set a fixed error code?<br /><br />I only checked one user, but that one didn't actually care which fault<br />it was, it only cared about fault-vs-no-fault.<br /><br />                Linus<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
