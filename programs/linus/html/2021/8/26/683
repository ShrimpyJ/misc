    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/8/26/413">First message in thread</a></li><li><a href="/lkml/2021/8/26/413">Will Deacon</a><ul><li class="origin"><a href="/lkml/2021/8/27/93">Linus Torvalds</a><ul><li><a href="/lkml/2021/8/27/93">Christoph Hellwig</a><ul><li><a href="/lkml/2021/8/27/566">Linus Torvalds</a><ul><li><a href="/lkml/2021/8/27/571">Christoph Hellwig</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/8/26/701">   pr-tracker-bot&#64;kernel ...</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Aug 2021 11:41:34 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] arm64 fix for 5.14</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 26, 2021 at 6:17 AM Will Deacon &lt;will&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; Please pull this single arm64 fix for 5.14.<br /><br />Pulled.<br /><br />But adding Christoph to the cc, since I do think the eventual fix<br />needs to be in the DMA mapping code:<br /><br />&gt; We received a report this week<br />&gt; that the generic version of pfn_valid(), which we switched to this merge<br />&gt; window in 16c9afc77660 ("arm64/mm: drop HAVE_ARCH_PFN_VALID"), interacts<br />&gt; badly with dma_map_resource() due to the following check:<br />&gt;<br />&gt;         /* Don't allow RAM to be mapped */<br />&gt;         if (WARN_ON_ONCE(pfn_valid(PHYS_PFN(phys_addr))))<br />&gt;                 return DMA_MAPPING_ERROR;<br />&gt;<br />&gt; Since the ongoing saga to determine the semantics of pfn_valid() is<br />&gt; unlikely to be resolved this week (does it indicate valid memory, or<br />&gt; just the presence of a struct page, or whether that struct page has been<br />&gt; initialised?), just revert back to our old version of pfn_valid() for<br />&gt; 5.14.<br /><br />I think that's the right thing for now, but yeah, that condition for<br />WARN_ON_ONCE() seems very questionable.<br /><br />"pfn_valid()" is more about whether you can do a "pfn_to_page()" lookup on it.<br /><br />II get the feeling that the dma-mapping code should allow pages that<br />are PageReserved() to be mapped - they aren't "ram" in the kernel<br />sense.<br /><br />Perhaps also make sure it's not the zero page (which is<br />PageReserved(), but most definitely RAM).<br /><br />In a PC world that would be (for example) the legacy PCI space at<br />0xa0000-0xfffff, but I could easily imagine other platforms having<br />other situations.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
