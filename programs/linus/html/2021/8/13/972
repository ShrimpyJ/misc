    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/8/12/448">First message in thread</a></li><li><a href="/lkml/2021/8/12/521">(Eric W. Biederman)</a><ul><li><a href="/lkml/2021/8/13/219">David Laight</a><ul><li><a href="/lkml/2021/8/13/911">Florian Weimer</a></li><li class="origin"><a href="/lkml/2021/8/13/976">Linus Torvalds</a><ul><li><a href="/lkml/2021/8/13/976">"Andy Lutomirski"</a><ul><li><a href="/lkml/2021/8/13/995">Linus Torvalds</a></li><li><a href="/lkml/2021/8/13/1040">Matthew Wilcox</a></li><li><a href="/lkml/2021/8/18/840">(J. Bruce Fields)</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 13 Aug 2021 14:31:46 -1000</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v1 0/7] Remove in-tree usage of MAP_DENYWRITE</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Aug 13, 2021 at 10:18 AM Eric W. Biederman<br />&lt;ebiederm&#64;xmission.com&gt; wrote:<br />&gt;<br />&gt; Florian Weimer, would it be possible to get glibc's ld.so implementation to use<br />&gt; MAP_SHARED?  Just so people reading the code know what to expect of the<br />&gt; kernel?  As far as I can tell there is not a practical difference<br />&gt; between a read-only MAP_PRIVATE and a read-only MAP_SHARED.<br /><br />There's a huge difference.<br /><br />For one, you actually don't necessarily want read-only. Doing COW on<br />library images is quite common for things like relocation etc (you'd<br />_hope_ everything is PC-relative, but no)<br /><br />So no. Never EVER use MAP_SHARED unless you literally expect to have<br />two different mappings that need to be kept in sync and one writes the<br />other.<br /><br />I'll just repeat: stop arguing about this case. If somebody writes to<br />a busy library, THAT IS A FUNDAMENTAL BUG, and nobody sane should care<br />at all about it apart from the "you get what you deserve".<br /><br />What's next? Do you think glibc should also map every byte in the user<br />address space so that user programs don't get SIGSEGV when they have<br />wild pointers?<br /><br />Again - that's a user BUG and trying to "work around" a wild pointer<br />is a worse fix than the problem it tries to fix.<br /><br />The exact same thing is true for shared library (or executable)<br />mappings. Trying to work around people writing to them is *worse* than<br />the bug of doing so.<br /><br />Stop this completely inane discussion already.<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
