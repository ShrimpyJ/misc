    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/8/18/643">First message in thread</a></li><li><a href="/lkml/2021/8/18/643">Miklos Szeredi</a><ul><li><a href="/lkml/2021/8/18/644">Miklos Szeredi</a><ul><li class="origin"><a href="/lkml/2021/8/18/1013">Linus Torvalds</a><ul><li><a href="/lkml/2021/8/18/1013">Miklos Szeredi</a></li></ul></li></ul></li><li><a href="/lkml/2021/8/18/645">Miklos Szeredi</a><ul><li><a href="/lkml/2021/8/18/682">Christian Brauner</a></li></ul></li><li><a href="/lkml/2021/8/18/765">Al Viro</a><ul><li><a href="/lkml/2021/8/18/803">Miklos Szeredi</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 18 Aug 2021 11:34:31 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2 2/2] ovl: enable RCU'd -&gt;get_acl()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 18, 2021 at 6:34 AM Miklos Szeredi &lt;mszeredi&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt;  struct posix_acl *get_cached_acl_rcu(struct inode *inode, int type)<br />&gt;  {<br />&gt; -       return rcu_dereference(*acl_by_type(inode, type));<br />&gt; +       struct posix_acl *acl = rcu_dereference(*acl_by_type(inode, type));<br />&gt; +<br />&gt; +       if (acl == ACL_DONT_CACHE)<br />&gt; +               acl = inode-&gt;i_op-&gt;get_acl(inode, type, LOOKUP_RCU);<br />&gt; +<br />&gt; +       return acl;<br />&gt;  }<br /><br />What? No.<br /><br />You just made get_cached_acl_rcu() return ERR_PTR(-EINVAL) for most filesystems.<br /><br />So now you've changed the behavior of get_cached_acl_rcu() ENTIRELY.<br /><br />It used to return either<br /> (a) the ACL<br /> (b) NULL<br /> (c) ACL_DONT_CACHE/ACL_NOT_CACHED<br /><br />but now you've changed that (c) case to "ACL_NOT_CACHED or random error value".<br /><br />You can't just mix these kinds of entirely different return values like that.<br /><br />So no, this is not at all acceptable.<br /><br />I would suggest:<br /><br /> (a) make the first patch actually test explicitly for LOOKUP_RCU, so<br />that it's clear to the filesystems what is going on.<br /><br />     So instead of that pattern of<br /><br />        if (flags)<br />                return ERR_PTR(-EINVAL);<br /><br />     I'd suggest using<br /><br />        if (flags &amp; LOOKUP_RCU)<br />                return ERR_PTR(-ECHILD);<br /><br />   so that it actually matches what lookup does for the "I can't do<br />this under RCU", and so that any reader of the code understands what<br />"flags" is all about.<br /><br />And then<br /><br /> (b) make the get_cached_acl_rcu() case handle errors _properly_<br />instead of mixing the special ACL cache markers with error returns.<br /><br />     So instead of<br /><br />        if (acl == ACL_DONT_CACHE)<br />                acl = inode-&gt;i_op-&gt;get_acl(inode, type, LOOKUP_RCU);<br /><br />     maybe something more along the lines of<br /><br />        if (acl == ACL_DONT_CACHE) {<br />                struct posix_acl *lookup_acl;<br />                lookup_acl = inode-&gt;i_op-&gt;get_acl(inode, type, LOOKUP_RCU);<br />                if (!IS_ERR(lookup_acl))<br />                        acl = lookup_acl;<br />        }<br /><br />     or whatever.<br /><br />I disagree with Al that a "bool" would be better. I think LOOKUP_RCU<br />is good documentation, and consistent with lookup, but it really needs<br />to be *consistent*.  Thus that<br /><br />        if (flags &amp; LOOKUP_RCU)<br />                return ERR_PTR(-ECHILD);<br /><br />pattern, not some "test underscibed flags, return -EINVAL" pattern<br />that looks entirely nonsensical.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
