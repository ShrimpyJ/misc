    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/19/298">First message in thread</a></li><li><a href="/lkml/2021/9/20/2038">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/20/2126">John Paul Adrian Glaubitz</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2021/9/20/2384">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 20 Sep 2021 13:11:33 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 5.15-rc2</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 20, 2021 at 12:14 PM John Paul Adrian Glaubitz<br />&lt;glaubitz&#64;physik.fu-berlin.de&gt; wrote:<br />&gt;<br />&gt; If you want to get feedback whether the kernel actually boots, let me know.<br /><br />So having looked around more sparc64 actually looks to be ok as-is,<br />because it doesn't do any ioremap at all, and the PIO accesses are<br />done at physical address zero.<br /><br />Sparc uses a special IO memory address space and can basically map all<br />of PCI that way, and it looks like the hardware does all the required<br />special things for the PIO range at address 0-0xffff.<br /><br />So it turns out that the "missing iounmap()" is actually ok on sparc,<br />because it's a no-op anyway - because the ioremap() was just a pointer<br />cast with no actual remapping necessary.<br /><br />And the generic IOMAP thing does assume that PIO is special, in ways<br />that sparc doesn't need. On x86, PIO is not remapped, but also uses<br />different instructions, so it's not just pointer games that could be<br />done at iomap/unmap case.<br /><br />(And on many other architectures you need to do different<br />synchronization, even if you could perhaps otherwise make the<br />PIO-vs-MMIO be only about the pointer mapping - so "writeb()" and<br />"outb()" aren't just different in the addressing).<br /><br />End result: the only downside of sparc not using the generic iomap is<br />likely that sparc will happily use a NULL __iomap pointer (error) and<br />basically use it as a PIO access. But since other architectures like<br />x86-64 would warn for that case (see 'bad_io_access()' in<br />lib/iomap.c), even that isn't actually a big deal - any such bugs<br />would have been found elsewhere.<br /><br />And having looked at this, I'm starting to suspect that sparc oddity<br />is _why_ the fallback version in &lt;asm-generic/io.h&gt; was so broken. It<br />did the right thing on sparc, but leaks iomap remappings almost<br />anywhere else. But maybe sparc ended up being the only user of it?<br /><br />           Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
