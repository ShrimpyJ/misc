    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/16/2321">First message in thread</a></li><li><a href="/lkml/2021/9/16/2321">Paul Moore</a><ul><li><a href="/lkml/2021/9/22/844">Paul Moore</a><ul><li class="origin"><a href="/lkml/2021/9/22/1030">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/22/1030">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/22/1081">Paul Moore</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 22 Sep 2021 13:55:59 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] SELinux fixes for v5.15 (#1)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Sep 22, 2021 at 10:57 AM Paul Moore &lt;paul&#64;paul-moore.com&gt; wrote:<br />&gt;<br />&gt; I wanted to check in on this PR to see if you were planning on merging<br />&gt; it for v5.15-rcX, kicking it back for -next instead, or simply glaring<br />&gt; at it with quiet disgust?<br /><br />Heh. I glanced at it with quiet disgust when it came in, and then it<br />just got lost.<br /><br />But now I'm looking at it again since you reminded me, and I don't<br />understand why it has to be done in such an ugly manner.<br /><br />And I also don't think the thing makes a whit of sense in the first place.<br /><br />Honestly, that whole "lockdown depends on current creds" makes NO<br />SENSE at all to me. The whole and only point about lockdown is that<br />it's locked down. Not that "oh, root can do X". That's against the<br />point.<br /><br />The whole and only point of lockdown was as a global thing. Now<br />somebody seems to have noticed that they violated that basic rule, and<br />that it's about permissions after all, and it's just a complete mess.<br /><br />But why the heck would a normal lockdown user have to care about this<br />fundamental design mistake? Why should a normal lockdown user pass in<br />a credential that doesn't make sense?<br /><br />Since 99% of all users DON'T want special rules, why isn't the normal<br />security_locked_down() kept the way it is?<br /><br />Make the few special cases do special things, in other words.<br /><br />This is *literally* why we have all those wrapper functions in<br />security/security.c - so that people can do sane interfaces and not<br />call down to the raw hooks.<br /><br />(Yeah, yeah, a lot of them do nothing but pass it down, but others do<br />other sanity stuff so that callers don't have to do pointless<br />boilerplate)<br /><br />IOW, why is this changing all the normal users that *really* don't<br />want it, and that really have absolutely no business looking up the<br />current creds?<br /><br />Make the regular security_locked_down() function do that, and add a<br /><br />    if (WARN_ON_ONCE(!in_task()))<br />        return -EPERM;<br /><br />so that any bad cases get flagged and refuse to continue.<br /><br />And then the couple of special users (whether due to interrupt context<br />or whatever), could get their own wrapper function.<br /><br />Note how that would<br /> (a) make the patch smaller<br /> (b) not pollute normal users pointlessly<br /> (c) actually be a kind of documentation too<br /> (d) not make the default lockdown testing function be senseless<br /><br />because right now you have absolutely no explanation in the crazy<br />cases, so y9ou have code like this:<br /><br />        lockdown = !!security_locked_down(NULL, LOCKDOWN_XMON_RW);<br /><br />in xmon_is_locked_down(), and it makes no sense to anybody. Why the<br />NULL? What is going on?<br /><br />Yes, yes, I can tell why the NULL, and what is going on, because I<br />read the commit message and it's in my context. But look at that line,<br />and tell me that it makes sense as code to anybody who has paged out<br />that context (or never had it in the first place).<br /><br />If it said "security_globally_locked_down()" maybe it would at least<br />give a hint about what's going on.<br /><br />But the other side of the argument is that the *common* lockdown<br />functions are insane too after the patch. In kernel/module.c, this<br />line:<br /><br />        return security_locked_down(current_cred(), LOCKDOWN_MODULE_SIGNATURE);<br /><br />really screams "lockdown is fundamentally broken and mis-designed".<br /><br />Seriously. If lockdown needs "current creds" then lockdown is wrong.<br /><br />I was unhappy about lockdown from before, so maybe I'm more likely to<br />just reject this kind of garbage, but this really looks completely<br />broken to me.<br /><br />Hmm? This lockdown stuff is some ugly random code to begin with, I<br />think the interfaces need to make SENSE. Passing in credentials<br />fundamentally does not make sense to me.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
