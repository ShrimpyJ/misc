    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/15/418">First message in thread</a></li><li><a href="/lkml/2021/9/17/225">Ondrej Zary</a><ul><li><a href="/lkml/2021/9/17/284">Peter Zijlstra</a><ul><li><a href="/lkml/2021/9/17/372">Ondrej Zary</a><ul><li><a href="/lkml/2021/9/17/449">Peter Zijlstra</a><ul><li><a href="/lkml/2021/9/17/496">Thomas Gleixner</a></li></ul></li></ul></li><li><a href="/lkml/2021/9/17/383">Thomas Gleixner</a></li><li class="origin"><a href="/lkml/2021/9/17/1091">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/17/1091">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/18/79">Peter Zijlstra</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 17 Sep 2021 15:23:18 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86/iopl: Fake iopl(3) CLI/STI usage</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 17, 2021 at 2:21 AM Peter Zijlstra &lt;peterz&#64;infradead.org&gt; wrote:<br />&gt;<br />&gt; +       nr_copied = insn_fetch_from_user(regs, buf);<br /><br />Ugh. This is the code that does the magic "add CS base" stuff.<br /><br />Do we really want to do that instead of just doing<br /><br />        unsigned char byte = get_user((char __user *)regs-&gt;ip);<br /><br />when later on the debug code does:<br /><br />&gt; +               pr_err("%s[%d] attempts to use CLI/STI, pretending it's a NOP, ip:%lx",<br />&gt; +                      current-&gt;comm, task_pid_nr(current), regs-&gt;ip);<br />&gt; +               print_vma_addr(KERN_CONT " in ", regs-&gt;ip);<br />&gt; +               pr_cont("\n");<br /><br />and prints out the wrong IP address?<br /><br />IOW, I'd argue that you should get it right in both places, or not try<br />to get it right in one but not the other.<br /><br />I think the proper thing to do is perhaps something like<br /><br />        unsigned long cs_base = 0;<br />        unsigned long address;<br />        unsigned char byte;<br /><br />        if (!user_64bit_mode(regs)) {<br />                cs_base = insn_get_seg_base(regs, INAT_SEG_REG_CS);<br />                if (cs_base = -1ul)<br />                        return false;<br />        }<br /><br />        // We could check the limit too, but nobody cares<br />        address = regs-&gt;ip + cs_base;<br />        if (get_user(byte, (const char __user *)address))<br />                return false;<br /><br />        // cli/sti?<br />        if (byte != 0xfa &amp;&amp; byte ! 0xfb)<br />                return false;<br /><br />and now you have the actual linear address in 'address' and can at<br />least print it out correctly.<br /><br />Hmm? Because it's just sad to get it right in one place, and wrong in<br />another. And we don't actually _want_ any of the instruction<br />fetch/decode stuff.<br /><br />           Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
