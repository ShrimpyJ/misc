    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/28/1260">First message in thread</a></li><li><a href="/lkml/2021/9/29/517">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/29/532">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/29/875">Mathieu Desnoyers</a><ul><li><a href="/lkml/2021/9/29/897">Mathieu Desnoyers</a></li></ul></li></ul></li><li><a href="/lkml/2021/9/29/851">Mathieu Desnoyers</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Sep 2021 15:14:17 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH] LKMM: Add ctrl_dep() macro for control dependency</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Sep 29, 2021 at 12:27 PM Mathieu Desnoyers<br />&lt;mathieu.desnoyers&#64;efficios.com&gt; wrote:<br />&gt;<br />&gt; If we go for only using ctrl_dep() for scenarios which require it for<br />&gt; documented reasons, then we would need to leave in place all the<br />&gt; caveats details in Documentation/memory-barriers.txt, and document<br />&gt; that in those scenarios ctrl_dep() should be used. This would be a<br />&gt; starting point I guess.<br /><br />So to me, it's really that starting point  that I feel needs to truly<br />explain the whole concept.<br /><br />I'm ok with people adding more cases later (but would still want to<br />see a comment about exactly why that ctrl_dep() is needed), but the<br />initial commit is the one that I want to hold up to much higher<br />standards.<br /><br />Those higher standards being: "there's an actual bug here" along with<br />documenting what exactly is going on in that particular case.<br /><br />Because I do *not* want to introduce this as "ctrl_dep() documents the<br />control dependency".<br /><br />If it's _only_ documentation, then a pure comment will do.<br /><br />So to me, the only reason to actually have a ctrl_dep() macro is that<br />we have an actual and existing real true bug.<br /><br />If the only reason for ctrl_dep() is made-up code that doesn't<br />actually exist, ie<br /><br />        if (READ_ONCE(x))<br />                WRITE_ONCE(y,1);<br />        else<br />                WRITE_ONCE(y,1);<br /><br />and the "READ_ONCE()" and "WRITE_ONCE()" being ordered in the face of<br />made-up examples like this, then ctrl_dep() shouldn't exist.<br /><br />(The alternative being some "if the compiler can statically know the<br />direction of the 'if()'" which is I think _equally_ made up, since the<br />whole point of a control dependency is that it's dynamic, and no<br />compiler can ever statiaclly determine the direction).<br /><br />See?<br /><br />This is why I want to have a real actual live example for that first commit.<br /><br />If we then in *other* cases add a "ctrl_dep()" for documentation<br />reasons, and because somebody is unsure about what the "if/else" sides<br />can contain and wants to make sure they cannot be merged, that's a<br />separate thing.<br /><br />But if we can't find a single case where this truly matters and the<br />particular actual present bug can be shown, then it really makes me go<br />"is this just all theoretical for purely made up examples that aren't<br />realistic"?<br /><br />I mean - just look at the above example of "could be done without the<br />'if()', and then re-ordered by the hardware". It really isn't very<br />realistic.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
