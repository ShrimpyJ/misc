    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/29/1031">First message in thread</a></li><li><a href="/lkml/2021/9/29/1031">Nick Desaulniers</a><ul><li class="origin"><a href="/lkml/2021/9/29/1088">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/29/1088">Nick Desaulniers</a><ul><li><a href="/lkml/2021/9/30/187">Rasmus Villemoes</a></li><li><a href="/lkml/2021/9/30/500">Masahiro Yamada</a></li><li><a href="/lkml/2021/9/30/963">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/30/978">Linus Torvalds</a></li><li><a href="/lkml/2021/10/1/527">Nick Desaulniers</a></li></ul></li><li><a href="/lkml/2021/9/30/1123">Nick Desaulniers</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Sep 2021 16:28:40 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] modpost: add allow list for llvm IPSCCP</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Sep 29, 2021 at 3:59 PM Nick Desaulniers<br />&lt;ndesaulniers&#64;google.com&gt; wrote:<br />&gt;<br />&gt; +static const struct secref_exception secref_allowlist[] = {<br />&gt; +       { .fromsym = "__first_node", .tosym = "numa_nodes_parsed" },<br />&gt; +       { .fromsym = "__next_node", .tosym = "numa_nodes_parsed" },<br />&gt; +       { .fromsym = "__nodes_weight", .tosym = "numa_nodes_parsed" },<br />&gt; +       { .fromsym = "early_get_smp_config", .tosym = "x86_init" },<br />&gt; +       { .fromsym = "test_bit", .tosym = "numa_nodes_parsed" },<br />&gt; +};<br /><br />This list is basically made-up and random.<br /><br />Why did those functions not get inlined? Wouldn't it be better to make<br />them always-inline?<br /><br />Or, like in at least the early_get_smp_config() case, just make it be<br />marked __init, so that if it doesn't get inlined it gets the right<br />section?<br /><br />It seems silly to add random source mappings to a checking program.<br /><br />It was bad for the gcc constprop hack, but at least there it was a<br />clear case of "this inlining failed". This ad-hoc list has cases of<br />things that are clearly wrong in general ("test_bit()" must not use<br />initdata), and that "ok, the function just doesn't have the right<br />section marker.<br /><br />(All of get_smp_config/early_get_smp_config/find_smp_config should be<br />__init, since they most definitely cannot work after __init time - but<br />why a compiler doesn't just inline them when they are one single<br />indirect call, I don't really get)<br /><br />         Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
