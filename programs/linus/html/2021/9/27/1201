    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/27/204">First message in thread</a></li><li><a href="/lkml/2021/9/27/408">Dan Carpenter</a><ul><li><a href="/lkml/2021/9/27/425">Arnd Bergmann</a><ul><li class="origin"><a href="/lkml/2021/9/28/401">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/28/401">Hans de Goede</a><ul><li><a href="/lkml/2021/9/28/439">Arnd Bergmann</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/9/28/424">Rasmus Villemoes</a></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2021/9/27/1201/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 27 Sep 2021 11:33:00 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] vboxsf: fix old signature detection</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 27, 2021 at 6:22 AM Arnd Bergmann &lt;arnd&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; More specifically, ' think '\377' may be either -1 or 255 depending on<br />&gt; the architecture.<br />&gt; On most architectures, 'char' is implicitly signed, but on some others<br />&gt; it is not.<br /><br />Yeah. That code is just broken.<br /><br />And Arnd, your patch may be "conceptually minimal", in that it keeps<br />thed broken code and makes it work. But it just dials up the oddity to<br />11.<br /><br />The proper patch is just this appended thing that stops playing silly<br />games, and just uses "memcmp()".<br /><br />I've verified that with sane build configurations, it just generates<br /><br />        testq   %rsi, %rsi<br />        je      .L25<br />        cmpl    $-33620224, (%rsi)<br />        je      .L31<br /><br />for that<br /><br />        if (data &amp;&amp; !memcmp(data, VBSF_MOUNT_SIGNATURE, 4)) {<br /><br />test. With a lot of crazy debug options you'll actually see the<br />"memcmp()", but the bad code generation is the least of your options<br />in that case.<br /><br />               Linus<br /> fs/vboxsf/super.c | 12 ++----------<br /> 1 file changed, 2 insertions(+), 10 deletions(-)<br /><br />diff --git a/fs/vboxsf/super.c b/fs/vboxsf/super.c<br />index 4f5e59f06284..37dd3fe5b1e9 100644<br />--- a/fs/vboxsf/super.c<br />+++ b/fs/vboxsf/super.c<br />&#64;&#64; -21,10 +21,7 &#64;&#64;<br /> <br /> #define VBOXSF_SUPER_MAGIC 0x786f4256 /* 'VBox' little endian */<br /> <br />-#define VBSF_MOUNT_SIGNATURE_BYTE_0 ('\000')<br />-#define VBSF_MOUNT_SIGNATURE_BYTE_1 ('\377')<br />-#define VBSF_MOUNT_SIGNATURE_BYTE_2 ('\376')<br />-#define VBSF_MOUNT_SIGNATURE_BYTE_3 ('\375')<br />+static const unsigned char VBSF_MOUNT_SIGNATURE[4] = "\000\377\376\375";<br /> <br /> static int follow_symlinks;<br /> module_param(follow_symlinks, int, 0444);<br />&#64;&#64; -386,12 +383,7 &#64;&#64; static int vboxsf_setup(void)<br /> <br /> static int vboxsf_parse_monolithic(struct fs_context *fc, void *data)<br /> {<br />-	unsigned char *options = data;<br />-<br />-	if (options &amp;&amp; options[0] == VBSF_MOUNT_SIGNATURE_BYTE_0 &amp;&amp;<br />-		       options[1] == VBSF_MOUNT_SIGNATURE_BYTE_1 &amp;&amp;<br />-		       options[2] == VBSF_MOUNT_SIGNATURE_BYTE_2 &amp;&amp;<br />-		       options[3] == VBSF_MOUNT_SIGNATURE_BYTE_3) {<br />+	if (data &amp;&amp; !memcmp(data, VBSF_MOUNT_SIGNATURE, 4)) {<br /> 		vbg_err("vboxsf: Old binary mount data not supported, remove obsolete mount.vboxsf and/or update your VBoxService.\n");<br /> 		return -EINVAL;<br /> 	}</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
