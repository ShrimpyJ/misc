    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/13/2449">First message in thread</a></li><li><a href="/lkml/2021/9/13/2452">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/13/2471">Stephen Rothwell</a><ul><li class="origin"><a href="/lkml/2021/9/13/2497">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/13/2497">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/13/2518">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2021/9/13/2523">Stephen Rothwell</a><ul><li><a href="/lkml/2021/9/13/2528">Linus Torvalds</a></li><li><a href="/lkml/2021/9/13/2569">Stephen Rothwell</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2021/9/13/2483/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 13 Sep 2021 18:29:26 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: linux-next: build failure after merge of the origin tree</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 13, 2021 at 5:58 PM Stephen Rothwell &lt;sfr&#64;canb.auug.org.au&gt; wrote:<br />&gt;<br />&gt; &gt; I have no idea why it then complains about removal of the GCC4 macros.<br />&gt;<br />&gt; Me neither :-(<br /><br />Ooh.<br /><br />So I'm looking at gcc sources, just to see if "maybe this thing is<br />somehow conditional".<br /><br />And bingo.<br /><br />In cpp_init_special_builtins(), gcc does<br /><br />      if (b-&gt;value == BT_HAS_ATTRIBUTE<br />          &amp;&amp; (CPP_OPTION (pfile, lang) == CLK_ASM<br />              || pfile-&gt;cb.has_attribute == NULL))<br />        continue;<br /><br />which basically says that if we're pre-processing an ASM file, the<br />magical pre-processor symbol for __has_attribute is not defined.<br /><br />I'm not sure what that 'pfile-&gt;cb.has_attribute == NULL' thing means,<br />but the libcpp/ChangeLog file also mentions this:<br /><br />        (cpp_init_special_builtins): Don't initialize __has_attribute<br />        or __has_cpp_attribute if CLK_ASM or pfile-&gt;cb.has_attribute is NULL.<br /><br />So this is a very very special magical thing: if building an *.S file,<br />__has_attribute magically goes away.<br /><br />And sure enough, that's exactly what is going on. It's during that<br />build of arch/powerpc/boot/crt0.S, and the reason this hits on powerpc<br />is that in arch/powerpc/boot/Makefile we have<br /><br />         -include $(srctree)/include/linux/compiler_attributes.h<br /><br />as part of BOOTCFLAGS, and then it does<br /><br />        BOOTAFLAGS      := -D__ASSEMBLY__ $(BOOTCFLAGS) -nostdinc<br /><br />to also include that header file when building ASM files.<br /><br />And our old GCC4 code silently hid this all, and made it work, because<br />for a *.S file  you'd then (completely illogically) get those fake<br />gcc-4 attribute macros.<br /><br />Now, do I know *why* that ppc Makefile it does that? No. Neither do I<br />know why the gcc people decided to just make ASM preprocessor so<br />special.<br /><br />But at least I understand how the odd error happens.<br /><br />This was too damn subtle. When you have to go read the compiler<br />sources to figure things like this out, you know you are too deep.<br /><br />The fix should be pretty simple: remove almost all of BOOTCFLAGS from<br />BOOTAFLAGS.<br /><br />But sadly, "almost all" isn't "all". There's the include path stuff,<br />there's the ABI and endianness, and there's the bit size ones.<br /><br />So I think the fix is either<br /><br /> (a) remove that<br /><br />         -include $(srctree)/include/linux/compiler_attributes.h<br /><br />     thing entirely, and add it as required to the C files.<br /><br />OR<br /><br /> (b) something like this ENTIRELY UNTESTED ATTACHED patch<br /><br />I will leave it to the powerpc people to make the right choice.<br /><br />               Linus<br /> arch/powerpc/boot/Makefile | 26 ++++++++++++++------------<br /> 1 file changed, 14 insertions(+), 12 deletions(-)<br /><br />diff --git a/arch/powerpc/boot/Makefile b/arch/powerpc/boot/Makefile<br />index 6900d0ac2421..9bcf62d65509 100644<br />--- a/arch/powerpc/boot/Makefile<br />+++ b/arch/powerpc/boot/Makefile<br />&#64;&#64; -32,28 +32,30 &#64;&#64; else<br />     BOOTAR := $(AR)<br /> endif<br /> <br />-BOOTCFLAGS    := -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs \<br />-		 -fno-strict-aliasing -O2 -msoft-float -mno-altivec -mno-vsx \<br />-		 -pipe -fomit-frame-pointer -fno-builtin -fPIC -nostdinc \<br />-		 -include $(srctree)/include/linux/compiler_attributes.h \<br />-		 $(LINUXINCLUDE)<br />+BOOTCOREFLAGS := $(LINUXINCLUDE)<br /> <br /> ifdef CONFIG_PPC64_BOOT_WRAPPER<br />-BOOTCFLAGS	+= -m64<br />+BOOTCOREFLAGS	+= -m64<br /> else<br />-BOOTCFLAGS	+= -m32<br />+BOOTCOREFLAGS	+= -m32<br /> endif<br /> <br />-BOOTCFLAGS	+= -isystem $(shell $(BOOTCC) -print-file-name=include)<br />+BOOTCOREFLAGS	+= -isystem $(shell $(BOOTCC) -print-file-name=include)<br /> <br /> ifdef CONFIG_CPU_BIG_ENDIAN<br />-BOOTCFLAGS	+= -mbig-endian<br />+BOOTCOREFLAGS	+= -mbig-endian<br /> else<br />-BOOTCFLAGS	+= -mlittle-endian<br />-BOOTCFLAGS	+= $(call cc-option,-mabi=elfv2)<br />+BOOTCOREFLAGS	+= -mlittle-endian<br />+BOOTCOREFLAGS	+= $(call cc-option,-mabi=elfv2)<br /> endif<br /> <br />-BOOTAFLAGS	:= -D__ASSEMBLY__ $(BOOTCFLAGS) -nostdinc<br />+BOOTCFLAGS    := -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs \<br />+		 -fno-strict-aliasing -O2 -msoft-float -mno-altivec -mno-vsx \<br />+		 -pipe -fomit-frame-pointer -fno-builtin -fPIC -nostdinc \<br />+		 -include $(srctree)/include/linux/compiler_attributes.h \<br />+		 $(BOOTCOREFLAGS)<br />+<br />+BOOTAFLAGS	:= -D__ASSEMBLY__ $(BOOTCOREFLAGS) -nostdinc<br /> <br /> BOOTARFLAGS	:= -crD<br /> </pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
