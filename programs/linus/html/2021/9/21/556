    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/20/303">First message in thread</a></li><li><a href="/lkml/2021/9/21/152">Arnd Bergmann</a><ul><li><a href="/lkml/2021/9/21/528">Anders Larsen</a><ul><li class="origin"><a href="/lkml/2021/9/21/567">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/21/567">Anders Larsen</a><ul><li><a href="/lkml/2021/9/21/570">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2021/9/21/660">Arnd Bergmann</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 21 Sep 2021 08:40:24 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] [RFC v2] qnx: avoid -Wstringop-overread warning, again</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Sep 21, 2021 at 8:15 AM Anders Larsen &lt;al&#64;alarsen.net&gt; wrote:<br />&gt;<br />&gt; they are available at the same offsets in struct qnx4_link_info as well, so<br />&gt; wouldn't it be even simpler to just always use the fields of the latter<br />&gt; structure?<br /><br />I'd rather use that third "clearly neither" structure member, just to<br />clarify what is going on.<br /><br />Yes, we could just always use the bigger structure, but then we'd<br />actually access a "link entry" even when it really isn't a link entry.<br /><br />Now we can have that bogus entry and the big comment that says exactly<br />why we use the bogus entry, and it's clear that the "name" we use is<br />not necessarily a link entry or an inode entry, it's that special<br />union with a big comment about a gcc bug above it..<br /><br />Anyway, I committed my patch that Arnd had tested, with a slightly<br />expanded comment. I'm sure yours would have compiled cleanly too.<br /><br />           Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
