    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/29/1031">First message in thread</a></li><li><a href="/lkml/2021/9/29/1088">Nick Desaulniers</a><ul><li><a href="/lkml/2021/9/30/187">Rasmus Villemoes</a></li><li><a href="/lkml/2021/9/30/500">Masahiro Yamada</a></li><li><a href="/lkml/2021/9/30/963">Linus Torvalds</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2021/10/1/527">Nick Desaulniers</a></li></ul></li><li><a href="/lkml/2021/9/30/1123">Nick Desaulniers</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 30 Sep 2021 12:21:29 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] modpost: add allow list for llvm IPSCCP</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 30, 2021 at 11:54 AM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Hmm. That's just a "bitmap_weight()", and that function in turn is<br />&gt; __always_inline.<br />&gt;<br />&gt; And the *reason* it is __always_inline is that it really wants to act<br />&gt; as a macro, and look at the second argument and do special things if<br />&gt; it is a small constant value.<br /><br />Looking around, it's not the only one. A lot of the bitmap functions<br />do that, but it looks like we're missing a few __always_inline cases.<br /><br />I wonder if we should have a macro to generate those "do X or Y<br />depending on small_const_nbits()" - and have it generate<br />__always_inline functions.<br /><br />Of course, some of those functions have more complex "check at build<br />time" cases, like that bitmap_clear/set() thing that has a special<br />case for when it just turns into "memset()"<br /><br />We have a lot of these kinds of situations where we have a "generic"<br />function that specializes itself based on arguments. And yes, they are<br />often recursive, so that you need more than one level of inlining to<br />actually determine what the arguments are.<br /><br />I don't know if we might have some way to mark these (and detect the<br />cases where they don't get inlined and we lose the vasy basic<br />optimizations).<br /><br />It's kind of similar to the _Generic() thing that does different<br />things based on static types, it's just that it does it based on<br />argument ranges.<br /><br />          Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
