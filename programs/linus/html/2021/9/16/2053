    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/9/16/453">First message in thread</a></li><li><a href="/lkml/2021/9/16/453">Rolf Eike Beer</a><ul><li><a href="/lkml/2021/9/16/772">Mike Galbraith</a><ul><li><a href="/lkml/2021/9/17/108">Mike Galbraith</a></li></ul></li><li class="origin"><a href="/lkml/2021/9/16/2148">Linus Torvalds</a><ul><li><a href="/lkml/2021/9/16/2148">Junio C Hamano</a><ul><li><a href="/lkml/2021/9/17/120">Rolf Eike Beer</a><ul><li><a href="/lkml/2021/9/17/989">Jeff King</a></li><li><a href="/lkml/2021/9/17/993">Linus Torvalds</a></li><li><a href="/lkml/2021/9/18/51">Mike Galbraith</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 16 Sep 2021 10:11:22 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: data loss when doing ls-remote and piped to command</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 16, 2021 at 5:17 AM Rolf Eike Beer &lt;eb&#64;emlix.com&gt; wrote:<br />&gt;<br />&gt; Am Donnerstag, 16. September 2021, 12:12:48 CEST schrieb Tobias Ulmer:<br />&gt; &gt; &gt; The redirection seems to be an important part of it. I now did:<br />&gt; &gt; &gt;<br />&gt; &gt; &gt; git ... 2&gt;&amp;1 | sha256sum<br />&gt; &gt;<br />&gt; &gt; I've tried to reproduce this since yesterday, but couldn't until now:<br />&gt; &gt;<br />&gt; &gt; 2&gt;&amp;1 made all the difference, took less than a minute.<br /><br />So if that redirection is what matters, and what causes problems, I<br />can almost guarantee that the reason is very simple:<br /><br />Your git repository (or more likely your upstream) has some problem,<br />it's getting reported on stderr, and because you mix stdout and stderr<br />with that '2&gt;&amp;1', you get randomly mixed output.<br /><br />Then it depends on timing where the mixing happens.<br /><br />Or rather, it depends on various different factors, like the buffering<br />done internally by stdio (where stdout generally will be<br />block-buffered, while stderr is usually line-buffered, which is why<br />you get odd mixing of the two).<br /><br />But timing can be an effect particularly with "git ls-remote" and<br />friends, because you may get errors from the transport asynchronously.<br /><br />So the different buffering ends up causing the effect of mixing things<br />in the middle of lines, while the timing differences due to the<br />asynchronous nature of the remote access pipeline will likely then<br />cause that odd mixing to be different.<br /><br />End result: corrupted lines, and different sha256sum every time.<br /><br />&gt; &gt; Running the same on Archlinux (5.13.13-arch1-1, 2.33.0) doesn't show the<br />&gt; &gt; problem.<br />&gt; &gt; This may well turn out not to be git, but a kernel issue.<br /><br />Much more likely that the other box just doesn't have the error situation.<br /><br />&gt; since you have been hacking around in pipe.c recently, I fear this isn't<br />&gt; entirely impossible. Have you any idea?<br /><br />Almost certainly not the kernel. Kernel - and other - differences<br />could affect timing, of course, but the whole "2&gt;&amp;1" really is<br />fundamentally bogus.<br /><br />If you don't have any errors, then the "2&gt;&amp;1" doesn't matter.<br /><br />And if you *do* have errors, then by definition the "2&gt;&amp;1" will mix in<br />the errors with the output randomly and piping them together is<br />senseless.<br /><br />Either way, it's wrong.<br /><br />So what I'd suggest Tobias should do is<br /><br />    git ... 2&gt; err | sha256sum<br /><br />which will send the errors to the "err" file. Take a look at that file<br />afterwards and see what is in it.<br /><br />Basically, '2&amp;&gt;1" is almost never the right thing to do, unless you<br />explicitly don't care about the output and just want to suppress it.<br /><br />So "2&amp;&gt;1 &gt; /dev/null" is common and natural.<br /><br />Of course, people also use it when they just want to eyeball the<br />errors mixed in, so doing that<br /><br />   ... 2&amp;&gt;1 | less<br /><br />thing isn't necessarily *wrong*, but it's somewhat dangerous and<br />confusing. Because when you do it you do need to be very aware of the<br />fact that the errors and output will be *mixed*. And the mixing will<br />not necessarily be at all sensible.<br /><br />Finally: pipes on a low level guarantee certain atomicity constraints,<br />so if you do low-level "write()" calls of size PIPE_BUF or less, the<br />contents will not be interleaved randomly.  HOWEVER. That's only true<br />at that "write()" level. The moment you use &lt;stdio&gt; for your IO, you<br />have buffering inside of the standard IO libraries, and if your code<br />isn't explicitly very careful about it, using setbuf() and fflush()<br />and friends, you'll get that random mixing.<br /><br />Anyway. That was a long email just to tell people it's almost<br />certainly user error, not the kernel.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
