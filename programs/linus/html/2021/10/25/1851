    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/10/20/836">First message in thread</a></li><li><a href="/lkml/2021/10/20/857">"Eric W. Biederman"</a><ul><li><a href="/lkml/2021/10/21/845">Kees Cook</a><ul><li><a href="/lkml/2021/10/21/920">(Eric W. Biederman)</a><ul><li><a href="/lkml/2021/10/21/1129">Kees Cook</a></li></ul></li></ul></li><li><a href="/lkml/2021/10/21/1219">"Andy Lutomirski"</a><ul><li><a href="/lkml/2021/10/24/197">(Eric W. Biederman)</a></li></ul></li><li><a href="/lkml/2021/10/25/1701">Linus Torvalds</a><ul><li><a href="/lkml/2021/10/25/1717">(Eric W. Biederman)</a></li></ul></li><li><a href="/lkml/2021/10/25/1756">Andy Lutomirski</a><ul><li class="origin"><a href="/lkml/2021/10/25/1896">Linus Torvalds</a><ul><li><a href="/lkml/2021/10/25/1896">"Andy Lutomirski"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 25 Oct 2021 16:45:59 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2 10/32] signal/vm86_32: Properly send SIGSEGV when the vm86 state cannot be saved.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Oct 25, 2021 at 3:25 PM Andy Lutomirski &lt;luto&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; I think the result would be nicer if, instead of adding an extra goto,<br />&gt; you just literally moved all the cleanup under the unsafe_put_user()s<br />&gt; above them.  Unless I missed something, none of the put_user stuff reads<br />&gt; any state that is written by the cleanup code.<br /><br />Sure it does:<br /><br />        memcpy(&amp;regs-&gt;pt, &amp;vm86-&gt;regs32, sizeof(struct pt_regs));<br /><br />is very much part of the cleanup code, and overwrites that regs-&gt;pt thing.<br /><br />Which is exactly what we're writing back to user space in that<br />unsafe_put_user() thing.<br /><br />That said, thinking more about this, and looking at it again, I take<br />back my statement that we could just make it a catchable SIGSEGV<br />instead.<br /><br />If we can't write the vm86 state to user space, we will have<br />fundamentally lost it, and while it's not fatal to the kernel, and<br />while we've recovered the original 32-bit state, it's not something<br />that user space can sanely recover from because the register state at<br />the end of the vm86 work has now been irrecoverably thrown away.<br /><br />So I think Eric's patch is fine.<br /><br />Except, as mentioned as part of the other patch, the "force_sigsegv()"<br />conversion to use "force_fatal_sig()" was broken, because that<br />function wasn't actually fatal at all.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
