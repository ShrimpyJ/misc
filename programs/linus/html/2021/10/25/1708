    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/10/25/1035">First message in thread</a></li><li><a href="/lkml/2021/10/25/1627">Matthew Wilcox</a><ul><li><a href="/lkml/2021/10/25/1690">Kees Cook</a><ul><li class="origin"><a href="/lkml/2021/10/25/1760">Linus Torvalds</a><ul><li><a href="/lkml/2021/10/25/1760">Kees Cook</a><ul><li><a href="/lkml/2021/10/25/1841">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 25 Oct 2021 14:17:58 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] secretmem: Prevent secretmem_users from wrapping to zero</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Oct 25, 2021 at 2:04 PM Kees Cook &lt;keescook&#64;chromium.org&gt; wrote:<br />&gt;<br />&gt; Is secretmem different? We're trying to count how many of these we have,<br />&gt; this is a common pattern in, for example, the network code which does<br />&gt; this kind of thing a lot.<br /><br />Yes, secretmem is different.<br /><br />A refcount being zero means that the data it referenced no longer exists.<br /><br />That's not what the secretmem counter meant at all.<br /><br />Making it a refcount was simply WRONG. It's not a refcount, it's a<br />usage count, and the fact that syzbot caught the warning just shows<br />how wrong it was.<br /><br />Stop arguing for garbage. It was wrong, just admit it. The semantics<br />for "refcount" is something else than what that code had. As a result,<br />it got reverted. I've applied Willy's patch that actually makes sense.<br /><br />Arguing for garbage in the name of "security" is still garbage. In<br />fact, it only causes confusion, and as such is likely to result in<br />problems - including security problems - later.<br /><br />Because confusion about semantics is bad. And that was what that patch was.<br /><br />And I want to state - again - how dangerous this "refcounts are always<br />prefereable to atomics" mental model is. Refcounts are _not_<br />fundamentally preferable to atomics. They are slower, bigger, and have<br />completely different semantics.<br /><br />So if something isn't a refcount, it damn well shouldn't use "refcount_t".<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
