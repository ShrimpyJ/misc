    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/10/25/1035">First message in thread</a></li><li><a href="/lkml/2021/10/25/1760">Kees Cook</a><ul><li><a href="/lkml/2021/10/25/1841">Linus Torvalds</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2021/10/25/1894">Kees Cook</a><ul><li><a href="/lkml/2021/10/25/1920">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2021/10/25/1932">Matthew Wilcox</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 25 Oct 2021 17:02:18 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] secretmem: Prevent secretmem_users from wrapping to zero</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Oct 25, 2021 at 4:37 PM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Stop thinking that refcount_t is a good type. Start realizing the<br />&gt; downsides. Start understanding that saturation is a HORRENDOUSLY BAD<br />&gt; solution, and horrible QoI.<br /><br />Basically, refcount_t should be used purely for internal kernel data<br />structures - it makes perfect sense for things like the 'struct<br />device' resource handling, for example.<br /><br />In fact, there it is good for two reasons:<br /><br /> - it's not counting some user resource, so users shouldn't have any<br />way to trigger overflow and saturation which causes problems<br /><br /> - it's used by random driver stuff, which is often where kernel bugs<br />happen and testing is fundamentally limited by hw availability etc<br /><br />but in general, anything that is user-accountable needs to have<br />_limits_, not saturation. It's why the page count is a "atomic_t" even<br />if the name of the field is "_refcount". Because refcount_t is the<br />INFERIOR TYPE.<br /><br />Using an atomic_t properly is actually the much better option. It's<br />just that "properly" might be a bit more code, involving actual limit<br />checking.<br /><br />'refcount_t' is basically a shorthand for "I didn't bother doing this<br />right, so I'm using this type that adds debugging, warns and stops<br />working and might DoS the kernel".<br /><br />It's a crutch. It's not the alpha and the omega of counting types. It<br />has its place, but I really want to stress how people should<br />ABSOLUTELY not think "oh, refcount_t is better than atomic_t".<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
