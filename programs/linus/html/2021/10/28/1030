    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/10/19/663">First message in thread</a></li><li><a href="/lkml/2021/10/27/1025">Linus Torvalds</a><ul><li><a href="/lkml/2021/10/28/950">Catalin Marinas</a><ul><li><a href="/lkml/2021/10/28/982">Catalin Marinas</a></li><li><a href="/lkml/2021/10/28/1008">=?UTF-8?Q?Andreas_Gr=C3=BCnbacher?=</a><ul><li><a href="/lkml/2021/10/29/377">Catalin Marinas</a></li></ul></li><li class="origin"><a href="/lkml/2021/10/29/671">Linus Torvalds</a><ul><li><a href="/lkml/2021/10/29/671">Catalin Marinas</a><ul><li><a href="/lkml/2021/10/29/720">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 28 Oct 2021 15:32:23 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v8 00/17] gfs2: Fix mmap + page fault deadlocks</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Oct 28, 2021 at 2:21 PM Catalin Marinas &lt;catalin.marinas&#64;arm.com&gt; wrote:<br />&gt;<br />&gt; They do look fairly similar but we should have the information in the<br />&gt; fault handler to distinguish: not a page fault (pte permission or p*d<br />&gt; translation), in_task(), user address, fixup handler. But I agree the<br />&gt; logic looks fragile.<br /><br />So thinking about this a bit more, I think I have a possible<br />suggestion for how to handle this..<br /><br />The pointer color fault (or whatever some other architecture may do to<br />generate sub-page faults) is not only not recoverable in the sense<br />that we can't fix it up, it also ends up being a forced SIGSEGV (ie it<br />can't be blocked - it has to either be caught or cause the process to<br />be killed).<br /><br />And the thing is, I think we could just make the rule be that kernel<br />code that has this kind of retry loop with fault_in_pages() would<br />force an EFAULT on a pending SIGSEGV.<br /><br />IOW, the pending SIGSEGV could effectively be exactly that "thread flag".<br /><br />And that means that fault_in_xyz() wouldn't need to worry about this<br />situation at all: the regular copy_from_user() (or whatever flavor it<br />is - to/from/iter/whatever) would take the fault. And if it's a<br />regular page fault,. it would act exactly like it does now, so no<br />changes.<br /><br />If it's a sub-page fault, we'd just make the rule be that we send a<br />SIGSEGV even if the instruction in question has a user exception<br />fixup.<br /><br />Then we just need to add the logic somewhere that does "if active<br />pending SIGSEGV, return -EFAULT".<br /><br />Of course, that logic might be in fault_in_xyz(), but it migth also be<br />a separate function entirely.<br /><br />So this does effectively end up being a thread flag, but it's also<br />slightly more than that - it's that a sub-page fault from kernel mode<br />has semantics that a regular page fault does not.<br /><br />The whole "kernel access doesn't cause SIGSEGV, but returns -EFAULT<br />instead" has always been an odd and somewhat wrong-headed thing. Of<br />course it should cause a SIGSEGV, but that's not how Unix traditionall<br />worked. We would just say "color faults always raise a signal, even if<br />the color fault was triggered in a system call".<br /><br />(And I didn't check: I say "SIGSEGV" above, but maybe the pointer<br />color faults are actually SIGBUS? Doesn't change the end result).<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
