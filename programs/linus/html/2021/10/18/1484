    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/10/18/1413">First message in thread</a></li><li><a href="/lkml/2021/10/18/1413">Nathan Chancellor</a><ul><li><a href="/lkml/2021/10/18/1423">Nick Desaulniers</a><ul><li class="origin"><a href="/lkml/2021/10/18/1512">Linus Torvalds</a><ul><li><a href="/lkml/2021/10/18/1512">Nick Desaulniers</a><ul><li><a href="/lkml/2021/10/18/1713">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/10/19/831">Hans de Goede</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Oct 2021 09:41:15 -1000</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] platform/x86: thinkpad_acpi: Fix bitwise vs. logical warning</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Oct 18, 2021 at 8:34 AM Nick Desaulniers<br />&lt;ndesaulniers&#64;google.com&gt; wrote:<br />&gt;<br />&gt; LGTM, thanks for the patch! I guess this would be the first<br />&gt; "interesting" case this warning has found in kernel sources?<br /><br />The patch looks obviously correct (tm), but I'm not convinced that the<br />warning is actually all that interesting.<br /><br />The thing is, using bitwise operators for booleans is _exactly_ the<br />same as using logical ones as long as there are no side effects. In<br />fact, any compiler worth its salt will already convert some cases<br />between the two as an optimization just as part of code generation.<br /><br />Of course, that "as long as there are no side effects" is the big<br />thing - then the short-circuiting of the actual logical operations<br />clearly matters. But that wasn't actually the case in this situation<br />(or in the kvm situation elsewhere).<br /><br />So in both of these cases, the difference between "|" and "||" ends up<br />purely being a hint to the compiler.<br /><br />In this case, even if there are no side effects, it's clearly<br />pointless to do the second strlencmp() if the first one already<br />matched, and the "||" is unquestionably the right hint (and honestly,<br />most compilers probably wouldn't even be able to tell "no side<br />effects" because it's a fairly complex expression - but since it's<br />inlined and uses compiler intrinsics, the compiler _might_ actually be<br />able to see that the two are equivalent).<br /><br />But no, I don't think that warning is very interesting. In fact, the<br />warning might be overall detrimental, in case the hints were<br />intentional (like the kvm case - although I'm not convinced the kvm<br />hinting was actually meaningful).<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
