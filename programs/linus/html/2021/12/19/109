    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/12/17/298">First message in thread</a></li><li><a href="/lkml/2021/12/19/2">Nadav Amit</a><ul><li><a href="/lkml/2021/12/19/10">John Hubbard</a><ul><li><a href="/lkml/2021/12/19/31">Matthew Wilcox</a></li></ul></li><li><a href="/lkml/2021/12/19/107">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/19/108">David Hildenbrand</a></li><li class="origin"><a href="/lkml/2021/12/19/110">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/19/110">David Hildenbrand</a><ul><li><a href="/lkml/2021/12/19/153">Matthew Wilcox</a></li><li><a href="/lkml/2021/12/20/1368">Jason Gunthorpe</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 19 Dec 2021 09:44:41 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v1 06/11] mm: support GUP-triggered unsharing via FAULT_FLAG_UNSHARE (!hugetlb)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">David, you said that you were working on some alternative model. Is it<br />perhaps along these same lines below?<br /><br />I was thinking that a bit in the page tables to say "this page is<br />exclusive to this VM" would be a really simple thing to deal with for<br />fork() and swapout and friends.<br /><br />But we don't have such a bit in general, since many architectures have<br />very limited sets of SW bits, and even when they exist we've spent<br />them on things like UDDF_WP.,<br /><br />But the more I think about the "bit doesn't even have to be in the<br />page tables", the more I think maybe that's the solution.<br /><br />A bit in the 'struct page' itself.<br /><br />For hugepages, you'd have to distribute said bit when  you split the hugepage.<br /><br />But other than that it looks quite simple: anybody who does a virtual<br />copy will inevitably be messing with the page refcount, so clearing<br />the "exclusive ownership" bit wouldn't be costly: the 'struct page'<br />cacheline is already getting dirtied.<br /><br />Or what was your model you were implying you were thinking about in<br />your other email? You said<br /><br />  "I might have had an idea yesterday on how to fix most of the issues<br />   without relying on the mapcount, doing it similar [..]"<br /><br />but I didn't then reply to that email because I had just written this<br />other long email to Nadav.<br /><br />           Linus<br /><br />On Sun, Dec 19, 2021 at 9:27 AM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Adding another bit in the page tables - *purely* to say "this VM owns<br />&gt; the page outright" - would be fairly powerful. And fairly simple.<br />&gt;<br />&gt; Then any COW event will set that bit - because when you actually COW,<br />&gt; the page you install is *yours*. No questions asked.<br />&gt;<br /> [ snip snip ]<br />&gt;<br />&gt; Btw, the extra bit doesn't really have to be in the page tables. It<br />&gt; could be a bit in the page itself. We could add another page bit that<br />&gt; we just clear when we do the "add ref to page as you make a virtual<br />&gt; copy during fork() etc".<br />&gt;<br />&gt; And no, we can't use "pincount" either, because it's not exact. The<br />&gt; fact that the page count is so elevated that we think it's pinned is a<br />&gt; _heuristic_, and that's ok when you have the opposite problem, and ask<br />&gt; "*might* this page be pinned". You want to never get a false negative,<br />&gt; but it can get a false positive.<br />&gt;<br />&gt;                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
