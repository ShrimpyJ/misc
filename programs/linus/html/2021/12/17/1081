    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/12/17/298">First message in thread</a></li><li><a href="/lkml/2021/12/17/1024">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/17/1066">David Hildenbrand</a><ul><li class="origin"><a href="/lkml/2021/12/17/1086">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/17/1086">David Hildenbrand</a><ul><li><a href="/lkml/2021/12/17/1097">Nadav Amit</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 17 Dec 2021 14:58:56 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v1 06/11] mm: support GUP-triggered unsharing via FAULT_FLAG_UNSHARE (!hugetlb)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Dec 17, 2021 at 2:29 PM David Hildenbrand &lt;david&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; While I do care about future use cases, I cannot possibly see fork() not<br />&gt; requiring the mmap_lock in the foreseeable future. Just so much depends<br />&gt; on it as of now.<br /><br />It's not that *fork()* depends on it.<br /><br />Of course fork() takes the mmap_sem.<br /><br />It's that fast-gup really really doesn't want it, and can't take it.<br /><br />So any fast-gup user fundamentally cannot look at mapcount(), because<br />that would be fundamentally wrong and racy, and could race with fork.<br /><br />And yet, as far as I can tell, that's *exactly* what your gup patches<br />do, with gup_pte_range() adding<br /><br />+               if (!pte_write(pte) &amp;&amp; gup_must_unshare(flags, page, false)) {<br />+                       put_compound_head(head, 1, flags);<br />+                       goto pte_unmap;<br />+               }<br /><br />which looks at the page mapcount without holding the mmap sem at all.<br /><br />And see my other email - I think there are other examples of your<br />patches looking at data that isn't stable because you don't hold the<br />right locks.<br /><br />And you can't even do the optimistic case without taking the lock,<br />because in your world, a COW that optimistically copies in the case of<br />a race condition is fundamentally *wrong* and buggy. Because in your<br />world-view, GUP and COW are very different and have different rules,<br />but you need things to be *exact*, and they aren't.<br /><br />And none of this is anything at least I can think about, because I<br />don't see what the "design" is.<br /><br />I really have a hard time following what the rules actually are. You<br />seem to think that "page_mapcount()" is a really simple rule, and I<br />fundamentally disagree. It's a _very_ complicated thing indeed, with<br />locking issues, AND YOU ACTIVELY VIOLATE THE LOCKING RULES!<br /><br />See why I'm so unhappy?<br /><br />We *did* do the page_mapcount() thing. It was bad. It forced COW to<br />always take the page lock. There's a very real reason why I'm pushing<br />my "let's have a _design_ here", instead of your "let's look at<br />page_mapcount without even doing the locking".<br /><br />And yes, I *know* that fork() takes the mmap_sem, and likely always<br />will. That really isn't the problem here. The problem is that your<br />page_mapcount() paths DO NOT take that lock.<br /><br />Btw, maybe I'm misreading things. I looked at the individual patches,<br />I didn't apply them, maybe I missed something. But I don't think I am.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
