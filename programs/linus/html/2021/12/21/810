    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/12/17/298">First message in thread</a></li><li><a href="/lkml/2021/12/21/742">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/21/773">David Hildenbrand</a><ul><li class="origin"><a href="/lkml/2021/12/21/864">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/21/864">David Hildenbrand</a><ul><li><a href="/lkml/2021/12/21/992">John Hubbard</a></li></ul></li></ul></li><li><a href="/lkml/2021/12/21/812">Jan Kara</a><ul><li><a href="/lkml/2021/12/21/865">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/21/889">David Hildenbrand</a></li><li><a href="/lkml/2021/12/21/995">John Hubbard</a></li></ul></li></ul></li><li><a href="/lkml/2021/12/21/902">Jason Gunthorpe</a><ul><li><a href="/lkml/2021/12/22/139">David Hildenbrand</a><ul><li><a href="/lkml/2021/12/22/230">David Hildenbrand</a></li></ul></li></ul></li><li><a href="/lkml/2021/12/21/1085">Jason Gunthorpe</a><ul><li><a href="/lkml/2021/12/22/127">David Hildenbrand</a></li><li><a href="/lkml/2021/12/22/398">Jan Kara</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 21 Dec 2021 10:00:22 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v1 06/11] mm: support GUP-triggered unsharing via FAULT_FLAG_UNSHARE (!hugetlb)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Dec 21, 2021 at 9:40 AM David Hildenbrand &lt;david&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; &gt; I do think the existing "maybe_pinned()" logic is fine for that. The<br />&gt; &gt; "exclusive to this VM" bit can be used to *help* that decision -<br />&gt; &gt; because only an exclusive page can be pinned - bit I don't think it<br />&gt; &gt; should _replace_ that logic.<br />&gt;<br />&gt; The issue is that O_DIRECT uses FOLL_GET and cannot easily be changed to<br />&gt; FOLL_PIN unfortunately. So I'm *trying* to make it more generic such<br />&gt; that such corner cases can be handled as well correctly. But yeah, I'll<br />&gt; see where this goes ... O_DIRECT has to be fixed one way or the other.<br />&gt;<br />&gt; John H. mentioned that he wants to look into converting that to<br />&gt; FOLL_PIN. So maybe that will work eventually.<br /><br />I'd really prefer that as the plan.<br /><br />What exactly is the issue with O_DIRECT? Is it purely that it uses<br />"put_page()" instead of "unpin", or what?<br /><br />I really think that if people look up pages and expect those pages to<br />stay coherent with the VM they looked it up for, they _have_ to<br />actively tell the VM layer - which means using FOLL_PIN.<br /><br />Note that this is in absolutely no way a "new" issue. It has *always*<br />been true. If some O_DIORECT path depends on pinning behavior, it has<br />never worked correctly, and it is entirely on O_DIRECT, and not at all<br />a VM issue. We've had people doing GUP games forever, and being burnt<br />by those games not working reliably.<br /><br />GUP (before we even had the notion of pinning) would always just take<br />a reference to the page, but it would not guarantee that that exact<br />page then kept an association with the VM.<br /><br />Now, in *practice* this all works if:<br /><br /> (a) the GUP user had always written to the page since the fork<br />(either explicitly, or with FOLL_WRITE obviously acting as such)<br /><br /> (b) the GUP user never forks afterwards until the IO is done<br /><br /> (c) the GUP user plays no other VM games on that address<br /><br />and it's also very possible that it has worked by pure luck (ie we've<br />had a lot of random code that actively mis-used things and it would<br />work in practice just because COW would happen to cut the right<br />direction etc).<br /><br />Is there some particular GUP user you happen to care about more than<br />others? I think it's a valid option to try to fix things up one by<br />one, even if you don't perhaps fix _all_ cases.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
