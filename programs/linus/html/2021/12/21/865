    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/12/17/298">First message in thread</a></li><li><a href="/lkml/2021/12/21/773">David Hildenbrand</a><ul><li><a href="/lkml/2021/12/21/810">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/21/864">David Hildenbrand</a><ul><li><a href="/lkml/2021/12/21/992">John Hubbard</a></li></ul></li></ul></li><li><a href="/lkml/2021/12/21/812">Jan Kara</a><ul><li class="origin"><a href="/lkml/2021/12/21/889">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/21/889">David Hildenbrand</a><ul><li><a href="/lkml/2021/12/21/901">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2021/12/21/995">John Hubbard</a></li></ul></li></ul></li><li><a href="/lkml/2021/12/21/902">Jason Gunthorpe</a><ul><li><a href="/lkml/2021/12/22/139">David Hildenbrand</a><ul><li><a href="/lkml/2021/12/22/230">David Hildenbrand</a><ul><li><a href="/lkml/2021/12/22/388">Jan Kara</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2021/12/21/1085">Jason Gunthorpe</a><ul><li><a href="/lkml/2021/12/22/127">David Hildenbrand</a></li><li><a href="/lkml/2021/12/22/398">Jan Kara</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 21 Dec 2021 10:30:59 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v1 06/11] mm: support GUP-triggered unsharing via FAULT_FLAG_UNSHARE (!hugetlb)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Dec 21, 2021 at 10:07 AM Jan Kara &lt;jack&#64;suse.cz&gt; wrote:<br />&gt;<br />&gt; For record we always intended (and still intend) to make O_DIRECT use<br />&gt; FOLL_PIN. Just it is tricky because some users mix pages pinned with GUP<br />&gt; and pages acquired through get_page() in a single bio (such as zero page)<br />&gt; and thus it is non-trivial to do the right thing on IO completion (unpin or<br />&gt; just put_page).<br /><br />Side note: the new "exclusive VM" bit wouldn't _solve_ this issue, but<br />it might make it much easier to debug and catch.<br /><br />If we only set the exclusive VM bit on pages that get mapped into user<br />space, and we guarantee that GUP only looks up such pages, then we can<br />also add a debug test to the "unpin" case that the bit is still set.<br /><br />And that would catch anybody who ends up using other pages for<br />unpin(), and you could have a WARN_ON() for it (obviously also trigger<br />on the page count being too small to unpin).<br /><br />That way, at least from a kernel debugging and development standpoint<br />it would make it easy to see "ok, this unpinning got a page that<br />wasn't pinned", and it would help find these cases where some<br />situation had used just a get_page() rather than a pin to get a page<br />pointer.<br /><br />No?<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
