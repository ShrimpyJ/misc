    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/12/19/48">First message in thread</a></li><li><a href="/lkml/2021/12/19/136">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/19/137">Linus Torvalds</a></li><li><a href="/lkml/2021/12/20/3">Dave Hansen</a><ul><li class="origin"><a href="/lkml/2021/12/20/1017">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/20/1017">Linus Torvalds</a><ul><li><a href="/lkml/2022/1/10/1153">Thomas Gleixner</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 20 Dec 2021 08:20:55 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] core/urgent for v5.16-rc6</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Dec 19, 2021 at 9:25 PM Dave Hansen &lt;dave.hansen&#64;intel.com&gt; wrote:<br />&gt;<br />&gt; The patch definitely makes the code easier to read.  But, it looks like<br />&gt; we need to invert the sigaltstack_size_valid() condition from the patch:<br /><br />Yup, that's just me messign up when moving code around and adding the<br />second "unlikely()",<br /><br />&gt; Also, the sigaltstack_lock() lock really is needed over the assignments<br />&gt; like this:<br />&gt;<br />&gt; &gt;                 t-&gt;sas_ss_sp = (unsigned long) ss_sp;<br />&gt; &gt;                 t-&gt;sas_ss_size = ss_size;<br />&gt; &gt;                 t-&gt;sas_ss_flags = ss_flags;<br />&gt; to prevent races with validate_sigaltstack().<br /><br />Ugh. This code is garbage. Why the hell does it want a lock for<br />something stupid like this?<br /><br />That lock should just be removed entirely as pointless. If some thread<br />has a sigaltstack that is too small, too bad.<br /><br />We've never done that validation before, why did people think it was a<br />good idea to add it now?<br /><br />And when added, why did people think it had to be done so carefully<br />under a lock?<br /><br />Sure, go ahead and make it a "be polite, don't let people ask for<br />xstate features that won't fit an altstack". But at the point where<br />people noticed it caused lock contention, just give it up, and do the<br />unlocked version since it has no actual important semantics.<br /><br />Whatever. I don't care that much, but this all smells like you just<br />dug your own hole for very questionable causes, and instead of a<br />"don't do that then" this all is doubling down on a bad idea.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
