    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/12/16/761">First message in thread</a></li><li><a href="/lkml/2021/12/16/865">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/16/1091">Matthew Wilcox</a><ul><li class="origin"><a href="/lkml/2021/12/16/1143">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/16/1143">Matthew Wilcox</a></li></ul></li><li><a href="/lkml/2021/12/16/1208">David Howells</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 16 Dec 2021 11:46:18 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v3 56/68] afs: Handle len being extending over page end in write_begin/write_end</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Dec 16, 2021 at 11:28 AM Matthew Wilcox &lt;willy&#64;infradead.org&gt; wrote:<br />&gt;<br />&gt; Since -&gt;write_begin is the place where we actually create folios, it<br />&gt; needs to know what size folio to create.  Unless you'd rather we do<br />&gt; something to actually create the folio before calling -&gt;write_begin?<br /><br />I don't think we can create a folio before that, because the<br />filesystem may not even want a folio (think persistent memory or<br />whatever).<br /><br />Honestly, I think you need to describe more what you actually want to<br />happen. Because generic_perform_write() has already decided to use a<br />PAGE_SIZE by the time write_begin() is called,<br /><br />Right now the world order is "we chunk things by PAGE_SIZE", and<br />that's just how it is.<br /><br />I can see other options - like the filesystem passing in the chunk<br />size when it calls generic_perform_write().<br /><br />Or we make the rule be that -&gt;write_begin() simply always is given the<br />whole area, and the filesystem can decide how it wants to chunk things<br />up, and return the size of the write chunk in the status (rather than<br />the current "success or error").<br /><br />But at no point will this *EVER* be a "afs will limit the size to the<br />folio size" issue. Nothing like that will ever make sense. Allowing<br />bigger chunks will not be about any fscache issues, it will be about<br />every single filesystem that uses generic_perform_write().<br /><br />So I will NAK these patches by David, because they are fundamentally<br />wrong, whichever way we turn. Any "write in bigger chunks" patch will<br />be something else entirely.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
