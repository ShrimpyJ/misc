    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/12/17/298">First message in thread</a></li><li><a href="/lkml/2021/12/18/205">Jason Gunthorpe</a><ul><li><a href="/lkml/2021/12/18/209">David Hildenbrand</a></li><li><a href="/lkml/2021/12/18/274">Nadav Amit</a><ul><li class="origin"><a href="/lkml/2021/12/18/337">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/18/337">Nadav Amit</a><ul><li><a href="/lkml/2021/12/18/339">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 18 Dec 2021 14:53:38 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v1 06/11] mm: support GUP-triggered unsharing via FAULT_FLAG_UNSHARE (!hugetlb)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Dec 18, 2021 at 1:49 PM Nadav Amit &lt;namit&#64;vmware.com&gt; wrote:<br />&gt;<br />&gt; Yes, I guess that you pin the pages early for RDMA registration, which<br />&gt; is also something you may do for IO-uring buffers. This would render<br />&gt; userfaultfd unusable.<br /><br />I think this is all on usefaultfd.<br /><br />That code literally stole two of the bits from the page table layout -<br />bits that we could have used for better things.<br /><br />And guess what? Because it required those two bits in the page tables,<br />and because that's non-portable, it turns out that UFFD_WP can only be<br />enabled and only works on x86-64 in the first place.<br /><br />So UFFS_WP is fundamentally non-portable. Don't use it.<br /><br />Anyway, the good news is that I think that exactly because uffd_wp<br />stole two bits from the page table layout, it already has all the<br />knowledge it needs to handle this entirely on its own. It's just too<br />lazy to do so now.<br /><br />In particular, it has that special UFFD_WP bit that basically says<br />"this page is actually writable, but I've made it read-only just to<br />get the fault for soft-dirty".<br /><br />And the hint here is that if the page truly *was* writable, then COW<br />just shouldn't happen, and all that the page fault code should do is<br />set soft-dirty and return with the page set writable.<br /><br />And if the page was *not* writable, then UFFD_WP wasn't actually<br />needed in the first place, but the uffd code just sets it blindly.<br /><br />Notice? It _should_ be just an operation based purely on the page<br />table contents, never even looking at the page AT ALL. Not even the<br />page count, much less some mapcount thing.<br /><br />Done right, that soft-dirty thing could work even with no page backing<br />at all, I think.<br /><br />But as far as I know, we've actually never seen a workload that does<br />all this, so.. Does anybody even have a test-case?<br /><br />Because I do think that UFFD_WP really should never really look at the<br />page, and this issue is actually independent of the "page_count() vs<br />page_mapcount()" discussion.<br /><br />(Somewhat related aside: Looking up the page is actually one of the<br />more expensive operations of a page fault and a lot of other page<br />table manipulation functions - it's where most of the cache misses<br />happen. That's true on the page fault side, but it's also true for<br />things like copy_page_range() etc)<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
