    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/12/17/298">First message in thread</a></li><li><a href="/lkml/2021/12/17/1154">Nadav Amit</a><ul><li><a href="/lkml/2021/12/18/1">Matthew Wilcox</a><ul><li><a href="/lkml/2021/12/18/2">Nadav Amit</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 18 Dec 2021 10:37:26 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v1 06/11] mm: support GUP-triggered unsharing via FAULT_FLAG_UNSHARE (!hugetlb)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Dec 17, 2021 at 9:03 PM Matthew Wilcox &lt;willy&#64;infradead.org&gt; wrote:<br />&gt;<br />&gt; Why are we comparing page_count() against 1 and not 1 + PageLRU(page)?<br />&gt; Having a reference from the LRU should be expected.  Is it because of<br />&gt; some race that we'd need to take the page lock to protect against?<br /><br />The LRU doesn't actually count towards a reference - the LRU list is<br />maintained independently of the lifetime of the page (and is torn down<br />on last release - which wouldn't work if the LRU list itself held a<br />ref to the page).<br /><br />But atr least some of the code that gathers up pages to then put them<br />on the LRU list takes a ref to the pages before passing them off, just<br />to guarantee to keep them around during the operation.<br /><br />So yes, various things can increment page counts in a transitory manner.<br /><br />I still *much* prefer a reliable COW over one that doesn't happen enough.<br /><br />The page count can have these (on the whole fairly rare) blips. That's<br />ok. The page count is still *reliable*, in ways that teh mapcount can<br />never be. The mapcount fundamentally doesn't show "other non-mapped<br />users".<br /><br />So Nadav is correct that unnecessary cow events will cause extra work<br />(and the TLB flush is a good point - just marking a page writable<br />as-is is much cheaper).<br /><br />But I'm looking at teh actual code, and the actual logic, and I am<br />dismissign the whole mapcount games completely.<br /><br />David has a 10-patch series (plus one test) of complex, grotty,<br />hard-to-understand code with new flags.<br /><br />I posted a patch that removed 10 lines, and fixes the problem case his<br />test-case was designed for.<br /><br />I think that really speaks to the issues.<br /><br />My approach is *simpler* and a hell of a lot more robust. And as<br />mentioned, I can explain it.<br /><br />And christ the thing I'm advocating for is WHAT WE ALREADY DO FOR<br />99.99% of all cases. Why? Because it's literally how the regular COW<br />paths work TODAY.<br /><br />And we had benchmarks show performance improvements (or no movement at<br />all) from when we made those changes. Not the downsides that people<br />claim.<br /><br />It's only the THP paths that are broken (and possibly some individual<br />mis-uses of GUP - people have mentioned virtio).<br /><br />So nbow people are trying to do a fragile, complex thing that was<br />shown to be problematic for the common case, and they are doing it for<br />the insanely rare case? When a ten-line removal patch fixes that one<br />too?<br /><br />              Linus<br /><br />PS. Yes, yes, that 10-line removal patch is obviously still not<br />tested, it's still likely incomplete because the THP case needs to do<br />the page-pinning logic on the other side too, so I'm very obviously<br />over-simplifying. But the fact that the *normal* pages already do this<br />correctly - and don't use mapcount - should really make people go<br />"Hmm".<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
