    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2021/12/17/298">First message in thread</a></li><li><a href="/lkml/2021/12/17/979">Linus Torvalds</a><ul><li><a href="/lkml/2021/12/18/305">"Kirill A. Shutemov"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 18 Dec 2021 15:05:55 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v1 06/11] mm: support GUP-triggered unsharing via FAULT_FLAG_UNSHARE (!hugetlb)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Dec 18, 2021 at 2:52 PM Kirill A. Shutemov &lt;kirill&#64;shutemov.name&gt; wrote:<br />&gt;<br />&gt; So you are saying that if a GUP user wants to see changes made by<br />&gt; userspace to the page after the GUP it must ask for FOLL_WRITE, even if it<br />&gt; doesn't have intend to write to the page?<br /><br />Yup. Put the onus very clearly on GUP.<br /><br />It's a very special operation, and it's one of the operations that<br />cause a lot of problems for the VM code. It's by no means the _only_<br />one - we've got a lot of other things that cause issues - but I think<br />it's very clear that GUP is very very special, and nobody should say<br />"I want GUP to do whatever".<br /><br />There are two cases for GUP:<br /><br /> - look up the page as it is *NOW*<br /><br /> - look up the page in order to see any future state on it (and<br />possibly modify it)<br /><br />that "any future state" is a fundamentally much heavier operation.<br />It's the one that really *has* to get rid of any sharing, and it has<br />to make sure no sharing happens in the future either.<br /><br />So ii it is an anonymous page, it basically needs to act like a write.<br />Even if that page is then used only for reading.<br /><br />Note that here that "if it's anonymous" is kind of a big deal. If it's<br />a shared file-mapped page, at that point it's "just another<br />reference". It's potentially problematic even in that case (think of<br />"truncate()" that tries to force-unmap all pages from VM's), but for<br />the shared case the answer is "if you truncate it and disassociate the<br />page from the mapping, it's _your_ problem.<br /><br />And once it acts as a write, and once it does that COW and we have<br />exclusive access to it, it might as well be just writable and dirty.<br />You've done the expensive part already. You've forced it to be private<br />to that VM.<br /><br />And this was all triggered by the user doing something very special,<br />so no amount of "but POSIX" or whatever matters.<br /><br />GUP is not great. If you use GUP, you get to deal with the downsides.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
