    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/12/23/125">First message in thread</a></li><li><a href="/lkml/2017/12/23/125">Thomas Gleixner</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 23 Dec 2017 12:12:35 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT pull] x86/pti: Preparatory changes</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Dec 23, 2017 at 11:23 AM, Thomas Gleixner &lt;tglx&#64;linutronix.de&gt; wrote:<br />&gt;<br />&gt; Todays Advent calendar window contains twentyfour easy to digest<br />&gt; patches.<br /><br />Thanks, this was nice and clear and I saw nothing odd at all.<br /><br />My only reaction ended up being that I don't much like how complex the<br />NR_CPUS config entry has become, and how confusing that is.<br /><br />For example, we now have<br /><br />        range 2 64 if SMP &amp;&amp; X86_32 &amp;&amp; X86_BIGSMP<br /><br />but then we have<br /><br />        default "8192" if MAXSMP<br /><br />which seems to make no sense, and unlike some of the other defaults<br />it's not clear that those things aren't compatible. It turns out that<br />MAXSMP is limited to X86_64, but that's not at all obvious within that<br />config entry.<br /><br />So I think that could be simplified by introducing separate<br />MAX_CONFIG_CPUS etc entries (that aren't user choice, but just codify<br />the limits), so that there would be some more abstraction there.<br /><br />So the NR_CPUS thing would become something like<br /><br />    config NR_CPUS<br />        int "Maximum number of CPUs" if SMP &amp;&amp; !MAXSMP<br />        range MIN_CONFIG_CPUS MAX_CONFIG_CPUS<br />        default DEF_CONFIG_CPUS<br /><br />and then have separate (simpler) config expressions for those<br />MIN/MAX/DEF values, rather than making it one big complex config<br />entry.<br /><br />But that was not new complexity (just added complexity to an already<br />confusing case), and it's purely bike-shedding.<br /><br />So I've pulled this stuff, and will push out once it passes my trivial<br />build test (which I obviously expect it to do, since my final build<br />test is much more limited than what you guys do).<br /><br />                   Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
