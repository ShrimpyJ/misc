    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/12/18/696">First message in thread</a></li><li><a href="/lkml/2017/12/18/696">Thomas Richter</a><ul><li><a href="/lkml/2017/12/18/1209">Peter Zijlstra</a></li><li><a href="/lkml/2017/12/18/1225">Steven Rostedt</a><ul><li class="origin"><a href="/lkml/2017/12/19/146">Linus Torvalds</a><ul><li><a href="/lkml/2017/12/19/146">Thomas-Mich Richter</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Dec 2017 10:16:04 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] trace/uprobes: fix output issue with address randomization</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Dec 18, 2017 at 9:59 AM, Steven Rostedt &lt;rostedt&#64;goodmis.org&gt; wrote:<br />&gt;<br />&gt; Hmm, since the scrambling of %p is to prevent kernel addresses from<br />&gt; leaking, I wonder if it would be OK to make it only scramble the address<br />&gt; if the address is a kernel address. It should be fine to print user<br />&gt; space addresses unscrambled. Shouldn't it?<br /><br />So %p itself shouldn't have logic like that, because some of those<br />addresses can be sensitive even if they aren't strictly kernel<br />addresses.<br /><br />For example, anything that prints out sensitive physical addresses<br />wouldn't look like a kernel virtual address, but it could still expose<br />very sensitive data.<br /><br />So that check would have to be done by the user of %p, not by %p itself.<br /><br />So generally, the fix for "oops %p hashing now breaks xyz" should<br />generally be to make sure that the protections are correct, and then<br />it can be turned into %px (when it can't just be removed).<br /><br />In this particular case, we already have the magical case of "don't<br />print (null)", and I think _that_ the case that could be just extended<br />to say "don't print sensitive data" and then the %p can be changed<br />into a %px.<br /><br />So one approach would be to simply checking (at _open_ time, not at IO<br />time! That was one of the things that I absolutely detested about %pK<br />- getting that fundamentally wrong) whether the opener could write a<br />kernel address to the file, and if the opener has those permissions,<br />then it obviously can read the values too.<br /><br />But in this case I would suggest just making "uprobe_events" be 0600<br />rather than 0644. Why the hell should a normal user be able to read<br />whatever events that root has set?<br /><br />Same goes for  "uprobe_profile". Is it really sensible that anybody<br />can read that file? It sounds insane to me. Why should a random<br />regular user be able to see what probes are installed?<br /><br />Honestly, very few of the "let's just change %p to %px" has been<br />correct. There is pretty much _always_ some permission problem or<br />other that says "hell no, that data should not have been so widely<br />available before".<br /><br />The only time a pure %p -&gt; %px is warranted is likely for oops reports<br />etc. We did have a couple of those.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
