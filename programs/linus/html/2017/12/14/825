    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/12/14/559">First message in thread</a></li><li><a href="/lkml/2017/12/14/722">Linus Torvalds</a><ul><li><a href="/lkml/2017/12/14/817">Andy Lutomirski</a><ul><li class="origin"><a href="/lkml/2017/12/15/163">Linus Torvalds</a><ul><li><a href="/lkml/2017/12/15/163">Dmitry Vyukov</a><ul><li><a href="/lkml/2017/12/15/167">Dmitry Vyukov</a></li><li><a href="/lkml/2017/12/15/271">Thomas Gleixner</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 14 Dec 2017 13:39:05 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: BUG: unable to handle kernel paging request in __switch_to</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Dec 14, 2017 at 1:27 PM, Andy Lutomirski &lt;luto&#64;kernel.org&gt; wrote:<br />&gt; On Thu, Dec 14, 2017 at 11:28 AM, Linus Torvalds<br />&gt; &lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;&gt; I don't think that's the case. "int3" is entirely synchronous, and<br />&gt;&gt; doesn't have the same odd issues as a breakpoint trap (which honors RF<br />&gt;&gt; etc). It's literally just a one-byte shorthand for "int $3".<br />&gt;<br />&gt; The SDM says precisely the same thing about INT N, so, whichever way<br />&gt; you dice it, int3 is a benign exception.<br /><br />That just means that it doesn't double-fault when it takes the page fault.<br /><br />Which we already know, because we see a page fault, not a double fault.<br /><br />&gt; 0xfffffffffffffff8 is *exactly* where the fault would be if the<br />&gt; microcoded push of SS faulted if the IST contained zeros.<br /><br />Yes, I suspect it's the stack that is buggered for some reason.<br /><br />&gt;&gt; Plus I think the instruction that gets overwritten is just a 5-byte<br />&gt;&gt; nop isn't it? So it really shouldn't take a fault without the "int3"<br />&gt;&gt; overwriting.<br />&gt;<br />&gt; Unless it was being overwritten the other way and the oops hit while<br />&gt; tracing was being turned *off*.<br /><br />Doesn't really matter. The two forms of that instruction are "5-byte<br />nop" and "unconditional branch".<br /><br />Neither of them will write to anything - the only page fault they<br />could take is for instruction fetch.<br /><br />So it really must be the "int3" that fails. Unless we're looking at<br />some odd CPU errata, which sounds very very unlikely.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
