    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/12/30/54">First message in thread</a></li><li><a href="/lkml/2017/12/30/138">Linus Torvalds</a><ul><li><a href="/lkml/2017/12/30/142">Dave Hansen</a><ul><li class="origin"><a href="/lkml/2017/12/30/150">Linus Torvalds</a><ul><li><a href="/lkml/2017/12/30/150">Andy Lutomirski</a></li></ul></li></ul></li><li><a href="/lkml/2017/12/30/153">Thomas Gleixner</a><ul><li><a href="/lkml/2017/12/30/157">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2017/12/30/161">Thomas Gleixner</a><ul><li><a href="/lkml/2017/12/30/173">Linus Torvalds</a></li><li><a href="/lkml/2017/12/30/174">Thomas Gleixner</a><ul><li><a href="/lkml/2017/12/30/176">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Dec 2017 11:15:02 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: x86/pti: smp_processor_id() called while preemptible in resume-from-sleep</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Dec 30, 2017 at 11:03 AM, Dave Hansen<br />&lt;dave.hansen&#64;linux.intel.com&gt; wrote:<br />&gt; On 12/30/2017 10:40 AM, Linus Torvalds wrote:<br />&gt;&gt; The __native_flush_tlb() function looks _very_ broken.<br />&gt; ...<br />&gt;&gt; So I'd suggest moving the preempt_disable() up to the top of that<br />&gt;&gt; function, regardless of whether we could then remove that seemingly<br />&gt;&gt; stale TLB flush in that crazy<br />&gt;&gt; smpboot_setup/restore_warm_reset_vector() dance...<br />&gt;<br />&gt; If someone is calling __native_flush_tlb(), shouldn't they already be in<br />&gt; a state where they can't be preempted?  It's fundamentally a one-cpu<br />&gt; thing, both the actual CPU TLB flush _and_ the per-cpu variables.<br /><br />Hmm. I think you're right.<br /><br />&gt; It seems like we might want to _remove_ the explicit<br />&gt; preempt_dis/enable() from here:<br />&gt;<br />&gt;         preempt_disable();<br />&gt;         native_write_cr3(__native_read_cr3());<br />&gt;         preempt_enable();<br />&gt;<br />&gt; and add some warnings to ensure it's disabled when we enter<br />&gt; __native_flush_tlb().<br /><br />Agreed, that would certainly also be consistent.<br /><br />The current code that disables preemption only selectively seems<br />insane to me. Either all or nothing, not this crazy half-way thing.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
