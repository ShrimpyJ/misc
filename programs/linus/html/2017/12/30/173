    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/12/30/54">First message in thread</a></li><li><a href="/lkml/2017/12/30/138">Linus Torvalds</a><ul><li><a href="/lkml/2017/12/30/142">Dave Hansen</a><ul><li><a href="/lkml/2017/12/30/146">Linus Torvalds</a><ul><li><a href="/lkml/2017/12/30/150">Andy Lutomirski</a></li></ul></li></ul></li><li><a href="/lkml/2017/12/30/153">Thomas Gleixner</a><ul><li><a href="/lkml/2017/12/30/157">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2017/12/30/161">Thomas Gleixner</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2017/12/30/174">Thomas Gleixner</a><ul><li><a href="/lkml/2017/12/30/176">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Dec 2017 12:45:39 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: x86/pti: smp_processor_id() called while preemptible in resume-from-sleep</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Dec 30, 2017 at 12:28 PM, Thomas Gleixner &lt;tglx&#64;linutronix.de&gt; wrote:<br />&gt;<br />&gt; That preempt_disable()/enable() was added with:<br />&gt;<br />&gt; commit 5cf0791da5c162ebc14b01eb01631cfa7ed4fa6e<br />&gt; Author: Sebastian Andrzej Siewior &lt;bigeasy&#64;linutronix.de&gt;<br />&gt; Date:   Fri Aug 5 15:37:39 2016 +0200<br />&gt;<br />&gt;     x86/mm: Disable preemption during CR3 read+write<br />&gt;<br />&gt; So we need to look at that scenario before removing it.<br /><br />Good point, but I think that was actually a mis-feature of the old<br />"__flush_tlb_up()" implementation that Andy got rid of in commit<br />ce4a4e565f52 ("x86/mm: Remove the UP asm/tlbflush.h code, always use<br />the (formerly) SMP code").<br /><br />So the code sequence that that commit talks about no longer exists.<br /><br />Instead, we now have the call to __flush_tlb() inside a<br />get_cpu/put_cpu, which is preempt-safe even on UP (despite the CPU<br />number obviously being fixed).<br /><br />So I think Dave is right: we should just remove the<br />preempt_disable/endable. But adding a<br /><br />        WARN_ON_ONCE(preemptible());<br /><br />might still be a good idea.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
