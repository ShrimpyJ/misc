    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/15/921">First message in thread</a></li><li><a href="/lkml/2017/11/16/726">Dave Airlie</a><ul><li><a href="/lkml/2017/11/16/731">Linus Torvalds</a></li><li><a href="/lkml/2017/11/17/229">=?UTF-8?Q?Nicolai_H=c3=a4hnle?=</a><ul><li class="origin"><a href="/lkml/2017/11/17/404">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/17/404">Lukas Wunner</a><ul><li><a href="/lkml/2017/11/17/413">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2017/11/17/459">=?UTF-8?Q?Christian_K=c3=b6nig?=</a><ul><li><a href="/lkml/2017/11/17/539">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 17 Nov 2017 08:57:53 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [git pull] drm for v4.15</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Nov 17, 2017 at 4:51 AM, Nicolai Hähnle &lt;nhaehnle&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; This raises the question of how people feel about putting the source<br />&gt; database into the kernel (most likely as XML in our case) and<br />&gt; auto-generating the headers from there instead.<br /><br />I suspect that at  least in some cases, the "source" database may be a<br />bit too sensitive. It may have various comments about errata, and may<br />even be part of the whole hardware build system (ie it might be munged<br />from verilog/vhdl)<br /><br />&gt; I've been pondering doing this in Mesa for radeonsi for quite some time now.<br /><br />What personally annoys me most about a lot of generated header files<br />(not all, but a _lot_) is that exactly because they are generated,<br />they are often inexcusably stupid.<br /><br />So say that you have a block of status registers, all of which have a<br />certain base pattern. Every single auto-generated header file I have<br />ever seen takes the brute-force approach of just enumerating them all<br />separately as independent things.<br /><br />Which makes the header file a huge mess of repeated almost-identical<br />register defines.<br /><br />But it's not even the _size_ of the header file that then annoys me,<br />it's that it's not just big, but inflexible. Often, on a source level,<br />you may actually be in the situation where you get an index to the<br />thing, and then you do<br /><br />    switch (index) {<br />    case X:<br />        access_using(REGISTERX_DEFINITION);<br />    case Y:<br />        access_using(REGISTERY_DEFINITION);<br />   ...<br /><br />or similar. When a _smarter_ auto-generated file would actually take<br />advantage of the language features (whether preprocessor or dynamic),<br />and actually allow for<br /><br />    access_using(REGISTER_DEFINITION(index))<br /><br />instead.<br /><br />Or - a variation of the above - it's not that the register definitions<br />for _one_ core have that kind of regularity, but you have it for a<br />while family of products, and because you autogenerate, you<br />auto-generate the stupid "repat the exact same thing with different<br />names" model, and then you have (instead of the index thing) you have<br />the "chip family" thing that you switch on.<br /><br />To see the effects of this, I picked something at random from one of<br />those huge AMD header files.<br /><br />I swear. It was entirely at random, and the first thing I picked. Do this:<br /><br />    git grep PCIE_UNCORR_ERR_MASK<br /><br />and tell me that there isn't any room for making these things smarter.<br /><br />Btw, not a single of those defines are actually _used_.  Again, that<br />pattern was entirely randomly picked from the largest header file we<br />have.<br /><br />People say "it's a ton of work to do it by hand". They'd be right. I'm<br />not saying you should do it by hand. But "automation" does not always<br />need to mean "completely mindlessly stupid" either.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
