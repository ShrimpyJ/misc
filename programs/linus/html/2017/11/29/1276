    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/29/1220">First message in thread</a></li><li><a href="/lkml/2017/11/29/1220">Omar Sandoval</a><ul><li class="origin"><a href="/lkml/2017/12/6/42">Linus Torvalds</a><ul><li><a href="/lkml/2017/12/6/42">Omar Sandoval</a><ul><li><a href="/lkml/2017/12/6/590">Jens Axboe</a><ul><li><a href="/lkml/2017/12/6/664">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2017/12/6/836">tip-bot for Omar Sandoval</a></li></ul></li><li><a href="/lkml/2017/12/6/648">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2017/12/5/1114">Fubo Chen</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Nov 2017 18:37:40 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: add_wait_queue() (unintentional?) behavior change in v4.13</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 29, 2017 at 4:58 PM, Omar Sandoval &lt;osandov&#64;osandov.com&gt; wrote:<br />&gt;<br />&gt; Note the change from __add_wait_queue() to<br />&gt; __add_wait_queue_entry_tail(). I'm assuming this was a typo since the<br />&gt; commit message doesn't mention any functional changes. This patch<br />&gt; restores the old behavior:<br />&gt;   [...]<br />&gt; I didn't go through and audit callers of add_wait_queue(), but from a<br />&gt; quick code read this makes it so that non-exclusive waiters will not be<br />&gt; woken up if they are behind enough exclusive waiters, and I bet that'll<br />&gt; cause some bugs.<br /><br />This sounds right to me.<br /><br />Ingo?<br /><br />The "add to head of wait-queue" is nasty and causes unfair waiter<br />behavior, but it does have that exclusive waiter reason going for it.<br /><br />In the page bit-wait queues, we actually did this change<br />_intentionally_ a few months ago (see commits<br /><br />  3510ca20ece0 Minor page waitqueue cleanups<br />  9c3a815f471a page waitqueue: always add new entries at the end<br /><br />but there it was intentional: an exclusive waiter on the bit<br />wait-queues is going to acquire the bit lock, which in turn means that<br />they'll eventually release the bit lock and then wake up any<br />subsequent non-exclusive waiters, so the non-exclusive ones _will_ get<br />woken up eventually (and in a fair order).<br /><br />Sadly, when it comes to wait-queues in general, we don't have those<br />kinds of guarantees. An exclusive waiter is going to use the resource,<br />but there's no fundamental reason to believe that non-exclusive<br />waiters will be woken up again (although in practice it's probably<br />very rare that they wouldn't).<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
