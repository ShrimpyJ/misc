    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/27/754">First message in thread</a></li><li><a href="/lkml/2017/11/29/653">Theodore Ts'o</a><ul><li><a href="/lkml/2017/11/29/660">David Miller</a><ul><li><a href="/lkml/2017/11/29/692">Theodore Ts'o</a></li><li class="origin"><a href="/lkml/2017/11/29/1184">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/29/1184">Kees Cook</a></li></ul></li></ul></li><li><a href="/lkml/2017/11/29/780">"Serge E. Hallyn"</a><ul><li><a href="/lkml/2017/11/29/1200">Theodore Ts'o</a><ul><li><a href="/lkml/2017/11/30/673">"Serge E. Hallyn"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Nov 2017 14:45:35 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v5 next 1/5] modules:capabilities: add request_module_cap()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 29, 2017 at 7:58 AM, David Miller &lt;davem&#64;davemloft.net&gt; wrote:<br />&gt;<br />&gt; We're talking about making sure that loading "ppp.ko" really gets<br />&gt; ppp.ko rather than some_other_module.ko renamed to ppp.ko via some<br />&gt; other mechanism.<br />&gt;<br />&gt; Both modules have legitimate signatures so the kernel will happily<br />&gt; load both.<br /><br />Yes. We could make the module name be part of the signing process, but<br />one problem with that is that at module loading time we don't actually<br />have the filename any more.<br /><br />User space opens the file and then just feeds the data to the kernel.<br />So if you fooled modprobe into feeding the wrong module, that's it.<br /><br />And yes, we can obviously embed the module name into the ELF headers<br />(that is all part of the signed payload), but the module name doesn't<br />actually necessarily match what we originally asked for.<br /><br />Why? Module aliases and module dependencies - which is why we have<br />that user mode side at all. When we do "request_module(XYZ)" we don't<br />necessarily know what the dependencies are, so we expect modprobe to<br />just load the right modules.<br /><br />So if modprobe then loads some other module (dccp or whatever), the<br />kernel has no real way to know "oh, that wasn't part of the dependency<br />chain for the module we aked for".<br /><br />Now, if modprobe is taught to check that the filename of the module<br />that it opens actually matches the metadata in the ELF sections, that<br />would solve it, but it's out of the kernels hands..<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
