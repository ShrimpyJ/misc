    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/28/950">First message in thread</a></li><li><a href="/lkml/2017/11/29/687">Andy Lutomirski</a><ul><li><a href="/lkml/2017/11/29/708">David Laight</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2017/11/29/712">Andy Lutomirski</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Nov 2017 12:48:39 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86/entry/64: Fix native_load_gs_index() SWAPGS handling with IRQ state tracing enabled</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 29, 2017 at 8:51 AM, David Laight &lt;David.Laight&#64;aculab.com&gt; wrote:<br />&gt;<br />&gt; SWAPGS is a PITA. The hardware designers should have tried to write<br />&gt; all the interrupt handling code.<br /><br />That's actually my biggest beef with x86-64. The kernel entry/exit is<br />completely misdesigned.<br /><br />That was actually better in the original i386, which handles nesting<br />ok (modulo the NMI disable flag and the STI shadow bit which doesn't<br />save/restore properly).<br /><br />Yes, the 386 model of infinite indirection through IDT/GDT/TSS is<br />broken and should have had a mode bit to just replace with a simple<br />"use this stack and address for kernel entry" MSR register - but that<br />simplified kernel entry/exit should have saved/restored _more_ info,<br />not less (eg "save/restore segment shadow state rather than the<br />descriptor number that needs the insane indirection" etc)<br /><br />The problem was never the few push/pop instructions that kernel entry involved.<br /><br />The entry/exit garbage admittedly started before x86-64 itself - all<br />those 'syscall' variants are equally broken. Not saving/restoring<br />state properly is just unbelievable sh*t. x86-64 then made things<br />worse with SWAPGS etc.<br /><br />A lot of people hate x86 because of instruction decoding. No, if you<br />need a reason to dislike x86, it's because of exception handling and<br />iret.<br /><br />Rant over.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
