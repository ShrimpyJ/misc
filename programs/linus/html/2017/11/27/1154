    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/27/754">First message in thread</a></li><li><a href="/lkml/2017/11/27/1099">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/27/1143">Kees Cook</a><ul><li class="origin"><a href="/lkml/2017/11/27/1158">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/27/1158">Kees Cook</a><ul><li><a href="/lkml/2017/11/27/1167">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2017/11/27/1238">Kees Cook</a></li></ul></li></ul></li><li><a href="/lkml/2017/11/28/744">Geo Kozey</a><ul><li><a href="/lkml/2017/11/28/1275">Theodore Ts'o</a><ul><li><a href="/lkml/2017/11/28/1314">Kees Cook</a><ul><li><a href="/lkml/2017/11/28/1320">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 27 Nov 2017 15:14:54 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v5 next 5/5] net: modules: use request_module_cap() to load 'netdev-%s' modules</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Nov 27, 2017 at 2:59 PM, Kees Cook &lt;keescook&#64;chromium.org&gt; wrote:<br />&gt;<br />&gt; I don't disagree that a global should be avoided, but I'm struggling<br />&gt; to see another option here. We can't break userspace by default so we<br />&gt; can't restrict cap-less loading by default. But we can allow userspace<br />&gt; to _choose_ to break itself, especially within a container. This isn't<br />&gt; uncommon, especially for modules, where we even have the global<br />&gt; "modules_disabled" sysctl already. The level of granularity of control<br />&gt; here is the issue, and it's what this series solves.<br /><br />So there's two "global" here<br /><br /> - if a container were to choose to break itself, it should damn well<br />be container-specific, not some global option<br /><br />   This part seems to be ok in the patch series, since the "global" is<br />really per-task. So it's not global in the "system-wide" sense.<br /><br /> - if _one_ request_module() caller were to say "I don't want to be<br />loaded by a normal user", that doesn't mean that _other_<br />request_module() cases shouldn't.<br /><br />   This is the part I'm objecting to, because it means that we can't<br />enable this stricter policy by default.<br /><br />And the thing is, the patch series seems to already introduce largely<br />the better model of just making it site-specific. Introducing that<br />request_module_cap() thing and then using it for networking is a good<br />step.<br /><br />But I also suspect that we _could_ just make the stricter rules<br />actually be default, if we just fixed the thing up to not be "every<br />request_module() is the same".<br /><br />For example, several request_module() calls come from device node<br />opens, and it makes sense that we can just say: "if you have access to<br />the device node, then you have the right to request the module".<br /><br />But that would need to be not a global "request_module()" behavior,<br />but a behavior that is tied to the particular call-site.<br /><br />IOW, extend on that request_module_cap() model, and introduce<br />(perhaps) a "request_module_dev()" call that basically means "the user<br />opened the device node for the requested module".<br /><br />Because those kinds of permissions aren't necessarily about<br />capabilities, but about things like "I'm in the dialout group, I get<br />to open tty devices and by implication request their modules".<br /><br />And that _really_ isn't global behavior.  The fact that I might be<br />able to load a serial; module has *nothing* to do with whether I can<br />load some other kind of module at all.<br /><br />That global mode is just wrong.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
