    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/13/130">First message in thread</a></li><li><a href="/lkml/2017/11/13/899">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/13/947">Linus Torvalds</a></li><li><a href="/lkml/2017/11/14/143">Petr Mladek</a><ul><li><a href="/lkml/2017/11/14/283">Prarit Bhargava</a></li><li><a href="/lkml/2017/11/14/384">Mark Salyzyn</a><ul><li><a href="/lkml/2017/11/14/786">Sergey Senozhatsky</a></li></ul></li><li class="origin"><a href="/lkml/2017/11/14/609">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/14/609">Thomas Gleixner</a><ul><li><a href="/lkml/2017/11/14/648">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 14 Nov 2017 09:20:50 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT pull] printk updates for 4.15</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Nov 14, 2017 at 2:03 AM, Petr Mladek &lt;pmladek&#64;suse.com&gt; wrote:<br />&gt;<br />&gt; AFAIK, local clock is not synchronous between different machines<br />&gt; and even CPUs on the same machine. It was used in printk() because<br />&gt; it was lockless. Therefore it is kind of random itself.<br /><br />It's not that it would be synchronous between machines, but that it<br />would behave the same way.<br /><br />Lookie here, the issue is this:<br /><br />  static ssize_t msg_print_ext_header(..<br />  {<br />        u64 ts_usec = msg-&gt;ts_nsec;<br /><br />        do_div(ts_usec, 1000);<br /><br />        return scnprintf(buf, size, "%u,%llu,%llu,%c;",<br />                       (msg-&gt;facility &lt;&lt; 3) | msg-&gt;level, seq, ts_usec,<br />                       msg-&gt;flags &amp; LOG_CONT ? 'c' : '-');<br />  }<br /><br />this is an _exported_ interface to user space.<br /><br />Is it an odd interface? Yes it is. It was "designed" by the systemd<br />people. See commit e11fea92e13f ("kmsg: export printk records to the<br />/dev/kmsg interface").<br /><br />But that really means that you can't just change what "ts_nsec" means<br />- it's exported as "microseconds since boot".<br /><br />And yes, at least systemd actually uses it. I cloned the git<br />repository and checked. It does something like<br /><br />        unsigned long long usec;<br />        ...<br />        r = safe_atollu(p, &amp;usec);<br />        ...<br />        if (asprintf(&amp;source_time, "_SOURCE_MONOTONIC_TIMESTAMP=%llu",<br />usec) &gt;= 0)<br />                iovec[n++] = IOVEC_MAKE_STRING(source_time);<br /><br />when reading /dev/kmsg, and then elsewhere it does<br /><br />                PARSE_FIELD_VEC_ENTRY("_SOURCE_MONOTONIC_TIMESTAMP=",<br />&amp;monotonic, &amp;monotonic_len),<br /><br />        if (mode == OUTPUT_SHORT_MONOTONIC)<br />                r = output_timestamp_monotonic(f, j, monotonic);<br /><br />Now, the important thing to keep in mind is that the kernel is not the<br />_only_ source of these "_SOURCE_MONOTONIC_TIMESTAMP" things.<br /><br />In other places, systemd generates them itself, with<br /><br />        ts-&gt;monotonic = now(CLOCK_MONOTONIC);<br /><br />where "now()" ends up using clock_gettime().<br /><br />End result? The kernel /dev/kmsg interface has to be at least<br />"similar" to returning usec's comparable to CLOCK_MONOTONIC.<br /><br />You can't make it just do realtime. That's a whole different clock.<br /><br />Now, admittedly "local_clock()" (aka sched_clock()) that printk uses<br />now is not great either, but at least it has the same basic time base<br />as CLOCK_MONOTONIC, and isn't off by 47 years.<br /><br />So *that* is my worry. I don't expect clocks across machines to have<br />the same value. But I expect them to have the same *behavior*, and not<br />see really odd system journal behavior just because one machine ends<br />up using wall clock time, and one ends up using a monotonic clock, and<br />one ends up using the traditional jiffies or whatever.<br /><br />And honestly, if we decide to change the time format, the absolute<br />*LAST* thing I want to see is to make this a config option.<br /><br />Either we do it or we don't. Not this insane "you can choose between<br />five different choices, I leave it up to you to screw up your<br />machine".<br /><br />Seriously. This whole "we can't even make a choice, so we let the user<br />screw with it" is pure and utter garbage.<br /><br />If you as a kernel developer cannot make a choice., and argue strongly<br />for _why_ that choice is the right one to export to user space, then<br />we do not change existing behavior, since clearly you don't really<br />have a good reason for the change.<br /><br />This is why I would suggest just keeping the existing clock, and then<br />adding clock events at _significant_ points. Somebody brought up the<br />complete red herring of "every five minutes will fiill up the system<br />log". That's complete BS. You do it when people change the system<br />clock (and perhaps when NTP synchronizes), or after a suspend event,<br />or maybe regularly every few _hours_ (and make that last part<br />configurable).<br /><br />Filling up the system log is simply not an issue.<br /><br />                   Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
