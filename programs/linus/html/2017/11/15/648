    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/14/599">First message in thread</a></li><li><a href="/lkml/2017/11/14/599">Will Deacon</a><ul><li class="origin"><a href="/lkml/2017/11/16/184">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/16/184">Will Deacon</a><ul><li><a href="/lkml/2017/11/16/652">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 15 Nov 2017 11:13:51 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] arm64: updates for 4.15</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Nov 14, 2017 at 12:11 PM, Will Deacon &lt;will.deacon&#64;arm.com&gt; wrote:<br />&gt;<br />&gt; Please pull the following arm64 updates<br /><br />Pulled. However, looking at the non-arm changes, I noticed this:<br /><br />  static inline int irq_is_percpu_devid(unsigned int irq)<br />  ...<br />         return desc-&gt;status_use_accessors &amp; IRQ_PER_CPU_DEVID;<br /><br />and it matches the existing pattern in that file, so it is fine and<br />I'm not complaining about this pull.<br /><br />But that existing pattern happens to be very dangerous and bad.<br /><br />In particular, what can (and _has_ happened) is that people end up<br />using these functions that return true or false, and they assign the<br />result to something like a bitfield (or a char) or whatever.<br /><br />And the code looks *obviously* correct, when you have things like<br /><br />     dev-&gt;percpu = irq_is_percpu_devid(dev-&gt;irq);<br /><br />and that "percpu" thing is just one status bit among many. It may even<br />*work*, because maybe that "percpu" flag ends up not being all that<br />important, or it just happens to never be set on the particular<br />hardware that people end up testing.<br /><br />But while it looks obviously correct, and might even work, it's really<br />fundamentally broken. Because that "true or false" function didn't<br />actually return 0/1, it returned 0 or 0x20000.<br /><br />And 0x20000 may not fit in a bitmask or a "char" or whatever.<br /><br />So I'm not a huge fan of "bool" in structures etc (a "unsigned int<br />percpu:1" really is fundamentally much better), but when it comes to<br />inline helper functions like this, "bool" really is the right return<br />type, because it avoids these issues, and turns the return value to<br />0/1 if you actually use it in an integer context.<br /><br />Alternatively, just add the "!= 0" to do that 0/1 conversion by hand.<br />Some people like doing "!!", I find that to be a very annoying<br />pattern.<br /><br />                     Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
