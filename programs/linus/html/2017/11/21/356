    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/17/391">First message in thread</a></li><li><a href="/lkml/2017/11/17/767">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/17/800">Kees Cook</a></li><li><a href="/lkml/2017/11/20/650">Matthew Garrett</a><ul><li><a href="/lkml/2017/11/20/840">Matthew Garrett</a><ul><li><a href="/lkml/2017/11/20/881">Kees Cook</a><ul><li><a href="/lkml/2017/11/21/258">Lukas Wunner</a></li></ul></li></ul></li><li><a href="/lkml/2017/11/21/315">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2017/11/21/244">"Jason A. Donenfeld"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 21 Nov 2017 05:25:06 -1000</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] usercopy whitelisting for v4.15-rc1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">[ This turned longer than it should have. I guess jet lag is a good thing ]<br /><br />On Tue, Nov 21, 2017 at 3:48 AM, Jason A. Donenfeld &lt;Jason&#64;zx2c4.com&gt; wrote:<br />&gt;<br />&gt; It might be news to you that actually some security people scoff at<br />&gt; other security peoples' obsession with "security bugs".<br /><br />Heh. I'm not actually surprised. It's just that the public "look at<br />this security bug" ones are the ones  you see.<br /><br />&gt; The security industry is largely obsessed by finding (and<br />&gt; selling/using/patching/reporting/showcasing/stockpiling/detecting/stealing)<br />&gt; these "dangerous/useful" variety of bugs. And this obsession is<br />&gt; continually fulfilled because bugs keep happening -- which is just the<br />&gt; nature of software development -- and so this "security bug"<br />&gt; infatuation continues. It even leads to people upset with you that you<br />&gt; don't care about CVEs and so forth, because they're so fixated on<br />&gt; individual bugs and their security impact.<br /><br />Agreed.<br /><br />&gt; So what's the<br />&gt; alternative to obsessing over each individual software bug?<br />&gt;<br />&gt; In the context of the kernel, the solution from Spender and Pipacs,<br />&gt; and more recently "adopted" by Kees and his KSPP project, has been to<br />&gt; try to eliminate the "security utility" of bugs.<br /><br />And the thing is, I obviously agree very much about the whole "let's<br />have multiple layers of security even within the kernel, so that<br />random individual bugs don't end up being so exploitable". Bugs will<br />happen, let's aim to limit their damage.<br /><br />To turn them "benign" in your words.<br /><br />So I should be thrilled pink about the hardening efforts, right?<br /><br />Well, I would - except for what "benign" means in that context, and<br />how security people have very different expectations from users - and<br />how those are both different from developers.<br /><br />From a security standpoint, when you find an invalid access, and you<br />mitigate it, you've done a great job, and your hardening was<br />successful and you're done. "Look ma, it's not a security issue any<br />more", and you can basically ignore it as "just another bug" that is<br />now in a class that is no longer your problem.<br /><br />So to you, the big win is when the access is _stopped_. That's the end<br />of the story from a security standpoint - at least if you are one of<br />those bad security people who don't care about anything else.<br /><br />But from a developer standpoint, things _really_ are not done. Not<br />even close. From a developer standpoint, the bad access was just a<br />symptom, and it needs to be reported, and debugged, and fixed, so that<br />the bug actually gets corrected.<br /><br />So from a developer standpoint, the end point of  hardening is just<br />the starting point, and when _you_ think you're done, we're really<br />only getting started.<br /><br />And from a _user_ standpoint, it's something else altogether. For a<br />user, pretty much EVERY SINGLE TIME, it wasn't actually a security<br />attack at all, it was just a latent bug that got exposed. And the<br />keyword here is that it was _latent_, and things used to work, and the<br />hardening patch did something - probably fairly drastic - to turn it<br />from "dangerous" to "benign" from a security perspective.<br /><br />So from a user standpoint, the hardening was just a big nasty<br />annoyance, and probably made their workflow _break_, without actually<br />helping their case at all, because they never really saw the original<br />bug as a problem to begin with.<br /><br />Notice? BIG disconnect in what "hardening" means for three groups, and<br />in particular, the number one rule of kernel development is that "we<br />don't break users".<br /><br />Because without users, your program is pointless, and all the<br />development work you've done over decades is pointless.<br /><br />.. and security is pointless too, in the end.<br /><br />Now, the thing that annoys me and that makes me so _angry_ about this,<br />is that it shouldn't need to be that huge a disconnect.<br /><br />It shouldn't need to be a big issue, because pretty much all the work<br />done for hardening should be able to actually make both the developers<br />and the users _happier_, instead of just making their lives miserable.<br /><br />But that does mean that he hardening people need to really see past<br />that "endpoint" that they were looking at.<br /><br />For a developer, the hardening effort _could_ be a great boon, in that<br />it could show nasty bugs early, it could make them easier to report,<br />and it could add a lot of useful information to that report that makes<br />them easier to fix too.<br /><br />And from a user perspective, the hardening work shouldn't have to mean<br />"the latent bug that I didn't care about now screwed me over and is an<br />overt bug for me". It might not help the user directly, but if a year<br />from now, the latent bug that made their machine occasionally go all<br />wonky is fixed, the hardening effort did end up helping them too.<br /><br />But what do we need for this to actually happen?<br /><br />As a developer, I do want the report. But if you killed the user<br />program in the process, I'm actually _less_ likely to get the report,<br />because the latent access was most likely in some really rare and<br />nasty case, or we would have found it already. In the kernel, there's<br />a high likelihood that it was in a driver, for example. Maybe an<br />unusual ioctl() that is not getting a huge amount of attention,<br />because it's one driver ramong thousands, and it's probably not used<br />every time anyway. But because it's the kernel, and because it's a<br />driver, it's quite likely that killing the offender will do bad things<br />to various random locks that were held, or maybe it happens in an<br />interrupt and the whole machine is now dead if we're unlucky because<br />there really were some very core locks being held.<br /><br />And as a user, my unhappiness is obvious. You don't even have to kill<br />the machine and make it hard to report to make a user unhappy, just<br />"the new kernel didn't work for me" will make that user skittish about<br />upgrading the kernel at all.<br /><br />And the fix really looks fairly straightforward:<br /><br /> - when adding hardening features, you as a security person should<br />always see that hardening to be the _endpoint_, but not the immediate<br />goal.<br /><br /> - when adding hardening features, the first step should *ALWAYS* be<br />"just report it". Not killing things, not even stopping the access.<br />Report it. Nothing else.<br /><br />"Do no harm" should be your mantra for any new hardening work.<br /><br />And that "do no harm" may feel antithetical to the whole point. You go<br />"but t hat doesn't work - then the bug still exists".<br /><br />But remember - keep your eye on the endpoint, and that this is just<br />the first step. You need to not piss off users, and you need to not<br />piss of developers.<br /><br />Because if you as a security person just piss off users, and piss off<br />developers, I'm not going to take your work, and I'm going to call you<br />a bad security person.<br /><br />Because in the end, those users really do matter. Without those users,<br />your system may be "secure", but all your security work was still just<br />masturbation. You didn't do anything useful at all in the end.<br /><br />So if hardening people can learn to "always report first", then I<br />think we can all work together.<br /><br />But that really does mean that you don't start killing processes until<br />after you've shown that "look, the code to report these things has<br />been there for months, can we start doing more drastic things now?"<br /><br />And remember: it's not that the code is  months old. It's that the<br />code has been RUN BY USERS for months. If it's been in your tree, or<br />in grsecurity for five years, that doesn't mean a thing. It only means<br />that hardly anybody actually ever ran it.<br /><br />If it's been on a random cellphone for a few months, and real users<br />used it, and had facebook and candy crush running on it, that's a<br />pretty different deal.<br /><br />If it's been in a released kernel for a year, and Ubuntu and Fedora<br />and SuSE had it enabled, and there aren't reports, that's a big deal.<br /><br />In contrast, if it's been on your server farm for three months, that<br />means _nothing_. You have pretty much zero coverage of the driver<br />situation, or of the random apps that people run.<br /><br />See?<br /><br />All I need is that the whole "let's kill processes" mentality goes<br />away, and that people acknowledge that the first step is always "just<br />report".<br /><br />Do no harm.<br /><br />Please.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
