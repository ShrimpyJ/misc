    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/24/306">First message in thread</a></li><li><a href="/lkml/2017/11/24/306">David Howells</a><ul><li><a href="/lkml/2017/11/25/93">Linus Torvalds</a></li><li><a href="/lkml/2017/11/25/154">David Howells</a><ul><li><a href="/lkml/2017/11/25/159">Dave Chinner</a></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2017/11/25/167">David Howells</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 25 Nov 2017 12:55:18 -1000</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] afs: Fixes</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Nov 25, 2017 at 12:35 PM, David Howells &lt;dhowells&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; Doesn't clear_page_dirty_for_io() write-protect the PTE for the page to be<br />&gt; written out, in which case -&gt;page_mkwrite() will get called again before the<br />&gt; page is redirtied?<br /><br />No, it literally just sets the dirty bit (and does accounting).<br /><br />But I think you may be right that we always write-protect he page when<br />we move the dirty bit from the page tables to the 'struct page'<br />(page_mkclean_one()).<br /><br />However, even when you do that, the page can be writable in other<br />mappings. At least fork(), for example, only clears the dirty bit,<br />doesn't mark it write-protected.<br /><br />So there is some rate-limiting of dirty pages, but I do not believe<br />that we've ever really *serialized* writes.<br /><br />&gt;&gt;  (b) can cause some really nasty latency issues<br />&gt;<br />&gt; True, but I think the most common case is a file being opened, written start<br />&gt; to finish and then closed.  Actually, the worst-handled thing I've seen is a<br />&gt; shell script appending a bunch of things to a file because -&gt;flush() syncs the<br />&gt; file each time it is closed:-/<br />&gt;<br />&gt; What would you recommend instead?  I'm currently trying and keep track of what<br />&gt; needs to be written so that I only write what's changed to the server, rather<br />&gt; than writing only whole pages.<br /><br />I don't think that what you are doing is necessarily wrong, I'm just<br />pointing out that you may still see mmap'ed pages being modified<br />concurrently with the actual IO, and that this will potentially mean<br />(for example) that things like checksums won't be reliably unless you<br />do the checksum as you copy the data to a network packet or something.<br /><br />Of course, if that kind of inconsistency happens, a later write-back<br />will also happen, and eventually fix it. So the server may see<br />temporarily 'wrong' data, but it won't be final.<br /><br />I just hope that the inconsistency isn't fatal to the afs client or<br />server code. For example, if you retry writes forever when a checksum<br />were to not match the data, that would be bad.<br /><br />And yes, this can be<br /><br /> (a) really hard  to trigger in practice<br /><br /> (b) very hard to debug due to a combination of very specific timing<br />and behavior.<br /><br />so I just wanted to bring this up as a potential issue, not<br />necessarily as a big problem.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
