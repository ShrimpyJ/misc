    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/11/27/754">First message in thread</a></li><li><a href="/lkml/2017/11/28/1320">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/28/1327">Kees Cook</a><ul><li class="origin"><a href="/lkml/2017/11/28/1390">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/28/1390">Djalal Harouni</a></li><li><a href="/lkml/2017/11/28/1404">Kees Cook</a><ul><li><a href="/lkml/2017/11/28/1509">Theodore Ts'o</a></li></ul></li><li><a href="/lkml/2017/11/28/1443">Geo Kozey</a><ul><li><a href="/lkml/2017/11/28/1526">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 28 Nov 2017 12:33:22 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [kernel-hardening] Re: [PATCH v5 next 5/5] net: modules: use request_module_cap() to load 'netdev-%s' modules</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Nov 28, 2017 at 12:20 PM, Kees Cook &lt;keescook&#64;chromium.org&gt; wrote:<br />&gt;<br />&gt; So what's the right path forward for allowing a way to block<br />&gt; autoloading? Separate existing request_module() calls into "must be<br />&gt; privileged" and "can be unpriv" first, then rework the series to deal<br />&gt; with the "unpriv okay" subset?<br /><br />So once we've taken care of the networking ones that check their own<br />different capability bit, maybe we can then make the regular<br />request_module() do a rate-limited warning for non-CAP_SYS_MODULE uses<br />that prints which module it's loading.<br /><br />And then just see what people report.<br /><br />Because maybe it's just a very small handful that matters, and we can<br />say "those are ok".<br /><br />And maybe that is too optimistic, and we have a lot of device driver<br />ones because people still have a static /dev and don't have udev<br />populating modules and device nodes, and then maybe we need to<br />introduce a "request_module_dev()" where the rule is that you had to<br />at least have privileges to open the device node.<br /><br />Because I really am *not* interested in these security flags that are<br />off by default and then get turned on by special cases. I think it's<br />completely unacceptable to say "we're insecure by default but then you<br />can do X and be secure". It doesn't work. It doesn't fix anything.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
