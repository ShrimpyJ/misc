    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/20/182">First message in thread</a></li><li><a href="/lkml/2017/8/29/654">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/29/740">Andrea Arcangeli</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 29 Aug 2017 13:59:35 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: kvm splat in mmu_spte_clear_track_bits</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Aug 29, 2017 at 1:49 PM, Andrea Arcangeli &lt;aarcange&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; mmu_notifier_invalidate_page has the advantage that it takes the<br />&gt; secondary MMU KVM srcu and spinlock a single time.<br /><br />Note that that isn't actually all that much of an advantage - it turns<br />out that a lot of users have "range_start", but not "range_end".<br /><br />So in a lot of cases, the "range_start/end()" seems to be exactly as<br />expensive as just the single "page()" call, simply because the code<br />didn't really need the whole range, it only wanted to make sure it was<br />invalidating its data before the range got modified.<br /><br />KVM ends up doing a partial case of that optimization too: it doesn't<br />do the srcu lock in the end case, for example.  It does want to keep<br />the sequence numbers for the end case, but that's fairly cheap.<br /><br />So I'd much rather have the simpler rules than have duplicated<br />interfaces for some very dubious performance advantage.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
