    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/16/534">First message in thread</a></li><li><a href="/lkml/2017/8/24/816">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/24/876">(Eric W. Biederman)</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2017/8/24/893">Christian Brauner</a><ul><li><a href="/lkml/2017/8/25/817">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 24 Aug 2017 16:27:29 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/1] devpts: use dynamic_dname() to generate proc name</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 24, 2017 at 4:01 PM, Eric W. Biederman<br />&lt;ebiederm&#64;xmission.com&gt; wrote:<br />&gt; Linus Torvalds &lt;torvalds&#64;linux-foundation.org&gt; writes:<br />&gt;<br />&gt;&gt; On Thu, Aug 24, 2017 at 1:43 PM, Eric W. Biederman<br />&gt;&gt; &lt;ebiederm&#64;xmission.com&gt; wrote:<br />&gt;&gt;&gt;<br />&gt;&gt;&gt; There are just enough weird one off scripts like xen image builder (I<br />&gt;&gt;&gt; think that was the nasty test case that broke in debian) that I can't<br />&gt;&gt;&gt; imagine ever being able to responsibly remove the path based lookups in<br />&gt;&gt;&gt; /dev/ptmx.  I do dream of it sometimes.<br />&gt;&gt;<br />&gt;&gt; Not going to happen.<br />&gt;<br />&gt; Which is what I said.<br /><br />Yes, but you then went on to say that we should encourage "/dev/pts/ptmx"<br /><br />Which is BS.<br /><br />It's not a standard location, and it doesn't have any advantages.<br /><br />It was a bad idea and due to a bad implementation. We fixed it. Let it go.<br /><br />&gt;&gt; The fact is, /dev/ptmx is the simply the standard location.<br />&gt;&gt; /dev/pts/ptmx simply is *not*.<br />&gt;<br />&gt; The standard is posix_openpt().  That is a syscall on the bsds.<br />&gt; Opening something called ptmx at this point is a Linuxism.<br /><br />Bzzt. Thank you for playing, but you're completely and utterly wrong.<br /><br />Look around a bit more.<br /><br />posix_openpt() may be what you *wish* the standard was, but no,<br />/dev/ptmx is not a linuxism.<br /><br />Really. It's the SysV STREAMS standard location, and it is what Sysv<br />pty users _will_ use directly.<br /><br />Linux didn't make up that name.<br /><br />Solaris, HP-UX-11, other sysv code bases all use /dev/ptmx<br /><br />The whole "posix_openpt()" thing came later, in an attempt to just<br />unify the BSD and Sysv models.<br /><br />Just google for "streams pty" if you don't believe me.<br /><br />So really. The only linuxism here is that stupid /dev/pts/ptmx.<br /><br />&gt; There are a lot of programs that are going to be calling posix_openpt()<br />&gt; simply because /dev/ptmx can not be counted on to exist.<br /><br />.. and there are probably even more programs that simply use<br />"/dev/ptmx". If you came from a sysv world, or if you just happened to<br />copy any of the hundreds of examples on the interenet, that's what you<br />would do.<br /><br />Christ, just go to Wikipedia. And I quote:<br /><br />  'BSD PTYs have been rendered obsolete by Unix98 ptys whose naming<br />   system does not limit the number of pseudo-terminals and access to<br />   which occurs without danger of race conditions. /dev/ptmx is the<br />   "pseudo-terminal master multiplexer". Opening it returns a file<br />   descriptor of a master node and causes an associated slave node<br />   /dev/pts/N to be created.[5]'<br /><br />That's from<br /><br />    <a href="https://en.wikipedia.org/wiki/Pseudoterminal">https://en.wikipedia.org/wiki/Pseudoterminal</a><br /><br />so stop blathering garbage. The fact is, /dev/ptmx is the standard<br />location, and /dev/pts/ptmx is, and always has been, an abomination.<br /><br />Now, if you want to be portable, "posix_openpt()" is indeed what you<br />should use, but that doesn't change the basic point.<br /><br />There's a very real reason why people use "/dev/ptmx", and no, it's<br />not a linuxism.<br /><br />                       Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
