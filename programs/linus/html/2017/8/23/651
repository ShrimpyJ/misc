    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/23/647">First message in thread</a></li><li><a href="/lkml/2017/8/23/647">Doug Nazar</a><ul><li><a href="/lkml/2017/8/23/625">Linus Torvalds</a></li><li><a href="/lkml/2017/8/23/646">Doug Nazar</a><ul><li class="origin"><a href="/lkml/2017/8/23/670">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/23/670">Andreas Dilger</a><ul><li><a href="/lkml/2017/8/24/337">Doug Nazar</a></li><li><a href="/lkml/2017/8/27/194">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2017/8/24/321">Doug Nazar</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Aug 2017 13:13:04 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Kernels v4.9+ cause short reads of block devices</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 23, 2017 at 12:53 PM, Doug Nazar &lt;nazard&#64;nazar.ca&gt; wrote:<br />&gt;<br />&gt; It's compiling now, but I think it's already set to MAX_LFS_FILESIZE.<br />&gt;<br />&gt; [  169.095127] ppos=80180006000, s_maxbytes=7ffffffffff, magic=0x62646576,<br />&gt; type=bdev<br /><br />Oh, right you are - I'm much too used to 64-bit, where<br />MAX_LFS_FILESIZE is basically infinite, and was jusr assuming that it<br />was something like the UFS bug we had not that long ago that was due<br />to the 32-bit limit.<br /><br />But yes, on 32-bit, we are limited by the 32-bit index into the page<br />cache, and we limit the index to 31 bits too, so we have (PAGE_SIZE &lt;&lt;<br />31) -1, which is that 7ffffffffff.<br /><br />And that also explains why people haven't seen it. You do need<br /><br /> (a) 32-bit environment<br /><br /> (b) a disk larger than that 8TB in size<br /><br />The *hard* limit for the page cache on a 32-bit environment should<br />actually be (PAGE_SIZE &lt;&lt; 32)-PAGE_SIZE (that final PAGE_SIZE<br />subtraction is to make sure we don't generate that page cache with<br />index -1), so having a disk that is 16TB or larger is not going to<br />work, but your disk is right in that 8TB-16TB hole that used to work<br />and was broken by that check.<br /><br />Anyway, that makes me feel better. I should have looked at your disk<br />size more, now I at least understand why nobody noticed before.<br /><br />So just throw away my patch. That's wrong, and garbage.<br /><br />The *right* patch is likely to just this instead:<br /><br />  -#define MAX_LFS_FILESIZE       (((loff_t)PAGE_SIZE &lt;&lt; (BITS_PER_LONG-1))-1)<br />  +#define MAX_LFS_FILESIZE       (((loff_t)PAGE_SIZE &lt;&lt;<br />BITS_PER_LONG)-PAGE_SIZE)<br /><br />which should make MAX_LFS_FILESIZE be 0xffffffff000 and you disk size<br />should be ok.<br /><br />                      Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
