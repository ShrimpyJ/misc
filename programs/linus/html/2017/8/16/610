    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/16/534">First message in thread</a></li><li><a href="/lkml/2017/8/16/534">Christian Brauner</a><ul><li><a href="/lkml/2017/8/16/535">Christian Brauner</a></li><li class="origin"><a href="/lkml/2017/8/16/626">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/16/626">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/16/674">Christian Brauner</a><ul><li><a href="/lkml/2017/8/16/680">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 16 Aug 2017 11:26:37 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/1] devpts: use dynamic_dname() to generate proc name</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 16, 2017 at 10:12 AM, Christian Brauner<br />&lt;christian.brauner&#64;ubuntu.com&gt; wrote:<br />&gt;<br />&gt; Recently the kernel has implemented the TIOCGPTPEER ioctl() call which allows<br />&gt; users to retrieve an fd for the slave side of a pty solely based on the<br />&gt; corresponding fd for the master side. The ioctl()-based fd retrieval however<br />&gt; causes the "/proc/&lt;pid&gt;/fd/&lt;pty-slave-fd&gt;" symlink to point to the wrong dentry.<br />&gt; Currently, it will always point to "/". The following simple program can be used<br />&gt; to illustrate the problem when run on a system that implements the TIOCGPTPEER<br />&gt; ioctl() call.<br /><br />I think your patch is wrong - we need to actually use the *right*<br />path, rather than hardcode "/dev/pts/%d" in there.<br /><br />Hardcoding "/dev/pts/%d" is something that user space can already do.<br />The kernel can and should do better.<br /><br />That "dynamic_dname()" helper is for things that don't really have a<br />real pathname at all, so things like pipes and other file descriptors<br />that were opened without an associated entry in a filesystem (sockets,<br />other "special" inodes with no filesystem backing).<br /><br />For things like pts slaves, we actually *do* have a real pathname -<br />and we should expose it. If the devpts filesystem is mounted somewhere<br />else than /dev/pts, it should give that correct pathname.<br /><br />I also think your test program is a bit buggy, and silly:<br /><br />&gt;         ret = snprintf(path, 4096, "/proc/self/fd/%d", slave);<br />&gt;         if (ret &lt; 0 || ret &gt;= 4096)<br />&gt;                 goto on_error;<br />&gt;<br />&gt;         ret = readlink(path, buf, sizeof(buf));<br />&gt;         if (ret &lt; 0)<br />&gt;                 goto on_error;<br />&gt;         printf("I point to \"%s\"\n", buf);<br /><br />This just smells wrong to me. And not just because you don't<br />NUL-terminate the readlink() return value (or just use "%.*s" with<br />ret, buf) .<br /><br />We should just give people a better way to get the pathname than that<br />readlink on /proc/self/fd/&lt;fd&gt; thing. It's kind of ridiculous that we<br />don't. We already have a "getcwd()" system call that only does it for<br />cwd.<br /><br />So I think we could/should just add a system call for 'fdname()' or similar.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
