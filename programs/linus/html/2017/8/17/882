    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/14/1000">First message in thread</a></li><li><a href="/lkml/2017/8/17/683">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/17/874">"Liang, Kan"</a><ul><li class="origin"><a href="/lkml/2017/8/18/328">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/18/328">Mel Gorman</a><ul><li><a href="/lkml/2017/8/18/638">"Liang, Kan"</a></li><li><a href="/lkml/2017/8/18/783">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2017/8/18/370">"Liang, Kan"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 17 Aug 2017 13:44:40 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/2] sched/wait: Break up long wake list walk</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 17, 2017 at 1:18 PM, Liang, Kan &lt;kan.liang&#64;intel.com&gt; wrote:<br />&gt;<br />&gt; Here is the call stack of wait_on_page_bit_common<br />&gt; when the queue is long (entries &gt;1000).<br />&gt;<br />&gt; # Overhead  Trace output<br />&gt; # ........  ..................<br />&gt; #<br />&gt;    100.00%  (ffffffff931aefca)<br />&gt;             |<br />&gt;             ---wait_on_page_bit<br />&gt;                __migration_entry_wait<br />&gt;                migration_entry_wait<br />&gt;                do_swap_page<br />&gt;                __handle_mm_fault<br />&gt;                handle_mm_fault<br />&gt;                __do_page_fault<br />&gt;                do_page_fault<br />&gt;                page_fault<br /><br />Hmm. Ok, so it does seem to very much be related to migration. Your<br />wake_up_page_bit() profile made me suspect that, but this one seems to<br />pretty much confirm it.<br /><br />So it looks like that wait_on_page_locked() thing in<br />__migration_entry_wait(), and what probably happens is that your load<br />ends up triggering a lot of migration (or just migration of a very hot<br />page), and then *every* thread ends up waiting for whatever page that<br />ended up getting migrated.<br /><br />And so the wait queue for that page grows hugely long.<br /><br />Looking at the other profile, the thing that is locking the page (that<br />everybody then ends up waiting on) would seem to be<br />migrate_misplaced_transhuge_page(), so this is _presumably_ due to<br />NUMA balancing.<br /><br />Does the problem go away if you disable the NUMA balancing code?<br /><br />Adding Mel and Kirill to the participants, just to make them aware of<br />the issue, and just because their names show up when I look at blame.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
