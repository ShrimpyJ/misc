    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/14/682">First message in thread</a></li><li><a href="/lkml/2017/8/14/698">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/14/723">Borislav Petkov</a><ul><li class="origin"><a href="/lkml/2017/8/14/770">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/14/770">Borislav Petkov</a><ul><li><a href="/lkml/2017/8/14/1064">Theodore Ts'o</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 14 Aug 2017 11:17:37 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: early x86 unseeded randomness</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 14, 2017 at 11:00 AM, Borislav Petkov &lt;bp&#64;alien8.de&gt; wrote:<br />&gt; On Mon, Aug 14, 2017 at 10:47:47AM -0700, Linus Torvalds wrote:<br />&gt;&gt; Plus on modern x86, you'll always get at least the hardware<br />&gt;&gt; randomness, which is fundamentally much better anyway.<br />&gt;<br />&gt; Right, my only intention was to get rid of those:<br />&gt;<br />&gt; [    0.000000] random: get_random_bytes called from start_kernel+0x30/0x3d8 with crng_init=0<br /><br />Ok, guys, you ALL need to learn that blindly just trying to get rid of<br />warnings IS A HORRIBLE IDEA.<br /><br />People also need to learn that *adding* warnings isn't always a good<br />idea, exactly because then people will mindlessly react to them.<br /><br />I *detest* bad compiler warnings for this reason. The number of<br />garbage patches that actually break working code that I've seen over<br />the year is mind-numbing.<br /><br />&gt; What do you propose? Keep 'em?<br /><br />Keeping the warning (or removing the warning itself without changing<br />the code) is certainly preferable to trying to "fix" the warning by<br />bogus measures, yes.<br /><br />&gt; Or fix the above, snipped bit to conditionally do rdtsc() *once* or<br />&gt; get_random_bytes() depending on the crng state?<br /><br />Neither. Let's aim to make sure to fix the warning the *only* correct<br />way - by making sure the initialization _ordering_ is correct, not by<br />hacking around the caller code.<br /><br />Maybe the warning message should be clarified to say that too. Make it<br />clear that the only acceptable fix is to change code ordering, not to<br />play games with randomness.<br /><br />But maybe those places that currently trigger the warning should just<br />use "get_random_u32()" instead. That at least gets rid of the warning<br />if there's a fast architected hardware random thing (ie modern x86).<br /><br />                       Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
