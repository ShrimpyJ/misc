    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/14/1000">First message in thread</a></li><li><a href="/lkml/2017/8/14/1197">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/14/1214">Andi Kleen</a><ul><li class="origin"><a href="/lkml/2017/8/15/623">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/15/623">Tim Chen</a><ul><li><a href="/lkml/2017/8/15/637">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2017/8/15/703">Davidlohr Bueso</a><ul><li><a href="/lkml/2017/8/15/707">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 14 Aug 2017 20:28:19 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/2] sched/wait: Break up long wake list walk</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 14, 2017 at 8:15 PM, Andi Kleen &lt;ak&#64;linux.intel.com&gt; wrote:<br />&gt; But what should we do when some other (non page) wait queue runs into the<br />&gt; same problem?<br /><br />Hopefully the same: root-cause it.<br /><br />Once you have a test-case, it should generally be fairly simple to do<br />with profiles, just seeing who the caller is when ttwu() (or whatever<br />it is that ends up being the most noticeable part of the wakeup chain)<br />shows up very heavily.<br /><br />And I think that ends up being true whether the "break up long chains"<br />patch goes in or not. Even if we end up allowing interrupts in the<br />middle, a long wait-queue is a problem.<br /><br />I think the "break up long chains" thing may be the right thing<br />against actual malicious attacks, but not for any actual real<br />benchmark or load.<br /><br />I don't think we normally have cases of long wait-queues, though. At<br />least not the kinds that cause problems. The real (and valid)<br />thundering herd cases should already be using exclusive waiters that<br />only wake up one process at a time.<br /><br />The page bit-waiting is hopefully special. As mentioned, we used to<br />have some _really_ special code for it for other reasons, and I<br />suspect you see this problem with them because we over-simplified it<br />from being a per-zone dynamically sized one (where the per-zone thing<br />caused both performance problems and actual bugs) to being that<br />"static small array".<br /><br />So I think/hope that just re-introducing some dynamic sizing will help<br />sufficiently, and that this really is an odd and unusual case.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
