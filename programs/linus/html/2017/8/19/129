    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/19/49">First message in thread</a></li><li><a href="/lkml/2017/8/19/49">Masahiro Yamada</a><ul><li><a href="/lkml/2017/8/19/48">Masahiro Yamada</a></li><li><a href="/lkml/2017/8/19/50">Masahiro Yamada</a></li><li><a href="/lkml/2017/8/19/51">Masahiro Yamada</a><ul><li><a href="/lkml/2017/8/21/658">Rob Herring</a></li></ul></li><li><a href="/lkml/2017/8/19/84">Cao jin</a></li><li class="origin"><a href="/lkml/2017/8/19/135">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/19/135">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/19/168">Linus Torvalds</a></li><li><a href="/lkml/2017/9/8/45">Masahiro Yamada</a><ul><li><a href="/lkml/2017/9/8/549">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 19 Aug 2017 10:03:51 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH 0/3] kbuild: generate intermediate C files instead of copying _shipped files</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Aug 19, 2017 at 1:49 AM, Masahiro Yamada<br />&lt;yamada.masahiro&#64;socionext.com&gt; wrote:<br />&gt;<br />&gt; Here is one question.  Is it acceptable to use those rules all the time?<br />&gt; That is, generate those C files by flex, bison, gperf during the<br />&gt; kernel building.<br /><br />Yeah, I think we probably should do that.<br /><br />However, when I just tested, I noticed that we have issues with<br />re-generating those files. With gperf 3.1 installed, I get<br /><br />  In file included from scripts/kconfig/zconf.tab.c:213:0:<br />  scripts/kconfig/zconf.gperf:147:1: error: conflicting types for<br />‘kconf_id_lookup’<br />  scripts/kconfig/zconf.gperf:12:31: note: previous declaration of<br />‘kconf_id_lookup’ was here<br />   static const struct kconf_id *kconf_id_lookup(register const char<br />*str, register unsigned int len);<br />                                 ^~~~~~~~~~~~~~~<br /><br />because gperf now generates<br /><br />   const struct kconf_id *<br />  -kconf_id_lookup (register const char *str, register unsigned int len)<br />  +kconf_id_lookup (register const char *str, register size_t len)<br /><br />and I'm not sure how to detect that automatically. It seems to be a<br />gperf-3.1 change, and gperf doesn't seem to generate any version<br />markers.<br /><br />Working around that, I hit:<br /><br />  In file included from scripts/genksyms/lex.lex.c:1921:0:<br />  scripts/genksyms/keywords.gperf:54:1: error: conflicting types for<br />‘is_reserved_word’<br />   static, STATIC_KEYW<br />   ^~~~~~~~~~~~~~~~<br />  In file included from scripts/genksyms/lex.lex.c:1921:0:<br />  scripts/genksyms/keywords.gperf:6:30: note: previous declaration of<br />‘is_reserved_word’ was here<br />   static const struct resword *is_reserved_word(register const char<br />*str, register unsigned int len);<br />                              ^~~~~~~~~~~~~~~~<br /><br />so we have at least two cases of this in the source tree.<br /><br />So one of the advantages of the pre-shipped files is that we can avoid<br />that kind of crazy version issues with the tools.<br /><br />But if we can solve the versioning thing easily, I certainly don't<br />mind getting rid of the pre-generated files. Having to have<br />flex/bison/gperf isn't a huge onus on the kernel build system.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
