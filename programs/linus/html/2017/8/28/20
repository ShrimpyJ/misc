    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/25/542">First message in thread</a></li><li><a href="/lkml/2017/8/27/240">Nicholas Piggin</a><ul><li><a href="/lkml/2017/8/27/243">Nicholas Piggin</a><ul><li class="origin"><a href="/lkml/2017/8/28/123">Linus Torvalds</a><ul><li><a href="/lkml/2017/8/28/123">Nicholas Piggin</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 27 Aug 2017 22:17:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 2/2 v2] sched/wait: Introduce lock breaker in wake_up_page_bit</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Aug 27, 2017 at 6:29 PM, Nicholas Piggin &lt;npiggin&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; BTW. since you are looking at this stuff, one other small problem I remember<br />&gt; with exclusive waiters is that losing to a concurrent locker puts them to<br />&gt; the back of the queue. I think that could be fixed with some small change to<br />&gt; the wait loops (first add to tail, then retries add to head). Thoughts?<br /><br />No, not that way.<br /><br />First off, it's oddly complicated, but more importantly, the real<br />unfairness you lose to is not other things on the wait queue, but to<br />other lockers that aren't on the wait-queue at all, but instead just<br />come in and do a "test-and-set" without ever even going through the<br />slow path.<br /><br />So instead of playing queuing games, you'd need to just change the<br />unlock sequence. Right now we basically do:<br /><br /> - clear lock bit and atomically test if contended (and we play games<br />with bit numbering to do that atomic test efficiently)<br /><br /> - if contended, wake things up<br /><br />and you'd change the logic to be<br /><br /> - if contended, don't clear the lock bit at all, just transfer the<br />lock ownership directly to the waiters by walking the wait list<br /><br /> - clear the lock bit only once there are no more wait entries (either<br />because there were no waiters at all, or because all the entries were<br />just waiting for the lock to be released)<br /><br />which is certainly doable with a couple of small extensions to the<br />page wait key data structure.<br /><br />But most of my clever schemes the last few days were abject failures,<br />and honestly, it's late in the rc.<br /><br />In fact, this late in the game I probably wouldn't even have committed<br />the small cleanups I did if it wasn't for the fact that thinking of<br />the whole WQ_FLAG_EXCLUSIVE bit made me find the bug.<br /><br />So the cleanups were actually what got me to look at the problem in<br />the first place, and then I went "I'm going to commit the cleanup, and<br />then I can think about the bug I just found".<br /><br />I'm just happy that the fix seems to be trivial. I was afraid I'd have<br />to do something nastier (like have the EINTR case send another<br />explicit wakeup to make up for the lost one, or some ugly hack like<br />that).<br /><br />It was only when I started looking at the history of that code, and I<br />saw the old bit_lock code, and I went "Hmm. That has the _same_ bug -<br />oh wait, no it doesn't!" that I realized that there was that simple<br />fix.<br /><br />You weren't cc'd on the earlier part of the discussion, you only got<br />added when I realized what the history and simple fix was.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
