    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/8/16/534">First message in thread</a></li><li><a href="/lkml/2017/8/24/876">(Eric W. Biederman)</a><ul><li><a href="/lkml/2017/8/24/887">Linus Torvalds</a></li><li><a href="/lkml/2017/8/24/893">Christian Brauner</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 25 Aug 2017 18:00:35 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/1] devpts: use dynamic_dname() to generate proc name</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 24, 2017 at 4:37 PM, Christian Brauner<br />&lt;christian.brauner&#64;canonical.com&gt; wrote:<br />&gt;<br />&gt; In fact, /dev/ptmx being a symlink or bind-mount is the *standard* in containers<br />&gt; even for non-user namespaced containers or containers that do not retain<br />&gt; CAP_MKNOD.<br /><br />Yes.<br /><br />I think using /dev/pts/ptmx is nice from a kernel standpoint, but I<br />really think that user space should *never* use it.<br /><br />The distro or container setup can do whatever it wants to made<br />/dev/ptmx then point into the pts directory. Either the traditional<br />device node, the symlink, or the bind mount works fine. But the point<br />is that glibc definitely should *not* point to /dev/pts/ptmx itself,<br />because it's simply not the right path. On lots of distributions that<br />path simply will not work.<br /><br />And yes, I agree that the user interface to this all is particularly<br />nasty. With TIOCGPTPEER we have a nice way to get the pts file<br />descriptor, but the "normal" way to get to it involves opening a path<br />given by ptsname(), so we en dup in the crazy situation that we can<br />easily open the file without the path, but then we use the fd to get<br />the path (that we didn't need) and then people open it with that path,<br />because the standard sequence to get a pts is<br /><br />  master = getpt() / posix_openpt() / open("/dev/ptmx", O_RDWR | O_NOCTTY);<br />  grantpt(master);<br />  unlockpt(master);<br />  name = ptsname(master);<br />  slave = open(name, O_RDWR);<br /><br />which is kind of silly. And I'm not talking about the three different<br />ways to open the master side. I'm talking about all the rest, which is<br />all just pretty much garbage.<br /><br />But I guess none of this is really performance-critical.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
