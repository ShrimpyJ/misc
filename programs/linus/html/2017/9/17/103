    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/9/15/7">First message in thread</a></li><li><a href="/lkml/2017/9/16/149">Linus Torvalds</a><ul><li><a href="/lkml/2017/9/17/14">Mimi Zohar</a></li><li><a href="/lkml/2017/9/17/99">Christoph Hellwig</a><ul><li class="origin"><a href="/lkml/2017/9/17/106">Linus Torvalds</a><ul><li><a href="/lkml/2017/9/17/106">Christoph Hellwig</a></li><li><a href="/lkml/2017/9/17/113">Mimi Zohar</a><ul><li><a href="/lkml/2017/9/17/115">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 17 Sep 2017 08:28:40 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 3/3] ima: use fs method to read integrity data (updated patch description)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Sep 17, 2017 at 8:17 AM, Christoph Hellwig &lt;hch&#64;infradead.org&gt; wrote:<br />&gt;<br />&gt; Only for direct I/O, and IMA and direct I/O don't work together.<br />&gt; From ima_collect_measurement:<br />&gt;<br />&gt;                 if (file-&gt;f_flags &amp; O_DIRECT) {<br />&gt;                         audit_cause = "failed(directio)";<br />&gt;                         result = -EACCES;<br />&gt;                         goto out;<br />&gt;                 }<br /><br />That's not the issue.<br /><br />The issue is that somebody else can come in - using direct IO - at the<br />same time as the first person is collecting measurements, and thus<br />race with the collector.<br /><br />So now the measurements are not trustworthy any more.<br /><br />&gt; Well, that's exactly the point of the new -&gt;integrity_read routine<br />&gt; I proposed and prototype.  The important thing is that it is called<br />&gt; with i_rwsem held because code mugh higher in the chain already<br />&gt; acquired it, but except for that it's entirely up to the file system.<br /><br />.. and *my* point is that it's the wrong lock for actually checking<br />integrity (it doesn't actually guarantee exclusion, even though in<br />practice it's almost always the case), and so we're adding a nasty<br />callback that in 99% of all cases is the same as the normal read, and<br />we *could* have just added it with a RWF flag instead.<br /><br />Is there some reason why integrity has to use that particular lock<br />that is so inconvenient for the filesystems it wants to check?<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
