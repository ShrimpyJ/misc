    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/9/14/599">First message in thread</a></li><li><a href="/lkml/2017/9/16/93">Fengguang Wu</a><ul><li><a href="/lkml/2017/9/16/138">Thomas Gleixner</a><ul><li class="origin"><a href="/lkml/2017/9/16/146">Linus Torvalds</a><ul><li><a href="/lkml/2017/9/16/146">Thomas Gleixner</a><ul><li><a href="/lkml/2017/9/16/150">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 16 Sep 2017 10:55:53 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: d57108d4f6 ("watchdog/core: Get rid of the thread .."): BUG: unable to handle kernel NULL pointer dereference at 0000000000000208</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Sep 16, 2017 at 10:35 AM, Thomas Gleixner &lt;tglx&#64;linutronix.de&gt; wrote:<br />&gt;<br />&gt; Don't bother. I found it already. On UP we have:<br />&gt;<br />&gt; #define for_each_cpu(cpu, mask)               \<br />&gt;         for ((cpu) = 0; (cpu) &lt; 1; (cpu)++, (void)mask)<br />&gt;<br />&gt; which is a total fail as it breaks any code which uses for_each_cpu() or<br />&gt; any of the other variants on UP by assuming that all cpumask have bit 0<br />&gt; set.<br /><br />It's fairly fundamental. UP assumes that all CPU masks are always that<br />"one CPU set". Not just here - everywhere.<br /><br />I guess we could somehow try to move away from that, but really, the<br />assumption of fixed masks ends up simplifying the code generation a<br />lot, so it made tons of sense back when UP was a primary target.<br /><br />So it's an approach that is somewhat historical, but I'm not sure it's<br />worth re-visiting that old decision. People should simply not expect<br />to traverse over empty masks in anything that is UP.<br /><br />So I suspect your perf fix is the right one, and maybe we could/should<br />just make people more aware of the empty cpumask issue with UP.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
