    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/9/28/367">First message in thread</a></li><li><a href="/lkml/2017/9/28/753">Linus Torvalds</a><ul><li><a href="/lkml/2017/9/28/762">Mimi Zohar</a><ul><li class="origin"><a href="/lkml/2017/9/28/785">Linus Torvalds</a><ul><li><a href="/lkml/2017/9/28/785">Mimi Zohar</a><ul><li><a href="/lkml/2017/9/28/804">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 28 Sep 2017 17:33:34 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH 3/3] fs: detect that the i_rwsem has already been taken exclusively</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 28, 2017 at 5:12 PM, Mimi Zohar &lt;zohar&#64;linux.vnet.ibm.com&gt; wrote:<br />&gt;<br />&gt; Originally IMA did define it's own lock, prior to IMA-appraisal.  IMA-<br />&gt; appraisal introduced writing the file hash as an xattr, which required<br />&gt; taking the i_mutex.  process_measurement() and ima_file_free() took<br />&gt; the iint-&gt;mutex first and then the i_mutex, while setxattr, chmod and<br />&gt; chown took the locks in reverse order.  To resolve the potential<br />&gt; deadlock, the iint-&gt;mutex was eliminated.<br /><br />Umm. You already have an explicit invalidation model, where you<br />invalidate after a write has occurred.<br /><br />But the locking of the generation count (or "invalidation status" or<br />whatever) can - and should be - entirely independent of the locking of<br />the actual appraisal.<br /><br />So make the appraisal itself use a semaphore ("only one appraisal at a time").<br /><br />But use a separate lock for the generation count.<br />So then appraisal is:<br /><br /> - get appraisal semaphore<br />      - get generation count lock<br />            read generation count<br />      - drop generation count lock<br />      - do the actual appraisal<br /> - drop appraisal semaphore<br /><br />Note that you now have a tuple of "generation count, appraisal" that<br />you have *not* saved off yet, but it's your stable thing.<br /><br />Now you can write the xattr:<br /><br />  - get exclusive inode lock (for xattr)<br />      - get generation count lock<br />          - if the appraisal generation does not match, do NOT write<br />the appraisal you just calculated, since it's pointless: it's already<br />stale.<br />          - otherwise write the appraisal and generation count to the xattr<br />      - drop generation count lock<br />  - release exclusive inode lock<br /><br />and then for anything that does setxattr or chmod or whatever, just<br />use that generation count lock to invalidate the appraisal. You don't<br />need to actual appraisal lock for that.<br /><br />So now the appraisal lock is always the outermost one, and the<br />generation count lock is always the innermost.<br /><br />Anyway, I haven't looked at the details of what IMA does, but<br />something like the above really sounds like it should work and seems<br />pretty straightforward.<br /><br />No?<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
