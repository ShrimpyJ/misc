    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/7/21/605">First message in thread</a></li><li><a href="/lkml/2017/7/27/763">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/27/772">Joe Perches</a><ul><li class="origin"><a href="/lkml/2017/7/28/779">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/28/779">Joe Perches</a></li><li><a href="/lkml/2017/7/29/136">Joe Perches</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 28 Jul 2017 15:30:30 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH Y.A. RESEND] MAINTAINERS: fix alpha. ordering</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Jul 27, 2017 at 8:12 PM, Joe Perches &lt;joe&#64;perches.com&gt; wrote:<br />&gt;<br />&gt; I think it's better to centralize the MAINTAINERS<br />&gt; location in &lt;tree&gt;/MAINTAINERS/&lt;files&gt; than spread<br />&gt; them all over the tree given how many subsystems and<br />&gt; maintainerships are also spread around the tree.<br />&gt;<br />&gt; But the get_maintainers patch I sent allows both<br />&gt; styles.<br /><br />Possibly. I just did realize that we have one de-centralized<br />maintainers file out there already, and have had for 3+ years:<br />drivers/staging/unisys/MAINTAINERS.<br /><br />One thing I like about the decentralized model is that it looks like<br />we could automate the initial split fairly well based on F: patterns.<br />Something like:<br /><br /> - if we have a single F-pattern line, without directory wildcards,<br />put the entry in the MAINTAINERS directory for that F-pattern<br /><br /> - else keep it in the top-level MAINTAINERS file<br /><br />because everything else I looked at kind of sucked. The "first word of<br />the description" works really well for a couple of cases, but really<br />badly for the majority.<br /><br />But my favorite model right now is to actually do it by the "L:"<br />entry, and then remove the host name and the common parts from the<br />email name ("devel", "dev", "kernel", "linux" etc).<br /><br />And then *if* we have multiple entries (arbitrary cut-off: 5) for the<br />same base (so the rule would be that we never have a MAINTAINERS file<br />with just a single entry like that unisys one), we'd split it out and<br />use "MAINTAINERS/xyz" for those entries.<br /><br />But we'd still need a fallback for the "rest".<br /><br />Because doing it by mailing list superficially looks like it might<br />work very well, we have things like this:<br /><br />      5 L: iommu&#64;lists.linux-foundation.org<br />      5 L: keyrings&#64;vger.kernel.org<br />      5 L: linux-block&#64;vger.kernel.org<br />      6 L: linux-arm-msm&#64;vger.kernel.org<br />      6 L: linux-samsung-soc&#64;vger.kernel.org<br />      7 L: linux-samsung-soc&#64;vger.kernel.org (moderated for non-subscribers)<br />      7 L: linux-security-module&#64;vger.kernel.org<br />      7 L: linux-wpan&#64;vger.kernel.org<br />      8 L: linux-acpi&#64;vger.kernel.org<br />      8 L: linux-fsdevel&#64;vger.kernel.org<br />      8 L: linux-ide&#64;vger.kernel.org<br />      8 L: linux-serial&#64;vger.kernel.org<br />      8 L: xen-devel&#64;lists.xenproject.org (moderated for non-subscribers)<br />      9 L: adi-buildroot-devel&#64;lists.sourceforge.net (moderated for<br />non-subscribers)<br />      9 L: linux-hams&#64;vger.kernel.org<br />      9 L: linux-mm&#64;kvack.org<br />     11 L: kvm&#64;vger.kernel.org<br />     11 L: linux-mmc&#64;vger.kernel.org<br />     12 L: virtualization&#64;lists.linux-foundation.org<br />     13 L: linux-renesas-soc&#64;vger.kernel.org<br />     13 L: linux-s390&#64;vger.kernel.org<br />     16 L: linux-iio&#64;vger.kernel.org<br />     16 L: linux-mips&#64;linux-mips.org<br />     17 L: linux-gpio&#64;vger.kernel.org<br />     18 L: linux-crypto&#64;vger.kernel.org<br />     18 L: linux-mtd&#64;lists.infradead.org<br />     20 L: linux-arm-kernel&#64;lists.infradead.org<br />     20 L: linux-input&#64;vger.kernel.org<br />     22 L: linux-i2c&#64;vger.kernel.org<br />     23 L: linux-edac&#64;vger.kernel.org<br />     23 L: linux-fbdev&#64;vger.kernel.org<br />     23 L: linux-rdma&#64;vger.kernel.org<br />     25 L: linux-omap&#64;vger.kernel.org<br />     26 L: alsa-devel&#64;alsa-project.org (moderated for non-subscribers)<br />     27 L: linux-pm&#64;vger.kernel.org<br />     28 L: dri-devel&#64;lists.freedesktop.org<br />     29 L: linuxppc-dev&#64;lists.ozlabs.org<br />     33 L: linux-pci&#64;vger.kernel.org<br />     35 L: platform-driver-x86&#64;vger.kernel.org<br />     39 L: linux-usb&#64;vger.kernel.org<br />     44 L: linux-wireless&#64;vger.kernel.org<br />     46 L: linux-hwmon&#64;vger.kernel.org<br />     54 L: linux-kernel&#64;vger.kernel.org<br />     57 L: linux-scsi&#64;vger.kernel.org<br />    122 L: linux-arm-kernel&#64;lists.infradead.org (moderated for non-subscribers)<br />    134 L: netdev&#64;vger.kernel.org<br />    187 L: linux-media&#64;vger.kernel.org<br /><br />so we'd actually be able to create an entry like "media" with 187<br />maintainers entries automatically based on that heuristic. Same goes<br />for a lot of other entries, and we'd end up with about 50 files in<br />MAINTAINERS which sounds manageable but still usefully split up.<br /><br />So we'd have files like "rdma", "dma", "omap", "pm", "dri", "pci",<br />"wireless" etc, all of which sound sane.<br /><br />(The "linux-kernel&#64;vger.kernel.org" L: entry above would automatically<br />become moot, because the "filter out the common parts" turns it into<br />an empty name, which is actually correct - it implies no specific<br />subsystem)<br /><br />I generated the above with trivial grep scripting, so some of them may<br />end up not working or having wrong counts just due to having multiple<br />L: lines, but it looks like a promising approach to me, and I like how<br />the names seem to end up all fairly sane.<br /><br />Comments?<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
