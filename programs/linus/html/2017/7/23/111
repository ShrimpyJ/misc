    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/7/21/605">First message in thread</a></li><li><a href="/lkml/2017/7/21/605">Randy Dunlap</a><ul><li><a href="/lkml/2017/7/21/733">Linus Torvalds</a></li><li class="origin"><a href="/lkml/2017/7/23/112">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/23/112">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/23/116">Joe Perches</a></li><li><a href="/lkml/2017/7/23/127">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/23/163">Joe Perches</a></li><li><a href="/lkml/2017/7/27/712">Joe Perches</a></li></ul></li></ul></li><li><a href="/lkml/2017/7/23/114">Joe Perches</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 23 Jul 2017 12:49:08 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH Y.A. RESEND] MAINTAINERS: fix alpha. ordering</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Ok, so I already applied your alpha-ordering patch, but it just annoyed me that<br /><br /> (a) the ordering wasn't complete<br /><br /> (b) this wasn't scripted.<br /><br />However, the sane way of scripting it is clearly not to do it in C,<br />which I'd be comfy with, because that would be insane.<br /><br />Instead, it should be done in perl. Except my perl-fu is so horribly<br />horribly bad that I'm a bit ashamed to show the end result.<br /><br />Does anybody have actual real perl skills? Because somebody should<br />double-check my appended script-from-hell.<br /><br />ANYWAY. One reason I did this was because *if* we want to split up the<br />MAINTAINERS file, I absolutely refuse to do it by hand. It needs to be<br />automated. I'm not going to apply a patch - I'm going to apply a<br />*script*, and commit the end result along with the doc about what the<br />script was (so that then I have an inevitable conflict due to this big<br />re-org, I can resolve the conflict by re-running the script on the<br />side that wasn't part of the re-org, rather than having to do nasty<br />things).<br /><br />And this script could easily be extended to automate the scripting. So<br />please, can somebody with perl-fu say that "yeah, that's the right<br />perl model", or point me to what I did wrong?<br /><br />The end result looks ok. I can run<br /><br />    perl parse-maintainers.pl &lt; MAINTAINERS &gt; outfile<br /><br />and the end result is actually a *properly* sorted MAINTAINERS file as<br />far as I can tell.<br /><br />Comments?<br /><br />                   Linus<br /><br />---<br />#!/usr/bin/perl -w<br /><br />use strict;<br /><br />my %map;<br /><br /># sort comparison function<br />sub by_category($$) {<br />    my ($a, $b) = &#64;_;<br /><br />    $a = uc $a;<br />    $b = uc $b;<br /><br />    # This always sorts last<br />    $a =~ s/THE REST/ZZZZZZ/g;<br />    $b =~ s/THE REST/ZZZZZZ/g;<br /><br />    $a cmp $b;<br />}<br /><br />sub alpha_output {<br />    my $key;<br />    my $sort_method = \&amp;by_category;<br /><br />    foreach $key (sort $sort_method keys %map) {<br />        if ($key ne " ") {<br />            print $key;<br />        }<br />        print $map{$key};<br />    }<br />}<br /><br />sub file_input {<br />    my $lastline = "";<br />    my $case = " ";<br />    $map{$case} = "";<br /><br />    while (&lt;&gt;) {<br />        my $line = $_;<br /><br />        # Pattern line?<br />        if ($line =~ m/^([A-Z]):\s*(.*)/) {<br />            if ($lastline eq "") {<br />                $map{$case} = $map{$case} . $line;<br />                next;<br />            }<br />            $case = $lastline;<br />            $map{$case} = $line;<br />            $lastline = "";<br />            next;<br />        }<br /><br />        $map{$case} = $map{$case} . $lastline;<br />        $lastline = $line;<br />    }<br />    $map{$case} = $map{$case} . $lastline;<br />}<br /><br />&amp;file_input;<br />&amp;alpha_output;<br />exit(0);<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
