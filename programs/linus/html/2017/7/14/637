    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/7/13/757">First message in thread</a></li><li><a href="/lkml/2017/7/14/604">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/14/623">Andrey Rybainin</a></li><li><a href="/lkml/2017/7/14/634">Daniel Micay</a><ul><li class="origin"><a href="/lkml/2017/7/14/641">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/14/641">Daniel Micay</a><ul><li><a href="/lkml/2017/7/14/642">Daniel Micay</a></li></ul></li></ul></li><li><a href="/lkml/2017/7/14/638">Daniel Micay</a></li></ul></li><li><a href="/lkml/2017/7/14/701">Daniel Micay</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 14 Jul 2017 13:50:06 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] Please pull NFS client changes for Linux 4.13</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Jul 14, 2017 at 1:38 PM, Daniel Micay &lt;danielmicay&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; If strscpy treats the count parameter as a *guarantee* of the dest size<br />&gt; rather than a limit,<br /><br />No, it's a *limit*.<br /><br />And by a *limit*, I mean that we know that we can access both source<br />and destination within that limit.<br /><br />&gt; My initial patch used strlcpy there, because I wasn't aware of strscpy<br />&gt; before it was suggested:<br /><br />Since I'm looking at this, I note that the "strlcpy()" code is<br />complete garbage too, and has that same<br /><br />     p_size == (size_t)-1 &amp;&amp; q_size == (size_t)-1<br /><br />check which is wrong.  Of course, in strlcpy, q_size is never actually<br />*used*, so the whole check seems bogus.<br /><br />But no, strlcpy() is complete garbage, and should never be used. It is<br />truly a shit interface, and anybody who uses it is by definition<br />buggy.<br /><br />Why? Because the return value of "strlcpy()" is defined to be ignoring<br />the limit, so you FUNDAMENTALLY must not use that thing on untrusted<br />source strings.<br /><br />But since the whole *point* of people using it is for untrusted<br />sources, it by definition is garbage.<br /><br />Ergo: don't use strlcpy(). It's unbelievable crap. It's wrong. There's<br />a reason we defined "strscpy()" as the way to do safe copies<br />(strncpy(), of course, is broken for both lack of NUL termination<br />_and_ for excessive NUL termination when a NUL did exist).<br /><br />So quite frankly, this hardening code needs to be looked at again. And<br />no, if it uses "strlcpy()", then it's not hardering, it's just a pile<br />of crap.<br /><br />Yes, I'm annoyed. I really get very very annoyed by "hardening" code<br />that does nothing of the kind.<br /><br />                   Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
