    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/7/18/874">First message in thread</a></li><li><a href="/lkml/2017/7/18/879">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/18/1005">Andrey Ryabinin</a><ul><li class="origin"><a href="/lkml/2017/7/18/1045">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/18/1045">Andrey Ryabinin</a><ul><li><a href="/lkml/2017/7/18/1047">Andrey Ryabinin</a></li><li><a href="/lkml/2017/7/18/1135">Andrew Morton</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 18 Jul 2017 13:26:17 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] lib/strscpy: avoid KASAN false positive</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 18, 2017 at 1:15 PM, Andrey Ryabinin<br />&lt;aryabinin&#64;virtuozzo.com&gt; wrote:<br />&gt;<br />&gt; No, it does warn about valid users. The report that Dave posted wasn't about wrong strscpy() usage<br />&gt; it was about reading 8-bytes from 5-bytes source string. It wasn't about buggy 'count' at all.<br />&gt; So KASAN will warn for perfectly valid code like this:<br />&gt;         char dest[16];<br />&gt;         strscpy(dest, "12345", sizeof(dest)):<br /><br />Ugh, ok, yes.<br /><br />&gt; For strscpy() that would mean making the *whole* read from 'src' buffer unchecked by KASAN.<br /><br />So we do have that READ_ONCE_NOCHECK(), but could we perhaps have<br />something that doesn't do a NOCHECK but a partial check and is simply<br />ok with "this is an optimistc longer access"<br /><br />We have that for the dcache case too, although there the code does<br />that odd kasan_unpoison_shadow() instead.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
