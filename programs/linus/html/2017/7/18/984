    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/7/18/106">First message in thread</a></li><li><a href="/lkml/2017/7/18/106">Dave Airlie</a><ul><li><a href="/lkml/2017/7/18/699">Peter Jones</a><ul><li class="origin"><a href="/lkml/2017/7/18/1014">Linus Torvalds</a><ul><li><a href="/lkml/2017/7/18/1014">Dave Airlie</a><ul><li><a href="/lkml/2017/7/18/1042">Dave Airlie</a></li><li><a href="/lkml/2017/7/31/701">"H. Peter Anvin"</a></li></ul></li></ul></li><li><a href="/lkml/2017/7/25/1">Dave Airlie</a><ul><li><a href="/lkml/2017/7/25/146">Bartlomiej Zolnierkiewicz</a><ul><li><a href="/lkml/2017/7/31/572">Bartlomiej Zolnierkiewicz</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 18 Jul 2017 12:57:29 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] efifb: allow user to disable write combined mapping.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 18, 2017 at 7:34 AM, Peter Jones &lt;pjones&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; Well, that's kind of amazing, given 3c004b4f7eab239e switched us /to/<br />&gt; using ioremap_wc() for the exact same reason.  I'm not against letting<br />&gt; the user force one way or the other if it helps, though it sure would be<br />&gt; nice to know why.<br /><br />It's kind of amazing for another reason too: how is ioremap_wc()<br />_possibly_ slower than ioremap_nocache() (which is what plain<br />ioremap() is)?<br /><br />The difference is literally _PAGE_CACHE_MODE_WC vs _PAGE_CACHE_MODE_UC_MINUS.<br /><br />Both of them should be uncached, but WC should allow much better write<br />behavior. It should also allow much better system behavior.<br /><br />This really sounds like a band-aid patch that just hides some other<br />issue entirely. Maybe we screw up the cache modes for some PAT mode<br />setup?<br /><br />Or maybe it really is something where there is one global write queue<br />per die (not per CPU), and having that write queue "active" doing<br />combining will slow down every core due to some crazy synchronization<br />issue?<br /><br />x86 people, look at what Dave Airlie did, I'll just repeat it because<br />it sounds so crazy:<br /><br />&gt; A customer noticed major slowdowns while logging to the console<br />&gt; with write combining enabled, on other tasks running on the same<br />&gt; CPU. (10x or greater slow down on all other cores on the same CPU<br />&gt; as is doing the logging).<br />&gt;<br />&gt; I reproduced this on a machine with dual CPUs.<br />&gt; Intel(R) Xeon(R) CPU E5-2609 v3 &#64; 1.90GHz (6 core)<br />&gt;<br />&gt; I wrote a test that just mmaps the pci bar and writes to it in<br />&gt; a loop, while this was running in the background one a single<br />&gt; core with (taskset -c 1), building a kernel up to init/version.o<br />&gt; (taskset -c 8) went from 13s to 133s or so. I've yet to explain<br />&gt; why this occurs or what is going wrong I haven't managed to find<br />&gt; a perf command that in any way gives insight into this.<br /><br />So basically the UC vs WC thing seems to slow down somebody *else* (in<br />this case a kernel compile) on another core entirely, by a factor of<br />10x. Maybe the WC writer itself is much faster, but _others_ are<br />slowed down enormously.<br /><br />Whaa? That just seems incredible.<br /><br />Dave - while your test sounds very simple, can you package it up some<br />way so that somebody inside of Intel can just run it on one of their<br />machines?<br /><br />The patch itself (to allow people to *not* do WC that is supposed to<br />be so much better but clearly doesn't seem to be) looks fine to me,<br />but it would be really good to get intel to look at this.<br /><br />                    Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
