    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2017/10/23/183">First message in thread</a></li><li><a href="/lkml/2017/10/29/194">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/29/196">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/109">Peter Zijlstra</a><ul><li><a href="/lkml/2017/10/30/120">Fengguang Wu</a></li></ul></li></ul></li><li><a href="/lkml/2017/10/29/197">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/29/213">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/29/238">Eric Ren</a></li><li><a href="/lkml/2017/10/29/242">piaojun</a></li></ul></li></ul></li><li><a href="/lkml/2017/10/29/212">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/206">Borislav Petkov</a><ul><li><a href="/lkml/2017/10/30/351">Tyler Baicar</a><ul><li><a href="/lkml/2017/10/30/354">Borislav Petkov</a></li></ul></li><li><a href="/lkml/2017/10/30/500">Linus Torvalds</a><ul><li><a href="/lkml/2017/10/30/510">Borislav Petkov</a></li><li><a href="/lkml/2017/10/30/513">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2017/10/29/214">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/133">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2017/10/30/138">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/213">"Kirill A. Shutemov"</a></li></ul></li></ul></li><li><a href="/lkml/2017/10/30/247">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2017/10/30/267">"Zi Yan"</a><ul><li><a href="/lkml/2017/10/30/323">"Kirill A. Shutemov"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2017/10/29/217">Fengguang Wu</a><ul><li class="origin"><a href="/lkml/2017/10/30/600">Linus Torvalds</a><ul><li><a href="/lkml/2017/10/30/600">Fengguang Wu</a></li><li><a href="/lkml/2017/11/10/477">Linus Torvalds</a><ul><li><a href="/lkml/2017/11/10/520">Thomas Gleixner</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2017/10/30/47">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/170">Peter Zijlstra</a><ul><li><a href="/lkml/2017/10/30/734">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/31/528">Peter Zijlstra</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2017/10/30/50">Fengguang Wu</a></li><li><a href="/lkml/2017/10/30/58">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/557">Linus Torvalds</a><ul><li><a href="/lkml/2017/10/30/586">Rodrigo Vivi</a><ul><li><a href="/lkml/2017/10/30/744">Fengguang Wu</a></li></ul></li><li><a href="/lkml/2017/10/30/593">Fengguang Wu</a></li></ul></li></ul></li><li><a href="/lkml/2017/10/30/66">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/77">Eryu Guan</a><ul><li><a href="/lkml/2017/10/30/765">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/31/35">Eryu Guan</a></li></ul></li><li><a href="/lkml/2017/10/31/547">Filipe Manana</a></li></ul></li></ul></li><li><a href="/lkml/2017/10/30/75">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/450">Dan Williams</a><ul><li><a href="/lkml/2017/10/30/759">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/768">Dan Williams</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2017/10/30/78">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/79">Juergen Gross</a><ul><li><a href="/lkml/2017/10/30/105">Fengguang Wu</a><ul><li><a href="/lkml/2017/10/30/162">Fengguang Wu</a></li></ul></li></ul></li><li><a href="/lkml/2017/10/30/110">Dou Liyang</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 30 Oct 2017 12:29:47 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [run_timer_softirq] BUG: unable to handle kernel paging request at 0000000000010007</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Oct 29, 2017 at 4:48 PM, Fengguang Wu &lt;fengguang.wu&#64;intel.com&gt; wrote:<br />&gt;<br />&gt; Here are 3 dmesgs related to wireless and 1 from ethernet.<br /><br />Fengguang, these would be lovelier still _if_ you have DEBUG_INFO<br />enabled on the kernel, and your script were to find things like<br />"symbol+0xhex/0xhex", and run "./scripts/faddr2line" on them.<br /><br />So<br /><br />&gt; [  235.425464] BUG: unable to handle kernel paging request at 0000000000010007<br />&gt; [  235.425470] IP: run_timer_softirq+0x13a/0x470<br /><br />would also then have<br /><br />   run_timer_softirq at timer.c:XYZ<br /><br />which would make it easier to see exactly _what_ it is that faults. As<br />it is, I think there's a fair number of inlining that makes it hard to<br />see the cause, but that faddrtoline would make very obvious.<br /><br />Finding that "symbol+xyz/abc" pattern should be fairly easy to<br />automate, and should fit the 0day model fairly well. No?<br /><br />In this case, the trapping instruction ends up decoding to<br /><br />   0: 4c 8d 6c c5 90        lea    -0x70(%rbp,%rax,8),%r13<br />   5: 49 8b 45 00          mov    0x0(%r13),%rax<br />   9: 48 85 c0              test   %rax,%rax<br />   c: 74 de                je     0xffffffffffffffec<br />   e: 4d 8b 7d 00          mov    0x0(%r13),%r15<br />  12: 4d 89 7c 24 08        mov    %r15,0x8(%r12)<br />  17: 0f 1f 44 00 00        nopl   0x0(%rax,%rax,1)<br />  1c: 49 8b 07              mov    (%r15),%rax<br />  1f: 49 8b 57 08          mov    0x8(%r15),%rdx<br />  23: 48 85 c0              test   %rax,%rax<br />  26: 48 89 02              mov    %rax,(%rdx)<br />  29: 74 04                je     0x2f<br />  2b:* 48 89 50 08          mov    %rdx,0x8(%rax) &lt;-- trapping instruction<br />  2f: 41 f6 47 2a 20        testb  $0x20,0x2a(%r15)<br />  34: 49 c7 47 08 00 00 00 movq   $0x0,0x8(%r15)<br /><br />and %rax has the value 0xffff, so yes, it will trap at 0x10007.<br /><br />It's not trivial to see just *wjhat* access it is.<br /><br />I *think* that "testb $32" is checking for TIMER_IRQSAFE in<br />expire_timers(), and that the oops is due to the list operations in<br />detach_timer() (inlined).<br /><br />Which doesn't really help: it looks like the timer lists are corrupt.<br />With some luck, some register state could have the timer function<br />pointer in it, and we'd get a hint of *which* timer this is, but that<br />doesn't look to be the case here either.<br /><br />I'm not seeing anything to really help debug this here.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
