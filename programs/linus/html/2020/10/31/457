    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/10/31/78">First message in thread</a></li><li><a href="/lkml/2020/10/31/78">Christoph Hellwig</a><ul><li class="origin"><a href="/lkml/2020/11/2/82">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/2/82">Christoph Hellwig</a></li><li><a href="/lkml/2020/11/2/307">Geert Uytterhoeven</a></li></ul></li><li><a href="/lkml/2020/10/31/461">   pr-tracker-bot&#64;kernel ...</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 31 Oct 2020 12:50:44 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] dma-mapping fix for 5.10</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Oct 31, 2020 at 2:40 AM Christoph Hellwig &lt;hch&#64;infradead.org&gt; wrote:<br />&gt;<br />&gt; dma-mapping fix for 5.10:<br />&gt;<br />&gt;  - fix an integer overflow on 32-bit platforms in the new DMA range code<br />&gt;    (Geert Uytterhoeven)<br /><br />So this is just a stylistic nit, and has no impact on this pull (which<br />I've done). But looking at the patch, it triggers one of my "this is<br />wrong" patterns.<br /><br />In particular, this:<br /><br />        u64 dma_start = 0;<br />        ...<br />        for (dma_start = ~0ULL; r-&gt;size; r++) {<br /><br />is actually completely bogus in theory, and it's a horribly horribly<br />bad pattern to have.<br /><br />The thing that I hate about that parttern is "~0ULL", which is simply wrong.<br /><br />The correct pattern for "all bits set" is ~0. NOTHING ELSE. No extra<br />letters at the end.<br /><br />Why? Because using an unsigned type is wrong, and will not extend the<br />bits up to a potentially bigger size.<br /><br />So adding that "ULL" is not just three extra characters to type, it<br />actually _detracts_ from the code and makes it more fragile and<br />potentially wrong.<br /><br />It so happens, that yes, in the kernel, "ull" us 64-bit, and you get<br />the right results. So the code _works_. But it's wrong, and it now<br />requires that the types match exactly (ie it would not be broken if<br />somebody ever were to say "I want to use use 128-bit dma addresses and<br />u128").<br /><br />Another example is using "~0ul", which would give different results on<br />a 32-bit kernel and a 64-bit kernel. Again: DON'T DO THAT.<br /><br />I repeat: the right thing to do for "all bits set" is just a plain ~0<br />or -1. Either of those are fine (technically assumes a 2's complement<br />machine, but let's just be honest: that's a perfectly fine assumption,<br />and -1 might be preferred by some because it makes that sign extension<br />behavior of the integer constant more obvious).<br /><br />Don't try to do anything clever or anything else, because it's going<br />to be strictly worse.<br /><br />The old code that that patch removed was "technically correct", but<br />just pointless, and actually shows the problem:<br /><br />        for (dma_start = ~(dma_addr_t)0; r-&gt;size; r++) {<br /><br />the above is indeed a correct way to say "I want all bits set in a<br />dma_addr_t", but while correct, it is - once again - strictly inferior<br />to just using "~0".<br /><br />Why? Because "~0" works regardless of type. IOW, exactly *because*<br />people used the wrong pattern for "all bits set", that patch was now<br />(a) bigger than necessary and (b) much more ilkely to cause bugs (ie I<br />could have imagined people changing just the type of the variable<br />without changing the initialization).<br /><br />So in that tiny three-line patch there were actually several examples<br />of why "~0" is the right pattern to use for "all bits set". Because it<br />JustWorks(tm) in ways other patterns do not.<br /><br />And if you have a compiler that complains about assigning -1 or ~0 to<br />an unsigned variable, get rid of that piece of garbage. You're almost<br />certainly either using some warning flag that you shouldn't be using,<br />or the compiler writer didn't know what they were doing.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
