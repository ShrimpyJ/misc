    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/10/23/890">First message in thread</a></li><li><a href="/lkml/2020/10/23/911">Linus Torvalds</a><ul><li><a href="/lkml/2020/10/23/915">   hpa&#64;zytor ...</a><ul><li class="origin"><a href="/lkml/2020/10/23/942">Linus Torvalds</a><ul><li><a href="/lkml/2020/10/23/942">David Laight</a><ul><li><a href="/lkml/2020/10/23/986">   hpa&#64;zytor ...</a></li><li><a href="/lkml/2020/10/24/161">David Laight</a></li></ul></li><li><a href="/lkml/2020/10/23/966">   hpa&#64;zytor ...</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 23 Oct 2020 14:11:19 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86/uaccess: fix code generation in put_user()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Oct 23, 2020 at 2:00 PM &lt;hpa&#64;zytor.com&gt; wrote:<br />&gt;<br />&gt; There is no same reason to mess around with hacks when we are talking about dx:ax, though.<br /><br />Sure there is.<br /><br />"A" doesn't actually mean %edx:%eax like you seem to think.<br /><br />It actually means %eax OR %edx, and then if given a 64-bit value, it<br />will use the combination (with %edx being the high bits).<br /><br />So using "A" unconditionally doesn't work - it gives random behavior<br />for 32-bit (or smaller) types.<br /><br />Or you'd have to cast the value to always be 64-bit, and have the<br />extra code generation.<br /><br />IOW, an unconditional "A" is wrong.<br /><br />And the alternative is to just duplicate things, and go back to the<br />explicit size testing, but honestly, I really think that's much worse<br />than relying on a documented feature of "register asm()" that gcc<br />_documents_ is for this kind of inline asm use.<br /><br />So the "don't do pointless conditional duplication" is certainly a<br />very sane reason for the code.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
