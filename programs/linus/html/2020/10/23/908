    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/10/23/890">First message in thread</a></li><li><a href="/lkml/2020/10/23/890">Rasmus Villemoes</a><ul><li><a href="/lkml/2020/10/23/902">Andy Lutomirski</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2020/10/23/910">   hpa&#64;zytor ...</a></li></ul></li><li><a href="/lkml/2020/10/23/911">Linus Torvalds</a><ul><li><a href="/lkml/2020/10/23/915">   hpa&#64;zytor ...</a><ul><li><a href="/lkml/2020/10/23/923">Linus Torvalds</a><ul><li><a href="/lkml/2020/10/23/942">David Laight</a></li><li><a href="/lkml/2020/10/23/966">   hpa&#64;zytor ...</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 23 Oct 2020 13:52:58 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86/uaccess: fix code generation in put_user()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Oct 23, 2020 at 1:42 PM Andy Lutomirski &lt;luto&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; This looks like the patch is an improvement, but this is still IMO<br />&gt; likely to be very fragile.  Can we just do the size-dependent "a" vs<br />&gt; "A" selection method instead?  Sure, it's a little more code, but it<br />&gt; will be Obviously Correct.  As it stands, I can easily see our code<br />&gt; failing on some gcc or clang version and the compiler authors telling<br />&gt; us that we're relying on unsupportable behavior.<br /><br />Well, the "register asm()" thing actually _is_ documented, and it's<br />something we've used before too (and still use in other places).<br /><br />We actually have quite a bit of them - just do a<br /><br />    git grep 'register.*asm('<br /><br />to see literally hundreds of them. So gcc (and clang) actually has a<br />lot of test-cases for it.<br /><br />In many ways, x86 actually tends to need _fewer_ of these than most<br />other architectures, since on x86, we almost always have specific<br />register naming in ways that other architectures often don't (because<br />x86 has all those specific register rules).<br /><br />So the 64-bit issue for x86-32 is a bit of a special case for x86, but<br />this is in no way a special case in general, and is quite the common<br />pattern on other architectures.<br /><br />The fact that KASAN could generate code in between the register asm<br />assignment was something I just overlooked (and embarrassingly similar<br />to the issues we had with objdump checking STAC/CLAC back when we<br />inlined that all).<br /><br />It's a bit sad that gcc doesn't _warn_ about this kind of issue, since<br />the compiler certainly should see "oh, we just had a register clash".<br />But it is what it is..<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
