    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/10/21/498">First message in thread</a></li><li><a href="/lkml/2020/10/23/51">Rasmus Villemoes</a><ul><li><a href="/lkml/2020/10/23/561">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2020/10/23/753">Linus Torvalds</a><ul><li><a href="/lkml/2020/10/23/753">Naresh Kamboju</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 23 Oct 2020 09:32:54 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [LTP] mmstress[1309]: segfault at 7f3d71a36ee8 ip 00007f3d77132bdf sp 00007f3d71a36ee8 error 4 in libc-2.27.so[7f3d77058000+1aa000]</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Oct 23, 2020 at 8:54 AM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; On Fri, Oct 23, 2020 at 12:14 AM Rasmus Villemoes<br />&gt; &lt;linux&#64;rasmusvillemoes.dk&gt; wrote:<br />&gt; &gt;<br />&gt; &gt; That's certainly garbage. Now, I don't know if it's a sufficient fix (or<br />&gt; &gt; could break something else), but the obvious first step of rearranging<br />&gt; &gt; so that the ptr argument is evaluated before the assignment to __val_pu<br />&gt;<br />&gt; Ack. We could do that.<br />&gt;<br />&gt; I'm more inclined to just bite the bullet and go back to the ugly<br />&gt; conditional on the size that I had hoped to avoid, but if that turns<br />&gt; out too ugly, mind signing off on your patch and I'll have that as a<br />&gt; fallback?<br /><br />Actually, looking at that code, and the fact that we've used the<br />"register asm()" format forever for the get_user() side, I think your<br />approach is the right one.<br /><br />I'd rename the internal ptr variable to "__ptr_pu", and make sure the<br />assignments happen just before the asm call (with the __val_pu<br />assignment being the final thing).<br /><br />lso, it needs to be<br /><br />        void __user *__ptr_pu;<br /><br />instead of<br /><br />        __typeof__(ptr) __ptr = (ptr);<br /><br />because "ptr" may actually be an array, and we need to have the usual<br />C "array to pointer" conversions happen, rather than try to make<br />__ptr_pu be an array too.<br /><br />So the patch would become something like the appended instead, but I'd<br />still like your sign-off (and I'd put you as author of the fix).<br /><br />Narest, can you confirm that this patch fixes the issue for you?<br /><br />                  Linus<br />[unhandled content-type:application/octet-stream]</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
