    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/7/21/76">First message in thread</a></li><li><a href="/lkml/2020/7/22/1085">Hugh Dickins</a><ul><li><a href="/lkml/2020/7/22/1112">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2020/7/22/1222">Linus Torvalds</a><ul><li><a href="/lkml/2020/7/22/1222">Linus Torvalds</a></li><li><a href="/lkml/2020/7/23/527">Oleg Nesterov</a><ul><li><a href="/lkml/2020/7/23/900">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 22 Jul 2020 16:42:34 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH] mm: silence soft lockups from unlock_page</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 22, 2020 at 3:10 PM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; &gt; +       bool first_time = true;<br />&gt; &gt;         bool thrashing = false;<br />&gt; &gt;         bool delayacct = false;<br />&gt; &gt;         unsigned long pflags;<br />&gt; &gt; &#64;&#64; -1134,7 +1135,12 &#64;&#64; static inline int wait_on_page_bit_commo<br />&gt; &gt;                 spin_lock_irq(&amp;q-&gt;lock);<br />&gt; &gt;<br />&gt; &gt;                 if (likely(list_empty(&amp;wait-&gt;entry))) {<br />&gt; &gt; -                       __add_wait_queue_entry_tail(q, wait);<br />&gt; &gt; +                       if (first_time) {<br />&gt; &gt; +                               __add_wait_queue_entry_tail(q, wait);<br />&gt; &gt; +                               first_time = false;<br />&gt; &gt; +                       } else {<br />&gt; &gt; +                               __add_wait_queue(q, wait);<br />&gt; &gt; +                       }<br />&gt; &gt;                         SetPageWaiters(page);<br />&gt; &gt;                 }<br />&gt;<br />&gt; This seems very hacky.<br />&gt;<br />&gt; And in fact, looking closer, I'd say that there are more serious problems here.<br />&gt;<br />&gt; Look at that WQ_FLAG_EXCLUSIVE thing: non-exclusive waits should<br />&gt; always go at the head (because they're not going to steal the bit,<br />&gt; they just want to know when it got cleared), and exclusive waits<br />&gt; should always go at the tail (because of fairness).<br />&gt;<br />&gt; But that's not at all what we do.<br />&gt;<br />&gt; Your patch adds even more confusion to this nasty area.<br /><br />Actually, I think the right thing to do is to just say "we should<br />never add ourselves back to the list".<br /><br />We have three cases:<br /><br /> - DROP: we'll never loop<br /><br /> - SHARED: we'll break if we see the bit clear - so if we're no longer<br />on the list, we should break out<br /><br /> - EXCLUSIVE: we should remain on the list until we get the lock.<br /><br />and we should just handle these three cases in the wakeup function<br />instead, I feel.<br /><br />And then to make it fair to people, let's just always add things to<br />the head of the queue, whether exclusive or not.<br /><br />AND NEVER RE-QUEUE.<br /><br />IOW, something like the attached patch.<br /><br />NOTE NOTE NOTE! This is both somewhat subtle code, and ENTIRELY<br />UNTESTED. But it actually fixes the bug mentioned a few weeks ago, it<br />makes the code simpler in one sense, and it avoids the whole<br />re-queueuing thing.<br /><br />It removes all the "is the page locked" testing from the actual wait<br />loop, and replaces it with "is the wait queue entry still on the list"<br />instead.<br /><br />Comments? Oleg, this should fix the race you talked about too.<br /><br />Note that this patch really is meant as a RFC, and "something like<br />this". It builds. I tried to think it through. But it might have some<br />obvious thinko that means that it really really doesn't work.<br /><br />                    Linus<br />[unhandled content-type:application/octet-stream]</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
