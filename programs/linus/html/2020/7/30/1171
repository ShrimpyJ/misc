    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/7/27/1670">First message in thread</a></li><li><a href="/lkml/2020/7/30/617">(Eric W. Biederman)</a><ul><li><a href="/lkml/2020/7/30/1142">(Eric W. Biederman)</a><ul><li class="origin"><a href="/lkml/2020/7/31/803">Linus Torvalds</a><ul><li><a href="/lkml/2020/7/31/803">(Eric W. Biederman)</a><ul><li><a href="/lkml/2020/7/31/813">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2020/7/31/49">Oleg Nesterov</a><ul><li><a href="/lkml/2020/7/31/766">(Eric W. Biederman)</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 30 Jul 2020 16:17:50 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC][PATCH] exec: Conceal the other threads from wakeups during exec</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Jul 30, 2020 at 4:00 PM Eric W. Biederman &lt;ebiederm&#64;xmission.com&gt; wrote:<br />&gt;<br />&gt; The key is the function make_task_wakekill which could probably<br />&gt; benefit from a little more review and refinement but appears to<br />&gt; be basically correct.<br /><br />You really need to explain a lot more why you think this is all a good idea.<br /><br />For example, what if one of those other threads is waiting in line for<br />a critical lock, and the wait-queue you basically disabled was the<br />exclusive wait after lock handoff?<br /><br />That means that the lock will now effectively be held by that thread.<br />No, it wasn't woken up, but it had the lock handed to it, and it's now<br />entirely unresponsive until it is killed.<br /><br />How is that different from the deadlocks you're actually trying to fix?<br /><br />These are the kinds of problems that the freezer() code had too, with<br />freezing things that held locks etc.<br /><br />This approach does seem better than the freezer thing, and if I read<br />it right it will gather things in the signal handler code, but it's<br />not obvious that gathering them in random places where they sleep for<br />random reasons is safe or a good idea.<br /><br />I can imagine _so_ many dead systems if you just basically froze<br />something that holds the mmap lock and is sleeping on a page fault,<br />for example.<br /><br />Maybe I'm missing something, but I really think your "let's freeze<br />things" is seriously misguided. You're concentrating on some small<br />problem and trying to solve that, and not seeign the HUGE HONKING<br />problems that your approach is fundamentally introducing.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
