    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/7/29/428">First message in thread</a></li><li><a href="/lkml/2020/7/29/428">Daniel Vetter</a><ul><li class="origin"><a href="/lkml/2020/7/29/863">Linus Torvalds</a><ul><li><a href="/lkml/2020/7/29/863">Kees Cook</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Jul 2020 10:51:23 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Intel-gfx] [PATCH v12 2/3] drm/i915: add syncobj timeline support</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 29, 2020 at 5:24 AM Daniel Vetter &lt;daniel&#64;ffwll.ch&gt; wrote:<br />&gt;<br />&gt; Do we have a access_ok_array or so? Instead of duplicating overflow checks<br />&gt; everywhere and getting it all wrong ...<br /><br />I really really think you should get away from access_ok() entirely.<br /><br />Please just get rid of it, and use "copy_from_user()" instead.<br /><br />Seriously.<br /><br />access_ok() is completely wrong, because<br /><br /> (a) it doesn't actually protect from any fault returns, it only doe<br />sthe high-level check of "is the pointer even ok".<br /><br />So you can't say "ok, I did access_ok(), so I don't have to check the<br />return value", and you're actually making the source code more<br />complicated, and only introducing the possibility of bugs.<br /><br />Overflow is just _one_ such bug. Missing the access_ok() entirely<br />because it was in some caller but not another is another common bug.<br /><br /> (b) it no longer even makes the code faster.<br /><br />It never really did for the the copy_to/from_user() case _anyway_, it<br />was always for the "I will now do several get/put_user() accesses and<br />I only want to do the range check once".<br /><br />And that has simply not been true for the last few CPU generations -<br />because the cost isn't in the range check any more. Now allk the real<br />costs are about CLAC/STAC. The range check takes two cycles and<br />schedules well (so it's generally not even visible). The CLAC/STAC<br />takes 30+ cycles, and stalls the pipeline.<br /><br />&gt;Similar I guess for copy_from/to_user_array.<br /><br />No. I refuse to add complexity onto the garbage that is access_ok().<br /><br />Just remove it. It's not helping. People who think it's helping<br />haven't actually looked at profiles, or are working with hardware that<br />is no longer relevant.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
