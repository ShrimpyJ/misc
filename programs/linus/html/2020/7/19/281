    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/7/18/520">First message in thread</a></li><li><a href="/lkml/2020/7/18/520">Al Viro</a><ul><li class="origin"><a href="/lkml/2020/7/19/283">Linus Torvalds</a><ul><li><a href="/lkml/2020/7/19/283">Linus Torvalds</a><ul><li><a href="/lkml/2020/7/22/475">Catalin Marinas</a><ul><li><a href="/lkml/2020/7/22/561">David Laight</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 19 Jul 2020 12:28:13 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] raw_copy_from_user() semantics</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Jul 18, 2020 at 8:17 PM Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt;<br />&gt;         So any byte-squeezing loop of that sort would break on a bunch<br />&gt; of architectures.<br /><br />I think we should try to get rid of the exact semantics.<br /><br />If "copy_from/to_user()" takes a fault because it does a<br />larger-than-byte access (and with unrolling, it could be a _lot_<br />larger than one byte: x86 dcurrently has that "generic" case that<br />isn't used very much, but it unrolls 8-byte accesses 8 times, so it<br />does a 64-byte block that we could just say "if any fo those didn't<br />work, then you're done), then the copy failed. The exact number of<br />bytes we _could_ have copied is not important.<br /><br />So we could simplify the x86 end condition too and remove all the<br />"handle_tail" complexity.<br /><br />                  Linus<br /><br />(*) Yes, it aligns things to 64-byte boundaries too, but only for the<br />write side, not the read side.<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
