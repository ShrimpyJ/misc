    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/7/21/1156">First message in thread</a></li><li><a href="/lkml/2020/7/21/1158">Al Viro</a><ul><li><a href="/lkml/2020/7/21/1157">Al Viro</a></li><li><a href="/lkml/2020/7/21/1159">Al Viro</a></li><li><a href="/lkml/2020/7/21/1160">Al Viro</a><ul><li><a href="/lkml/2020/7/22/271">Max Filippov</a></li></ul></li><li><a href="/lkml/2020/7/21/1161">Al Viro</a></li><li><a href="/lkml/2020/7/21/1162">Al Viro</a></li><li><a href="/lkml/2020/7/21/1163">Al Viro</a></li><li><a href="/lkml/2020/7/21/1164">Al Viro</a><ul><li><a href="/lkml/2020/7/21/1385">David Miller</a></li></ul></li><li><a href="/lkml/2020/7/21/1165">Al Viro</a></li><li><a href="/lkml/2020/7/21/1166">Al Viro</a><ul><li><a href="/lkml/2020/7/21/1384">David Miller</a></li></ul></li><li><a href="/lkml/2020/7/21/1167">Al Viro</a></li><li><a href="/lkml/2020/7/21/1168">Al Viro</a></li><li><a href="/lkml/2020/7/21/1169">Al Viro</a></li><li><a href="/lkml/2020/7/21/1170">Al Viro</a></li><li><a href="/lkml/2020/7/21/1171">Al Viro</a></li><li><a href="/lkml/2020/7/21/1172">Al Viro</a></li><li><a href="/lkml/2020/7/21/1173">Al Viro</a></li><li><a href="/lkml/2020/7/21/1174">Al Viro</a><ul><li class="origin"><a href="/lkml/2020/7/21/1189">Linus Torvalds</a><ul><li><a href="/lkml/2020/7/21/1189">Linus Torvalds</a><ul><li><a href="/lkml/2020/7/21/1202">Al Viro</a></li></ul></li><li><a href="/lkml/2020/7/22/334">David Laight</a></li></ul></li><li><a href="/lkml/2020/7/22/314">David Laight</a><ul><li><a href="/lkml/2020/7/22/646">Al Viro</a><ul><li><a href="/lkml/2020/7/22/695">David Laight</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 21 Jul 2020 13:55:16 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 04/18] csum_and_copy_..._user(): pass 0xffffffff instead of 0 as initial sum</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 21, 2020 at 1:25 PM Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt;<br />&gt; Preparation for the change of calling conventions; right now all<br />&gt; callers pass 0 as initial sum.  Passing 0xffffffff instead yields<br />&gt; the values comparable mod 0xffff and guarantees that 0 will not<br />&gt; be returned on success.<br /><br />This seems dangerous to me.<br /><br />Maybe some implementation depends on the fact that they actually do<br />the csum 16 bits at a time, and never see an overflow in "int",<br />because they keep folding things.<br /><br />You now break that assumption, and give it an initial value that the<br />csum code itself would never generate, and wouldn't handle right.<br /><br />But I didn't check. Maybe we don't have anything that stupid in the kernel.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
