    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/7/17/1348">First message in thread</a></li><li><a href="/lkml/2020/7/20/1909">Linus Torvalds</a><ul><li><a href="/lkml/2020/7/20/2461">Joe Perches</a></li><li><a href="/lkml/2020/7/21/694">Sergey Senozhatsky</a><ul><li><a href="/lkml/2020/7/21/731">John Ogness</a><ul><li><a href="/lkml/2020/7/28/1416">Sergey Senozhatsky</a></li></ul></li><li class="origin"><a href="/lkml/2020/7/27/1978">Linus Torvalds</a><ul><li><a href="/lkml/2020/7/27/1978">Sergey Senozhatsky</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 21 Jul 2020 08:40:58 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 2/4] printk: store instead of processing cont parts</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 21, 2020 at 7:42 AM Sergey Senozhatsky<br />&lt;sergey.senozhatsky&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; OK, so basically, extending printk_caller_id() so that for IRQ/NMI<br />&gt; we will have more info than just "0x80000000 + raw_smp_processor_id()".<br /><br />I think it's really preempt_count() that we want to have there.<br /><br />That has the softirq/hardirq/NMI information in it.<br /><br />So the "context" identifier of an incomplete write would be { task,<br />cpu, preempt_count() } of the writer. If a new KERN_CONT writer comes<br />in, it would have to match in that context to actually combine.<br /><br />You can probably play "hide the bits" tricks to not *ac tually* use<br />three words for it. The task structure in particular tends to be very<br />aligned, you could hide bits in the low bits there. The CPU number<br />would fit in there, for example.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
