    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/21/1560">First message in thread</a></li><li><a href="/lkml/2020/9/17/441">Jason Gunthorpe</a><ul><li><a href="/lkml/2020/9/17/1013">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/17/1196">Jason Gunthorpe</a><ul><li><a href="/lkml/2020/9/17/1179">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/18/878">Peter Xu</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2020/9/17/1016">Peter Xu</a><ul><li class="origin"><a href="/lkml/2020/9/17/1119">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/17/1119">Peter Xu</a><ul><li><a href="/lkml/2020/9/17/1188">Linus Torvalds</a></li><li><a href="/lkml/2020/9/18/845">Jason Gunthorpe</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 17 Sep 2020 11:26:01 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/4] mm: Trial do_wp_page() simplification</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 17, 2020 at 11:14 AM Peter Xu &lt;peterx&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; In my humble opinion, the real solution is still to use MADV_DONTFORK properly<br />&gt; so we should never share the DMA pages with others when we know the fact.<br /><br />Is this all just because somebody does a fork() after doing page pinning?<br /><br />If so, I feel this should be trivially fixed in  copy_one_pte().<br />That's where we currently do<br /><br />        /*<br />         * If it's a COW mapping, write protect it both<br />         * in the parent and the child<br />         */<br />        if (is_cow_mapping(vm_flags) &amp;&amp; pte_write(pte)) {<br />                ptep_set_wrprotect(src_mm, addr, src_pte);<br />                pte = pte_wrprotect(pte);<br />        }<br /><br />and I feel that that is where we could just change the code to do a<br />COW event for pinned pages (and *not* mark the parent write protected,<br />since the parent page now isn't a COW page).<br /><br />Because if that's the case that Jason is hitting, then I feel that<br />really is the correct fix: make sure that the pinning action is<br />meaningful.<br /><br />As mentioned, I really think the whole (and only) point of page<br />pinning is that it should keep the page locked in the page tables. And<br />by "locked" I mean exactly that: not just present, but writable.<br /><br />And then the "we never COW a pinned page" comes not from the COW code<br />doing magic, but by it simply never becoming non-writable - because<br />the page table entry is locked!<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
