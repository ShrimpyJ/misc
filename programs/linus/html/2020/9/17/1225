    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/21/1560">First message in thread</a></li><li><a href="/lkml/2020/9/17/1188">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/17/1159">John Hubbard</a></li><li><a href="/lkml/2020/9/17/1194">Jason Gunthorpe</a><ul><li><a href="/lkml/2020/9/17/1209">John Hubbard</a><ul><li><a href="/lkml/2020/9/17/1219">Jason Gunthorpe</a></li></ul></li><li class="origin"><a href="/lkml/2020/9/17/1267">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/17/1267">Peter Xu</a><ul><li><a href="/lkml/2020/9/17/1290">Jason Gunthorpe</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 17 Sep 2020 13:35:56 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/4] mm: Trial do_wp_page() simplification</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 17, 2020 at 1:06 PM Jason Gunthorpe &lt;jgg&#64;ziepe.ca&gt; wrote:<br />&gt;<br />&gt; Given that this is a user visible regression, it is nearly rc6, what<br />&gt; do you prefer for next steps?<br /><br />Since I had to deal with the page lock performance regression too, and<br />I think we have a fairly simple way forward, I'd rather do an rc8 and<br />get this done with, than revert and know we have to deal with it<br />anyway.<br /><br />Particularly since I think this would _finally_ make page pinning make<br />sense. In it's current state, it's just yet another broken GUP that<br />doesn't actually fix things. But if we have the semantics that page<br />pinning really fixes things in the page tables, I think we now have a<br />proper solution to this and a _much_ cleaner model for it.<br /><br />If it means that page pinning can also stop worrying about<br />MADV_DONTFORK any more, that would be an added API bonus.<br /><br />For that to happen, we'd need to have the vma flag so that we wouldn't<br />have any worry about non-pinners, but as you suggested, I think even<br />just a mm-wide counter - or flag - to deal with the fast-bup case is<br />likely perfectly sufficient.<br /><br />Yes, you'd still take a hit on fork, but only the actual process that<br />did pinning would take that hit. And *if* that ends up being a big<br />deal, the MADV_DONTFORK can be used to avoid it, rather than be a<br />correctness issue.<br /><br />It really feels like this should be just "tens of lines of fairly<br />simple code", and it would clarify our GUP/PIN/COW rules enormously.<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
