    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/21/1560">First message in thread</a></li><li><a href="/lkml/2020/9/16/697">Peter Xu</a><ul><li><a href="/lkml/2020/9/17/441">Jason Gunthorpe</a><ul><li class="origin"><a href="/lkml/2020/9/17/1196">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/17/1196">Jason Gunthorpe</a><ul><li><a href="/lkml/2020/9/17/1179">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2020/9/17/1016">Peter Xu</a><ul><li><a href="/lkml/2020/9/17/1026">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/17/1119">Peter Xu</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 17 Sep 2020 11:11:06 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/4] mm: Trial do_wp_page() simplification</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">&gt; I botched the last version of the patch, here is something a bit<br />&gt; better.<br /><br />So I'd like to understand why this problem happens.<br /><br />Myt argument to Hugh a few weeks ago was that page pinning should take<br />care of all this:<br /><br /> (a) if the pinner is going to change the page, it will have to get<br />the pin with FOLL_WRITE in addition to FOLL_PIN<br /><br /> (b) that means it will do the COW and mark the page writable and dirty<br /><br /> (c) the whole _point_ of the FOLL_PIN is that subsequent operations<br />shouldn't make it non-writable any more (ie it can't be unmapped, and<br />we should synchronize on fork etc)<br /><br />So I get the strong feeling that this whole approach to "fix" COW is<br />really papering over the real problem.<br /><br />To me, the whole point of pinning is to avoid issues like this. If it<br />didn't fix this issue, then why did we go to all the effort of<br />treating pinned pages differently?<br /><br />Your patch may avoid the problem, but I think it implies things are<br />horribly horribly broken in pinning land.<br /><br />I also note that the _only_ user of page_maybe_dma_pinned() right now<br />is a debug check in gup_benchmark. I think your patch may _work_, and<br />I think that thanks to page_maybe_dma_pinned() it might even avoid the<br />horrible case, but I feel we should just truly fix pinning to be<br />meaningful instead.<br /><br />IOW, in addition to keeping the page mapped, it should keep the page writable.<br /><br />Why isn't it?<br /><br />                     Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
