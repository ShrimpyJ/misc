    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/9/21/1969">First message in thread</a></li><li><a href="/lkml/2020/9/27/39">Leon Romanovsky</a><ul><li><a href="/lkml/2020/9/27/315">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2020/9/28/589">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/28/589">Jason Gunthorpe</a><ul><li><a href="/lkml/2020/9/28/811">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2020/9/28/911">Peter Xu</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 27 Sep 2020 11:45:30 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/5] mm: Introduce mm_struct.has_pinned</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Sep 27, 2020 at 11:16 AM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Btw, I'm not convinced about the whole "turn the pte read-only and<br />&gt; then back". If the fork races with another thread doing a pinning<br />&gt; fast-GUP on another CPU, there are memory ordering issues etc too.<br />&gt; That's not necessarily visible on x86 (the "turn read-only being a<br />&gt; locked op will force serialization), but it all looks dodgy as heck.<br /><br />.. looking at it more, I also think it could possibly lose the dirty<br />bit for the case where another CPU did a HW dirty/accessed bit update<br />in between the original read of the pte, and then us writing back the<br />writable pte again.<br /><br />Us holding the page table lock means that no _software_ accesses will<br />happen to the PTE, but dirty/accessed bits can be modified by hardware<br />despite the lock.<br /><br />That is, of course, a completely crazy case, and I think that since we<br />only do this for a COW mapping, and only do the PTE changes if the pte<br />was writable, the pte will always have been dirty already.<br /><br />So I don't think it's an _actual_ bug, but it's another "this looks<br />dodgy as heck" marker. It may _work_, but it sure ain't pretty.<br /><br />But despite having looked at this quite a bit, I don't see anything<br />that looks actively wrong, so I think the series is fine. This is more<br />of a note for people to perhaps think about.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
