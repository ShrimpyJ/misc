    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/9/12/316">First message in thread</a></li><li><a href="/lkml/2020/9/23/922">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/23/1028">Gerald Schaefer</a><ul><li class="origin"><a href="/lkml/2020/9/23/1044">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/23/1044">Gerald Schaefer</a><ul><li><a href="/lkml/2020/9/24/551">Gerald Schaefer</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Sep 2020 14:50:36 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: BUG: Bad page state in process dirtyc0w_child</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Sep 23, 2020 at 2:33 PM Gerald Schaefer<br />&lt;gerald.schaefer&#64;linux.ibm.com&gt; wrote:<br />&gt;<br />&gt; Thanks, very nice walk-through, need some time to digest this. The TLB<br />&gt; aspect is interesting, and we do have our own __tlb_remove_page_size(),<br />&gt; which directly calls free_page_and_swap_cache() instead of the generic<br />&gt; batched approach.<br /><br />So I don't think it's the free_page_and_swap_cache() itself that is the problem.<br /><br />As mentioned, the actual pages themselves should be handled by the<br />reference counting being atomic.<br /><br />The interrupt disable is really about just the page *tables* being<br />free'd - not the final page level.<br /><br />So the issue is that at least on x86-64, we have the serialization<br />that we will only free the page tables after a cross-CPU IPI has<br />flushed the TLB.<br /><br />I think s390 just RCU-free's the page tables instead, which should fix it.<br /><br />So I think this is special, and s390 is very different from x86, but I<br />don't think it's the problem.<br /><br />In fact, I think you pinpointed the real issue:<br /><br />&gt; Meanwhile, out of curiosity, while I still fail to comprehend commit<br />&gt; 09854ba94c6a ("mm: do_wp_page() simplification") in its entirety, there<br />&gt; is one detail that I find most confusing: the unlock_page() has moved<br />&gt; behind the wp_page_reuse(), while it was the other way round before.<br /><br />You know what? That was just a mistake, and I think you may actually<br />have hit the real cause of the problem.<br /><br />It means that we keep the page locked until after we do the<br />pte_unmap_unlock(), so now we have no guarantees that we hold the page<br />referecne.<br /><br />And then we unlock it - while somebody else might be freeing it.<br /><br />So somebody is freeing a locked page just as we're unlocking it, and<br />that matches the problem you see exactly: the debug thing will hit<br />because the last free happened while locked, and then by the time the<br />printout happens it has become unlocked so it doesn't show any more.<br /><br />Duh.<br /><br />Would you mind testing just moving the unlock_page() back to before<br />the wp_page_reuse()?<br /><br />Does that make your debug check go away?<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
