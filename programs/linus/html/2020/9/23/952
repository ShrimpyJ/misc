    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/9/21/1969">First message in thread</a></li><li><a href="/lkml/2020/9/22/875">Oleg Nesterov</a><ul><li><a href="/lkml/2020/9/22/1247">Peter Xu</a><ul><li class="origin"><a href="/lkml/2020/9/24/850">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/24/850">Peter Xu</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Sep 2020 13:25:52 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 4/5] mm: Do early cow for pinned pages during fork() for ptes</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Sep 22, 2020 at 6:03 PM Peter Xu &lt;peterx&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; &gt; If we rely on "copy_ret == COPY_MM_BREAK_COW" we can unify "again" and<br />&gt; &gt; "again_break_cow", we don't need to clear -&gt;cow_new_page, this makes the<br />&gt; &gt; logic more understandable. To me at least ;)<br />&gt;<br />&gt; I see your point.  I'll definitely try it out.  I think I'll at least use what<br />&gt; you preferred above since it's actually the same as before, logically.  Then<br />&gt; I'll consider drop the again_break_cow, as long as I'm still as confident after<br />&gt; I do the change on not leaking anything :).<br /><br />So the two patches I sent out to re-organize copy_one_pte() were<br />literally meant to make all this mess go away.<br /><br />IOW, the third patch would be something (COMPLETELY UNTESTED) like the attached.<br /><br />I think the logic for the preallocation is fairly obvious, but it<br />might be better to allocate a batch of pages for all I know. That<br />said, I can't really make myself care about the performance of a<br />fork() after you've pinned pages in it, so..<br /><br />                 Linus<br />[unhandled content-type:application/octet-stream]</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
