    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/9/17/1230">First message in thread</a></li><li><a href="/lkml/2020/9/17/1445">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/18/839">"Gustavo A. R. Silva"</a><ul><li class="origin"><a href="/lkml/2020/9/18/1059">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/18/1059">"Gustavo A. R. Silva"</a><ul><li><a href="/lkml/2020/9/18/1066">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 18 Sep 2020 10:23:54 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] percpu fix for v5.9-rc6</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 18, 2020 at 9:17 AM Gustavo A. R. Silva<br />&lt;gustavoars&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; This bug could have been prevented by either adopting better<br />&gt; coding practices or through the use[3] of the recent struct_size() helper.<br /><br />Well, my unspoken point was that coding practices are just<br />theoretical. Coding practices don't help - actual *checking* of them<br />helps.<br /><br />I realize that structures with flexible-array member are allowed to<br />use sizeof() in standard C, but if we want to make sure this doesn't<br />happen, we would need to have a stricter model than that. But a quick<br />google didn't find any flag to enable such a stricter mode.<br /><br />I guess a sparse warning would work, but sparse already has too many<br />warnings and as a result most people don't care - even if they were to<br />run sparse in the first place.<br /><br />Is there some gcc option that I didn't find to help find any questionable cases?<br /><br />Because if we have a coding practice that you should use<br />'struct_size()', then we should also have a way to _verify_ that.<br /><br />The whole - and really ONLY - point of using flexible arrays was that<br />it would protect against these things. And as things are now, it<br />simply doesn't. It's not an actual improvement over just using a<br />zero-sized array.<br /><br />(Slightly related: copying a struct has the exact same issue. A<br />flexible array is no better than a zero-sized array, and generates the<br />same code and the same lack of any warnings, afaik).<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
