    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/9/17/1230">First message in thread</a></li><li><a href="/lkml/2020/9/18/1203">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/18/1257">Arvind Sankar</a><ul><li class="origin"><a href="/lkml/2020/9/18/1368">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/18/1368">Arvind Sankar</a><ul><li><a href="/lkml/2020/9/18/1370">Matthew Wilcox</a></li><li><a href="/lkml/2020/9/18/1372">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2020/9/18/1348">Matthew Wilcox</a><ul><li><a href="/lkml/2020/9/18/1384">Arvind Sankar</a></li></ul></li><li><a href="/lkml/2020/9/19/202">David Laight</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 18 Sep 2020 18:28:30 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] percpu fix for v5.9-rc6</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 18, 2020 at 3:40 PM Arvind Sankar &lt;nivedita&#64;alum.mit.edu&gt; wrote:<br />&gt;<br />&gt; Ouch, offsetof() and sizeof() will give different results in the<br />&gt; presence of alignment padding.<br /><br />Indeed. But from an allocation standpoint, the offsetof()+size is I<br />think the correct size. The padding at the end makes very little sense<br />for something like "struct_size()".<br /><br />Padding at the end is required for sizeof() for a very simple reason:<br />arrays.  The "sizeof()" needs to be aligned to the alignment of the<br />entry, because if it isn't, then the standard C array traversal<br />doesn't work.<br /><br />But you cannot sanely have arrays of these structures of variable size<br />entries either - even if standard C cheerfully allows you to declare<br />them (again: it will not behave like a variable sized array, it will<br />behave like a zero-sized one).<br /><br />That was in fact one of the test-cases that I submitted to the sparse<br />list - the insanity of allowing arrays of structures that have a<br />flexible array at the end is just the C standard being confused. The C<br />standard may allow it, but I don't think we should allow it in the<br />kernel.<br /><br />Oh, I can see why somebody would want to have an array of those things<br />- exactly because they want to have some "initializer _without_ the<br />flexible array part", and they actually don't want that variably-sized<br />array at all for that case.<br /><br />But I'm pretty sure we really really don't want that kind of oddities<br />in the kernel. If we really want a separate "struct head_struct", then<br />I think we should do so explicitly, and have something like<br /><br />    struct real_struct {<br />        // Unnamed head struct here<br />        struct head_struct {<br />                    ,,,,<br />        };<br />        unsigned int variable_array[];<br />    };<br /><br />and if you want the part without the flexible array at the end, then<br />you use that "struct head_struct".<br /><br />Instead of depending on the imho broken model of the C standard that<br />says "in lots of cases, we'll just silently make that flexible array<br />be a zero-sized one".<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
