    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/9/17/1230">First message in thread</a></li><li><a href="/lkml/2020/9/18/928">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/18/1059">"Gustavo A. R. Silva"</a><ul><li class="origin"><a href="/lkml/2020/9/18/1082">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/18/1082">"Gustavo A. R. Silva"</a></li><li><a href="/lkml/2020/9/18/1085">Matthew Wilcox</a><ul><li><a href="/lkml/2020/9/18/1121">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 18 Sep 2020 12:37:48 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] percpu fix for v5.9-rc6</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 18, 2020 at 12:28 PM Gustavo A. R. Silva<br />&lt;gustavoars&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; OK. It seems that we are talking about two different things here. One thing<br />&gt; is to apply sizeof() to a structure that contains a flexible-array member.<br />&gt; And the other thing is to apply sizeof() to a flexible array. The former<br />&gt; is allowed, the latter is wrong and we already get a build error when that<br />&gt; occurs.<br /><br />The latter I'm not even interested in, it's such a pointless thing to do.<br /><br />&gt; Applying sizeof() to a structure containing a flex-array member is allowed,<br /><br />Yes, and that's wrong and inconsistent, but what else is new about the<br />C standard. It's what allows these kinds of bugs to slip through.<br /><br />I sent Luc a couple of examples in the hope that maybe sparse could do<br />better, but..<br /><br />&gt; &gt; Is there some gcc option that I didn't find to help find any questionable cases?<br />&gt;<br />&gt; If the questionable case is the application of sizeof() to a flex-array<br />&gt; member or a flex-array member not occuring last in the containing structure,<br />&gt; then yes, GCC already generates a build error for both cases. And that's<br />&gt; what we want, see at the bottom...<br /><br />No.<br /><br />The questionable thing is to do "sizeof(struct-with-flex-array)".<br /><br />The point is, it's returning the same thing as if it was just a<br />zero-sized array, which makes the whole flex array entirely pointless<br />from a type safety standpoint.<br /><br />The *only* thing it protects against is the "must be at the end" case,<br />which is almost entirely pointless and uninteresting.<br /><br />Yeah, we've had that bug too, but that doesn't make it very interesting.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
