    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/9/17/1230">First message in thread</a></li><li><a href="/lkml/2020/9/18/1121">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/18/1145">Arvind Sankar</a><ul><li class="origin"><a href="/lkml/2020/9/18/1186">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/18/1186">Arvind Sankar</a><ul><li><a href="/lkml/2020/9/18/1203">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 18 Sep 2020 13:40:44 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] percpu fix for v5.9-rc6</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 18, 2020 at 1:29 PM Arvind Sankar &lt;nivedita&#64;alum.mit.edu&gt; wrote:<br />&gt;<br />&gt; In general (i.e. outside the implementation of the macro itself), what<br />&gt; is the preferred way of getting the size of just the header?<br />&gt;   1) offsetof(typeof(s),flex)<br />&gt;   2) struct_size(s, flex, 0)<br /><br />I think those two should end up being equivalent.<br /><br />&gt;   3) sizeof(s)<br /><br />This works right now, but exactly *because* it works, we're not seeing<br />the questionable cases.<br /><br />Of course, _also_ exactly because it just silently works, I also don't<br />know if there may be thousands of perfectly fine uses where people<br />really do want the header, and a "sizeof()" is simpler than<br />alternatives 1-2.<br /><br />It's possible that there really are a lot of "I want to know just the<br />header size" cases. It sounds odd, but I could _imagine_ situations<br />like that, even though no actual case comes to mind.<br /><br />&gt;   4) new macro that's easier to read than 1 or 2, but makes it clear<br />&gt;      what you're doing?<br /><br />I don't think this would have any real advantage, would it?<br /><br />Now what might be good is if we can make "struct_size()" also actually<br />verify that the member that is passed in is that last non-sized<br />member. I'm not sure how to do that.<br /><br />I know how to check that it's *not* that last unsized member (just do<br />"sizeof(s-&gt;flex)", and it should error), but I don't see how to assert<br />the reverse of that).<br /><br />Because that kind of "yes, we actually pass in the right member" check<br />would be good to have too.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
