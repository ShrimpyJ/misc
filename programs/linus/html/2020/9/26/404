    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/9/25/1378">First message in thread</a></li><li><a href="/lkml/2020/9/25/1382">Peter Xu</a><ul><li><a href="/lkml/2020/9/26/391">Jason Gunthorpe</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 26 Sep 2020 17:04:38 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2 3/4] mm: Do early cow for pinned pages during fork() for ptes</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Sep 26, 2020 at 4:23 PM Jason Gunthorpe &lt;jgg&#64;ziepe.ca&gt; wrote:<br />&gt;<br />&gt; Linus's version doesn't do pte_sw_mkyoung(), but looks OK to have it<br /><br />I don't think it matters. But I don't think it should make it young,<br />since there's no access, but it's not like it's a big deal.<br /><br />&gt; &gt; +                             pte = maybe_mkwrite(pte_mkdirty(pte), new);<br />&gt;<br />&gt; maybe_mkwrite() was not in Linus's version but it is wp_page_copy().<br /><br />Actually, it is in my version too, just in a different form.<br /><br />I did it using<br /><br />        if (vma-&gt;vm_flags &amp; VM_WRITE)<br />                *src_pte = pte_mkwrite(*src_pte);<br /><br />instead, ie avoiding the write to src_pte if it wasn't a writable vma<br />(and I had checked that it was dirty and not done this at all if not,<br />so no need for the mkdirty).<br /><br />&gt; It seemed like mk_pte() should set the proper write<br />&gt; bit already from the vm_page_prot?<br /><br />No, vm_page_prot won't have the writable bit for a COW mapping.<br /><br />The write bit gets set when the write happens (which may be on the<br />first access, of course), by the code that makes sure it's a private<br />copy.<br /><br />&gt; Perhaps this is harmless but redundant?<br /><br />No, the pte_mkwrite() is required in some form, whether it's that<br />"maybe_mkwrite()" that looks at the vm flags, or in that explicit<br />form.<br /><br />&gt; &gt; +                             page_add_new_anon_rmap(new_page, new, addr, false);<br />&gt; &gt; +                             rss[mm_counter(new_page)]++;<br />&gt; &gt; +                             set_pte_at(dst_mm, addr, dst_pte, pte);<br />&gt;<br />&gt; Linus's patch had a lru_cache_add_inactive_or_unevictable() here, like<br />&gt; wp_page_copy()<br /><br />Yeah, I do think that is needed so that we have the new page on the<br />LRU and it gets properly evicted under memory pressure.<br /><br />                   Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
