    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/9/21/1969">First message in thread</a></li><li><a href="/lkml/2020/9/28/949">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/28/1033">Jason Gunthorpe</a><ul><li><a href="/lkml/2020/9/28/1073">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/28/1300">Jason Gunthorpe</a><ul><li><a href="/lkml/2020/9/28/1332">John Hubbard</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2020/9/28/1100">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/28/1100">Linus Torvalds</a><ul><li><a href="/lkml/2020/9/28/1257">Jason Gunthorpe</a></li><li><a href="/lkml/2020/10/8/42">Leon Romanovsky</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 28 Sep 2020 12:36:24 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/5] mm: Introduce mm_struct.has_pinned</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 28, 2020 at 11:39 AM Jason Gunthorpe &lt;jgg&#64;ziepe.ca&gt; wrote:<br />&gt;<br />&gt; All of gup_fast and copy_mm could be wrappered in a seq count so that<br />&gt; gup_fast always goes to the slow path if fork is concurrent.<br />&gt;<br />&gt; That doesn't sound too expensive and avoids all the problems you<br />&gt; pointed with the WP scheme.<br /><br />Ok, I'll start by just removing the "write protect early trick". It<br />really doesn't work reliably anyway due to memory ordering, and while<br />I think the dirty bit is ok (and we could probably also set it<br />unconditionally to make _sure_ it's not dropped like Peter says) it<br />just makes me convinced it's the wrong approach.<br /><br />Fixing it at a per-pte level is too expensive, and yeah, if we really<br />really care about the fork consistency, the sequence count approach<br />should be much simpler and more obvious.<br /><br />So I'll do the pte wrprotect/restore removal. Anybody willing to do<br />and test the sequence count approach?<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
