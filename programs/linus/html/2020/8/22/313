    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/5/27/766">First message in thread</a></li><li><a href="/lkml/2020/8/22/104">Sedat Dilek</a><ul><li><a href="/lkml/2020/8/22/111">Segher Boessenkool</a><ul><li><a href="/lkml/2020/8/22/116">Arnd Bergmann</a></li></ul></li><li><a href="/lkml/2020/8/22/267">Miguel Ojeda</a><ul><li class="origin"><a href="/lkml/2020/8/22/325">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/22/325">Arvind Sankar</a><ul><li><a href="/lkml/2020/8/22/328">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2020/8/22/315">Arvind Sankar</a><ul><li><a href="/lkml/2020/8/23/97">David Laight</a></li></ul></li></ul></li><li><a href="/lkml/2020/9/8/1641">Pavel Machek</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 22 Aug 2020 14:08:27 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86: work around clang IAS bug referencing __force_order</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Aug 22, 2020 at 11:17 AM Miguel Ojeda<br />&lt;miguel.ojeda.sandonis&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; However, the important question is whether those users/companies care<br />&gt; about running the latest kernels. Many of those definitely do not want<br />&gt; to touch their kernel either. For those that do, there are several<br />&gt; longterms to pick from that still support 4.9, as well as other<br />&gt; workarounds.<br />&gt;<br />&gt; Thus I am usually in favor of raising the minimum whenever new hacks<br />&gt; are required to be added. On the other hand, we already raised the<br />&gt; version twice this year and it is not clear to me what is the minimum<br />&gt; version we would need to go for to ensure this does not bite us.<br /><br />Yeah. The good news is that I haven't seen a lot of pushback on the<br />gcc version updates so far. I was expecting some complaints. I haven't<br />seen a single one.<br /><br />That may be because people did end up finding it very onerous and<br />complained internally on channels I haven't seen, but it might also be<br />indicative of us having perhaps been a bit too timid about compiler<br />version updates.<br /><br />However, in this case, can we just leave that old "__force_order" hack<br />alone, and to work around the clang thing, just make a dummy<br />definition of it anyway.<br /><br />Alternatively, just use the memory clobber. We use memory clobbers<br />elsewhere in inline asms to make sure they are serialized, it's not<br />normally a huge problem. Both clang and gcc should be smart enough to<br />know that a memory clobber doesn't matter for things like local<br />variables etc that might be on stack but have never had their address<br />taken.<br /><br />Or are there other cases than that particular __force_order thing that<br />people now worry about?<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
