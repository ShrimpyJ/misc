    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/3/882">First message in thread</a></li><li><a href="/lkml/2020/8/17/2550">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/18/535">Miklos Szeredi</a><ul><li class="origin"><a href="/lkml/2020/8/18/1143">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/18/1143">Miklos Szeredi</a><ul><li><a href="/lkml/2020/8/18/1154">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2020/8/18/1299">Al Viro</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 18 Aug 2020 11:51:25 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: file metadata via fs API</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Aug 18, 2020 at 5:50 AM Miklos Szeredi &lt;miklos&#64;szeredi.hu&gt; wrote:<br />&gt;<br />&gt; How do you propose handling variable size attributes, like the list of<br />&gt; fs options?<br /><br />I really REALLY think those things should just be ASCII data.<br /><br />I think marshalling binary data is actively evil and wrong. It's great<br />for well-specified wire protocols. It's great for internal<br />communication in user space. It's *NOT* great for a kernel system call<br />interface.<br /><br />One single simple binary structure? Sure. That's how system calls<br />work. I'm not claiming that things like "stat()" are wrong because<br />they take binary data.<br /><br />But marshalling random binary structures into some buffer? Let's avoid<br />that. Particularly for these kinds of fairly free-form things like fs<br />options.<br /><br />Those things *are* strings, most of them. Exactly because it needs a<br />level of flexibility that binary data just doesn't have.<br /><br />So I'd suggest something that is very much like "statfsat()", which<br />gets a buffer and a length, and returns an extended "struct statfs"<br />*AND* just a string description at the end.<br /><br />And if you don't pass a sufficiently big buffer, it will not do some<br />random "continuations". No state between system calls. It gets<br />truncated, and you need to pass a bigger buffer, kind of like<br />"snprintf()".<br /><br />I think people who have problems parsing plain ASCII text are just<br />wrong. It's not that expensive. The thing that makes /proc/mounts<br />expensive is not the individual lines - it's that there are a lot of<br />them.<br /><br />                     Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
