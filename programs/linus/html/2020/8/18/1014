    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/17/2031">First message in thread</a></li><li><a href="/lkml/2020/8/17/2031">(Eric W. Biederman)</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 18 Aug 2020 10:51:33 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC][PATCH] seccomp: Fail immediately if any thread is performing an exec</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 17, 2020 at 12:11 PM Eric W. Biederman<br />&lt;ebiederm&#64;xmission.com&gt; wrote:<br />&gt;<br />&gt; +static void set_in_execve(bool in_execve)<br />&gt; +{<br />&gt; +       struct task_struct *me = current;<br />&gt; +       spinlock_t *lock = &amp;me-&gt;sighand-&gt;siglock;<br />&gt; +<br />&gt; +       spin_lock_irq(lock);<br />&gt; +       me-&gt;in_execve = in_execve;<br />&gt; +       spin_unlock_irq(lock);<br />&gt; +}<br /><br />No. This is complete voodoo programming. Code like this makes<br />absolutely zero sense.<br /><br />Using a lock to serialize a single write is completely bogus. Yes, it<br />can be required if the field is a bitfield and you want to protect the<br />other bits in the word, but then you shouldn't be using a bitfield.<br /><br />It adds zero serialization that a WRITE_ONCE/READ_ONCE pair doesn't<br />add. The other side will get either the old or the new value<br />regardless of the locking, so the locking is completely worthless<br />garbage.<br /><br />At best it's just wasted CPU time. At worst, it confuses people about<br />what the locking means and results in bugs down the line. Don't do<br />things like this.<br /><br />Locking for reading or writing a single value makes no sense. Locking<br />is only useful when there is a coherency issue and you have a<br />*sequence* of writes.<br /><br />If you have a single value that acts as a flag, use<br />READ_ONCE/WRITE_ONCE to show that there's no relevant locking. In<br />fact, better yet, use "smp_store_release()" to set the flag and<br />"smp_load_acquire()" to read it, and then you get the read/write once<br />semantics _and_ an ordering between the "I have started doing X,<br />everything I've done up until this point is now guaranteed to be<br />visible to whoever reads this value".<br /><br />           Linus<br /><br />PS. Yes, there are situations where you want to lock around a single<br />write because of the serialization it guarantees for things around the<br />locked code. So you can have valid "lock-write-unlock" sequences. But<br />then you'd better have a BIG HONKING COMMENT about what the hell<br />you're really serializing, because it's not the single write, it's<br />something bigger.<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
