    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/28/90">First message in thread</a></li><li><a href="/lkml/2020/8/29/140">Guenter Roeck</a><ul><li><a href="/lkml/2020/8/29/186">Herbert Xu</a><ul><li><a href="/lkml/2020/8/29/262">Guenter Roeck</a></li></ul></li><li><a href="/lkml/2020/8/29/187">Luc Van Oostenryck</a><ul><li class="origin"><a href="/lkml/2020/8/29/362">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/29/362">Guenter Roeck</a><ul><li><a href="/lkml/2020/8/29/372">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2020/8/30/114">Luc Van Oostenryck</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 29 Aug 2020 10:29:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] fsldma: fsl_ioread64*() do not need lower_32_bits()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Aug 29, 2020 at 5:46 AM Luc Van Oostenryck<br />&lt;luc.vanoostenryck&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; But the pointer is already 32-bit, so simply cast the pointer to u32.<br /><br />Yeah, that code was completely pointless. If the pointer had actually<br />been 64-bit, the old code would have warned too.<br /><br />The odd thing is that the fsl_iowrite64() functions make sense. It's<br />only the fsl_ioread64() functions that seem to be written by somebody<br />who is really confused.<br /><br />That said, this patch only humors the confusion. The cast to 'u32' is<br />completely pointless. In fact, it seems to be actively wrong, because<br />it means that the later "fsl_addr + 1" is done entirely incorrectly -<br />it now literally adds "1" to an integer value, while the iowrite()<br />functions will add one to a "u32 __iomem *" pointer (so will do<br />pointer arithmetic, and add 4).<br /><br />So this code has never ever worked correctly to begin with, but the<br />patches to fix the warning miss the point. The problem isn't the<br />warning, the problem is that the code is broken and completely wrong<br />to begin with.<br /><br />And the "lower_32_bits()" thing has always been pure and utter<br />confusion and complete garbage.<br /><br />I *think* the right patch is the one attached, but since this code is<br />clearly utterly broken, I'd want somebody to test it.<br /><br />It has probably never ever worked on 32-bit powerpc, or did so purely<br />by mistake (perhaps because nobody really cares - the only 64-bit use<br />is this:<br /><br />    static dma_addr_t get_cdar(struct fsldma_chan *chan)<br />    {<br />        return FSL_DMA_IN(chan, &amp;chan-&gt;regs-&gt;cdar, 64) &amp; ~FSL_DMA_SNEN;<br />    }<br /><br />and there are two users of that: one which ignores the return value,<br />and one that looks like it might end up half-way working even if the<br />value read was garbage (it's used only to compare against a "current<br />descriptor" value).<br /><br />Anyway, the fix is definitely not to just shut up the warning. The<br />warning is only a sign of utter confusion in that driver.<br /><br />Can somebody with the hardware test this on 32-bit ppc?<br /><br />And if not (judging by just how broken those functions are, maybe it<br />never did work), can somebody with a ppc32 setup at least compile-test<br />this patch and look at whether it makes sense, in ways the old code<br />did not.<br /><br />                Linus<br />[unhandled content-type:application/octet-stream]</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
