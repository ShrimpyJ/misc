    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/27/866">First message in thread</a></li><li><a href="/lkml/2020/8/27/866">Christoph Hellwig</a><ul><li><a href="/lkml/2020/8/27/833">Christoph Hellwig</a></li><li><a href="/lkml/2020/8/27/834">Christoph Hellwig</a></li><li><a href="/lkml/2020/8/27/835">Christoph Hellwig</a></li><li><a href="/lkml/2020/8/27/836">Christoph Hellwig</a><ul><li><a href="/lkml/2020/9/2/63">Christophe Leroy</a><ul><li><a href="/lkml/2020/9/2/389">Christoph Hellwig</a><ul><li><a href="/lkml/2020/9/2/423">David Laight</a></li><li><a href="/lkml/2020/9/2/603">Christophe Leroy</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2020/8/27/837">Christoph Hellwig</a></li><li><a href="/lkml/2020/8/27/838">Christoph Hellwig</a><ul><li class="origin"><a href="/lkml/2020/8/29/108">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/29/108">Christoph Hellwig</a></li></ul></li></ul></li><li><a href="/lkml/2020/8/27/863">Christoph Hellwig</a></li><li><a href="/lkml/2020/8/27/864">Christoph Hellwig</a><ul><li><a href="/lkml/2020/8/27/1166">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/29/107">Christoph Hellwig</a><ul><li><a href="/lkml/2020/9/1/1831">Kees Cook</a></li><li><a href="/lkml/2020/9/1/1861">Kees Cook</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2020/8/27/865">Christoph Hellwig</a></li><li><a href="/lkml/2020/8/27/867">Christoph Hellwig</a><ul><li><a href="/lkml/2020/8/27/991">David Laight</a><ul><li><a href="/lkml/2020/8/29/106">'Christoph Hellwig'</a></li></ul></li><li><a href="/lkml/2020/9/1/119">kernel test robot</a><ul><li><a href="/lkml/2020/9/1/136">Christoph Hellwig</a></li></ul></li></ul></li><li><a href="/lkml/2020/8/27/952">Christoph Hellwig</a></li><li><a href="/lkml/2020/9/1/1684">Christophe Leroy</a><ul><li><a href="/lkml/2020/9/1/1745">Al Viro</a><ul><li><a href="/lkml/2020/9/1/1775">Matthew Wilcox</a></li><li><a href="/lkml/2020/9/1/1816">Christophe Leroy</a></li><li><a href="/lkml/2020/9/1/1864">Christophe Leroy</a></li><li><a href="/lkml/2020/9/2/186">Christoph Hellwig</a></li></ul></li></ul></li><li><a href="/lkml/2020/10/27/299">David Howells</a></li><li><a href="/lkml/2020/10/27/342">David Howells</a><ul><li><a href="/lkml/2020/10/27/348">Christoph Hellwig</a></li><li><a href="/lkml/2020/10/27/457">David Howells</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 27 Aug 2020 11:15:12 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 08/10] x86: remove address space overrides using set_fs()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 27, 2020 at 8:00 AM Christoph Hellwig &lt;hch&#64;lst.de&gt; wrote:<br />&gt;<br />&gt;  SYM_FUNC_START(__get_user_2)<br />&gt;         add $1,%_ASM_AX<br />&gt;         jc bad_get_user<br /><br />This no longer makes sense, and<br /><br />&gt; -       mov PER_CPU_VAR(current_task), %_ASM_DX<br />&gt; -       cmp TASK_addr_limit(%_ASM_DX),%_ASM_AX<br />&gt; +       LOAD_TASK_SIZE_MAX<br />&gt; +       cmp %_ASM_DX,%_ASM_AX<br /><br />This should be<br /><br />        LOAD_TASK_SIZE_MAX_MINUS_N(1)<br />        cmp %_ASM_DX,%_ASM_AX<br /><br />instead (and then because we no longer modify _ASM_AX, we'd also<br />remove the offset on the access).<br /><br />&gt;  SYM_FUNC_START(__put_user_2)<br />&gt; -       ENTER<br />&gt; -       mov TASK_addr_limit(%_ASM_BX),%_ASM_BX<br />&gt; +       LOAD_TASK_SIZE_MAX<br />&gt;         sub $1,%_ASM_BX<br /><br />It's even more obvious here. We load a constant and then immediately<br />do a "sub $1" on that value.<br /><br />It's not a huge deal, you don't have to respin the series for this, I<br />just wanted to point it out so that people are aware of it and if I<br />forget somebody else will hopefully remember that "we should fix that<br />too".<br /><br />                   Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
