    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/12/884">First message in thread</a></li><li><a href="/lkml/2020/8/13/667">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/13/799">Dan Williams</a></li><li><a href="/lkml/2020/8/14/19">Christoph Hellwig</a><ul><li class="origin"><a href="/lkml/2020/8/14/756">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/14/756">Hugh Dickins</a><ul><li><a href="/lkml/2020/8/15/191">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 14 Aug 2020 15:40:38 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] dma-debug: fix debug_dma_assert_idle(), use rcu_read_lock()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 13, 2020 at 10:42 PM Christoph Hellwig &lt;hch&#64;lst.de&gt; wrote:<br />&gt;<br />&gt; The whole thing predates my involvement with the code, but I defintively<br />&gt; think the patch from Hugh is a major improvement.  But I would also<br />&gt; have no problem with just removing it entirely.<br /><br />I decided to just do both, since neither you nor Dan seemed to really object.<br /><br />I applied Hugh's RCU read locking patch as a clear improvement, and<br />then I did a second patch that just removed this function entirely.<br />That sounds a bit odd, perhaps, but in case people decide to resurrect<br />the debugging code, I didn't want us to lose sight of Hugh's<br />improvement just because I then decided that we might as well go one<br />step further and just remove it entirely.<br /><br />And the only real reason I care is that this whole COW and page lock<br />thing has showed up lately, and I like removing code.<br /><br />I'm _very_ tempted to just apply my COW simplification patch that gets<br />rid of all the complex try-to-share cases entirely (and would also<br />obviate the whole forced-cow patch). I suspect it would effectively<br />remove almost all of the [un[lock_page() bottlenecks entirely, but<br />that code has decades of history and I suspect it's a bit too drastic<br />wrt KSM and the swap cache pages.<br /><br />It would be lovely if the main source of page locking would really be<br />about just IO, but the page lock has also become the thing that<br />serializes almost everything related to page state. Which is why you<br />find it in contexts that are really not IO-related at all (not just<br />COW - page migration is the other one that has shown up a lot under<br />"heavy CPU loads" without really necessarily any IO component to it).<br /><br />                         Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
