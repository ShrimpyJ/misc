    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/11/725">First message in thread</a></li><li><a href="/lkml/2020/8/21/1221">Peter Xu</a><ul><li><a href="/lkml/2020/8/21/1249">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2020/8/21/1325">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/21/1325">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2020/8/21/1337">Peter Xu</a><ul><li><a href="/lkml/2020/8/21/1345">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 21 Aug 2020 12:05:19 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v3] mm/gup: Allow real explicit breaking of COW</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Aug 21, 2020 at 11:23 AM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; But the PageKsm() page_count() issue I didn't even realize. That worries me.<br /><br />Well, the fix is simple, although I don't love the magic PageKsm<br />semantics that hide it from the page count.<br /><br />But since (a) a Ksm page is presumably normally shared (ie things like<br />all zeroes) and (b) copying should always be safe, just do that.<br /><br />The case we *used* to have with trying to reuse the KSM page seems<br />like it's not just adding complexity, it's optimizing for entirely the<br />wrong case.<br /><br />Check both before and after getting the page lock, for the same reason<br />we do it for the page count.<br /><br />The logic there matches the "reuse swap page", but while that old<br />logic may have made sense 20 years ago, the swap cache case should be<br />*so* rare these days that it feels completely pointless to try to<br />reuse it.<br /><br />Aggressively doing a new allocation, copy, and freeing the old swap<br />cache page is quite possibly cheaper than taking the page lock anyway,<br />but more importantly, it's not a case that should normally trigger in<br />the first place.<br /><br />That said, looking at this code again, I get the feeling that the<br />mapcount check is pointless.<br /><br />Afaik, page_count() should always be larger than page_mapcount(), so<br />if mapcount is &gt; 1, then we'd have caught it with the page_count()<br />check.<br /><br />Hmm? Am I popssibly missing some other subtle special case?<br /><br />Are there any THP issues? Again, doing the copy should always be the<br />safe thing to do, and since we get the page lock for the reuse case I<br />think we're ok on that front.<br /><br />What else possible special cases could we hit?<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
