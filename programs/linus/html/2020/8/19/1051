    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/18/446">First message in thread</a></li><li><a href="/lkml/2020/8/18/860">Christoph Hellwig</a><ul><li><a href="/lkml/2020/8/19/132">   peterz&#64;infradea ...</a><ul><li class="origin"><a href="/lkml/2020/8/19/1115">Linus Torvalds</a><ul><li><a href="/lkml/2020/8/19/1115">   peterz&#64;infradea ...</a><ul><li><a href="/lkml/2020/8/19/1220">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2020/8/20/117">Christoph Hellwig</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 19 Aug 2020 11:50:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC][PATCH v2 08/10] smp,irq_work: Use the new irq_work API</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 19, 2020 at 12:22 AM &lt;peterz&#64;infradead.org&gt; wrote:<br />&gt;<br />&gt; That is, the external serialization comes from the non-atomic<br />&gt; test-and-set they both have. This works nicely when there is external<br />&gt; state that already serializes things, but totally comes apart (and<br />&gt; causes trivial list corruption) when you get it wrong.<br /><br />Quite often, there just isn't any *need* for serialization, because<br />there is only ever one op active.<br /><br />That can be either because the csd is fundamentally a single thing ("I<br />will transfer this object to another CPU"), or it can be because the<br />CSD is already per-cpu (ie smp_call_function_single).<br /><br />You seem to make that common situation much worse.<br /><br />Not only do you add that expensive atomic op, you add that expensive<br />"use irq_work queues" for something that doesn't _need_ to use them.<br /><br />I have to say, I'm not a fan. What are the real advantages? Your<br />listed disadvantages are very very questionable.<br /><br />IOW, what are the actual examples of "totally comes apart" that justifies this?<br /><br />If the example is theoretical ("if you use csd's wrong") then I think<br />they are worthless.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
