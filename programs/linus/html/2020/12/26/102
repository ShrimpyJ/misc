    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/12/9/769">First message in thread</a></li><li><a href="/lkml/2020/12/26/88">Linus Torvalds</a><ul><li><a href="/lkml/2020/12/26/99">"Kirill A. Shutemov"</a><ul><li><a href="/lkml/2020/12/26/101">Hugh Dickins</a><ul><li><a href="/lkml/2020/12/26/103">Linus Torvalds</a><ul><li><a href="/lkml/2020/12/26/113">"Kirill A. Shutemov"</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2020/12/26/108">Matthew Wilcox</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 26 Dec 2020 13:07:14 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/2] mm: Allow architectures to request 'old' entries when prefaulting</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">I was going to just apply this patch, because I like it so much, but<br />then I decided to take one last look, and:<br /><br />On Sat, Dec 26, 2020 at 12:43 PM Kirill A. Shutemov<br />&lt;kirill&#64;shutemov.name&gt; wrote:<br />&gt;<br />&gt; +static bool filemap_map_pmd(struct vm_fault *vmf, struct page *page)<br />&gt; +{<br />&gt; +       struct mm_struct *mm = vmf-&gt;vma-&gt;vm_mm;<br />&gt; +<br />&gt; +       /* Huge page is mapped? No need to proceed. */<br />&gt; +       if (pmd_trans_huge(*vmf-&gt;pmd))<br />&gt; +               return true;<br /><br />doesn't this cause us to leak a locked page?<br /><br />I get the feeling that every single "return true" case here should<br />always unlock the page and - with the exception of a successful<br />do_set_pmd() - do a "put_page()".<br /><br />Which kind of argues that we should just do it in the caller (and get<br />an extra ref in the do_set_pmd() case, so that the caller can always<br />do<br /><br />        if (filemap_map_pmd(..)) {<br />                unlock_page(page);<br />                put_page(page);<br />                rcu_read_unlock();<br />                return;<br />        }<br /><br />andf then there are no odd cases inside that filemap_map_pmd() function. Hmm?<br /><br />Other than that, I really find it all much more legible.<br /><br />Of course, if I'm wrong about the above, that just proves that I'm<br />missing something and it wasn't so legible after all..<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
