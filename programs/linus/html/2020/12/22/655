    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/12/22/412">First message in thread</a></li><li><a href="/lkml/2020/12/22/412">syzbot</a><ul><li class="origin"><a href="/lkml/2020/12/22/658">Linus Torvalds</a><ul><li><a href="/lkml/2020/12/22/658">Florian Westphal</a><ul><li><a href="/lkml/2020/12/23/216">Dmitry Vyukov</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 22 Dec 2020 14:01:21 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: kernel BUG at lib/string.c:LINE! (6)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Dec 22, 2020 at 6:44 AM syzbot<br />&lt;syzbot+e86f7c428c8c50db65b4&#64;syzkaller.appspotmail.com&gt; wrote:<br />&gt;<br />&gt; The issue was bisected to:<br />&gt;<br />&gt; commit 2f78788b55ba ("ilog2: improve ilog2 for constant arguments")<br /><br />That looks unlikely, although possibly some constant folding<br />improvement might make the fortify code notice something with it.<br /><br />&gt; detected buffer overflow in strlen<br />&gt; ------------[ cut here ]------------<br />&gt; kernel BUG at lib/string.c:1149!<br />&gt; Call Trace:<br />&gt;  strlen include/linux/string.h:325 [inline]<br />&gt;  strlcpy include/linux/string.h:348 [inline]<br />&gt;  xt_rateest_tg_checkentry+0x2a5/0x6b0 net/netfilter/xt_RATEEST.c:143<br /><br />Honestly, this just looks like the traditional bug in "strlcpy()".<br /><br />That BSD function is complete garbage, exactly because it doesn't<br />limit the source length. People tend to _think_ it does ("what's that<br />size_t argument for?") but strlcpy() only limits the *destination*<br />size, and the source is always read fully.<br /><br />So it's a completely useless function if you can't implicitly trust<br />the source string - but that is almost always why people think they<br />should use it!<br /><br />Nobody should use it. I really would like to remove it, and let<br />everybody know how incredibly broken sh*t that function is.<br /><br />Can we please have everybody stop using strlcpy(). But in this<br />particular case, it's that xt_rateest_tg_checkentry() in<br />net/netfilter/xt_RATEEST.c<br /><br />That said, this may be a real FORTIFY report if that info-&gt;name is<br />*supposed* to be trustworthy? The xt_RATETEST code does use<br />"info-&gt;name" a few lines earlier when it does<br /><br />        est = __xt_rateest_lookup(xn, info-&gt;name);<br /><br />or maybe the bisection is right, and this points to some problem with<br />__builtin_clzll?<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
