    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/11/27/739">First message in thread</a></li><li><a href="/lkml/2020/11/27/739">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/30/793">Doug Anderson</a><ul><li class="origin"><a href="/lkml/2020/11/30/932">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/30/932">Russell King - ARM Linux admin</a><ul><li><a href="/lkml/2020/11/30/954">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2020/11/30/942">Doug Anderson</a><ul><li><a href="/lkml/2020/11/30/971">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2020/11/30/838">Dmitry Torokhov</a><ul><li><a href="/lkml/2020/12/5/358">Pavel Machek</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 30 Nov 2020 09:44:03 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] ARM: SoC fixes for v5.10, part 3</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Nov 30, 2020 at 9:04 AM Doug Anderson &lt;dianders&#64;chromium.org&gt; wrote:<br />&gt;<br />&gt; Without static assignment, maybe we could do numbering of MMC devices<br />&gt; in some type of a pre-probe routine?  Is that what you're suggesting?<br /><br />Yes.<br /><br />So basically, the way the async probing works for say SCSI is that we<br />have multiple "layers of asynchroniety". We have the usual "init calls<br />done asynchronously", but then within the init calls themselves you<br />can start sub-scans asynchronously.<br /><br />In order to get reliable ordering between multiple controllers, the<br />PCI bus is probed in order in pci_init() (or whatever), so each SCSI<br />controller gets called in a fixed order.<br /><br />That then gets to scsi_scan_host() does that async_schedule() thing to<br />actually scan the SCSI buses on that host.<br /><br />&gt; If so, it seems like it might be a pretty big change to figure out how<br />&gt; that ought to work (if it can be made to work).<br /><br />Try to start out doing discovery synchronously, but then any extra<br />work (actual IO like partition scanning etc) with an "async_work()".<br /><br />&gt; Just to confirm, I assume you are specifically excluding all block<br />&gt; devices attached via USB, right?<br /><br />I have this memory that we tried to scan the root bus in order, just<br />because people will have internal USB devices that way, and it makes<br />it *much* easier if they show up in predetermined places.<br /><br />Note that it really is only the internal devices that matter. Once you<br />start plugging in an external USB hug and random devices, ordering<br />clearly won't be reliable.<br /><br />So this is not a "everything must be ordered". But people who think<br />that that then means "everythinbg can be random" are wrong. It's<br />really really inconvenient, because things like disk labels and<br />various device IDs are not reliable either, and can be very confusing<br />when two otherwise identical machines look different before you've<br />installed a full system on them, for example.<br /><br />So you should strive very hard to make everything that is directly<br />connected to one SoC always come up in the same order, for example.<br /><br />And storage devices are special. As Dmitry points out, it doesn't much<br />matter in what order something like a mouse is scanned. Who cares? If<br />you have multiple pointer devices, you'll either use them<br />interchangably, or you'll have some other way to identify them. But<br />storage is a _lot_ more basic than basically stateless input devices<br />are.<br /><br />And no, disk labels really don't always exist. Never ever say "but but<br />but disk labels".<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
