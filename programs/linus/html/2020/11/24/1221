    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/8/26/1445">First message in thread</a></li><li><a href="/lkml/2020/11/24/1111">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/24/1208">Matthew Wilcox</a><ul><li class="origin"><a href="/lkml/2020/11/24/1282">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/24/1282">Hugh Dickins</a><ul><li><a href="/lkml/2020/11/24/1336">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 24 Nov 2020 12:34:33 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: kernel BUG at fs/ext4/inode.c:LINE!</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Nov 24, 2020 at 12:16 PM Matthew Wilcox &lt;willy&#64;infradead.org&gt; wrote:<br />&gt;<br />&gt; So my s/if/while/ suggestion is wrong and we need to do something to<br />&gt; prevent spurious wakeups.  Unless we bury the spurious wakeup logic<br />&gt; inside wait_on_page_writeback() ...<br /><br />We can certainly make the "if()" in that loop be a "while()'.<br /><br />That's basically what the old code did - simply by virtue of the<br />wakeup not happening if the writeback bit was set in<br />wake_page_function():<br /><br />        if (test_bit(key-&gt;bit_nr, &amp;key-&gt;page-&gt;flags))<br />                return -1;<br /><br />of course, the race was still there - because the writeback bit might<br />be clear at that point, but another CPU would reallocate and dirty it,<br />and then autoremove_wake_function() would happen anyway.<br /><br />But back in the bad old days, the wait_on_page_bit_common() code would<br />then double-check in a loop, so it would catch that case, re-insert<br />itself on the wait queue, and try again. Except for the DROP case,<br />which isn't used by writeback.<br /><br />Anyway, making that "if()" be a "while()" in wait_on_page_writeback()<br />would basically re-introduce that old behavior. I don't really care,<br />because it was the lock bit that really mattered, the writeback bit is<br />not really all that interesting (except from a "let's fix this bug"<br />angle)<br /><br />I'm not 100% sure I like the fragility of this writeback thing.<br /><br />Anyway, I'm certainly happy with either model, whether it be an added<br />while() in wait_on_page_writeback(), or it be the page reference count<br />in end_page_writeback().<br /><br />Strong opinions?<br /><br />            Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
