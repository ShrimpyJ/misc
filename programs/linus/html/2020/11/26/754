    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/11/2/188">First message in thread</a></li><li><a href="/lkml/2020/11/20/509">Feng Tang</a><ul><li><a href="/lkml/2020/11/20/622">Michal Hocko</a><ul><li><a href="/lkml/2020/11/20/663">Feng Tang</a></li></ul></li><li><a href="/lkml/2020/11/25/22">Feng Tang</a><ul><li><a href="/lkml/2020/11/25/1074">Waiman Long</a></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2020/11/30/125">Michal Hocko</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Nov 2020 09:39:23 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [LKP] Re: [mm/memcg] bd0b230fe1: will-it-scale.per_process_ops -22.7% regression</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Nov 24, 2020 at 10:24 PM Feng Tang &lt;feng.tang&#64;intel.com&gt; wrote:<br />&gt;<br />&gt; And with the following patch to relayout these members, the regression<br />&gt; is restored and event better. while reducing 64 bytes of sizeof<br />&gt; 'struct mem_cgroup'<br /><br />Thanks, applied.<br /><br />I do wonder if somebody on the hardware side inside Intel might not<br />perhaps want to look at that load pattern and at why performance<br />regressed so much. Maybe teach the prefetcher to avoid adjacent cache<br />lines that end up showing ping-pong behavior..<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
