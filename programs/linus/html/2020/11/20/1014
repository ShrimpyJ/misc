    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/11/20/670">First message in thread</a></li><li><a href="/lkml/2020/11/20/670">Will Deacon</a><ul><li><a href="/lkml/2020/11/20/671">Will Deacon</a><ul><li><a href="/lkml/2020/11/20/850">Minchan Kim</a></li><li><a href="/lkml/2020/11/20/1276">Yu Zhao</a></li><li><a href="/lkml/2020/11/23/860">Catalin Marinas</a></li><li><a href="/lkml/2020/11/24/314">Anshuman Khandual</a></li></ul></li><li><a href="/lkml/2020/11/20/672">Will Deacon</a><ul><li><a href="/lkml/2020/11/20/986">Minchan Kim</a><ul><li><a href="/lkml/2020/11/23/1130">Catalin Marinas</a></li></ul></li><li><a href="/lkml/2020/11/23/1119">Catalin Marinas</a></li></ul></li><li><a href="/lkml/2020/11/20/673">Will Deacon</a><ul><li><a href="/lkml/2020/11/20/992">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/23/1333">Will Deacon</a></li></ul></li></ul></li><li><a href="/lkml/2020/11/20/674">Will Deacon</a><ul><li><a href="/lkml/2020/11/20/697">Peter Zijlstra</a><ul><li><a href="/lkml/2020/11/20/743">Peter Zijlstra</a></li><li><a href="/lkml/2020/11/20/774">Will Deacon</a><ul><li><a href="/lkml/2020/11/20/801">Peter Zijlstra</a></li></ul></li><li><a href="/lkml/2020/11/20/843">Minchan Kim</a><ul><li><a href="/lkml/2020/11/23/1495">Will Deacon</a></li></ul></li></ul></li><li><a href="/lkml/2020/11/20/1295">Yu Zhao</a><ul><li><a href="/lkml/2020/11/20/1612">Yu Zhao</a><ul><li><a href="/lkml/2020/11/23/1510">Yu Zhao</a></li><li><a href="/lkml/2020/11/23/1709">Will Deacon</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2020/11/20/675">Will Deacon</a><ul><li><a href="/lkml/2020/11/20/993">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/20/1004">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/23/1304">Will Deacon</a></li><li><a href="/lkml/2021/2/1/398">"tip-bot2 for Will Deacon"</a></li></ul></li></ul></li><li><a href="/lkml/2020/11/22/136">kernel test robot</a><ul><li><a href="/lkml/2020/11/23/1387">Will Deacon</a></li></ul></li></ul></li><li><a href="/lkml/2020/11/20/676">Will Deacon</a><ul><li class="origin"><a href="/lkml/2020/11/20/1017">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/20/1017">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2020/11/20/1331">Yu Zhao</a><ul><li><a href="/lkml/2020/11/23/1449">Will Deacon</a><ul><li><a href="/lkml/2020/11/23/1534">Yu Zhao</a></li></ul></li><li><a href="/lkml/2020/11/24/763">Peter Zijlstra</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Nov 2020 09:41:54 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 6/6] mm: proc: Avoid fullmm flush for young/dirty bit toggling</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Nov 20, 2020 at 6:36 AM Will Deacon &lt;will&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; Ensure that TLB invalidation is performed after updating soft-dirty<br />&gt; entries via clear_refs_write() by using the non-fullmm API to MMU gather.<br /><br />This code sequence looks bogus to begin with.<br /><br />It does that<br /><br />                tlb_gather_mmu(&amp;tlb, mm, 0, -1);<br />     ..<br />                tlb_finish_mmu(&amp;tlb, 0, -1);<br /><br />around the loop (all, your patch series changes those arguments), but<br />it doesn't actually use "tlb" anywhere inside the loop itself that I<br />can see.<br /><br />Yeah., yeah, it sets the flush_pending thing etc, but that still<br />sounds fundamentally wrong. It should do the proper range adjustments<br />if/when it actually wals the range. No?<br /><br />If I read this all right, it will do a full TLB flush even when it<br />doesn't do anything (eg CLEAR_REFS_SOFT_DIRTY with no softdirty<br />pages).<br /><br />So this looks all kinds of bogus. Not your patch, but the code it patches.<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
