    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2020/11/11/1308">First message in thread</a></li><li><a href="/lkml/2020/11/11/1182">Daniel Xu</a><ul><li><a href="/lkml/2020/11/13/755">Alexei Starovoitov</a><ul><li class="origin"><a href="/lkml/2020/11/13/961">Linus Torvalds</a><ul><li><a href="/lkml/2020/11/13/961">Alexei Starovoitov</a><ul><li><a href="/lkml/2020/11/13/972">Linus Torvalds</a></li><li><a href="/lkml/2020/11/13/995">Linus Torvalds</a></li><li><a href="/lkml/2020/11/13/1007">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 13 Nov 2020 10:08:02 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH bpf v5 1/2] lib/strncpy_from_user.c: Don't overcopy bytes after NUL terminator</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Nov 13, 2020 at 9:03 AM Alexei Starovoitov<br />&lt;alexei.starovoitov&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; Linus,<br />&gt; I think you might have an opinion about it.<br />&gt; Please see commit log for the reason we need this fix.<br /><br />Why is BPF doing this?<br /><br />The thing is, if you care about the data after the strncpy, you should<br />be clearing it yourself.<br /><br />The kernel "strncpy_from_user()" is  *NOT* the same as "strncpy()",<br />despite the name. It never has been, and it never will be. Just the<br />return value being different should have given it away.<br /><br />In particular, "strncpy()" is documented to zero-pad the end of the<br />area. strncpy_from_user() in contrast, is documented to NOT do that.<br />You cannot - and must not - depend on it.<br /><br />If you want the zero-padding, you need to do it yourself. We're not<br />slowing down strncpy_from_user() because you want it, because NOBODY<br />ELSE cares, and you're depending on semantics that do not exist, and<br />have never existed.<br /><br />So if you want padding, you do something like<br /><br />   long strncpy_from_user_pad(char *dst, const char __user *src, long count)<br />   {<br />         long res = strncpy_from_user(dst, src, count)<br />         if (res &gt;= 0)<br />                memset(dst+res, 0, count-res);<br />        return res;<br />   }<br /><br />because BPF is doing things wrong as-is, and the problem is very much<br />that BPF is relying on undefined data *after* the string.<br /><br />And again - we're not slowing down the good cases just because BPF<br />depends on bad behavior.<br /><br />You should feel bad.<br /><br />                Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
