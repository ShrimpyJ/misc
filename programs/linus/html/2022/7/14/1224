    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/12/1370">First message in thread</a></li><li><a href="/lkml/2022/7/14/927">Paolo Bonzini</a><ul><li><a href="/lkml/2022/7/14/1043">Boris Petkov</a><ul><li class="origin"><a href="/lkml/2022/7/14/1230">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/14/1230">Paolo Bonzini</a></li><li><a href="/lkml/2022/7/14/1241">Peter Zijlstra</a><ul><li><a href="/lkml/2022/7/14/1267">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 14 Jul 2022 10:02:57 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 5.15 00/78] 5.15.55-rc1 review</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Jul 14, 2022 at 7:46 AM Boris Petkov &lt;bp&#64;alien8.de&gt; wrote:<br />&gt;<br />&gt; On July 14, 2022 1:46:53 PM UTC, Paolo Bonzini &lt;pbonzini&#64;redhat.com&gt; wrote:<br />&gt; &gt;Please leave that one out as Peter suggested a better fix and I have that queued for Linus.<br />&gt;<br />&gt; Already zapped.<br /><br />I like Peter's more obvious use of FASTYOP_LENGTH, but this is just disgusting:<br /><br />    #define FASTOP_SIZE (8 &lt;&lt; ((FASTOP_LENGTH &gt; 8) &amp; 1) &lt;&lt;<br />((FASTOP_LENGTH &gt; 16) &amp; 1))<br /><br />I mean, I understand what it's doing, but just two lines above it the<br />code has a "ilog2()" use that already depends on the fact that you can<br />use ilog2() as a constant compile-time expression.<br /><br />And guess what? The code could just use roundup_pow_of_two(), which is<br />designed exactly like ilog2() to be used for compile-time constant<br />values.<br /><br />So the code should just use<br /><br />    #define FASTOP_SIZE roundup_pow_of_two(FASTOP_LENGTH)<br /><br />and be a lot more legible, wouldn't it?<br /><br />Because I don't think there is anything magical about the length<br />"8/16/32". It's purely "aligned and big enough to contain<br />FASTOP_LENGTH".<br /><br />And then the point of that<br /><br />    static_assert(FASTOP_LENGTH &lt;= FASTOP_SIZE);<br /><br />just goes away, because there are no subtle math issues there any more.<br /><br />In fact, the remaining question is just "where did the 7 come from" in<br /><br />    #define FASTOP_LENGTH (7 + ENDBR_INSN_SIZE + RET_LENGTH)<br /><br />because other than that it all looks fairly straightforward.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
