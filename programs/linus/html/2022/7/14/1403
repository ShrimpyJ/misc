    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/12/1370">First message in thread</a></li><li><a href="/lkml/2022/7/14/1223">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/14/1225">Borislav Petkov</a><ul><li class="origin"><a href="/lkml/2022/7/15/563">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/15/563">Borislav Petkov</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 14 Jul 2022 13:39:25 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 5.15 00/78] 5.15.55-rc1 review</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Jul 14, 2022 at 10:02 AM Borislav Petkov &lt;bp&#64;alien8.de&gt; wrote:<br />&gt;<br />&gt; On Thu, Jul 14, 2022 at 09:51:40AM -0700, Linus Torvalds wrote:<br />&gt; &gt; Oh, absolutely. Doing an -rc7 is normal.<br />&gt;<br />&gt; Good. I'm gathering all the fallout fixes and will send them to you on<br />&gt; Sunday, if nothing unexpected happens.<br /><br />Btw, I assume that includes the clang fix for the<br />x86_spec_ctrl_current section attribute.<br /><br />That's kind of personally embarrassing that it slipped through: I do<br />all my normal test builds that I actually *boot* with clang.<br /><br />But since I kept all of the embargoed stuff outside my normal trees,<br />it also meant that the test builds I did didn't have my "this is my<br />clang tree" stuff in it.<br /><br />And so I - like apparently everybody else - only did those builds with gcc.<br /><br />And gcc for some reason doesn't care about this whole "you redeclared<br />that variable with a different attribute" thing.<br /><br />And sadly, our percpu accessor functions don't verify these things<br />either, so you can write code like this:<br /><br />    unsigned long myvariable;<br /><br />    unsigned long test_fn(void)<br />    {<br />        return this_cpu_read(myvariable);<br />    }<br /><br />and the compiler will not complain about anything at all, and happily<br />generate completely nonsensical code like<br /><br />        movq %gs:myvariable(%rip), %rax<br /><br />for it, which will do entirely the wrong thing because 'myvariable'<br />wasn't allocated in the percpu section.<br /><br />In the 'x86_spec_ctrl_current' case, that nonsensical code _worked_<br />(with gcc), because despite the declaration being for a regular<br />variable, the actual definition was in the proper segment.<br /><br />But that 'myvariable' thing above does end up being another example of<br />how we are clearly missing some type checkng in this area.<br /><br />I'm not sure if there's any way to get that section mismatch at<br />compile-time at all. For the static declarations, we could just make<br />DECLARE_PER_CPU() add some prefix/postfix to the name (and obviously<br />then do it at use time too).<br /><br />We have that '__pcpu_scope_##name' thing to make sure of globally<br />unique naming due to the whole weak type thing. I wonder if we could<br />do something similar to verify that "yes, this has been declared as a<br />percpu variable" at use time?<br /><br />                   Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
