    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/14/361">First message in thread</a></li><li><a href="/lkml/2022/7/17/246">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/17/248">Sudip Mukherjee</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2022/7/17/253">Segher Boessenkool</a><ul><li><a href="/lkml/2022/7/17/254">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/17/263">Segher Boessenkool</a><ul><li><a href="/lkml/2022/7/17/323">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 17 Jul 2022 13:56:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: mainline build failure of powerpc allmodconfig for prom_init_check</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Jul 17, 2022 at 1:38 PM Sudip Mukherjee<br />&lt;sudipm.mukherjee&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; I have also tried adding volatile to all the members of that struct.  :(<br /><br />Can you read the code to figure otu what the memcpy is all about?<br /><br />Or maybe there is something that disables 'volatile' with pre-processor hackery.<br /><br />Because a compiler that turns a loop over volatile members into<br />'memset()' isn't a C compiler, it's just a random noise generator.<br />'volatile' is fundamental enough that I really doubt both gcc and<br />clang can be that broken.<br /><br />I just tested this<br /><br />        struct hello {<br />                volatile int array[100];<br />        };<br /><br />        void test(void)<br />        {<br />                int i;<br />                struct hello hello;<br />                for (i = 0; i &lt; 100; i++)<br />                        hello.array[i] = 0;<br />        }<br /><br />on x86-64, and sure enough, gcc-12 turns turns it into a memset<br />without the volatile (in fact, the above will just be optimized away<br />entirely since it has no user), but with the volatile it's a proper<br />regular loop that does 32-byte accesses one by one (and in the proper<br />ascending oder). Something that memset() most definitely does not<br />guarantee:<br /><br />.L2:<br />        movslq  %eax, %rdx<br />        addl    $1, %eax<br />        movl    $0, -120(%rsp,%rdx,4)<br />        cmpl    $100, %eax<br />        jne     .L2<br /><br />and honestly, anything else sounds completely unacceptable.<br /><br />So I suspect there is something wrong with your testing, because gcc<br />simply isn't that incredibly broken. Clang is interesting in that it<br />seems to unroll the loop five times, but it still does the proper<br />"write individual 32-bit entities in ascending order".<br /><br />The other alternative is that it's something else than that 'struct<br />prom_args'. Again, I don't read powerpc asm good.<br /><br />                  Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
