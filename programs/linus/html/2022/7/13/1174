    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/12/1370">First message in thread</a></li><li><a href="/lkml/2022/7/13/742">Naresh Kamboju</a><ul><li><a href="/lkml/2022/7/13/800">Guenter Roeck</a><ul><li class="origin"><a href="/lkml/2022/7/13/1180">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/13/1180">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/14/366">Borislav Petkov</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2022/7/14/498">Maxim Levitsky</a><ul><li><a href="/lkml/2022/7/14/522">Greg Kroah-Hartman</a><ul><li><a href="/lkml/2022/7/14/600">Maxim Levitsky</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 13 Jul 2022 11:33:22 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 5.15 00/78] 5.15.55-rc1 review</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 13, 2022 at 6:34 AM Guenter Roeck &lt;linux&#64;roeck-us.net&gt; wrote:<br />&gt;<br />&gt; Looking into the log, I don't think that message is related to the crash.<br />&gt;<br />&gt; ...<br />&gt; [  105.653777] Modules linked in: x86_pkg_temp_thermal<br />&gt; [  105.902123] ---[ end trace cec99cae36bcbfd7 ]---<br />&gt; [  105.902124] RIP: 0010:xaddw_ax_dx+0x9/0x10    &lt;--- crash<br />&gt; [  105.902126] Code: 00 0f bb d0 c3 cc cc cc cc 48 0f bb d0 c3 cc cc<br /><br />Yeah, the code you snipped, shows<br /><br />  20: 66 0f c1 d0          xadd   %dx,%ax<br />  24: c3                    ret<br />  25: cc                    int3<br />  26: cc                    int3<br />  27: cc                    int3<br />  28: cc                    int3<br />  29:* 0f 1f 80 00 00 00 00 nopl   0x0(%rax) &lt;-- trapping instruction<br />  30: 0f c1 d0              xadd   %edx,%eax<br />  33: c3                    ret<br />  34: cc                    int3<br />  35: cc                    int3<br />  36: cc                    int3<br />  37: cc                    int3<br />  38: 48 0f c1 d0          xadd   %rdx,%rax<br />  3c: c3                    ret<br />  3d: cc                    int3<br /><br />and that's a bit odd.<br /><br />It says "xaddw_ax_dx+0x9/0x10", but I think somebody jumped to<br />"xaddw_ax_dx+8", hit the 'int3', and the RIP points to the next<br />instruction (because that's how int3 works).<br /><br />And the fastop code says:<br /><br /> * fastop functions have a special calling convention:<br />...<br /> * Moreover, they are all exactly FASTOP_SIZE bytes long,<br /><br />but that is clearly *NOT* the case for xaddw_ax_dx, because it's 16<br />bytes in size, and the other ones are 8 bytes. That's where the "nopl"<br />comes from: it's the alignment instruction to the next fastop<br />function.<br /><br />Compare that to the word-sized 'xaddl' case rigth afterwards: that one<br />*is* just 8 bytes in size, so the 64-byte 'xaddq' comes 8 bytes aftrer<br />it, and there's no 7-byte padding nop-instruction.<br /><br />So I think that that is where the "xaddw_ax_dx+8" comes from: some<br />code assumes that FASTOP_SIZE is 8, but that xaddw_ax_dx case was<br />actually 9 bytes and thus got that "int3 + padding" in the next 8<br />bytes.<br /><br />The whole kvm x86 emulation thiing is quite complicated and has lots<br />of instruction size #defines and magic.<br /><br />I'm not familiar enough with it to go "Ahh, it's obviously XYZ", but<br />I'm sure PeterZ and Borislav know exactly what's going on.<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
