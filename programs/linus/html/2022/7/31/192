    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/31/82">First message in thread</a></li><li><a href="/lkml/2022/7/31/121">Mikulas Patocka</a><ul><li><a href="/lkml/2022/7/31/138">Mikulas Patocka</a><ul><li class="origin"><a href="/lkml/2022/7/31/205">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/31/205">"Paul E. McKenney"</a><ul><li><a href="/lkml/2022/7/31/319">Matthew Wilcox</a></li><li><a href="/lkml/2022/8/1/818">Will Deacon</a></li></ul></li><li><a href="/lkml/2022/7/31/281">Mikulas Patocka</a><ul><li><a href="/lkml/2022/7/31/282">Mikulas Patocka</a></li><li><a href="/lkml/2022/7/31/283">Mikulas Patocka</a></li><li><a href="/lkml/2022/7/31/285">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 31 Jul 2022 09:51:47 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2] make buffer_locked provide an acquire semantics</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">[ Will and Paul, question for you below ]<br /><br />On Sun, Jul 31, 2022 at 8:08 AM Mikulas Patocka &lt;mpatocka&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; Also, there is this pattern present several times:<br />&gt;         wait_on_buffer(bh);<br />&gt;         if (!buffer_uptodate(bh))<br />&gt;                 err = -EIO;<br />&gt; It may be possible that buffer_uptodate is executed before wait_on_buffer<br />&gt; and it may return spurious error.<br /><br />I'm not convinced that's actually valid.<br /><br />They are testing the same memory location, and I don't think our<br />memory ordering model allows for _that_ to be out-of-order. Memory<br />barriers are for accesses to different memory locations.<br /><br />Even alpha is specified to be locally ordered wrt *one* memory<br />location, including for reads (See table 5-1: "Processor issue order",<br />and also 5.6.2.2: "Litmus test 2"). So if a previous read has seen a<br />new value, a subsequent read is not allowed to see an older one - even<br />without a memory barrier.<br /><br />Will, Paul? Maybe that's only for overlapping loads/stores, not for<br />loads/loads. Because maybe alpha for once isn't the weakest possible<br />ordering.<br /><br />I didn't find this actually in our documentation, so maybe other<br />architectures allow it? Our docs talk about "overlapping loads and<br />stores", and maybe that was meant to imply that "load overlaps with<br />load" case, but it really reads like load-vs-store, not load-vs-load.<br /><br />But the patch looks fine, though I agree that the ordering in<br />__wait_on_buffer should probably be moved into<br />wait_on_bit/wait_on_bit_io.<br /><br />And would we perhaps want the bitops to have the different ordering<br />versions? Like "set_bit_release()" and "test_bit_acquire()"? That<br />would seem to be (a) cleaner and (b) possibly generate better code for<br />architectures where that makes a difference?<br /><br />               Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
