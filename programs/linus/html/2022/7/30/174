    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/29/540">First message in thread</a></li><li><a href="/lkml/2022/7/29/540">"Jason A. Donenfeld"</a><ul><li><a href="/lkml/2022/7/29/833">Florian Weimer</a><ul><li><a href="/lkml/2022/7/29/889">"Jason A. Donenfeld"</a></li></ul></li><li class="origin"><a href="/lkml/2022/7/30/268">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/30/268">"Jason A. Donenfeld"</a><ul><li><a href="/lkml/2022/7/30/271">"Jason A. Donenfeld"</a><ul><li><a href="/lkml/2022/7/30/273">"Jason A. Donenfeld"</a></li></ul></li><li><a href="/lkml/2022/8/1/1078">Thomas Gleixner</a><ul><li><a href="/lkml/2022/8/1/1279">"Jason A. Donenfeld"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Jul 2022 08:48:42 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH RFC v1] random: implement getrandom() in vDSO</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Jul 29, 2022 at 3:32 PM Jason A. Donenfeld &lt;Jason&#64;zx2c4.com&gt; wrote:<br />&gt;<br />&gt; Two statements:<br />&gt;<br />&gt;   1) Userspace wants faster cryptographically secure numbers of<br />&gt;      arbitrary size, big or small.<br />&gt;<br />&gt;   2) Userspace is currently unable to safely roll its own RNG with the<br />&gt;      same security profile as getrandom().<br /><br />So I'm really not convinced that this kind of thing is something the<br />kernel should work that hard to help.<br /><br />And that state allocation in particular looks very random in all the<br />wrong ways, with various "if I run out of resources I'll just do a<br />system call" things.<br /><br />Which just makes me go "just do the system call".<br /><br />People who are _that_ sensitive to performance can't use this anyway,<br />unless they know the exact rules of "ok, I only need X state buffers"<br />(ok, the buckets are probably the more real "sometimes it might fail"<br />thing). So they basically need to know about the implementation<br />details - even if it's only about that kind of "only a limited number<br />of states" thing.<br /><br />Not to mention that I don't think your patch can work anyway, with<br />things like "cmpxchg()" not being something you can do in the vdso<br />because it might have the kernel instrumentation in it.<br /><br />So this all smells really fragile to me, and honestly, unlike the vdso<br />things we _do_ have, I don't think I've ever seen getrandom() be a<br />huge deal performance-wise.<br /><br />It's just too specialized, and the people who care about performance<br />can - and do - do special things anyway.<br /><br />Your patch fundamentally seems to be about "make it easy to not have<br />to care, and still get high performance", but that's _such_ a small<br />use-case (the intersection between "don't care" and "really really<br />need high performance" would seem to be basically NIL).<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
