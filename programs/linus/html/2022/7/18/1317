    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/16/390">First message in thread</a></li><li><a href="/lkml/2022/7/18/1300">Thomas Gleixner</a><ul><li><a href="/lkml/2022/7/18/1307">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2022/7/18/1321">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/18/1321">Peter Zijlstra</a><ul><li><a href="/lkml/2022/7/18/1343">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2022/7/18/1334">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/18/1371">Joao Moreira</a></li><li><a href="/lkml/2022/7/19/195">David Laight</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Jul 2022 16:52:09 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 00/38] x86/retbleed: Call depth tracking mitigation</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Jul 18, 2022 at 4:42 PM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; You have the "real" marker before the function.<br />&gt;<br />&gt; But you also have the "false" marker that is part of the hash check<br />&gt; that is *inside* the function.<br />&gt;<br />&gt; The "real marker + 6" points to the function head itself, and so is ok<br />&gt; as a target (normal operation).<br /><br />Of course, one fix for that is to make the hash be only 24 bits, and<br />make the int3 byte part of the value you check, and not have the same<br />pattern in the checking code at all.<br /><br />Honestly, I think that would be a better model - yes, you lose 8 bits<br />of hash, but considering that apparently the current KCFI code<br />*guarantees* that the hash pattern will exist even outside the actual<br />target pattern, I think it's still a better model.<br /><br />I also happen to believe that the kCFI code should have entirely<br />different targets for direct jumps and for indirect jumps, but that's<br />a separate issue. Maybe it already does that?<br /><br />                 Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
