    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/16/390">First message in thread</a></li><li><a href="/lkml/2022/7/18/1254">Sami Tolvanen</a><ul><li><a href="/lkml/2022/7/18/1280">Thomas Gleixner</a><ul><li><a href="/lkml/2022/7/18/1289">Sami Tolvanen</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2022/7/18/1315">Peter Zijlstra</a><ul><li><a href="/lkml/2022/7/20/205">Thomas Gleixner</a></li><li><a href="/lkml/2022/7/20/755">Sami Tolvanen</a></li><li><a href="/lkml/2022/7/20/940">Sami Tolvanen</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Jul 2022 16:39:36 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 00/38] x86/retbleed: Call depth tracking mitigation</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Jul 18, 2022 at 3:59 PM Thomas Gleixner &lt;tglx&#64;linutronix.de&gt; wrote:<br />&gt;<br />&gt; That's bad. The function entry should be 16 byte aligned and as I just<br />&gt; learned for AMD the ideal alignment would be possibly 32 byte as that's<br />&gt; their I-fetch width.<br /><br />In general, the L1 cache line size is likely the only "ideal" alignment.<br /><br />Even if (I think) intel fetches just 16 bytes per cycle from the L1 I$<br />when decoding, being cacheline aligned still means that the L2-&gt;L1<br />transfer for the beginning of the function starts out better.<br /><br />But Intel's current optimization many actually end sup having special rules:<br /><br />   When executing code from the Decoded Icache, direct branches that<br />are mostly taken should have all their instruction bytes in a 64B<br />cache line and nearer the end of that cache line. Their targets should<br />be at or near the beginning of a 64B cache line.<br /><br />   When executing code from the legacy decode pipeline, direct<br />branches that are mostly taken should have all their instruction bytes<br />in a 16B aligned chunk of memory and nearer the end of that 16B<br />aligned chunk. Their targets should be at or near the beginning of a<br />16B aligned chunk of memory.<br /><br />So note how the branch itself should be at the end of the chunk, but<br />the branch _target_ should be at the beginning of the chunk. And the<br />chunk size is 16 bytes for decoding new instructions, and 64 bytes for<br />predecoded.<br /><br />I suspect that for the kernel, and for the beginning of the function<br />(ie the target case), the 16-byte thing is still the main thing.<br />Because the L0 I$ ("uop cache", "Decoded Icache", whatever you want to<br />call it) is probably too small for a lot of kernel loads where user<br />space has flushed things in between system calls or faults.<br /><br />Older versions of the intel code just said "All branch targets should<br />be 16-byte aligned".<br /><br />So I think 16 bytes for function alignment ends up being what we<br />generally want, but yes, it's slowly changing. AMD fetches 32-byte<br />chunks, and Intel has that 64-bit predecode thing.<br /><br />           Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
