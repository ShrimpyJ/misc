    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/4/1007">First message in thread</a></li><li><a href="/lkml/2022/7/18/556">=?utf-8?Q?Christian_Kohlsch=C3=BCtter?=</a><ul><li><a href="/lkml/2022/7/18/585">Miklos Szeredi</a><ul><li><a href="/lkml/2022/7/18/725">=?utf-8?Q?Christian_Kohlsch=C3=BCtter?=</a><ul><li><a href="/lkml/2022/7/18/776">Antonio SJ Musumeci</a></li><li><a href="/lkml/2022/7/18/921">Miklos Szeredi</a></li></ul></li><li class="origin"><a href="/lkml/2022/7/18/1024">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/18/1024">=?utf-8?Q?Christian_Kohlsch=C3=BCtter?=</a><ul><li><a href="/lkml/2022/7/18/1037">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Jul 2022 11:29:43 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] [REGRESSION] ovl: Handle ENOSYS when fileattr support is missing in lower/upper fs</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Jul 18, 2022 at 6:13 AM Miklos Szeredi &lt;miklos&#64;szeredi.hu&gt; wrote:<br />&gt;<br />&gt; Correct.  The question is whether any application would break in this<br />&gt; case.  I think not, but you are free to prove otherwise.<br /><br />Most often, an error is "just an error", and most applications usually<br />won't care.<br /><br />There are exceptions: some errors are very much "do something special"<br />(eg EAGAIN or EINTR _are_ often separately tested for and often mean<br />"just retry"). And permission error handling is often different from<br />EINVAL etc.<br /><br />And ENOSYS can easily be such an error - people probing whether they<br />are running on a new kernel that supports a new system call or not.<br /><br />And yeah, some of our ioctl's are odd, and we have a lot of drivers<br />(and driver infrastructure) that basically does "this device does not<br />support this ioctl, so return ENOSYS".<br /><br />I don't think that's the right thing to do, but I think it's<br />understandable. The traditional error for "this device does not<br />support this ioctl" is ENOTTY, which sounds so crazy to non-tty people<br />that I understand why people have used ENOSYS instead.<br /><br />It's sad that it's called "ENOTTY" and some (at least historical)<br />strerror() implementations will indeed return "Not a tty". Never mind<br />that modern ones will say "inappropriate ioctl for device" - even when<br />the string has been updated, the error number isn't called<br />EINAPPROPRAITEDEVICE.<br /><br />But it is what it is, and so I think ENOTTY is understandably not used<br />in many situations just because it's such a senseless historical name.<br /><br />And so if people don't use ENOSYS, they use EINVAL.<br /><br />I *suspect* no application cares: partly because ioctl error numbers<br />are so random anyway, but also very much if this is a "without<br />overlayfs it does X, with overlayfs it does Y".<br /><br />The sanest thing to do is likely to make ovl match what a non-ovl<br />setup would do in the same situation (_either_ of the overlaid<br />filesystems - there might be multiple cases).<br /><br />But I'm missing the original report. It sounds like there was a<br />regression and we already have a case of "changing the error number<br />broke something". If so, that regression should be fixed.<br /><br />In general, I'm perfectly happy with people fixing error numbers and<br />changing them.<br /><br />The only thing I require is that if those cleanups and fixes are<br />reported to break something, people quickly revert (and preferably add<br />a big comment about "Use *this* error number, because while this<br />*other* error number would make sense, application XyZ expects AbC"..)<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
