    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/7/16/390">First message in thread</a></li><li><a href="/lkml/2022/7/18/1065">Thomas Gleixner</a><ul><li><a href="/lkml/2022/7/18/1066">Thomas Gleixner</a><ul><li class="origin"><a href="/lkml/2022/7/18/1129">Linus Torvalds</a><ul><li><a href="/lkml/2022/7/18/1129">Thomas Gleixner</a><ul><li><a href="/lkml/2022/7/18/1164">Linus Torvalds</a></li><li><a href="/lkml/2022/7/18/1172">Peter Zijlstra</a></li><li><a href="/lkml/2022/7/22/1016">Tim Chen</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Jul 2022 12:51:19 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 00/38] x86/retbleed: Call depth tracking mitigation</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Jul 18, 2022 at 12:30 PM Thomas Gleixner &lt;tglx&#64;linutronix.de&gt; wrote:<br />&gt;<br />&gt; Let the compiler add a 16 byte padding in front of each function entry<br />&gt; point and put the call depth accounting there. That avoids calling out<br />&gt; into the module area and reduces ITLB pressure.<br /><br />Ooh.<br /><br />I actually like this a lot better.<br /><br />Could we just say "use this instead if you have SKL and care about the issue?"<br /><br />I don't hate your module thunk trick, but this does seem *so* much<br />simpler, and if it performs better anyway, it really does seem like<br />the better approach.<br /><br />And people and distros who care would have an easy time adding that<br />simple compiler patch instead.<br /><br />I do think that for generality, the "-mforce-function-padding" option<br />should perhaps take as an argument how much padding (and how much<br />alignment) to force:<br /><br />    -mforce-function-padding=5:16<br /><br />would force 5 bytes of minimum padding, and align functions to 16<br />bytes. It should be easy to generate (no more complexity than your<br />current one) by just making the output do<br /><br />        .skip 5,0xcc<br />        .palign 4,0xcc<br /><br />and now you can specify that you only need X bytes of padding, for example.<br /><br />                        Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
