    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/8/18/316">First message in thread</a></li><li><a href="/lkml/2022/8/18/316">Jens Wiklander</a><ul><li><a href="/lkml/2022/8/18/385">Sumit Garg</a><ul><li><a href="/lkml/2022/8/18/421">Jens Wiklander</a><ul><li><a href="/lkml/2022/8/18/462">Sumit Garg</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2022/8/19/72">Linus Torvalds</a><ul><li><a href="/lkml/2022/8/19/72">Jens Wiklander</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 18 Aug 2022 09:38:14 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2] tee: add overflow check in register_shm_helper()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 18, 2022 at 4:09 AM Jens Wiklander<br />&lt;jens.wiklander&#64;linaro.org&gt; wrote:<br />&gt;<br />&gt; Fix this by adding an overflow check when calculating the end of the<br />&gt; memory range. Also add an explicit call to access_ok() in<br />&gt; tee_shm_register_user_buf() to catch an invalid user space address<br />&gt; early.<br /><br />I applied the access_ok() part of this which was clearly missing.<br /><br />The check_add_overflow() should be pointless with that.<br /><br />And the "roundup() overflows" check should just check for a zero<br />result - if it is actually needed. Which I don't think it is on any<br />relevant platform (the TEE subsystem only works on arm and x86).<br /><br />I do think it might be worth discussing whether<br />ALTERNATE_USER_ADDRESS_SPACE (and no-MMU) architectures should still<br />have access_ok() check that it doesn't actually wrap around in the<br />address space, so I've added linux-arch here.<br /><br />That's m68k, PA-RISC, S390 and sparc.<br /><br />In fact, I wonder if some or all of those might want to have the<br />TASK_SIZE limit anyway - they may have a separate user address space,<br />but several ones have some limits even then, and probably should have<br />access_ok() check them rather than depend on the hardware then giving<br />page fault.<br /><br />For example, sparc32 has a user address space, but defines TASK_SIZE<br />to 0xF0000000. m68k has several different case. parisc also has an<br />actual limit.<br /><br />And s390 uses<br /><br />    #define TASK_SIZE_MAX         (-PAGE_SIZE)<br /><br />which is a good value and leaves a guard page at the top.<br /><br />So I think the "roundup overflows" would probably be best fixed by<br />just admitting that every architecture in practice has a TASK_SIZE_MAX<br />anyway, and we should just make access_ok() check it.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
