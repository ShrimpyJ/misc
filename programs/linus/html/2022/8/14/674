    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/8/11/556">First message in thread</a></li><li><a href="/lkml/2022/8/14/660">Al Viro</a><ul><li><a href="/lkml/2022/8/14/671">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2022/8/14/685">Linus Torvalds</a><ul><li><a href="/lkml/2022/8/14/685">Nick Desaulniers</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 14 Aug 2022 13:29:28 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] Ceph updates for 5.20-rc1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Aug 14, 2022 at 1:03 PM Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Gcc does well regardless, and clang ends up really wanting to move so<br />&gt; much out of the dentry_cmp() loop that it runs out of registers and<br />&gt; always ends up doing a couple of spills.<br />&gt;<br />&gt; I think it reduced the spills by one, but not enough to generate the<br />&gt; nice non-frame code that gcc does.<br /><br />Note that that code was basically written to make gcc happy, so the<br />fact that clang then does worse is not hugely surprising.<br /><br />I dug into it some more, and it is really "load_unaligned_zeropad()"<br />that makes clang really uncomfortable.<br /><br />The problem ends up being that clang sees that it's inside that inner<br />loop, and tries very hard to optimize the shift-and-mask that happens<br />if the exception happens.<br /><br />The fact that the exception *never* happens unless DEBUG_PAGEALLOC is<br />enabled - and very very seldom even then - is not something we can<br />really explain to clang.<br /><br />So it thinks that code is really hot in the inner loop, and does all<br />kinds of silly things due to that.<br /><br />Gcc, in contrast, generates the obvious straightforward code, and<br />that's what I wrote and optimized that code for.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
