    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/8/15/860">First message in thread</a></li><li><a href="/lkml/2022/8/16/454">Linus Torvalds</a><ul><li><a href="/lkml/2022/8/16/469">Hector Martin</a><ul><li class="origin"><a href="/lkml/2022/8/16/475">Linus Torvalds</a><ul><li><a href="/lkml/2022/8/16/475">Hector Martin</a><ul><li><a href="/lkml/2022/8/16/600">Herbert Xu</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2022/8/16/530">Herbert Xu</a><ul><li><a href="/lkml/2022/8/16/500">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2022/8/16/1139">Will Deacon</a><ul><li><a href="/lkml/2022/8/16/1196">Boqun Feng</a><ul><li><a href="/lkml/2022/8/16/1329">Boqun Feng</a></li><li><a href="/lkml/2022/8/16/1342">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2022/8/16/1325">Linus Torvalds</a><ul><li><a href="/lkml/2022/8/17/21">Herbert Xu</a></li></ul></li><li><a href="/lkml/2022/8/16/1344">Tejun Heo</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Aug 2022 22:52:49 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] workqueue: Fix memory ordering race in queue_work*()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 15, 2022 at 10:36 PM Hector Martin &lt;marcan&#64;marcan.st&gt; wrote:<br />&gt;<br />&gt; These ops are documented in Documentation/atomic_bitops.txt as being<br />&gt; unordered in the failure ("bit was already set" case), and that matches<br />&gt; the generic implementation (which arm64 uses).<br /><br />Yeah, that documentation is pure garbage. We need to fix it.<br /><br />I think that "unordered on failure" was added at the same time that<br />the generic implementation was rewritten.<br /><br />IOW, the documentation was changed to match that broken<br />implementation, but it's clearly completely broken.<br /><br />I think I understand *why* it's broken - it looks like a "harmless"<br />optimization. After all, if the bitop doesn't do anything, there's<br />nothing to order it with.<br /><br />It makes a certain amount of sense - as long as you don't think about<br />it too hard.<br /><br />The reason it is completely and utterly broken is that it's not<br />actually just "the bitop doesn't do anything". Even when it doesn't<br />change the bit value, just the ordering of the read of the old bit<br />value can be meaningful, exactly for that case of "I added more work<br />to the queue, I need to set the bit to tell the consumers, and if I'm<br />the first person to set the bit I may need to wake the consumer up".<br /><br /><br />&gt; On the other hand, Twitter just pointed out that contradicting<br />&gt; documentation exists (I believe this was the source of the third party<br />&gt; doc I found that claimed it's always a barrier):<br /><br />It's not just that other documentation exists - it's literally that<br />the unordered semantics don't even make sense, and don't match reality<br />and history.<br /><br />And nobody thought about it or caught it at the time.<br /><br />The Xen people seem to have noticed at some point, and tried to<br />introduce a "sync_set_set()"<br /><br />&gt; So either one doc and the implementation are wrong, or the other doc is<br />&gt; wrong.<br /><br />That doc and the generic implementation is clearly wrong.<br /><br />              Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
