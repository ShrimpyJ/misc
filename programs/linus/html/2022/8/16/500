    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2022/8/15/860">First message in thread</a></li><li><a href="/lkml/2022/8/16/454">Linus Torvalds</a><ul><li><a href="/lkml/2022/8/16/469">Hector Martin</a><ul><li><a href="/lkml/2022/8/16/525">Linus Torvalds</a><ul><li><a href="/lkml/2022/8/16/475">Hector Martin</a><ul><li><a href="/lkml/2022/8/16/600">Herbert Xu</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2022/8/16/530">Herbert Xu</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2022/8/16/1139">Will Deacon</a><ul><li><a href="/lkml/2022/8/16/1196">Boqun Feng</a><ul><li><a href="/lkml/2022/8/16/1329">Boqun Feng</a></li><li><a href="/lkml/2022/8/16/1342">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2022/8/16/1325">Linus Torvalds</a><ul><li><a href="/lkml/2022/8/17/21">Herbert Xu</a></li></ul></li><li><a href="/lkml/2022/8/16/1344">Tejun Heo</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Aug 2022 23:03:45 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] workqueue: Fix memory ordering race in queue_work*()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 15, 2022 at 10:49 PM Herbert Xu &lt;herbert&#64;gondor.apana.org.au&gt; wrote:<br />&gt;<br />&gt; I think this is the source of all this: [ commit 61e02392d3c7 ]<br /><br />Yes, that doc update seems to actually predate the broken code.<br /><br />But you can actually see how that commit clearly was only meant to<br />change the "test_and_set_bit_lock()" case. IOW, in that commit, the<br />test_and_set_bit() comments clearly say<br /><br /> * test_and_set_bit - Set a bit and return its old value<br /> * This operation is atomic and cannot be reordered.<br /> * It may be reordered on other architectures than x86.<br /> * It also implies a memory barrier.<br /><br />(that "It may be reordered on other architectures than x86" does show<br />clear confusion, since it also says "It also implies a memory<br />barrier")<br /><br />And the very commit that adds that<br /><br />  - RMW operations that are conditional are unordered on FAILURE,<br /><br />language then updates the comment only above test_and_set_bit_lock().<br /><br />And yes, on failure to lock, ordering doesn't matter. You didn't get<br />the bit lock, there is no ordering for you.<br /><br />But then I think that mistake in the documentation (the relaxed<br />semantics was only for the "lock" version of the bitops, not for the<br />rest ot it) then later led to the mistake in the code.<br /><br />End result: test_and_set_bit_lock() does indeed only imply an ordering<br />if it got the lock (ie it was successful).<br /><br />But test_and_set_bit() itself is always "succesful". If the bit was<br />already set, that's not any indication of any "failure". It's just an<br />indication that it was set. Nothing more, nothing less, and the memory<br />barrier is still required regardless.<br /><br />             Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
