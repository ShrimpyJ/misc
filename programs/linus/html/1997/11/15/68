    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/11/15/68">First message in thread</a></li><li class="origin"><a href="/lkml/1997/11/16/6">Linus Torvalds</a><ul><li><a href="/lkml/1997/11/16/6">(Rogier Wolff)</a></li><li><a href="/lkml/1997/11/17/46">Ingo Molnar</a><ul><li><a href="/lkml/1997/11/17/59">Hans Lermen</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 15 Nov 1997 11:55:54 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: More on the pentium workaround - the gotchas</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 15 Nov 1997, Alan Cox wrote:<br />&gt; &gt; From: "Charles M. Hannum" &lt;mycroft&#64;MIT.EDU&gt;<br />&gt; &gt; Subject:      BSDI patch for Pentium workaround has problems<br />&gt; &gt; <br />&gt; &gt; [I sent the body of this to people at BSDI and Intel after looking at<br />&gt; &gt; the official release version of the BSDI patch.]<br />&gt; &gt; <br />&gt; &gt; In addition to the concerns I posted on bugtraq regarding handling of<br />&gt; &gt; INTO and BOUND instructions, and the (albeit minor) differences in<br />&gt; &gt; handling INT $0, INT $1, INT $2, and INT $6 from user code, the new<br />&gt; &gt; revision of the BSDI patch fails in two additional ways:<br />&gt; &gt; <br />&gt; &gt; It directly accesses a linear address in user space using the kernel<br />&gt; &gt; segment descriptors, ignoring that the process may be in VM86 mode or<br />&gt; &gt; 16-bit protected mode.  (You might be able to ignore protected mode if<br />&gt; &gt; you don't allow the user to create segment descriptors.  We do to<br />&gt; &gt; support WINE and WABI.)  Not only will it therefore get the PC (%eip)<br />&gt; &gt; fixup wrong in these modes, but it may also cause an unhandled page<br />&gt; &gt; fault in kernel space, which will cause the kernel to crash.  This is<br />&gt; &gt; highly suboptimal.<br /><br />This is the Intel patch - I sent it out to the kernel list with comments<br />about some of the short-comings of the patch. Charles is right about the<br />problems, although they don't actually apply to the current Linux version<br />of the patch. They _do_ apply to the intel one, exactly because the intel<br />one tries to be more clever, and fails in subtle ways. <br /><br />&gt; &gt; If you're going to look at the user instruction (which you *need* to<br />&gt; &gt; do to properly handle BOUND), then you must do the segment<br />&gt; &gt; translations correctly.  Note that there's a race condition here in<br />&gt; &gt; SMP systems, but in practice this is minor; if the user changes the<br />&gt; &gt; instruction while we're doing the fixup, the fixup will do something<br />&gt; &gt; not quite right, but should not create a security hole.<br /><br />The "bound" instruction is pretty much uninteresting - I don't think<br />anybody really uses it. I tend to think that it is MUCH worse to try to be<br />overly clever than to be simple and get the thing working for all normal<br />cases. That's why I actually like the "stupid" patch by Hans Lermen that<br />just increments eip by one for the "int3" case, because while that patch<br />is conceptually "wrong", it actually never gets things _really_ messed up<br />like the clever patches can.<br /><br />&gt; &gt; I include below three pieces of mail from me about this on bugtraq.<br />&gt; &gt; (Note that my suggested way of reexecuting the instruction actually<br />&gt; &gt; can't work correctly in a SMP system, but I include it here for<br />&gt; &gt; completeness.  Basically, the user could change the instruction before<br />&gt; &gt; it's reexecuted to be something that doesn't trap, then do a bunch of<br />&gt; &gt; things to cause the cache to be completely flushed, and do the hanging<br />&gt; &gt; instruction again while we're still pointing to the fully mapped IDT,<br />&gt; &gt; causing the hang.  We could try to work around this using the trace<br />&gt; &gt; flag to force an exception, but in protected mode the user can change<br />&gt; &gt; the trace flag.)<br /><br />Note that you don't even need to use SMP to have problems: you can use<br />self-modifying code on a UP Pentium. Something like this is likely to<br />cause _major_ problems if the BSDi patches really do re-map the IDT (I<br />also thought that it might be a good idea to re-map the IDT to make the<br />CPU itself to the right thing, but I'm now of the opinion that trying to<br />do that is just stupid). <br /><br />		movl $0xf00fc7c8,1f<br />	1:	int3<br /><br />which will take the int3 trap (because it has been pre-fetched), but then<br />if the page fault handler notices that it was an int3 trap and switches<br />back to the original IDT and re-executes it it will now hang the machine. <br />Oops. <br /><br />The more I think about this, the more I start to believe that Hans Lermens<br />patch is the best one after all. It's too simple-minded to get all cases<br />correct, but it never does anything really bad (it essentially only breaks<br />on code that is bad in the first place). <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
