    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/11/15/92">First message in thread</a></li><li><a href="/lkml/1997/11/15/92">"Christian Groessler"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 15 Nov 1997 23:00:27 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: More on the pentium workaround - the gotchas</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 16 Nov 1997, Christian Groessler wrote:<br />&gt;<br />&gt; &gt;CPU itself to the right thing, but I'm now of the opinion that trying to<br />&gt; &gt;do that is just stupid).<br />&gt; &gt;<br />&gt; &gt;movl $0xf00fc7c8,1f<br />&gt; &gt;1:  int3<br />&gt; &gt;<br />&gt; &gt;which will take the int3 trap (because it has been pre-fetched), but then<br />&gt; if the page fault handler notices that it was an<br />&gt; <br />&gt; Writing to the prefetch queue will flush it on Pentiums or better.<br />&gt; The move 486-&gt;Pentium broke my old DOS routines which tried to detect<br />&gt; whether they are run single-stepped :-(<br /><br />Read the fine print. I agree that my code-snipped above doesn't really<br />work, but the basic idea _does_ work.<br /><br />Intel will not actually flush the pre-fetch queue on writes to a<br />prefetched location. Intel will flush the pre-fetch queue on writes to the<br />same _linear_address_ as the prefetched location, which is not the same<br />thing at all. It is very easy indeed to overcome: you just map the same<br />physical page at two different addresses, and you modify it at another<br />address than the one you execute from.<br /><br />Boom.<br /><br />This is something that can be used to fool any scheme that is based on<br />disassembling the instruction that caused the trap. <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
