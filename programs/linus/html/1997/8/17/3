    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/8/16/33">First message in thread</a></li><li><a href="/lkml/1997/8/16/52">Linus Torvalds</a><ul><li><a href="/lkml/1997/8/17/1">Andi Kleen</a><ul><li class="origin"><a href="/lkml/1997/8/17/7">Linus Torvalds</a><ul><li><a href="/lkml/1997/8/17/7">"David S. Miller"</a><ul><li><a href="/lkml/1997/8/17/4">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1997/8/17/8">Edward Welbon</a><ul><li><a href="/lkml/1997/8/17/18">Edward Welbon</a></li><li><a href="/lkml/1997/8/17/66">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/1997/8/17/25">"Andrew E. Mileski"</a></li></ul></li><li><a href="/lkml/1997/8/17/48">Craig Schlenter</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 16 Aug 1997 22:31:24 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.1.50 VFS: Busy inodes after unmount. Self-destruct in 5 seconds.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On 17 Aug 1997, Andi Kleen wrote:<br />&gt; <br />&gt; And when I stressed the dcache a little bit (I started a gcc compilation<br />&gt; and continued my interactive work) the system quickly managed to corrupt<br />&gt; a commonly accessed dcache entry: everytime a program tried to access <br />&gt; or open it it crashed with a kernel null pointer reference in do_follow_link().<br /><br />This isn't actually a NULL pointer dereference despite what the oops says: <br />it actually dereferences a pointer that is -1 (0xffffffff), but there's a<br />structure offset of 0x50 that makes it wrap around and look like it<br />dereferences a NULL pointer. <br /><br />I've seen this bug reported by two or three people now, and I can't for<br />teh life of me see how it could happen: the "inode" pointer in the dentry<br />is totally corrupted (0xffffffff is definitely a bad inode pointer).<br /><br />Could people who see the 0x4f "NULL pointer dereference" please tell me<br />what filesystems they have compiled in, and try to find if there is<br />something that brings on the problem. Also, I'd suggest trying the pre-51<br />patch from ftp.kernel.org, as it does fix a few known problems.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
