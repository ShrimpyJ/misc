    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/8/21/8">First message in thread</a></li><li><a href="/lkml/1997/8/22/24">Linus Torvalds</a><ul><li><a href="/lkml/1997/8/22/35">Bill Hawes</a><ul><li class="origin"><a href="/lkml/1997/8/22/65">Linus Torvalds</a><ul><li><a href="/lkml/1997/8/22/65">Claus-Justus Heine</a></li><li><a href="/lkml/1997/8/23/42">Claus-Justus Heine</a><ul><li><a href="/lkml/1997/8/23/49">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/1997/8/22/67">Claus-Justus Heine</a></li></ul></li><li><a href="/lkml/1997/8/22/64">Claus-Justus Heine</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 22 Aug 1997 10:27:03 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: attempt to re-implement sillyrename for NFS in 2.1.*</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 22 Aug 1997, Bill Hawes wrote:<br />&gt; <br />&gt; I thought silly rename was generally used only to support temp files<br />&gt; with nlink = 1.<br /><br />That's the usual case, but it really has to work for linked files too.<br /><br />&gt; If the sillyrename is handled at the dentry level, doesn't that also<br />&gt; imply that the state associated with the rename will also need to be<br />&gt; stored at the dentry?  If the inode has nlink &gt; 1, it might undergo<br />&gt; silly renames in other directories where it appears, and need separate<br />&gt; state for those.<br /><br />The whole silly-rename thing is a dentry-level operation, and doesn't<br />actually need to look at nlink at any point. The logic goes:<br /><br /> 'inode-&gt;i_op-&gt;unlink()':<br />  - look at "dentry-&gt;d_count": if it is &gt; 1 we need to sillyrename,<br />    because somebody has the file open still so we can't delete it<br />    at the server.<br />  - if dentry-&gt;d_count == 1, delete the file.<br /><br /> 'dentry-&gt;d_op-&gt;delete()':<br />  - look if we are silly-renamed (use "dentry-&gt;d_flag" for this, it's<br />    usable for filesystem specific things). If so, do the actual NFS<br />    server delete.<br /><br />So at no point is "i_nlink" implicated.<br /><br />Note that the silly-name can (and should) be shown in dentry-&gt;d_name (so<br />dentry-&gt;d_op-&gt;delete can just use the dentry name directly, and doesn't<br />necessarily even know about what the naming logic is). This allows silly<br />renaming to work even if the user has _moved_ the silly renamed file<br />(something that never worked with the old code - the silly rename stuff<br />just got terminally confused).<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
