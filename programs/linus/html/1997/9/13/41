    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/9/9/23">First message in thread</a></li><li><a href="/lkml/1997/9/12/13">Linus Torvalds</a><ul><li><a href="/lkml/1997/9/13/37">Manong Dibos</a><ul><li class="origin"><a href="/lkml/1997/9/13/50">Linus Torvalds</a><ul><li><a href="/lkml/1997/9/13/50">Manong Dibos</a></li><li><a href="/lkml/1997/9/13/117">Ricky Beam</a></li><li><a href="/lkml/1997/9/14/7">"Marty Leisner"</a></li><li><a href="/lkml/1997/9/16/82">Teunis Peters</a></li><li><a href="/lkml/1997/9/18/40">(Kai Henningsen)</a></li></ul></li></ul></li><li><a href="/lkml/1997/9/13/67">Richard Henderson</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 12 Sep 1997 12:45:30 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: patch for 2.1.55 pre-1 minix/sysv/affs</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 12 Sep 1997, Manong Dibos wrote:<br />&gt; <br />&gt; Perhaps if C had good exception handling throw(), try{}, catch(){}, all<br />&gt; this farting around with if()'s could be made a lot more streamlined...<br />&gt; Just throw an exception at the first hint of a deviation from the "norm".<br /><br />Sure. We'd also be about 500 times slower.<br /><br />Exception handling is _complex_. That translates into slow. <br /><br />There's nothing wrong with "goto"s, especially for handling "error" cases<br />(ie anything that throws us out of the normal flow of control). Using an<br />explicit goto is often clearer than trying to hide things behind "pretty" <br />constructs, and it's almost always a lot faster. <br /><br />The thing that gave "goto" a bad name was irrational computer scientists,<br />not any technical reason. The worst example of this is Pascal, also known<br />as "The Truly Bad Programming Language Of All Time".<br /><br />Wirth decided that goto's are bad, so they have to use this stupid<br />numbering scheme. Yes, of COURSE goto's are bad if they have these<br />irrational "numbers" attached to them that make no sense. But well<br />implemented goto constructs allow sane naming and thus much clearer code. <br /><br />Anybody weaned on Pascal hates goto's for a good reason, but that reason<br />is not the goto itself, but the stupidity of Pascal. (I'd like to say that<br />there are extensions of Pascal that are quite usable, and I just despite<br />the basic language itself, not things like TurboPascal). <br /><br />Actually, I suspect that what made goto's impopular among some computer<br />scientists was not the code itself, but the bad compilers of the day. They<br />just blamed it on "spagetti code". But take it from me: it's a damn lot<br />easier to create bad code by overusing "good" features like exceptions and<br />overloading than it is by using "goto". <br /><br />		Linus "Pascal and Ada considered harmful" Torvalds<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
