    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/9/24/15">First message in thread</a></li><li class="origin"><a href="/lkml/1997/9/24/29">(Linus Torvalds)</a><ul><li><a href="/lkml/1997/9/24/29">David Howells</a><ul><li><a href="/lkml/1997/9/24/84">Gerard Roudier</a></li></ul></li><li><a href="/lkml/1997/9/24/67">Ulrich Drepper</a><ul><li><a href="/lkml/1997/9/25/23">John Alvord</a><ul><li><a href="/lkml/1997/9/25/15">Ulrich Drepper</a><ul><li><a href="/lkml/1997/9/25/59">"Patrick St. Jean"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Style question: comparison between signed and unsigned?</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">24 Sep 1997 02:16:51 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;yv2wwk7etir.fsf&#64;i44d2.i-have-a-misconfigured-system-so-shoot-me&gt;,<br />Ulrich Drepper  &lt;drepper&#64;ipd.info.uni-karlsruhe.de&gt; wrote:<br />&gt;<br />&gt;And (I don't know who mentioned this)<br />&gt;<br />&gt;	int n = read (...);<br />&gt;<br />&gt;is of course plainly wrong.  `read` returns ssize_t.<br /><br />No Ulrich, YOU are wrong. read() may return ssize_t, but that has<br />absolutely no bearing on the problem. <br /><br />There is nothing at all wrong with <br /><br />	int n = read(...);<br /><br />within the context posted. The C language has well-defined integer<br />conversions, and let's look at the code a bit from the programmers point<br />of view:<br /><br /> - we know we have to use a signed value to be able to handle the -1<br />   case.<br /><br /> - we know we have to have to have enough bits for the return value, but<br />   as we're reading into some random buffer that we have defined, we<br />   _know_ int is going to be enough. <br /><br /> - 'int' is the normal type for some random integer.  It's essentially<br />   the default type. <br /><br />In short, 'int' is sufficient, simple, and correct.  Calling the above<br />code "wrong" is a lot more wrong than the code itself.  It's the<br />stickler approach - blaming perfectly good code on some technical detail<br />that doesn't have any real merit. <br /><br />And that's part of the whole problem: the compiler warning about<br />signedness is exactly as valid (or invalid, in my opinion) as the<br />compiler warning about the size of integer arguments. <br /><br />For example, take the following piece of code:<br /><br />	int i;<br />	char * buf;<br /><br />	while ((i = getchar()) != EOF) {<br />		*buf = i;<br />		buf++;	<br />	}<br /><br />Are you suggesting that the compiler warn about the fact that you assign<br />a "int" value into a "char"? You're losing information there - possibly<br />a LOT of information. Do you want people to add a cast here too?<br /><br />Sure, let's just add lots of casts to make the compiler think we know<br />what we're doing.  THAT makes sense.  Not. <br /><br />For the same reason it is completely correct to do<br /><br />	int n = read(...);<br /><br />AND for the same reason it is also completely correct to do<br /><br />	if (n == -1)<br />		return -1;<br /><br />	if (n &lt; sizeof(struct pkthdr))<br />		return SHORT_PACKET;<br />	...<br /><br />Essentially, if the compiler warns about correct code that you cannot<br />make clearer (and adding a cast does not make the code any better at<br />all), the compiler is bad.  The warning is a spurious warning.<br /><br />		Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
