    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/6/2/16">First message in thread</a></li><li><a href="/lkml/1997/6/2/23">Dietmar Braun</a><ul><li><a href="/lkml/1997/6/2/55">(Alan Cox)</a><ul><li><a href="/lkml/1997/6/2/58">"David S. Miller"</a></li><li class="origin"><a href="/lkml/1997/6/3/12">(Linus Torvalds)</a><ul><li><a href="/lkml/1997/6/3/12">(Alan Cox)</a><ul><li><a href="/lkml/1997/6/3/17">"David S. Miller"</a></li><li><a href="/lkml/1997/6/3/29">Andi Kleen</a></li><li><a href="/lkml/1997/6/3/33">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: kernel &gt; 2.1.36 &amp; nfs</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">3 Jun 1997 01:38:27 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;m0wYe4f-0005FnC&#64;lightning.swansea.linux.org.uk&gt;,<br />Alan Cox &lt;alan&#64;lxorguk.ukuu.org.uk&gt; wrote:<br />&gt;<br />&gt;The IP fragmentation code is fine. Its just waiting Linus or someone to<br />&gt;fix the memory allocator to reallocate or discard pages in patterns that<br />&gt;build page groups. The other alternative is to make vmalloc() type operations<br />&gt;interrupt safe - but that is even harder.<br />&gt;<br />&gt;So its not network layer, its lower - and when the lower layer is fixed<br />&gt;the networking will trundle happily along as will NFS<br /><br />Hmm..  This is both true and false.<br /><br />One problem for the kernel is that it doesn't do large memory<br />allocations very gracefully, and that is what Alan calls broken.  In<br />some sense it is broken, but on the other hand it is also a documented<br />feature: not doing the large memory allocations allows us to do other<br />things better. <br /><br />So yes, this _could_ be fixed by changing the memory allocation policy<br />of the kernel.  And we may want to do that for other reasons. <br /><br />However, it is equally correct to say that the current fragment handling<br />is broken too - it does an unnecessary packet re-assembly on receive. <br />This re-assembly simplifies some code, but it not only has a bad impact<br />on memory management, it also involves a "useless" copy operation. <br /><br />So the best solution would be to have the ability to handle fragmented<br />UDP packets on receive without reassembling them - that would get better<br />NFS performance due to getting rid of the copy, and it would also result<br />in better network buffer allocation. <br /><br />(We already do "fragment on-the-fly" when sending UDP packets, it's only<br />reciving that doesn't handle it very nicely.  Receiving is the harder of<br />the two, though, so it's understandable). <br /><br />		Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
