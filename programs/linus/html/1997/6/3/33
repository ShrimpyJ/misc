    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/6/2/16">First message in thread</a></li><li><a href="/lkml/1997/6/2/73">(Linus Torvalds)</a><ul><li><a href="/lkml/1997/6/3/12">(Alan Cox)</a><ul><li><a href="/lkml/1997/6/3/17">"David S. Miller"</a></li><li><a href="/lkml/1997/6/3/29">Andi Kleen</a><ul><li><a href="/lkml/1997/6/3/48">(Alan Cox)</a></li></ul></li><li class="origin"><a href="/lkml/1997/6/3/52">Linus Torvalds</a><ul><li><a href="/lkml/1997/6/3/52">(Alan Cox)</a><ul><li><a href="/lkml/1997/6/3/57">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1997/6/3/54">(Alan Cox)</a><ul><li><a href="/lkml/1997/6/3/56">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 3 Jun 1997 09:07:28 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: kernel &gt; 2.1.36 &amp; nfs</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 3 Jun 1997, Alan Cox wrote:<br />&gt; <br />&gt; &gt; This re-assembly simplifies some code, but it not only has a bad impact<br />&gt; &gt; on memory management, it also involves a "useless" copy operation. <br />&gt; <br />&gt; That "useless" operation is somewhat temporary - its only useless because<br />&gt; we dont reassemble and checksum in one pass. Also ATM already and HIPPI<br />&gt; very soon will be giving us 65280 byte frames that are not fragmented.<br /><br />The point is that the copy is _never_ needed - we'd be better off just<br />leaving the packets fragmented, and let the higher level protocols (tcp<br />and udp) take care of "reassembly" (ie copy them to user mode or to the<br />page cache and only _then_ do we make the DATA contiguous - never the<br />actual packet itself).<br /><br />&gt; What is really needed is something like<br />&gt; <br />&gt; <br />&gt; 	buffer=vreserve(65536);		/* Allocate 64K of address space */<br />&gt; <br />&gt; 	err=vfill(buffer, len, GFP_..);	/* Put pages in where needed */<br />&gt; 	if(err==-ENOMEM)		/* No pages */<br />&gt; <br />&gt; 	vfree(buffer)<br /><br />Nope. I do not believe that it is a good idea to use virtual memory for<br />stuff like this. SVR4 uses virtual memory for their page cache, and they<br />only gain complexity from it.<br /><br />Using virtual memory is also extremely fragile with SMP. And packet<br />reception is definitly a multi-CPU issue (one CPU takes the actual<br />interrupt and creates the packet, but it's very possible that the packet<br />will be used on another CPU). <br /><br />We don't handle SMP tlb's 100% correctly even for the _normal_ cases right<br />now - don't tell me it would be simple to fix the problems when you have<br />interrupt driven events that touch the TLB too. That's where I just say<br />"NO" (you can try to convince me, but you'll have a hard and rocky path<br />doing that). <br /><br />For large packets (not fragments) we'll have to look into something else,<br />and it's possible that we could have some kind of "fragment list" for it.<br />That wouldn't be too hard, if only the upper layers knew of the<br />possibility that the packet (not the header) would be in multiple parts.<br /><br />&gt; The big problem we hit is that we need to rewrite a pile of DMA driven network<br />&gt; drivers to do scatter gather or at least to spot problems in buffers they<br />&gt; intend to DMA. Generally speaking it will be fine - something like<br /><br />Hah. That's only _one_ of many problems with using virtual memory. Forget<br />the idea of virtual memory - you're just setting yourself up for more<br />problems than you really want.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
