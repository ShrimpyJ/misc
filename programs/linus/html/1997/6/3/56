    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/6/2/16">First message in thread</a></li><li><a href="/lkml/1997/6/3/33">Linus Torvalds</a><ul><li><a href="/lkml/1997/6/3/52">(Alan Cox)</a><ul><li><a href="/lkml/1997/6/3/57">Linus Torvalds</a><ul><li><a href="/lkml/1997/6/4/3">(Alan Cox)</a><ul><li><a href="/lkml/1997/6/4/29">Edward Welbon</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1997/6/3/54">(Alan Cox)</a><ul><li class="origin"><a href="/lkml/1997/6/3/60">Linus Torvalds</a><ul><li><a href="/lkml/1997/6/3/60">"David S. Miller"</a><ul><li><a href="/lkml/1997/6/3/62">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 3 Jun 1997 16:04:11 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: kernel &gt; 2.1.36 &amp; nfs</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 3 Jun 1997, Alan Cox wrote:<br />&gt; &gt; The point is that the copy is _never_ needed - we'd be better off just<br />&gt; &gt; leaving the packets fragmented, and let the higher level protocols (tcp<br />&gt; &gt; and udp) take care of "reassembly" (ie copy them to user mode or to the<br />&gt; &gt; page cache and only _then_ do we make the DATA contiguous - never the<br />&gt; &gt; actual packet itself).<br />&gt; <br />&gt; Second point. We can't make a 65280 byte HIPPI NFS UDP packet contiguous<br />&gt; without fixing the underlying page allocator (preferred) or doing vm games<br />&gt; as I suggested below.<br /><br />Large non-fragmented packets are a totally different problem, and there<br />are various ways to handle them. Almost _all_ the ways are 100% preferable<br />to stupid VM games. <br /><br />Just off the top of my head I'll give you two totally different approaches<br />which both work fine and avoid the VM games:<br /><br /> - simple approach:<br />	Have the driver have a internal buffer of say 10-20 full packets<br />	worth. If you are using HIPPI and expect to have good performance,<br />	you can easily spare one megabyte of RAM just for temporary<br />	network packets. <br /><br />	If the system cannot keep up and empty the (shortish) packet queue<br />	quickly enough we start dropping packets, but we have to do that<br />	at some point anyway.<br /><br /> - slightly more comple approach:<br />	Have the driver create &lt;4kB fragments and make a linked list of<br />	them. This is essentially the same as the VM approach, except we<br />	do it in software, which is going to be a lot simpler. We may<br />	require that the headers be completely in the first packet, but<br />	that isn't going to be much of a problem.<br /><br />The advantage of the slightly more complex approach is that if it is done<br />right we can essentially use the same linked list code for _real_<br />fragmented packets as for "pseudo-fragmented" packets that are just the<br />side effect of memory management. That way we could handle real fragments<br />without coalescing them at all (except for maybe coalescing the first few<br />really small fragments to make sure we have the headers intact). <br /><br />People who think that VM games are faster than a simple linked list need<br />to go out and do the math - it is infinitely more desirable to do the<br />memory management by hand both from a flexibility AND a speed standpoint. <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
