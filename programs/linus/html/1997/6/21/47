    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/6/19/31">First message in thread</a></li><li><a href="/lkml/1997/6/20/45">(Linus Torvalds)</a><ul><li><a href="/lkml/1997/6/21/16">Olaf Titz</a><ul><li class="origin"><a href="">(Linus Torvalds)</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: cli() / sti()</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">22 Jun 1997 00:26:44 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;19970621111600.16909.qmail&#64;bigred.inka.de&gt;,<br />Olaf Titz  &lt;olaf&#64;bigred.inka.de&gt; wrote:<br />&gt;&gt; _may_ become a per-device serialization in the future, but as a driver<br />&gt;&gt; writer you should more-or-less be able to depend on one particular<br />&gt;&gt; driver start_xmit() entrypoint always being serialized). <br /><br />[ Let me clarify this, as somebody already asked: I should say that in<br />  the future we may be doing per-DEVICE serialization, and probably not<br />  per-driver.  There is a difference: if the same driver handles<br />  multiple devices, some day that single driver may have to be<br />  re-entrant wrt any global data. On the other hand any global data is<br />  obviously bad - the driver should use per-device data structures<br />  anyway ]. <br /><br />&gt;Thanks. I'll code according to that. Btw., another driver with useless<br />&gt;internal serialization is new_tunnel.c (if that matters anything<br />&gt;except for a few cycles in cli mode).<br /><br />I think most of the drivers have the useless serialization code.  I<br />think I removed it only from the loopback driver because for the<br />loopback driver it actually makes a difference (for most other drivers<br />the hardware itself is the main bottle-neck, with the loopback driver<br />the serialization actually showed up on latency charts). <br /><br />If somebody wants to clean up drivers, fell free to do so and send me<br />patches (but don't do them all at once: send small patches that are<br />easier to verify for correctness).  There are other issues than just the<br />unnecessary serialization: some drivers still have vestiges of the time<br />when the normal interrupt primitives didn't support IRQ sharing, so the<br />drivers have cruft that do it on a per-driver basis. <br /><br />(I _think_ I got rid of all the "irq_to_dev[]" mappings, but maybe that<br />particular horridness still exists hidden in some corner too).<br /><br />		Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
