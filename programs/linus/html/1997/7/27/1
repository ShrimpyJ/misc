    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/7/25/20">First message in thread</a></li><li><a href="/lkml/1997/7/25/20">"Volker.Lendecke"</a><ul><li><a href="/lkml/1997/7/25/46">(Matthias Urlichs)</a><ul><li class="origin"><a href="">(Linus Torvalds)</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: d_path to be removed?</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">27 Jul 1997 04:52:32 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;5rai7g$735$1&#64;work.smurf.noris.de&gt;,<br />Matthias Urlichs &lt;smurf&#64;work.smurf.noris.de&gt; wrote:<br />&gt;  lendecke&#64;math.uni-goettingen.de writes:<br />&gt;&gt; <br />&gt;&gt; I was just frightened by the following comment in 2.1.47:<br />&gt;&gt; <br />&gt;&gt; + * This is broken in more ways than one. Unchecked recursion,<br />&gt;&gt; + * unchecked buffer size. Get rid of it.<br />&gt;&gt;  int d_path(struct dentry * entry, struct dentry * chroot, char * buf)<br />&gt;&gt; <br />&gt;&gt; My reimplementation of smbfs depends HEAVILY on this feature. d_path<br />&gt;&gt; could be implemented better, but I NEED the complete path.<br />&gt;&gt; <br />&gt;Linus has said that he regards the abillity to have a getpwd() system call<br />&gt;(or similar; we want to do that for files too ;-) a Good Thing, so I doubt<br />&gt;the feature is going to vanish.<br /><br />The feature will _not_ vanish.<br /><br />However, "d_path()" WILL go away, because it is such a horribly broken<br />function.  At the very least it will have to check for buffer size<br />issues, and never overflow a buffer.  It also has to be rewritten to not<br />be recursive. <br /><br />The most likely rewrite will involve <br /> - limiting the buffer size to one page, and giving only the end of the<br />   path if the path is longer.<br /> - starting to fill in the path from high addresses: this means that we<br />   don't have to be recursive.<br /><br />I suspect the code will look something like this:<br /><br />	/*<br />	 * "buflen" should be PAGE_SIZE or more.<br />	 */<br />	char * d_path(struct dentry *dentry, char *buffer, int buflen)<br />	{<br />		char * end = buffer+buflen;<br />		char * retval;<br />		struct dentry * root = current-&gt;fs-&gt;root;<br /><br />		*--end = '\0';<br />		buflen--;<br /><br />		/* Get '/' right */<br />		retval = end-1;<br />		*retval = '/';<br /><br />		for (;;) {<br />			struct dentry * parent;<br />			int namelen;<br /><br />			parent = dentry-&gt;d_covers-&gt;d_parent;<br />			if (dentry == root || dentry == parent)<br />				break;<br />			namelen = dentry-&gt;d_name.len;<br />			buflen -= namelen + 1;<br />			if (buflen &lt; 0)<br />				break;<br />			end -= namelen;<br />			memcpy(end, dentry-&gt;d_name.name, namelen);<br />			*--end = '/';<br />			retval = end;<br />		}<br />		return retval;<br />	}<br /><br />The above is what I currently have, but it's untested. Feel free to<br />test. The semantics are:<br /> - the caller has to allocate the buffer<br /> - d_path returns a pointer to inside the buffer, but probably not the<br />   start. <br /><br />Comments?<br /><br />		Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
