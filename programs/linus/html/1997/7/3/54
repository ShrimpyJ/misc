    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/7/3/31">First message in thread</a></li><li><a href="/lkml/1997/7/3/31">"Larry M. Augustin"</a><ul><li><a href="/lkml/1997/7/3/34">Tsurng-Chen Chern</a></li><li><a href="/lkml/1997/7/3/38">(Matthias Urlichs)</a><ul><li><a href="/lkml/1997/7/3/41">(Alan Cox)</a><ul><li><a href="/lkml/1997/7/3/47">"Matthias Urlichs"</a></li></ul></li><li><a href="/lkml/1997/7/6/13">Felix Schroeter</a></li></ul></li><li><a href="/lkml/1997/7/3/52">fb</a><ul><li class="origin"><a href="">(Linus Torvalds)</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: &gt; 1GB physical on x86: Summary so far</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">4 Jul 1997 03:30:16 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;33BC5B4D.B43233DD&#64;chibacity.com&gt;, fb  &lt;fb&#64;chibacity.com&gt; wrote:<br />&gt;hmm actually i thought i read somewhere that from i386 on a far 48-bit<br />&gt;pointer could be used to address more than 4 gigs of memory in a<br />&gt;segmented model<br /><br />Nope.<br /><br />The segmentation hardware still only translates addresses to 32-bit<br />"linear addresses", and as such you cannot use segments to address more<br />than 32-bits of address space. <br /><br />[ Minor nit: even if you could, it wouldn't actually be 48 bits but 45:<br />  the three low bits of the segment number are protection bits ]<br /><br />Some intel advocates point out that you can use the "present" bit of<br />segments to make it apprear as if you had the full 45 bits worth of<br />addressing space (using swapping of segments the same way you'd use the<br />present bit in the page table), but they conveniently forget the fact<br />that that is actually not very usable - nor even a very good analogy (*)<br /><br />So you should consider the x86 to be a purely 32-bit addressing mode<br />family, with some very strange details in some very strange places (the<br />segmentation is only one of the strange details: the "extended physical<br />address space" is another strange detail that intel added for the<br />supercomputer needs). <br /><br />		Linus<br /><br />(*) With paging, you _can_ mark all the pages present and get at the<br />full 32 bits at the same time if you have enough memory without having<br />aliases.  You cannot do the same with the 45-bit segmentation model. <br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
