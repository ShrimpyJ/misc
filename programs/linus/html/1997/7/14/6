    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/7/12/62">First message in thread</a></li><li><a href="/lkml/1997/7/13/8">"Michael L. Galbraith"</a><ul><li><a href="/lkml/1997/7/13/29">Bill Hawes</a><ul><li class="origin"><a href="/lkml/1997/7/13/54">Linus Torvalds</a><ul><li><a href="/lkml/1997/7/13/54">Bill Hawes</a><ul><li><a href="/lkml/1997/7/13/60">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 13 Jul 1997 11:48:11 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: pre-patch2.1.45-3 lookin' good</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 13 Jul 1997, Bill Hawes wrote:<br />&gt; <br />&gt; As far as I can tell, the attached patch against pre-patch2.1.45-3 fixes<br />&gt; the memory leak, mounts and umounts cleanly, and fixes all the bugs I've<br />&gt; been able to find.  I have a new approach to the clear_inode race<br />&gt; problems -- iput() sets a flag to indicate the inode is closing, and<br />&gt; find_inode makes anyone accessing that inode wait for the closing to<br />&gt; complete.  clear_inode() just sets a flag saying "clear me", and iput()<br />&gt; does the dirty work.<br /><br />I'm taking a different approach - get rid of using inodes for anything but<br />low-level fs operations, and use "dentry" everywhere else. That was a<br />long-range plan that got upgraded to short-term because it is also going<br />to make dentry management much simpler.<br /><br />Most of the current problems stem from the fact that right now the dentry<br />memory cannot always be free'd if d_count is zero - because the inode may<br />be in use.  My current setup gets rid of that (and i_count is now only a<br />counter of how many dentries count to it - hard links). <br /><br />Your patch looks sane, but becomes mostly irrelevant in my tree. Of<br />course, my current tree doesn't really compile yet ;)<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
