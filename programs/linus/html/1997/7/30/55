    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/7/29/68">First message in thread</a></li><li><a href="/lkml/1997/7/29/68">Harald Evensen</a><ul><li><a href="/lkml/1997/7/30/7">Martin von Loewis</a><ul><li><a href="/lkml/1997/7/30/13">Harald Evensen</a></li></ul></li><li><a href="/lkml/1997/7/30/56">Bill Hawes</a><ul><li class="origin"><a href="/lkml/1997/7/30/82">Linus Torvalds</a><ul><li><a href="/lkml/1997/7/30/82">Martin von Loewis</a><ul><li><a href="/lkml/1997/7/30/84">Bill Hawes</a></li><li><a href="/lkml/1997/7/30/86">Linus Torvalds</a></li><li><a href="/lkml/1997/7/31/18">Mike Jagdis</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 30 Jul 1997 11:02:47 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.1.47 oops (crash)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 30 Jul 1997, Bill Hawes wrote:<br />&gt;<br />&gt; Attached is a patch for fs/dcache.c that I think will guard against the<br />&gt; two oops reported recently.  It appears that if a dentry with no parent<br />&gt; is unused but still hashed, calling shrink_dcache will free the dentry<br />&gt; and then try to free the parent.<br />&gt; <br />&gt; If dentries aren't supposed to get into this state, maybe we can search<br />&gt; for one too many hash insertions.<br /><br />Dentries should always have a parent. Even when a dentry has to be<br />forgotten, we forget it by removing it from the hash chains but _not_<br />removing the parent (so a parent can actually have multiple child dentries<br />with the same name, but only one "active" dentry that you can reach<br />through the hashes). <br /><br />However, 2.1.47 does have a bug if you use autofs, in that the autofs<br />dentry revalidation will be called without increasing the dentry count. So<br />if you're revalidating a autofs dentry at the same time as the dcache is<br />shrunk, the dentry will be pulled out from under you, with random results. <br /><br />That's fixed in the current pre-patch-48 - but this is really only an<br />issue if you use autofs. Do the people who have seen crashes use autofs? <br />(autofs is very cool, and this wasn't really an autofs bug at all, but a<br />VFS bug that just happened to trigger in autofs). <br /><br />If autofs wasn't implicated, then we should indeed start looking for<br />something where the hashes do not match the parents..<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
