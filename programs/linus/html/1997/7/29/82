    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/7/28/43">First message in thread</a></li><li><a href="/lkml/1997/7/28/48">Linus Torvalds</a><ul><li><a href="/lkml/1997/7/28/58">(H. Peter Anvin)</a></li><li><a href="/lkml/1997/7/29/79">Alain Knaff</a><ul><li class="origin"><a href="/lkml/1997/7/30/3">Linus Torvalds</a><ul><li><a href="/lkml/1997/7/30/3">Alain Knaff</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 29 Jul 1997 16:38:28 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Msdos patch for aliased names</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 30 Jul 1997, Alain Knaff wrote:<br />&gt; <br />&gt;  In which way does it slow down the critical path?  Is it the<br />&gt; kmalloc() in msdos_canonize that you're worried about, or is it<br />&gt; something else?<br /><br />No, I'm not worried about what happens inside the call, I'm worried about<br />the testing whether we should do the call at all. And what I'm more<br />worried about is actually the fact that the call can change the dentry<br />outside the VFS layer - something I don't like from a conceptual<br />standpoint. <br /><br />I'd like _all_ name lookup logic to be in the VFS layer so that there<br />aren't any surprises. And I do see that people would prefer for the msdos<br />filesystem to be case-insensitive.. <br /><br />I certainly agree that my stupid "name_translate_char()" is by no means<br />very good, and as you correctly point out we should actually change the<br />character itself, not just the hash value. And we can't really do that in<br />the place I envisioned for it, because the buffer that the name is in can<br />be a symbolic link or similar, and we obviously shouldn't change that.. <br /><br />Hmm.. <br /><br />I'd like this al to be done in some sane place - and your patch works but<br />doesn't count as "sane" in my book. It looks like a hack (having people<br />malloc memory and exchange it for non-malloced stuff, having somebody<br />_else_ free it etc). The iso9660 filesystem used to do a lot of ugly stuff<br />like that for directory handling (happily cleaned up these days), and I<br />let things like that pass, but I don't like it when it's in the kernel<br />proper..<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
