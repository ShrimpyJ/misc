    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/7/13/17">First message in thread</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1305798" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 11 Jul 1997 22:24:22 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Patch to improve fs/ext2/truncate.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 12 Jul 1997, Theodore Y. Ts'o wrote:<br />&gt; <br />&gt;    The "ininode" boolean could probably be removed by just _not_ ever<br />&gt;    changing the block numbers in the inode to the CPU byte order: that way<br />&gt;    all block numbers (whether they are in the inode or in a indirect block)<br />&gt;    would always be in little-endian order. Then it wouldn't need any extra<br />&gt;    code at all..<br />&gt; <br />&gt; Agreed.  It would also mean that we don't needly byte swap block numbers<br />&gt; when the inode is only being read-in to satisfy a stat call.  It's<br />&gt; probably also worthwhile to not byte swap the other internal<br />&gt; ext2-specific inode fields (especially since a number of them aren't<br />&gt; currently being used anyway).<br /><br />Looking at the code, I found another amusing cause to _not_ do the byte<br />swap when reading in the inode: short symbolic links. Right now they are a<br />very strange special case indeed ;)<br /><br />Somebody? I agree with Ted that the person should probably have access to<br />both a big-endian and a little-endian machine to make sure it all works<br />correctly, but it actually looks fairly trivial (you can just grep for<br />i_data to see where the block numbers are being used). <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
