    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/12/30/25">First message in thread</a></li><li><a href="/lkml/1997/12/30/40">(Linus Torvalds)</a><ul><li><a href="/lkml/1997/12/30/95">linux kernel account</a></li><li><a href="/lkml/1997/12/31/7">Gordon Chaffee</a><ul><li class="origin"><a href="/lkml/1998/1/13/176">Linus Torvalds</a><ul><li><a href="/lkml/1998/1/13/176">Gordon Chaffee</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 31 Dec 1997 18:06:22 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: dcache questions</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 30 Dec 1997, Gordon Chaffee wrote:<br />&gt; <br />&gt;  &gt;  - make the filesystem-specific hashing and name comparing functions<br />&gt;  &gt;    compare the two names as equal - so that only one dentry exists for<br />&gt;  &gt;    both of them.  This is the "real" fix, but depending on how the name<br />&gt;  &gt;    mangling works it may not be all that easy. <br />&gt; <br />&gt; Name mangling is such that for any given long filename, you can end up<br />&gt; with a random alias.  In general, you don't, but you can't count on the<br />&gt; alias having anything to do with the long filename.<br /><br />Right ho...<br /><br />Anyway, I'm not totally opposed to supporting "dcache aliases" through<br />re-instating the dcache pointer (and circular list) in the inode. We used<br />to do that in the first few releases of the new dcache because the dache<br />had some major problems that required it - partly because the interface to<br />the low-level filesystems hadn't been cleaned up to know about the<br />dentries.<br /><br />I removed the inode-&gt;dentry backpointer because everything that used it<br />back then used it for the wrong reason, and removing it was the only way I<br />could think of to _force_ people to not mis-use the list. It turned out to<br />be a good judgement call, and the VFS layer and the low-level filesystems<br />are better for it: it forced us to make the VFS layer cleaner.<br /><br />HOWEVER, there have always been some nagging small things that have made<br />me suspect that we do want to have the inode-&gt;dentry mapping possibility<br />for certain uses. The problems with knfsd have made me 99% sure that we do<br />want to re-instate the mapping again (so that knfsd can use dcache aliases<br />internally), and the VFAT kind of horrid name aliases might be another<br />valid use of such a beast. <br /><br />Anyway, I just wanted to tell people that I didn't remove the<br />inode-&gt;dentry list because I disliked the concept, but because I disliked<br />the code that used it. So, Gordon, if you decide that it would help your<br />job enourmously, then I just wanted to let you know that I won't fight the<br />issue..<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
