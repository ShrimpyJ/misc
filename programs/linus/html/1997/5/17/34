    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/5/17/36">First message in thread</a></li><li><a href="/lkml/1997/5/17/36"> Andries.Brouwer&#64;cwi ...</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 May 1997 18:50:03 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: i386 memory corrupted by free_initmem()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 17 May 1997 Andries.Brouwer&#64;cwi.nl wrote:<br />&gt; <br />&gt;     Note that I'll probably use the "ALIGN(4096)" thing for other things too<br />&gt;     in the near future (getting rid of some of the data stuff in "head.S"),<br />&gt; <br />&gt; Well, if it is an important use, then probably you should find out<br />&gt; what version of ld is required, and let the Makefile test that ld<br />&gt; is sufficiently recent, like it already does for gcc.<br />&gt; On the other hand, if the only use is to save a few kB, then I hope<br />&gt; you will also consider the importance of stability.<br /><br />It's not actually going to save space, it's more for saving my sanity. <br />Right now the kernel has various things that require page-alignment for<br />one reason or another, and the old way was to have them all in head.S<br />because that was the only way to guarantee the alignment we wanted. <br /><br />With the new linker features (well, they aren't all that new any more, but<br />they are only now being used to heir full advantage) we can let the linker<br />give us the alignment we require, and have a special aligned segment. <br /><br />One of the main advantages of this is that much that had to be in assembly<br />can now be moved into a C file instead. I did some of this with some<br />trickery (look at how "init_task.c" is built up), but that had some other<br />misfortunate results (mainly that "init_task" is now in the code segment,<br />which makes it show up on stack traces as a function in panics ;)<br /><br />The fact that all tasks are now 8kB aligned (yes, that really is 8kb, not<br />4kB) on x86 allows us to do some strange and wonderful things. <br /><br />&gt; Stability not only means that the kernel doesn't crash - it also<br />&gt; means that one doesn't need to upgrade software every few months,<br />&gt; and that a Linux system is loosely coupled, in the sense that<br />&gt; all subsystems tolerate great variation in the version of other<br />&gt; subsystems.<br /><br />You're right. My main objective has to be to strive to maintain old<br />binaries for _running_ stuff - which is why a.out still works, and why you<br />can have binaries from 1992 still working.<br /><br />However, when it comes to the kernel development environment, I tend to<br />prefer to use features that make it easier for me to develop (or makes it<br />possible to do new and clever things - the switch to ELF format for the<br />kernel really allowed us to do some _really_ good things by using linkage<br />segments to). So as a kernel developer I don't want to be tied down to<br />older tools - even though I expect the new kernel to be able to _run_<br />those older tools. <br /><br />I certainly try to avoid requiring tools updates for frivolous reasons,<br />and I heartily agree on making clear which tools are bad and which aren't.<br />I'm currently using<br /><br />	gcc version 2.7.2.1.f.1<br />	ld version 2.7 (with BFD 2.7.0.2)<br /><br />in case people are wondering.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
