    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/5/4/25">First message in thread</a></li><li><a href="/lkml/1997/5/4/25">Thorsten Kukuk</a><ul><li class="origin"><a href="/lkml/1997/5/4/41">Linus Torvalds</a><ul><li><a href="/lkml/1997/5/4/41">Thorsten Kukuk</a><ul><li><a href="/lkml/1997/5/4/51">(Danny ter Haar)</a></li></ul></li></ul></li><li><a href="/lkml/1997/5/5/60">"Richard B. Johnson"</a><ul><li><a href="/lkml/1997/5/6/7">Wolfgang Wander</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 4 May 1997 09:14:57 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: NULL pointer dereference with pre 2.1.37-4</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 4 May 1997, Thorsten Kukuk wrote:<br />&gt; <br />&gt; With pre 2.1.37-3 and 2.1.37-4, I get the following Oops when <br />&gt; starting init:<br />&gt; <br />&gt; Unable to handle kernel NULL pointer dereference at virtual address 00000000<br />&gt; current-&gt;tss.cr3 = 00101000,%cr3=00101000<br />&gt; *pde=00000000<br />&gt; Oops: 0002<br />&gt; CPU: 0<br />&gt; EIP: 0010:[&lt;c01d8ef0&gt;]<br />&gt; EFLAGS: 00010247<br />&gt; eax: 00000000 ebx: 00004000 ecx: 00000000 edx: 00000001<br />&gt; esi: c0107f60 edi: c01da4f2 ebp: c0005fdc esp: c0005fac<br />&gt; ds: 0018 es: 0018 ss: 0018<br />&gt; Process swapper (pid:0, process nr:1, stackpage=c0097000)<br />&gt; Stack: 00001100 c0107f60 c01da4f2 00000001 c0107f60 00000001 00000000 00000005<br />&gt;        00000018 00000018 ffffffff c0108440 00000e00 c0108519 00001100 c02137b0<br />&gt;        00000000 c021380f 00000000 c02137a4 00000001<br />&gt; Call Trace:<br />&gt; Code: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00<br />&gt; <br />&gt; ksymoops:<br />&gt; Using `/src/Linux/linux-2.1/System.map' to map addresses to symbols.<br />&gt; <br />&gt; &gt;&gt;EIP: c01d8ef0 &lt;dst_access_fault+1a9/2c16&gt;<br />&gt; <br />&gt; Code: c01d8ef0 &lt;dst_access_fault+1a9/2c16&gt; <br /><br />This _looks_ like the linker hasn't done the right thing for the<br />".text.lock" segment, which should contain the out-of-line spinlock code,<br />but seems to contain just zeroes for you. So you get a fault the first<br />time there is any contention on any lock. <br /><br />How recent are your binutils? The new kernel compilation scheme definitely<br />requires more of the linker - we're doing some extremely clever stuff to<br />get some nice optimizations. <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
