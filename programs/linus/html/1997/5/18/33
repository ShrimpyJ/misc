    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/5/18/28">First message in thread</a></li><li><a href="/lkml/1997/5/18/28">(Victor Yodaiken)</a><ul><li><a href="/lkml/1997/5/18/29">"David S. Miller"</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 18 May 1997 17:02:32 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: SMP irq question</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 18 May 1997, Victor Yodaiken wrote:<br />&gt;<br />&gt; In the following code you ack _after_   clearing the tlb.<br />&gt;   A) Why? On all other interrupts  we ack first.<br /><br />All other interrupts tend to do some real work, and we want to ack as soon<br />as possible. In contrast, "smp_invalidate_interrupt()" only does about 5<br />instructions worth of work (ok, I guess it's closer to 10), so whether we<br />ACK before or after makes no difference.<br /><br />So no, there is no real reason for this. It doesn't really matter. <br /><br />&gt;   B) How  time critical is this event? On the one hand, I don't<br />&gt;     want to hang Linux on the other processors while theRT system<br />&gt;     runs, but on the other hand I don't want to pay the performance<br />&gt;     cost during a rt process .  <br /><br />It's not really time critical in whether it works or not, but this event<br />is pretty special: it's the _only_ "full synchronization" event in the SMP<br />code (apart from the bootup code). TLB flushes is the only case where all<br />CPU's wait for each other. <br /><br />I have been considering making the invalidate interrupt a NMI, because<br />that would simplify some of the other stuff. Look at the file<br />arch/i386/kernel/irq.c, and the "check_smp_invalidate()" stuff in<br />particular. If we made invalidation a NMI interrupt, the need for<br />"check_smp_invalidate()" would go away completely. <br /><br />&gt;   C) Am I correct in assuming that the critical material to flush,<br />&gt;      fter bootup, will be in user space. <br /><br />Most of the time, yes. That is the case you should optimize for, but you<br />cannot _assume_ it - there are kernel page tables that get updated too by<br />vmalloc() and friends. Those need to do cross-CPU invalidates as well (it<br />doesn't happen often, and you may or may not be able to special case<br />that).<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
