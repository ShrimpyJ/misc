    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/3/5/78">First message in thread</a></li><li><a href="/lkml/1997/3/5/78">Hannu Savolainen</a><ul><li class="origin"><a href="">(Linus Torvalds)</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Accessing memory mapped PCI device?</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">7 Mar 1997 18:25:08 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;Pine.LNX.3.95.970306001638.6439A-100000&#64;batman&gt;,<br />Hannu Savolainen  &lt;hannu&#64;voxware.pp.fi&gt; wrote:<br />&gt;<br />&gt;I have the following PCI device which has it's registers mapped to PCI<br />&gt;memory space. How do I access the device in a driver? Accessing a pointer<br />&gt;obtained using phys_to_virt(0xffae0000) causes a protection fault.<br />&gt;<br />&gt;  Bus  0, device  16, function  0:<br />&gt;    Multimedia controller: Unknown vendor Unknown device (rev 1).<br />&gt;      Vendor id=1057. Device id=1801.<br />&gt;      Medium devsel.  Fast back-to-back capable.  Master Capable.  Latency=32.  <br />&gt;      Non-prefetchable 32 bit memory at 0xffae0000.<br /><br />The way to handle these accesses is through the "ioremap()" function. <br />See linux/Documentation/IO-mapping.txt for full details on PCI memory<br />mapping. <br /><br />Notice that when you access PCI memory, you can _never_ just dereference<br />a pointer and expect to be at all portable. Generally you have something<br />like this:<br /><br />   dev_init():<br /><br />	/* get a cookie for a 1MB PCI area starting at 0xffae0000 */<br />	char * baseptr = ioremap(0xffae0000, 1024*1024);<br />	if (!baseptr) {<br />		printk("Unable to map PCI memory for XXXX\n");<br />		return -ENODEV;<br />	}<br />	device-&gt;baseptr = baseptr;<br /><br /><br />   using the device:<br /><br />	/* copy 200 bytes to "kernel_buffer" from the PCI area at offset 100 */<br />	memcpy_fromio(kernel_buffer, device-&gt;baseptr+100, 200);<br /><br />	/* Get a 4-byte value from the PCI area at offset 32 */<br />	signature = readl(device-&gt;baseptr + 32);<br /><br />NOTE! NOTE! NOTE! You _really_ should never use anything like this:<br /><br />	signature = *(unsigned int) (device-&gt;baseptr + 32);<br /><br />It may happen to work on the x86 (at least on _some_ kernel versions),<br />but there is no guarantee that it works on all kernels and certainly not<br />on all architectures (it certainly won't work on alpha or PowerPC, and<br />probably won't work on Sparc either when the PCI sparcs appear).  So you<br />really must use the read[bwl]/write[bwl]/memcopy_fromio/memcopy_toio etc<br />functions for it to reliably work. <br /><br />		Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
