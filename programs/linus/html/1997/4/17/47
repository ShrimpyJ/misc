    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/4/17/47">First message in thread</a></li><li class="origin"><a href="/lkml/1997/4/17/54">Linus Torvalds</a><ul><li><a href="/lkml/1997/4/17/54">Torsten Duwe</a><ul><li><a href="/lkml/1997/4/18/61">(Alan Cox)</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 17 Apr 1997 10:47:50 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Strategic] Linux will never master Plug &amp; Play !?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 17 Apr 1997, Torsten Duwe wrote:<br />&gt; <br />&gt; In order to assign resources such as IO-addresses, interrupts and DMA<br />&gt; channels all of those already occupied fixed must be known.<br /><br />True. At least for PnP as designed by MS.<br /><br />&gt; Examination (RTFS &amp; experiment) of at least serial.c and 3c509.c show that<br />&gt; both only allocate their interrupts if they're opened. Conclusion: no working<br />&gt; PnP, at least not with those two popular (PnP-) trouble-makers.<br /><br />The reason for this is that interrupt sharing did not originally work, and<br />many devices wanted to "share" interrupts by making sure that only one<br />device was active at a time.<br /><br />For example, irq5 used to be one very popular "extra" interrupt that has<br />been known to have multiple devices on it even on an ISA bus - and one way<br />to handle this has been to make sure that only the device you are<br />_currently_ using allocates the IRQ, and when not used the device makes<br />sure that its interrupt line is quiescent.<br /><br />Of course, the correct way to handle this these days is to use shared PCI<br />interrupts, in which case none of this all matters (nor does PnP - devices<br />can just use the interrupt without really being aware of each other, as<br />long as they are ready to accept "spurious" interrupts). <br /><br />&gt; Question: are there guidelines for driver programming on when to declare<br />&gt; resources used ? (IMHO: as soon as they're known. ISA IRQ-sharing sucks !)<br /><br />ISA IRQ sharing does indeed suck, and quite badly.<br /><br />However, one reason PnP has not gotten much support from me personally is<br />that PnP doesn't really help all that much in the general case. Yes, PnP<br />helps _if_ you have all-PnP-aware devices, but quite frankly the whole<br />standard is slightly broken and superceded by PCI anyway to a large<br />degree. As such I'm not all that excited about PnP, especially as trying<br />to be excessively PnP-aware has been known to result in problems on<br />systems that are _not_ PnP-ready. <br /><br />&gt; There is a kernel patch pointing into the right direction:<br />&gt; <a href="ftp://sunsite.unc.edu/pub/Linux/kernel/patches/misc/PnP4kernel">ftp://sunsite.unc.edu/pub/Linux/kernel/patches/misc/PnP4kernel</a>*<br />&gt; It is 10 months old and I'm quite dissapointed that such a thing is still<br />&gt; missing in 2.1.33.<br />&gt; <br />&gt; A strategic decision must be made. Mail me if you want more facts.<br /><br />The strategic decision _has_ been made: I'm taking a "wait and see" <br />approach to PnP. So far, PnP hasn't convinced me.<br /><br />HOWEVER - don't take this as a final "no" to PnP. I just want to make it<br />very clear that I think that some of the issues with PnP are essentially<br />dead: the ISA PnP irq stuff being one of them (the IRQ's are really an<br />issue only for ISA devices, and when it comes to ISA devices the _huge_<br />majority are totally unaware of PnP). <br /><br />Other PnP stuff can certainly be worth pursuing (like the parallell and<br />serial port PnP autodetection - although even in this case I suspect that<br />PnP will be superceded by the USB: anything so clever that it responds to<br />PnP queries will probably be using USB within the year anyway). <br /><br />In short, I think PnP was too little, too late, and that it hasn't caught<br />on enough to worry about it more than we do. I will certainly accept<br />PnP-aware patches, but those patches may under _no_ circumstances break<br />more important stuff (ie non-PnP devices).<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
