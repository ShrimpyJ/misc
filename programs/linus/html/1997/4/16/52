    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/4/16/52">First message in thread</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1305798" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 16 Apr 1997 10:48:24 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Interrupt semantics</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />[ Cc'd to the kernel list as well, because this is not de4x5-specific.<br />  Indeed, to some degree the de4x5 driver is one of the few ones that no<br />  longer need to worry about the issue other than for maintenance ]<br /><br />On Wed, 16 Apr 1997, David C. Davies wrote:<br />&gt; <br />&gt; &gt; (cut-and-paste from the de4x5 driver that had this problem):<br />&gt; &gt;<br />&gt; &gt;    DISABLE_IRQs;                        /* Ensure non re-entrancy */<br />&gt; &gt;    synchronize_irq();<br />&gt; &gt;    dev-&gt;interrupt = MASK_INTERRUPTS;<br />&gt; <br />&gt; Can you point me to an explanation of the problem or give me a quick thumbnail<br />&gt; sketch so I can figure it into my next release.<br /><br />The thing is pretty simple, and not hard to handle (as you can see, it's<br />just adding a synchronization point). What is going on is this:<br /><br />	CPU #0				CPU #1<br /><br />					- is somewhere in bh handling<br />	- gets a de4x5 interrupt	- calls "hard_xmit_start"<br />					- de4x5.c does "DISABLE_IRQs"<br />	- IRQ is _already_ running	- CPU #0 and CPU #1 are both<br />					  executing in the critical<br />					  region.<br /><br />So the bad thing is just that another CPU may _already_ be servicing<br />interrupts when we do the card-level interrupt disable, and obviously any<br />old interrupts won't magically cease to exist. As such, the act of<br />disabling the hardware interrupts is no longer sufficient to guarantee<br />non-re-entrancy. <br /><br />[ Aside - "cli()/sti()" do the appropriate synchronization, and they are<br />  always safe. It is only when a driver disables its _own_ interrupts some<br />  way that the extra synchronization point is needed ]<br /><br />What the "synchronize_irq()" function does is to just wait until no other<br />CPU is no longer servicing interrupts (so on UP, it obviously doesn't need<br />to do anything at all). <br /><br />Note that the "synchronize_irq()" call has to be _after_ we have disabled<br />the card interrupts to ensure proper working - otherwise there would again<br />be a small window where an interrupt could happen on another CPU in<br />between the synchronize call and the irq disable. <br /><br />Final note: on UP there is no overhead at all in synchronize_irq(),<br />because it's an empty #define in that case. On SMP it is also pretty<br />low-overhead (it may end up spinwaiting for another CPU doing interrupts,<br />but that is pretty unlikely and we have to wait there anyway). So you<br />don't need to be overly concerned about the performance impact of this. <br /><br />&gt; I'm about to update de4x5.c again, so would like any SMP issues included...<br /><br />This was the only issue - other than this specific interrupt case the<br />driver interfaces are not affected at all. I hope to keep it that way, so<br />that device driver authors wouldn't need to know about SMP issues. <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
