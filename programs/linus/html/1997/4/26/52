    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1997/4/26/29">First message in thread</a></li><li><a href="/lkml/1997/4/26/29">"Theodore Y. Ts'o"</a><ul><li class="origin"><a href="/lkml/1997/4/26/54">Linus Torvalds</a><ul><li><a href="/lkml/1997/4/26/54">Ingo Molnar</a><ul><li><a href="/lkml/1997/4/27/7">"Theodore Y. Ts'o"</a><ul><li><a href="/lkml/1997/4/27/12">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/1997/4/27/19">(Alan Cox)</a><ul><li><a href="/lkml/1997/4/27/25">Linus Torvalds</a></li><li><a href="/lkml/1997/4/27/37">"Theodore Y. Ts'o"</a></li></ul></li></ul></li><li><a href="/lkml/1997/4/26/71">"Tim P. Gerla"</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 26 Apr 1997 12:52:51 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Patches to speed up SLIP and PPP</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 26 Apr 1997, Theodore Y. Ts'o wrote:<br />&gt; <br />&gt; Enclosed please find patches to speed up SLIP and PPP by decreasing the<br />&gt; latency between when a SLIP and PPP packet comes in, and when it is<br />&gt; actually processed by the networking stack.  <br /><br />I don't actually like this patch very much - I think it goes about what it<br />is doing the wrong way.<br /><br />The problem is that we want to make serial interrupts fast (thus no bottom<br />half handling) but at the same time we _do_ want to do bottom half and all<br />the rest (process switching etc) occasionally when a new packet has come<br />in. <br /><br />This patch looks like it is going about this by having the actual<br />interrupt handler do all of the handling occasionally. I dislike this idea<br />immensely - that is not how things are supposed to work, and it special<br />cases something that is really a generic issue. It also looks like a<br />horrible thing from an SMP standpoint, actually (doing a global cli/sti in<br />the serial line interrupt handler counts as a really bad thing (tm)). <br /><br />I've seen other patches that do this much more cleanly: by having the<br />interrupt handler return a return value indicating whether it wants to be<br />fast or not. This has the added advantage that it also solves the current<br />problem with shared PCI interrupts where one handler wants to be fast, and<br />the other one wants to be slow.<br /><br />In short, I'd much rather see a patch that<br /> (a) gets rid of the "fast" vs "slow" interrupts. They used to make sense,<br />     but they don't much do that any more. They only result in problems.<br /> (b) make the interrupt handler routine return a flag whether we should do<br />     bottom half processing after this interrupt. This flag is "or"ed<br />     together for all shared interrupts, and upon exit from the interrupt<br />     we then decide whether we should do the bottom half or not. <br /> (c) make "ret_from_interrupt" be different from "ret_from_sys_call",<br />     because we no longer want to return to ret_from_sys_call() because we<br />     already did bottom half handling. <br /><br />And after the above patch, speeding up slip/ppp latency is just a matter<br />of returning 1 in the serial interrupt handler when we have a full packet. <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
