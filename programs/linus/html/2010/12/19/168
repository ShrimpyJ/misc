    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/12/14/534">First message in thread</a></li><li><a href="/lkml/2010/12/14/534">Nicolas Pitre</a><ul><li class="origin"><a href="/lkml/2010/12/20/3">Linus Torvalds</a><ul><li><a href="/lkml/2010/12/20/3">Nicolas Pitre</a><ul><li><a href="/lkml/2010/12/20/282">David Howells</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2010/12/19/168/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 19 Dec 2010 13:19:42 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] clarify a usage constraint for cnt32_to_63()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Dec 14, 2010 at 7:44 PM, Nicolas Pitre &lt;nico&#64;fluxnic.net&gt; wrote:<br />&gt;<br />&gt; The cnt32_to_63 algorithm relies on proper counter data evaluation<br />&gt; ordering to work properly. This was missing from the provided<br />&gt; documentation.<br />&gt;<br />&gt; Let's augment the documentation with the missing usage constraint and<br />&gt; fix the only instance that got it wrong.<br /><br />Hmm. In the meantime, mn10300 seems to have changed its get_cycles()<br />to count up like a normal architecture.<br /><br />So I _think_ the nm10300 part of the patch should now look like the<br />attached. Untested. I'd like to get an ack from David or at least<br />somebody who compiles (and preferably tests) mn10300. And then<br />preferably a re-send of the whole patch.<br /><br />Hmm?<br /><br />                          Linus<br /> arch/mn10300/kernel/time.c |    8 ++------<br /> 1 files changed, 2 insertions(+), 6 deletions(-)<br /><br />diff --git a/arch/mn10300/kernel/time.c b/arch/mn10300/kernel/time.c<br />index f860a34..5114eb8 100644<br />--- a/arch/mn10300/kernel/time.c<br />+++ b/arch/mn10300/kernel/time.c<br />&#64;&#64; -40,21 +40,17 &#64;&#64; unsigned long long sched_clock(void)<br /> 		unsigned long long ll;<br /> 		unsigned l[2];<br /> 	} tsc64, result;<br />-	unsigned long tsc, tmp;<br />+	unsigned long tmp;<br /> 	unsigned product[3]; /* 96-bit intermediate value */<br /> <br /> 	/* cnt32_to_63() is not safe with preemption */<br /> 	preempt_disable();<br /> <br />-	/* read the TSC value<br />-	 */<br />-	tsc = get_cycles();<br />-<br /> 	/* expand to 64-bits.<br /> 	 * - sched_clock() must be called once a minute or better or the<br /> 	 *   following will go horribly wrong - see cnt32_to_63()<br /> 	 */<br />-	tsc64.ll = cnt32_to_63(tsc) &amp; 0x7fffffffffffffffULL;<br />+	tsc64.ll = cnt32_to_63(get_cycles()) &amp; 0x7fffffffffffffffULL;<br /> <br /> 	preempt_enable();<br /> </pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
