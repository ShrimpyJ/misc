    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/12/12/30">First message in thread</a></li><li><a href="/lkml/2010/12/12/30">	stefani&#64;seibold ...</a><ul><li><a href="/lkml/2010/12/14/358">Andrew Morton</a><ul><li><a href="/lkml/2010/12/14/361">Stefani Seibold</a><ul><li><a href="/lkml/2010/12/14/367">Andrew Morton</a><ul><li><a href="/lkml/2010/12/14/383">Stefani Seibold</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2010/12/14/380">Linus Torvalds</a><ul><li><a href="/lkml/2010/12/14/380">Stefani Seibold</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 14 Dec 2010 13:08:54 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] cramfs: generate unique inode number for better inode cache usage</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Dec 14, 2010 at 12:51 PM, Andrew Morton<br />&lt;akpm&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Did you look at using iunique() to generate cramfs inode numbers?<br /><br />That breaks the cramfs "hardlinking" (which is just files that have<br />the same data pointer), and now a hardlinked file wouldn't have the<br />same inode number any more.<br /><br />Of course, I'm not sure the hardlinking really matters. cramfs<br />hardlinks aren't really traditional hardlinks anyway - since the<br />permissions etc are in the directory entry, you can have the data<br />hardlinked without having the same permissions, so it's not a "real"<br />hardlink even if the inode number were to be the same.<br /><br />But this patch seems to roughly approximate the old pseudo-hardlink<br />behavior. It used to be that all non-data files showed up with the<br />same inode number, now they have separate inode numbers.<br /><br />That said, I hate how it moves that "setup_inode" helper function<br />inline and then does the "if it's a character device" kinds of tests<br />twice. Once for the inode number logic, and once for the inode<br />operations structure assignment.<br /><br />So I think the approach is fine, but I think the implementation is pretty ugly.<br /><br />                          Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
