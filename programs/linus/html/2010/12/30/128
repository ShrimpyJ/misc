    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/12/28/196">First message in thread</a></li><li><a href="/lkml/2010/12/28/196">Linus Torvalds</a><ul><li><a href="/lkml/2010/12/29/38">Borislav Petkov</a><ul><li><a href="/lkml/2010/12/29/41">"Rafael J. Wysocki"</a><ul><li><a href="/lkml/2010/12/29/248">Zhang Rui</a></li></ul></li></ul></li><li><a href="/lkml/2010/12/29/116">Randy Dunlap</a><ul><li><a href="/lkml/2010/12/29/128">Linus Torvalds</a><ul><li><a href="/lkml/2010/12/29/132">Jesse Barnes</a><ul><li><a href="/lkml/2010/12/29/139">=?ISO-8859-1?Q?Fran=E7ois_Valenduc?=</a></li><li><a href="/lkml/2010/12/29/140">Alex Riesen</a></li><li><a href="/lkml/2010/12/29/159">Randy Dunlap</a></li></ul></li><li><a href="/lkml/2010/12/30/136">Chris Wilson</a></li></ul></li></ul></li><li><a href="/lkml/2010/12/30/107">Uwe =?iso-8859-1?Q?Kleine-K=F6nig?=</a><ul><li class="origin"><a href="/lkml/2010/12/30/134">Linus Torvalds</a><ul><li><a href="/lkml/2010/12/30/134">Trond Myklebust</a><ul><li><a href="/lkml/2010/12/30/142">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2010/12/30/129">Trond Myklebust</a><ul><li><a href="/lkml/2010/12/30/149">Uwe =?iso-8859-1?Q?Kleine-K=F6nig?=</a><ul><li><a href="/lkml/2011/1/3/309">Uwe =?iso-8859-1?Q?Kleine-K=F6nig?=</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2011/1/3/19">Domenico Andreoli</a></li><li><a href="/lkml/2011/1/4/199">Pavel Machek</a><ul><li><a href="/lkml/2011/1/4/207">Chris Wilson</a><ul><li><a href="/lkml/2011/1/5/24">Pavel Machek</a></li><li><a href="/lkml/2011/1/5/342">Pavel Machek</a><ul><li><a href="/lkml/2011/1/5/351">Dave Airlie</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 30 Dec 2010 09:57:54 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: still nfs problems [Was: Linux 2.6.37-rc8]</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Please cc the poor hapless NFS people too, who probably otherwise<br />wouldn't see it. And Arnd just in case it might be locking-related.<br /><br />Trond, any ideas? The sysrq thing does imply that it's stuck in some<br />busy-loop in fs/nfs/dir.c, and line 647 is get_cache_page(), which in<br />turn implies that the endless loop is either the loop in<br />readdir_search_pagecache() _or_ in a caller. In particular, the<br />EBADCOOKIE case in the caller (nfs_readdir) looks suspicious. What<br />protects us from endless streams of EBADCOOKIE and a successful<br />uncached_readdir?<br /><br />                     Linus<br /><br />2010/12/30 Uwe Kleine-König &lt;u.kleine-koenig&#64;pengutronix.de&gt;:<br />&gt; Hello,<br />&gt;<br />&gt; I wonder if the nfs-stuff is considered to be solved, because I still<br />&gt; see strange things.<br />&gt;<br />&gt; During boot my machine sometimes (approx one out of two times) hangs with<br />&gt; the output pasted below on Sysctl-l.  The irq<br />&gt;<br />&gt; I'm not 100% sure it's related, but at least it seems to hang in<br />&gt; nfs_readdir.  (When the serial irq happend that triggered the sysrq the<br />&gt; program counter was at 0xc014601c, which is fs/nfs/dir.c:647 for me.)<br />&gt;<br />&gt; This is on 2.6.37-rc8 plus some patches for machine support on an ARM<br />&gt; machine.<br />&gt;<br />&gt; Best regards<br />&gt; Uwe<br />&gt;<br />&gt; [ 2700.100000] SysRq : Show State<br />&gt; [ 2700.100000]   task                PC stack   pid father<br />&gt; [ 2700.100000] init          S c0285d80     0     1      0 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c004f268&gt;] (do_wait+0x1a4/0x20c)<br />&gt; [ 2700.100000] [&lt;c004f0c4&gt;] (do_wait+0x0/0x20c) from [&lt;c004f378&gt;] (sys_wait4+0xa8/0xc0)<br />&gt; [ 2700.100000] [&lt;c004f2d0&gt;] (sys_wait4+0x0/0xc0) from [&lt;c0033e80&gt;] (ret_fast_syscall+0x0/0x38)<br />&gt; [ 2700.100000]  r8:c0034088 r7:00000072 r6:00000001 r5:0000001b r4:0140b228<br />&gt; [ 2700.100000] kthreadd      S c0285d80     0     2      0 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c006a30c&gt;] (kthreadd+0x70/0xfc)<br />&gt; [ 2700.100000] [&lt;c006a29c&gt;] (kthreadd+0x0/0xfc) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000] ksoftirqd/0   S c0285d80     0     3      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c0052714&gt;] (run_ksoftirqd+0x5c/0x110)<br />&gt; [ 2700.100000] [&lt;c00526b8&gt;] (run_ksoftirqd+0x0/0x110) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000]  r8:00000000 r7:c00526b8 r6:00000000 r5:c7843f1c r4:c7859fac<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843f1c<br />&gt; [ 2700.100000] kworker/0:0   S c0285d80     0     4      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c006480c&gt;] (worker_thread+0x41c/0x444)<br />&gt; [ 2700.100000] [&lt;c00643f0&gt;] (worker_thread+0x0/0x444) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843edc<br />&gt; [ 2700.100000] kworker/u:0   S c0285d80     0     5      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c006480c&gt;] (worker_thread+0x41c/0x444)<br />&gt; [ 2700.100000] [&lt;c00643f0&gt;] (worker_thread+0x0/0x444) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843edc<br />&gt; [ 2700.100000] watchdog/0    S c0285d80     0     6      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c008b418&gt;] (watchdog+0xc0/0x110)<br />&gt; [ 2700.100000] [&lt;c008b358&gt;] (watchdog+0x0/0x110) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000]  r6:00000000 r5:c7843efc r4:c785ffac<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843efc<br />&gt; [ 2700.100000] khelper       S c0285d80     0     7      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c00657d4&gt;] (rescuer_thread+0x1b8/0x1c4)<br />&gt; [ 2700.100000] [&lt;c006561c&gt;] (rescuer_thread+0x0/0x1c4) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843f1c<br />&gt; [ 2700.100000] sync_supers   S c0285d80     0     8      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c00cd114&gt;] (bdi_sync_supers+0x38/0x50)<br />&gt; [ 2700.100000] [&lt;c00cd0dc&gt;] (bdi_sync_supers+0x0/0x50) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000]  r5:c7843f2c r4:c7895fac<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843f2c<br />&gt; [ 2700.100000] bdi-default   S c0285d80     0     9      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c02864b4&gt;] (schedule_timeout+0x22c/0x27c)<br />&gt; [ 2700.100000] [&lt;c0286288&gt;] (schedule_timeout+0x0/0x27c) from [&lt;c00ce014&gt;] (bdi_forker_thread+0x3a8/0x41c)<br />&gt; [ 2700.100000]  r8:c0363f80 r7:00000000 r6:00000000 r5:c03641e8 r4:00000000<br />&gt; [ 2700.100000] [&lt;c00cdc6c&gt;] (bdi_forker_thread+0x0/0x41c) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843efc<br />&gt; [ 2700.100000] kintegrityd   S c0285d80     0    10      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c00657d4&gt;] (rescuer_thread+0x1b8/0x1c4)<br />&gt; [ 2700.100000] [&lt;c006561c&gt;] (rescuer_thread+0x0/0x1c4) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843e9c<br />&gt; [ 2700.100000] kblockd       S c0285d80     0    11      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c00657d4&gt;] (rescuer_thread+0x1b8/0x1c4)<br />&gt; [ 2700.100000] [&lt;c006561c&gt;] (rescuer_thread+0x0/0x1c4) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843ec4<br />&gt; [ 2700.100000] rpciod        S c0285d80     0    12      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c00657d4&gt;] (rescuer_thread+0x1b8/0x1c4)<br />&gt; [ 2700.100000] [&lt;c006561c&gt;] (rescuer_thread+0x0/0x1c4) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843ebc<br />&gt; [ 2700.100000] kworker/0:1   S c0285d80     0    13      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c006480c&gt;] (worker_thread+0x41c/0x444)<br />&gt; [ 2700.100000] [&lt;c00643f0&gt;] (worker_thread+0x0/0x444) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c785be94<br />&gt; [ 2700.100000] khungtaskd    S c0285d80     0    14      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c02864b4&gt;] (schedule_timeout+0x22c/0x27c)<br />&gt; [ 2700.100000] [&lt;c0286288&gt;] (schedule_timeout+0x0/0x27c) from [&lt;c0286584&gt;] (schedule_timeout_interruptible+0x28/0x2c)<br />&gt; [ 2700.100000]  r8:00000078 r7:00007fe9 r6:000003e9 r5:c034eef0 r4:00000064<br />&gt; [ 2700.100000] [&lt;c028655c&gt;] (schedule_timeout_interruptible+0x0/0x2c) from [&lt;c008ada8&gt;] (watchdog+0x54/0x2e8)<br />&gt; [ 2700.100000] [&lt;c008ad54&gt;] (watchdog+0x0/0x2e8) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843f2c<br />&gt; [ 2700.100000] kswapd0       S c0285d80     0    15      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c00c5ea4&gt;] (kswapd+0x210/0x74c)<br />&gt; [ 2700.100000] [&lt;c00c5c94&gt;] (kswapd+0x0/0x74c) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843f1c<br />&gt; [ 2700.100000] fsnotify_mark S c0285d80     0    16      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c011f884&gt;] (fsnotify_mark_destroy+0x11c/0x144)<br />&gt; [ 2700.100000] [&lt;c011f768&gt;] (fsnotify_mark_destroy+0x0/0x144) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843f34<br />&gt; [ 2700.100000] aio           S c0285d80     0    17      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c00657d4&gt;] (rescuer_thread+0x1b8/0x1c4)<br />&gt; [ 2700.100000] [&lt;c006561c&gt;] (rescuer_thread+0x0/0x1c4) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843edc<br />&gt; [ 2700.100000] nfsiod        S c0285d80     0    18      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c00657d4&gt;] (rescuer_thread+0x1b8/0x1c4)<br />&gt; [ 2700.100000] [&lt;c006561c&gt;] (rescuer_thread+0x0/0x1c4) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843edc<br />&gt; [ 2700.100000] crypto        S c0285d80     0    19      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c00657d4&gt;] (rescuer_thread+0x1b8/0x1c4)<br />&gt; [ 2700.100000] [&lt;c006561c&gt;] (rescuer_thread+0x0/0x1c4) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c7843ee4<br />&gt; [ 2700.100000] kworker/u:1   S c0285d80     0    24      2 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c006480c&gt;] (worker_thread+0x41c/0x444)<br />&gt; [ 2700.100000] [&lt;c00643f0&gt;] (worker_thread+0x0/0x444) from [&lt;c006a294&gt;] (kthread+0x8c/0x94)<br />&gt; [ 2700.100000] [&lt;c006a208&gt;] (kthread+0x0/0x94) from [&lt;c004f4d8&gt;] (do_exit+0x0/0x658)<br />&gt; [ 2700.100000]  r7:00000013 r6:c004f4d8 r5:c006a208 r4:c785de94<br />&gt; [ 2700.100000] rcS           S c0285d80     0    27      1 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c004f268&gt;] (do_wait+0x1a4/0x20c)<br />&gt; [ 2700.100000] [&lt;c004f0c4&gt;] (do_wait+0x0/0x20c) from [&lt;c004f378&gt;] (sys_wait4+0xa8/0xc0)<br />&gt; [ 2700.100000] [&lt;c004f2d0&gt;] (sys_wait4+0x0/0xc0) from [&lt;c0033e80&gt;] (ret_fast_syscall+0x0/0x38)<br />&gt; [ 2700.100000]  r8:c0034088 r7:00000072 r6:ffffffff r5:bee7880c r4:00000000<br />&gt; [ 2700.100000] run-parts     S c0285d80     0    35     27 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c02858c8&gt;] (schedule+0x0/0x534) from [&lt;c004f268&gt;] (do_wait+0x1a4/0x20c)<br />&gt; [ 2700.100000] [&lt;c004f0c4&gt;] (do_wait+0x0/0x20c) from [&lt;c004f378&gt;] (sys_wait4+0xa8/0xc0)<br />&gt; [ 2700.100000] [&lt;c004f2d0&gt;] (sys_wait4+0x0/0xc0) from [&lt;c0033e80&gt;] (ret_fast_syscall+0x0/0x38)<br />&gt; [ 2700.100000]  r8:c0034088 r7:00000072 r6:00000024 r5:bef7dcc4 r4:00000000<br />&gt; [ 2700.100000] S00splashutil R running      0    36     35 0x00000000<br />&gt; [ 2700.100000] Backtrace:<br />&gt; [ 2700.100000] [&lt;c0037b54&gt;] (dump_backtrace+0x0/0x110) from [&lt;c0037c80&gt;] (show_stack+0x1c/0x20)<br />&gt; [ 2700.100000]  r7:c79cfd64 r6:00000000 r5:c7954600 r4:00000000<br />&gt; [ 2700.100000] [&lt;c0037c64&gt;] (show_stack+0x0/0x20) from [&lt;c0046b78&gt;] (sched_show_task+0xb0/0xcc)<br />&gt; [ 2700.100000] [&lt;c0046ac8&gt;] (sched_show_task+0x0/0xcc) from [&lt;c0046bf0&gt;] (show_state_filter+0x5c/0xc8)<br />&gt; [ 2700.100000]  r5:c7954600 r4:c7954600<br />&gt; [ 2700.100000] [&lt;c0046b94&gt;] (show_state_filter+0x0/0xc8) from [&lt;c01c5c40&gt;] (sysrq_handle_showstate+0x18/0x1c)<br />&gt; [ 2700.100000]  r8:20000093 r7:00000007 r6:00000001 r5:00000074 r4:c036ec5c<br />&gt; [ 2700.100000] [&lt;c01c5c28&gt;] (sysrq_handle_showstate+0x0/0x1c) from [&lt;c01c6040&gt;] (__handle_sysrq+0xe0/0x190)<br />&gt; [ 2700.100000] [&lt;c01c5f60&gt;] (__handle_sysrq+0x0/0x190) from [&lt;c01c62d8&gt;] (handle_sysrq+0x38/0x44)<br />&gt; [ 2700.100000]  r8:c7999000 r7:00000100 r6:c7973640 r5:00010074 r4:c7864300<br />&gt; [ 2700.100000] [&lt;c01c62a0&gt;] (handle_sysrq+0x0/0x44) from [&lt;c01da100&gt;] (pl011_int+0x18c/0x5a4)<br />&gt; [ 2700.100000] [&lt;c01d9f74&gt;] (pl011_int+0x0/0x5a4) from [&lt;c008b8b0&gt;] (handle_IRQ_event+0x7c/0x1a8)<br />&gt; [ 2700.100000] [&lt;c008b834&gt;] (handle_IRQ_event+0x0/0x1a8) from [&lt;c008de5c&gt;] (handle_level_irq+0xc8/0x148)<br />&gt; [ 2700.100000] [&lt;c008dd94&gt;] (handle_level_irq+0x0/0x148) from [&lt;c002d080&gt;] (asm_do_IRQ+0x80/0xa4)<br />&gt; [ 2700.100000]  r7:c74a05a4 r6:c74a0508 r5:00000000 r4:0000002f<br />&gt; [ 2700.100000] [&lt;c002d000&gt;] (asm_do_IRQ+0x0/0xa4) from [&lt;c0033ab8&gt;] (__irq_svc+0x38/0x80)<br />&gt; [ 2700.100000] Exception stack(0xc79cfe88 to 0xc79cfed0)<br />&gt; [ 2700.100000] fe80:                   c74a0508 00000000 c0145d24 c7487e60 00000000 c79cfee8<br />&gt; [ 2700.100000] fea0: c74a0508 c74a05a4 c7487e60 c79cfee8 c74a0508 c79cff4c c79ce000 c79cfed0<br />&gt; [ 2700.100000] fec0: c016ff10 c014601c 60000013 ffffffff<br />&gt; [ 2700.100000]  r5:f5000000 r4:ffffffff<br />&gt; [ 2700.100000] [&lt;c0145f0c&gt;] (nfs_readdir+0x0/0x458) from [&lt;c00fa298&gt;] (vfs_readdir+0x7c/0xb0)<br />&gt; [ 2700.100000] [&lt;c00fa21c&gt;] (vfs_readdir+0x0/0xb0) from [&lt;c00fa3fc&gt;] (sys_getdents+0x70/0xb8)<br />&gt; [ 2700.100000] [&lt;c00fa38c&gt;] (sys_getdents+0x0/0xb8) from [&lt;c0033e80&gt;] (ret_fast_syscall+0x0/0x38)<br />&gt; [ 2700.100000]  r7:0000008d r6:00000000 r5:402ed00c r4:402ed020<br />&gt; [ 2700.100000] Sched Debug Version: v0.09, 2.6.37-rc8-00065-g1cd48e3-dirty #35<br />&gt; [ 2700.100000] now at 2701202.749966 msecs<br />&gt; [ 2700.100000]   .jiffies                                 : 240010<br />&gt; [ 2700.100000]   .sysctl_sched_latency                    : 6.000000<br />&gt; [ 2700.100000]   .sysctl_sched_min_granularity            : 0.750000<br />&gt; [ 2700.100000]   .sysctl_sched_wakeup_granularity         : 1.000000<br />&gt; [ 2700.100000]   .sysctl_sched_child_runs_first           : 0<br />&gt; [ 2700.100000]   .sysctl_sched_features                   : 31855<br />&gt; [ 2700.100000]   .sysctl_sched_tunable_scaling            : 1 (logaritmic)<br />&gt; [ 2700.100000]<br />&gt; [ 2700.100000] cpu#0<br />&gt; [ 2700.100000]   .nr_running                    : 1<br />&gt; [ 2700.100000]   .load                          : 1024<br />&gt; [ 2700.100000]   .nr_switches                   : 11875<br />&gt; [ 2700.100000]   .nr_load_updates               : 269696<br />&gt; [ 2700.100000]   .nr_uninterruptible            : 0<br />&gt; [ 2700.100000]   .next_balance                  : 0.000000<br />&gt; [ 2700.100000]   .curr-&gt;pid                     : 36<br />&gt; [ 2700.100000]   .clock                         : 2700100.000000<br />&gt; [ 2700.100000]   .cpu_load[0]                   : 1024<br />&gt; [ 2700.100000]   .cpu_load[1]                   : 1024<br />&gt; [ 2700.100000]   .cpu_load[2]                   : 1024<br />&gt; [ 2700.100000]   .cpu_load[3]                   : 1024<br />&gt; [ 2700.100000]   .cpu_load[4]                   : 1024<br />&gt; [ 2700.100000]<br />&gt; [ 2700.100000] cfs_rq[0]:<br />&gt; [ 2700.100000]   .exec_clock                    : 0.000000<br />&gt; [ 2700.100000]   .MIN_vruntime                  : 0.000001<br />&gt; [ 2700.100000]   .min_vruntime                  : 2695651.938408<br />&gt; [ 2700.100000]   .max_vruntime                  : 0.000001<br />&gt; [ 2700.100000]   .spread                        : 0.000000<br />&gt; [ 2700.100000]   .spread0                       : 0.000000<br />&gt; [ 2700.100000]   .nr_running                    : 1<br />&gt; [ 2700.100000]   .load                          : 1024<br />&gt; [ 2700.100000]   .nr_spread_over                : 0<br />&gt; [ 2700.100000]<br />&gt; [ 2700.100000] rt_rq[0]:<br />&gt; [ 2700.100000]   .rt_nr_running                 : 0<br />&gt; [ 2700.100000]   .rt_throttled                  : 0<br />&gt; [ 2700.100000]   .rt_time                       : 0.000000<br />&gt; [ 2700.100000]   .rt_runtime                    : 950.000000<br />&gt; [ 2700.100000]<br />&gt; [ 2700.100000] runnable tasks:<br />&gt; [ 2700.100000]             task   PID         tree-key  switches  prio     exec-runtime         sum-exec        sum-sleep<br />&gt; [ 2700.100000] ----------------------------------------------------------------------------------------------------------<br />&gt; [ 2700.100000] R S00splashutils    36   2695651.938408      5397   120               0               0               0.000000               0.000000               0.000000<br />&gt; [ 2700.100000]<br />&gt; [ 2700.100000]<br />&gt; [ 2700.100000] Showing all locks held in the system:<br />&gt; [ 2700.100000] 4 locks held by S00splashutils/36:<br />&gt; [ 2700.100000]  #0:  (&amp;sb-&gt;s_type-&gt;i_mutex_key#8){+.+.+.}, at: [&lt;c00fa268&gt;] vfs_readdir+0x4c/0xb0<br />&gt; [ 2700.100000]  #1:  (&amp;port_lock_key){-.-...}, at: [&lt;c01d9f94&gt;] pl011_int+0x20/0x5a4<br />&gt; [ 2700.100000]  #2:  (sysrq_key_table_lock){-.....}, at: [&lt;c01c5f84&gt;] __handle_sysrq+0x24/0x190<br />&gt; [ 2700.100000]  #3:  (tasklist_lock){.?.+..}, at: [&lt;c007c404&gt;] debug_show_all_locks+0x40/0x1a4<br />&gt; [ 2700.100000]<br />&gt; [ 2700.100000] =============================================<br />&gt; [ 2700.100000]<br />&gt;<br />&gt;<br />&gt; --<br />&gt; Pengutronix e.K.                           | Uwe Kleine-König            |<br />&gt; Industrial Linux Solutions                 | <a href="http://www.pengutronix.de/">http://www.pengutronix.de/</a>  |<br />&gt;<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
