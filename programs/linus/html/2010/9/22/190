    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/9/22/45">First message in thread</a></li><li><a href="/lkml/2010/9/22/45">Jens Axboe</a><ul><li class="origin"><a href="/lkml/2010/9/22/196">Linus Torvalds</a><ul><li><a href="/lkml/2010/9/22/196">Jens Axboe</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 22 Sep 2010 08:06:40 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] block fixes for 2.6.36-rc5</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Gaah. This is just _incredibly_ ugly:<br /><br />On Wed, Sep 22, 2010 at 12:49 AM, Jens Axboe &lt;jaxboe&#64;fusionio.com&gt; wrote:<br />&gt;<br />&gt; -       /* Add group onto cgroup list */<br />&gt; -       sscanf(dev_name(bdi-&gt;dev), "%u:%u", &amp;major, &amp;minor);<br />&gt; -       cfq_blkiocg_add_blkio_group(blkcg, &amp;cfqg-&gt;blkg, (void *)cfqd,<br />&gt; +       /*<br />&gt; +        * Add group onto cgroup list. It might happen that bdi-&gt;dev is<br />&gt; +        * not initiliazed yet. Initialize this new group without major<br />&gt; +        * and minor info and this info will be filled in once a new thread<br />&gt; +        * comes for IO. See code above.<br />&gt; +        */<br />&gt; +       if (bdi-&gt;dev) {<br />&gt; +               sscanf(dev_name(bdi-&gt;dev), "%u:%u", &amp;major, &amp;minor);<br />&gt; +               cfq_blkiocg_add_blkio_group(blkcg, &amp;cfqg-&gt;blkg, (void *)cfqd,<br />&gt;                                        MKDEV(major, minor));<br />&gt; +       } else<br />&gt; +               cfq_blkiocg_add_blkio_group(blkcg, &amp;cfqg-&gt;blkg, (void *)cfqd,<br />&gt; +                                       0);<br />&gt; +<br /><br />and quite frankly, anything that does that kind of thing is total<br />sh*t. Not only is the sscanf() just broken (really? figuring out<br />things from some internal string? Using dev_t in this time and age for<br />kernel internal stuff?) to begin with, but if you have to then do it<br />conditionally, for chrissake do it _cleanly_.<br /><br />Make a small helper function that does "get me the dev_t of this<br />'dev'", and make that one do<br /><br />   static unsigned int device_dev_t(struct device *dev)<br />   {<br />      unsigned int major = 0, minor = 0;<br /><br />      if (dev)<br />         sscanf(dev_name(bdi-&gt;dev), "%u:%u", &amp;major, &amp;minor);<br /><br />      return MKDEV(major, minor);<br />   }<br /><br />and then just have a single 'cfq_blkiocg_add_blkio_group()' there.<br /><br />But more seriously, why the hell does anything internal to cfq use a<br />'dev_t' in the first place? Why isn't that 'struct blkio_group' using<br />a pointer to the 'struct device' or something like that instead (or<br />the pointer to the queue, or whatever)? It's just damn wrong to use<br />dev_t in this day and age, and the fact that you need to make it up<br />using sscanf() should have clued people into that fact.<br /><br />I hate seeing obvious crap-workarounds this late in an -rc.<br /><br />                            Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
