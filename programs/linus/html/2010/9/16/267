    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/9/14/468">First message in thread</a></li><li><a href="/lkml/2010/9/16/253">Linus Torvalds</a><ul><li><a href="/lkml/2010/9/16/261">Peter Zijlstra</a><ul><li class="origin"><a href="/lkml/2010/9/16/279">Linus Torvalds</a><ul><li><a href="/lkml/2010/9/16/279">Peter Zijlstra</a><ul><li><a href="/lkml/2010/9/16/290">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2010/9/19/10">Yuhong Bao</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 16 Sep 2010 10:34:53 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC][PATCH] Cross Memory Attach</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 16, 2010 at 10:13 AM, Peter Zijlstra &lt;peterz&#64;infradead.org&gt; wrote:<br />&gt;&gt;<br />&gt;&gt; Over a copy_to/from_user? Not bloody likely.<br />&gt;<br />&gt; Gah, indeed. OK, since its not nested kmap() should indeed work. The<br />&gt; alternative is using get_user_pages() on both address spaces, but I<br />&gt; guess that makes things unnecessarily complex.<br /><br />.. and perform horribly badly. And since the whole point was to do<br />this really efficiently, that's not good.<br /><br />What *would* work would be to have a fast case that does kmap_atomic()<br />together with a copy_to/from_user_atomic(). And when that fast-case<br />fails, do the full kmap. Slightly more complex than the suggested<br />patch, but not horribly so (just a few more lines, no fundamental<br />complexities).<br /><br />Of course, these days I would seriously suggest against trying to<br />optimize the kmap() case. It only matters on crap hardware these days.<br />Anybody running HIGHMEM in 2010 and thinks that it makes sense<br />deserves the pain the get. We should not complicate the kernel further<br />for it, and sane architectures will have a no-op kmap().<br /><br />So the real cost there is likely not the kmap as much as the<br />set_page_dirty_lock() for the copy_to case. But you'd need to profile<br />it to see how big of a hit it is compared to the copy itself.<br /><br />                           Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
