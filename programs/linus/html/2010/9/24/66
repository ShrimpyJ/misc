    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/9/24/378">First message in thread</a></li><li><a href="/lkml/2010/9/24/378">Al Viro</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2010/9/24/224">Al Viro</a></li><li><a href="/lkml/2010/9/24/424">Al Viro</a><ul><li><a href="/lkml/2010/9/25/38">Brian Gerst</a></li><li><a href="/lkml/2010/9/26/9">Ingo Molnar</a></li><li><a href="/lkml/2010/9/24/146">Brian Gerst</a></li><li><a href="/lkml/2010/9/25/110">Al Viro</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 24 Sep 2010 09:07:33 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: what's papered over by set_fs(USER_DS) in amd64 signal delivery?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 24, 2010 at 8:52 AM, Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt;        What the hell is going on in amd64 handle_signal()?  We do<br />&gt;<br />&gt; #ifdef CONFIG_X86_64<br />&gt;        /*<br />&gt;         * This has nothing to do with segment registers,<br />&gt;         * despite the name.  This magic affects uaccess.h<br />&gt;         * macros' behavior.  Reset it to the normal setting.<br />&gt;         */<br />&gt;        set_fs(USER_DS);<br />&gt; #endif<br /><br />I _think_ it is historical, and probably relates to just restoring all<br />the user mode state at signal delivery to a known state. IOW, I think<br />it really does go hand-in-hand with  the whole "clear bits in the<br />eflags register" thing.<br /><br />x86-64 has historically had some left-over crap that we already<br />cleaned up in 32-bit mode, for the simple reason that the original<br />x86-64 code was forked from an earlier base, and then hacked up<br />somewhat. So I think this "#ifdef CONFIG_X86_64" is just a case of<br />that.<br /><br />But maybe we should have a WARN_ON_ONCE() to verify it, rather than<br />just kill it outright.<br /><br />                                         Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
