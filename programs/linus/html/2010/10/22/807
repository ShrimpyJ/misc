    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/10/21/209">First message in thread</a></li><li><a href="/lkml/2010/10/21/416">Linus Torvalds</a><ul><li><a href="/lkml/2010/10/21/444">"H. Peter Anvin"</a></li><li><a href="/lkml/2010/10/22/803">"tip-bot for H. Peter Anvin"</a><ul><li class="origin"><a href="/lkml/2010/10/22/822">Linus Torvalds</a><ul><li><a href="/lkml/2010/10/22/822">"H. Peter Anvin"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 22 Oct 2010 19:11:09 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [tip:x86/fpu] x86-64, asm: Use fxsaveq/fxrestorq in more places</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Oct 22, 2010 at 6:20 PM, tip-bot for H. Peter Anvin<br />&lt;hpa&#64;zytor.com&gt; wrote:<br />&gt;<br />&gt; Checkin d7acb92fea932ad2e7846480aeacddc2c03c8485 made use of fxsaveq<br />&gt; in fpu_fxsave() if the assembler supports it; this adds<br />&gt; fxsaveq/fxrstorq to fxrstor_checking() and fxsave_user() as well.<br /><br />Hmm. I really think you should be able to do something like this<br /><br />  #ifdef CONFIG_AS_FXSAVEQ<br />    #define FXSAVEQ_INSN "fxsaveq %[fx]"<br />    #define FXRSTORQ_INSN "fxrstorq %[fx]"<br />    #define FX_EXTRA(ptr)<br />  #else<br />    #define FXSAVEQ_INSN "rex64/fxsave (%[fxr])"<br />    #define FXRSTORQ_INSN "rex64/fxrstor (%[fxr])"<br />    #define FX_EXTRA(ptr)  [fxr] "R" (ptr)<br />  #endif<br /><br />and then you should be able to write the actual code something like<br /><br />   asm volatile(FXSAVEQ_INSN<br />      :[fx] "=m" (memory)<br />      :FX_EXTRA(&amp;memory))<br /><br />and<br /><br />  #define __COMMA_CONCAT(x) ,##x<br />  #define COMMA_CONCAT(x) __COMMA_CONCAT(x)<br />  asm volatile(FXRSTRORQ_INSN<br />      : :[fx] "m" (memory) COMMA_CONCAT(FX_EXTRA(&amp;memory)));<br /><br />or something like that (obviously you'll need the exception stuff too there).<br /><br />With no #ifdef's in the actual code. Hmm?<br /><br />                                      Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
