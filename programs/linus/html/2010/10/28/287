    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/10/28/12">First message in thread</a></li><li><a href="/lkml/2010/10/28/224">Ted Ts'o</a><ul><li><a href="/lkml/2010/10/28/264">Linus Torvalds</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 28 Oct 2010 11:54:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Minimum git commit abbrev length (Was Re: -tip: origin tree build failure (was: [GIT PULL] ext4 update) for 2.6.37)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Oct 28, 2010 at 11:28 AM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Yes. The default of 7 (I think) comes from fairly early in git<br />&gt; development, when seven hex digits was a lot (it covers about 250+<br />&gt; million hash values). Back then I thought that 65k revisions was a lot<br />&gt; (it was what we were about to hit in BK), and each revision tends to<br />&gt; be about 5-10 new objects or so, so a million objects was a big<br />&gt; number.<br />&gt;<br />&gt; These days, the kernel isn't even the largest git project, and even<br />&gt; the kernel has about 220k revisions (_much_ bigger than the BK tree<br />&gt; ever was) and we are approaching two million objects. At that point,<br />&gt; seven hex digits is still unique for a lot of them, but when we're<br />&gt; talking about just two orders of magnitude difference between number<br />&gt; of objects and the hash size, there _will_ be hash collisions. It's no<br />&gt; longer even close to unrealistic - it happens all the time.<br /><br />Hmm. In fact, in the kernel, we currently have about twelve thousand<br />objects that end up having collisions in 7 hex digits. Even in the old<br />historical BK kernel tree, we have over a thousand objects that<br />collide (each bucket in both cases gets just two objects, there are as<br />of yet no multiple collisions, which is what you'd expect with a good<br />hash). See with<br /><br />  git rev-list --objects --all | cut -c1-7 | sort | uniq -dc<br /><br />and in fact git itself has a few collisions (but currently just 44<br />objects ending up sharing 22 SHA1 buckets in 7 digits).<br /><br />With each digit, you'd expect the collisions to decrease by a factor<br />of 16, and that is indeed exactly what happens. For my current kernel<br />tree I get:<br /><br /> - 7 digits: 5823 buckets with duplicates (ie 11646 objects that aren't unique)<br /> - 8: 406<br /> - 9: 30<br /> - 10: 1<br /> - 11: 0<br /><br />so 12 hex digits is indeed pretty safe for the kernel, and is likely<br />to remain so until the kernel history grows by a factor of 16.<br /><br />                        Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
