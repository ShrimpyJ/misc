    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/10/25/411">First message in thread</a></li><li><a href="/lkml/2010/10/27/301">Eric Dumazet</a><ul><li><a href="/lkml/2010/10/27/336">Eric Dumazet</a><ul><li class="origin"><a href="/lkml/2010/10/28/203">Linus Torvalds</a><ul><li><a href="/lkml/2010/10/28/203">Eric Dumazet</a></li><li><a href="/lkml/2010/10/28/207">Mel Gorman</a></li><li><a href="/lkml/2010/10/28/208">Christoph Lameter</a><ul><li><a href="/lkml/2010/10/28/354">Andrew Morton</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 28 Oct 2010 08:59:42 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] numa: fix slab_node(MPOL_BIND)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Hmm. More people added to the discussion..<br /><br />This code seems to go back all the way to commit 19770b32609b: "mm:<br />filter based on a nodemask as well as a gfp_mask". Which was back in<br />April 2008. and got merged into 2.6.26.<br /><br />And I'd be happy to commit it (in fact, I was going to), but when<br />looking for other uses of first_zones_zonelist(), I found<br />local_memory_node() which does the exact same thing: ignore the return<br />value, and unconditionally dereference the resulting 'zone' variable.<br /><br />And so does - although less obviously - mm/vmscan.c for the<br />wait_iff_confgested() thing.<br /><br />So are those buggy too, since first_zones_zonelist() can apparently return NULL?<br /><br />Please advise...<br /><br />                  Linus<br /><br />On Wed, Oct 27, 2010 at 10:33 AM, Eric Dumazet &lt;eric.dumazet&#64;gmail.com&gt; wrote:<br />&gt; Le mercredi 27 octobre 2010 à 18:07 +0200, Eric Dumazet a écrit :<br />&gt;<br />&gt;&gt; So I tried following experiment :<br />&gt;&gt;<br />&gt;&gt; # swapoff<br />&gt;&gt; # numactl --membind=0 swapon -a<br />&gt;&gt; # grep swap /proc/vmallocinfo<br />&gt;&gt; 0xf9bf3000-0xf9cf4000 1052672 sys_swapon+0x4aa/0xb24 pages=256 vmalloc N0=256<br />&gt;&gt; # swapoff -a<br />&gt;&gt; # numactl --membind=1 swapon -a<br />&gt;&gt;<br />&gt;&gt; &lt;&lt;FREEZE&gt;&gt;<br />&gt;&gt;<br />&gt;<br />&gt; Crash in fact, not freeze, in slab_node()<br />&gt;<br />&gt; Problem is : we dereference a NULL zone pointer.<br />&gt;<br />&gt; (node 1 has HighMem only)<br />&gt;<br />&gt; Following patch seems to solve the problem for me<br />&gt;<br />&gt; # swapoff -a<br />&gt; # numactl --membind=1 swapon -a<br />&gt; # grep swap /proc/vmallocinfo<br />&gt; 0xf9da5000-0xf9ea6000 1052672 sys_swapon+0x3f9/0xa34 pages=256 vmalloc N1=256<br />&gt;<br />&gt;<br />&gt; Thanks<br />&gt;<br />&gt;<br />&gt; [PATCH] numa: fix slab_node(MPOL_BIND)<br />&gt;<br />&gt; When a node contains only HighMem memory, slab_node(MPOL_BIND)<br />&gt; dereferences a NULL pointer.<br />&gt;<br />&gt; Signed-off-by: Eric Dumazet &lt;eric.dumazet&#64;gmail.com&gt;<br />&gt; ---<br />&gt;  mm/mempolicy.c |    2 +-<br />&gt;  1 file changed, 1 insertion(+), 1 deletion(-)<br />&gt;<br />&gt; diff --git a/mm/mempolicy.c b/mm/mempolicy.c<br />&gt; index 81a1276..4a57f13 100644<br />&gt; --- a/mm/mempolicy.c<br />&gt; +++ b/mm/mempolicy.c<br />&gt; &#64;&#64; -1597,7 +1597,7 &#64;&#64; unsigned slab_node(struct mempolicy *policy)<br />&gt;                (void)first_zones_zonelist(zonelist, highest_zoneidx,<br />&gt;                                                        &amp;policy-&gt;v.nodes,<br />&gt;                                                        &amp;zone);<br />&gt; -               return zone-&gt;node;<br />&gt; +               return zone ? zone-&gt;node : numa_node_id();<br />&gt;        }<br />&gt;<br />&gt;        default:<br />&gt;<br />&gt;<br />&gt; --<br />&gt; To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />&gt; the body of a message to majordomo&#64;vger.kernel.org<br />&gt; More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />&gt; Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br />&gt;<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
