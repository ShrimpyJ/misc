    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/10/21/223">First message in thread</a></li><li><a href="/lkml/2010/10/21/223">Jiri Slaby</a><ul><li class="origin"><a href="/lkml/2010/10/21/435">Linus Torvalds</a><ul><li><a href="/lkml/2010/10/21/435">Jiri Slaby</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 21 Oct 2010 07:17:34 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/1] Char: TTY, restore tty_ldisc_wait_idle</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Oct 21, 2010 at 6:58 AM, Jiri Slaby &lt;jslaby&#64;suse.cz&gt; wrote:<br />&gt; It was removed in 65b770468e98 (tty-ldisc: turn ldisc user count into<br />&gt; a proper refcount), but we need to wait for last user to quit the<br />&gt; ldisc before we close it in tty_set_ldisc.<br />&gt;<br />&gt; Otherwise weird things start to happen. There might be processes<br />&gt; waiting in tty_read-&gt;n_tty_read on tty-&gt;read_wait for input to appear<br />&gt; and at that moment, a change of ldisc is fatal. n_tty_close is called,<br />&gt; it frees read_buf and the waiting process is still in the middle of<br />&gt; reading and goes nuts after it is woken.<br /><br />Hmm. Looks reasonable. And the waiting is outside the lock, so there<br />aren't any of the problem cases that caused the original changes. And<br />we don't need the lock, because the TTY_LDISC_CHANGING bit will<br />protect against anything new coming in, so we don't have races with<br />the count going up afterwards.<br /><br />And you're right about the lockless approach being reasonable inside<br />the testing code too - it's atomic as you say, and we don't touch/care<br />about anything else.<br /><br />So I don't have any objections, apart from thinking that the ldisc<br />code is apparently still too fragile if this is needed.  But the ldisc<br />change is so special that I don't think this is a unreasonable hack.<br />Even if it _is_ a bit of a hack still.<br /><br />So feel free to add an acked-by: from me. Whoever saw the problem<br />should probably test the patch first, though.<br /><br />                                Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
