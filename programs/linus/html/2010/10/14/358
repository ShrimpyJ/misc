    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/10/14/282">First message in thread</a></li><li><a href="/lkml/2010/10/14/350">Andrew Morton</a><ul><li><a href="/lkml/2010/10/14/351">Randy Dunlap</a></li><li><a href="/lkml/2010/10/14/353">Jan Engelhardt</a><ul><li><a href="/lkml/2010/10/14/355">Andrew Morton</a></li><li class="origin"><a href="/lkml/2010/10/14/373">Linus Torvalds</a><ul><li><a href="/lkml/2010/10/14/373">Jan Engelhardt</a></li><li><a href="/lkml/2010/10/14/411">Stephen Rothwell</a></li></ul></li><li><a href="/lkml/2010/10/15/55">Andi Kleen</a><ul><li><a href="/lkml/2010/10/15/82">Andrew Morton</a><ul><li><a href="/lkml/2010/10/15/132">Andreas Gruenbacher</a></li></ul></li><li><a href="/lkml/2010/10/15/131">Jan Engelhardt</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 14 Oct 2010 15:13:27 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Process to push changes to include/linux/types.h</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Oct 14, 2010 at 2:50 PM, Jan Engelhardt &lt;jengelh&#64;medozas.de&gt; wrote:<br />&gt;<br />&gt;&gt;&gt; (See v2.6.24-6165-gc82a5cb)<br />&gt;&gt;<br />&gt;&gt;hm, what does that mean.<br />&gt;<br />&gt; Eh, it's a git commit identifier. When people throw around with these<br />&gt; (or their longer, 40-char variants), it is suggested to use `git log<br />&gt; -1 -p v2.6.24-6165-gc82a5cb` to see the details.<br /><br />[ I'm sure you know this, but just for any innocent non-git<br />by-standers out there ]<br /><br />Well, technically it's more than just a git ID. It actually has some<br />descriptive value, and it's generated by "git descibe".<br /><br />In something like the above, the only part git cares about in this<br />case is the (shortened) SHA1 hash, ie the "c82a5cb" part. Everything<br />else is just a mostly human-readable description, which boils down to<br />"based on v2.6.24, there's 6165 additional commits, and git commit<br />c82a5cb is where you end up". So the output is designed to (a) give<br />some helpful information even for intermediate places that aren't<br />exact tagged releases and (b) also work with other SCM's (that "-g"<br />part there is for "git" - but scripts/setlocalversion is able to give<br />somewhat reasonable output for hg and svn too.<br /><br />Extended background for non-git people: git _internally_ only uses the<br />160-bit SHA1 (which in its full ASCII form is 40 hex characters). But<br />because that is so human-unfriendly, there are various human-readable<br />ways to express it:<br /><br /> - Just a shortened unique version, usually 7-12 hex characters. 12<br />hex characters is already unique in practice for pretty much any<br />reasonable project, and is much easier to write.<br /><br />   I tend to use the 12-character short version in commit messages,<br />for example. The full 40-character SHA1 makes it hard to do any sane<br />line breaks with in the commit message.<br /><br /> - named tags or branches ("v2.6.36-rc7", or "master" etc)<br /><br /> - The &lt;random human-readable noise&gt; + "-g" + &lt;shortened SHA1&gt; thing<br />described above (output by "git describe", and on input git ignores<br />the human-readable part), where the human-readable part tries to give<br />a release as a base for it.<br /><br /> - a "git revision expression", where you can mix and match SHA1's or<br />named tags/branches, and their parenthood relationsips.<br /><br />So that "v2.6.24-6165-gc82a5cb" could be expressed as<br /><br /> - c82a5cb8b2b2ce15f1fb8add6772921b72da5943 (full SHA1)<br /><br /> - c82a5cb8b2b2 (abbreviated to 12 hex chars)<br /><br /> - v2.6.25-rc1~1089^2~98<br /><br />where that last one is saying "you can reach it from v2.6.25-rc1 by<br />walking 1089 parents down, then taking the second parent in that<br />merge, and then walking 98 parents down again".<br /><br />It's worth noting that the "v2.6.24-6165" - while human-readable and<br />thus useful - is technically meaningless. Since development isn't a<br />straight line, "6165 commits after 2.6.24" is really not a<br />well-defined point. It tells you _something_ - namely "not really very<br />close to plain 2.6.24" - but there may well be many places in the<br />history that are 6165 commits away from 2.6.24.<br /><br />Which is why git really just ignores that human-readable part on input.<br /><br />In contrast, the "v2.6.25-rc1~1089^2~98" expression is actually<br />well-defined. There is no ambiguity there, but it's also obviously not<br />really all that human-readable.<br /><br />                              Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
