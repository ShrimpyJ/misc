    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/10/19/390">First message in thread</a></li><li><a href="/lkml/2010/10/19/390">Eric Paris</a><ul><li><a href="/lkml/2010/10/19/399">Al Viro</a><ul><li class="origin"><a href="/lkml/2010/10/19/424">Linus Torvalds</a><ul><li><a href="/lkml/2010/10/19/424">Al Viro</a><ul><li><a href="/lkml/2010/10/19/439">Mimi Zohar</a></li><li><a href="/lkml/2010/10/19/471">Matthew Wilcox</a></li></ul></li><li><a href="/lkml/2010/10/19/579">Eric Paris</a><ul><li><a href="/lkml/2010/10/20/226">Ingo Molnar</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 19 Oct 2010 10:03:48 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/3] IMA: move read/write counters into struct inode</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Oct 19, 2010 at 9:55 AM, Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt;<br />&gt; a) i_writecount is about VM_DENYWRITE, basically.  Reusing it for ima could<br />&gt; get unpleasant; when it's positive, we are fine, but it can get negative as<br />&gt; well.  IMA will have interesting time dealing with that.<br />&gt;<br />&gt; b) i_count is simply a refcount for struct inode.  Not exactly the number<br />&gt; of dentries, but that's the main contributor.  Basically, that's "how many<br />&gt; pointers outside of inode hash chains point that that struct inode at the<br />&gt; moment".<br /><br />My question was deeper. More along the lines of "why would IMA care?"<br /><br />How/why could IMA ever care about the pointless and trivial<br />differences between its current private open/read/write counts and the<br />counts that we already maintain?<br /><br />Yes, yes, I realize that they have technical differences in what they<br />count. That's not the question. The question is "Why would IMA care?"<br /><br />                       Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
