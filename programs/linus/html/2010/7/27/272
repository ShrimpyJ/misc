    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/7/27/200">First message in thread</a></li><li><a href="/lkml/2010/7/27/210">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/27/225">David Howells</a><ul><li class="origin"><a href="/lkml/2010/7/28/90">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/28/90">Jiri Olsa</a></li><li><a href="/lkml/2010/7/28/162">David Howells</a><ul><li><a href="/lkml/2010/7/28/177">David Howells</a></li><li><a href="/lkml/2010/7/28/183">David Howells</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 27 Jul 2010 10:56:20 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] cred - synchronize rcu before releasing cred</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 27, 2010 at 9:46 AM, David Howells &lt;dhowells&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; That's not the problem.<br />&gt;<br />&gt; The problem is that task_state() accesses the target task's credentials whilst<br />&gt; only holding the RCU read lock.  That means that the existence of the cred<br />&gt; struct so accessed can only be guaranteed up to the point that the RCU read<br />&gt; lock is released.<br /><br />Umm. In that case, get_task_cred() is actively misleading.<br /><br />What you are saying is that you cannot do<br /><br />   rcu_read_lock()<br />   __cred = (struct cred *) __task_cred((task));<br />   get_cred(__cred);<br />   rcu_read_unlock();<br /><br />but that is _exactly_ what get_task_cred() does. And that<br />__task_cred() check checks that we have<br /><br />   rcu_read_lock_held() || lockdep_tasklist_lock_is_held()<br /><br />and what you are describing would require us to have a '&amp;&amp;' rather<br />than a '||' in that test. Because it is _not_ sufficient to have just<br />the rcu_read_lock held.<br /><br />So it looks like the validation is simply wrong. The __task_cred()<br />helper is buggy. It's used for two different cases, and they have<br />totally different locking requirements.<br /><br />Case #1:<br /> - you can do __task_cred() with just read-lock held, but then you<br />cannot add refs to it<br /><br />Case #2:<br /> - you can do __task_cred() with read-lock held _and_ guaranteeing<br />that the task doesn't go away, and then you can hold a ref to it as<br />long as you still guarantee the task is around.<br /><br />And the comments are actively wrong. The comments talk about the "case<br />#2" thing only. Ignoring case #1, except for the fact that the _check_<br />allows case #1, so you never get a warning from the RCU "proving" code<br />even for incorrect code.<br /><br />So presumably Jiri's patch is correct, but the reason the bug happened<br />in the first place is that all those accessor functions are totally<br />confused about how they supposed to be used, with incorrect comments<br />and incorrect access checks.<br /><br />That should get fixed. Who knows how many other buggy users there are<br />due to the confusion?<br /><br />                   Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
