    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/7/14/204">First message in thread</a></li><li><a href="/lkml/2010/7/14/532">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/15/220">Mathieu Desnoyers</a><ul><li class="origin"><a href="/lkml/2010/7/15/240">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/15/240">Linus Torvalds</a></li><li><a href="/lkml/2010/7/15/313">Mathieu Desnoyers</a><ul><li><a href="/lkml/2010/7/15/321">Linus Torvalds</a></li><li><a href="/lkml/2010/7/16/317">Mathieu Desnoyers</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 15 Jul 2010 11:43:10 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 1/2] x86_64 page fault NMI-safe</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Jul 15, 2010 at 11:31 AM, Mathieu Desnoyers<br />&lt;mathieu.desnoyers&#64;efficios.com&gt; wrote:<br />&gt;<br />&gt; Hrm, we could probably get away with only keeping the nmi_stack_nested per-cpu<br />&gt; variable. The nmi_stack_ptr could be known statically if we set it at a fixed<br />&gt; offset from the bottom of stack rather than using an offset relative to the top<br />&gt; (which can change depending if we are nested over the kernel or userspace).<br />&gt; We just have to reserve enough space for the bottom of stack.<br /><br />I thought about trying that, but I don't think it's true. At least not<br />for the 32-bit case.<br /><br />The thing is, the 32-bit case will re-use the kernel stack if it<br />happens in kernel space, and will thus start from a random space (and<br />won't push all the information anyway). So a nested NMI really doesn't<br />know where the original NMI stack is to be found unless we save it<br />off.<br /><br />In the case of x86-64, I think the stack will always be at a fixed<br />address, and push a fixed amount of data (because we use the IST<br />thing). So there you could probably just use the flag, but you'd still<br />have to handle the 32-bit case, and quite frankly, I think it would be<br />much nicer if the logic could be shared for the 32-bit and 64-bit<br />cases.<br /><br />But maybe I'm missing something.<br /><br />             Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
