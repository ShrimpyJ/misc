    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/7/14/204">First message in thread</a></li><li><a href="/lkml/2010/7/15/259">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/15/240">Linus Torvalds</a></li><li><a href="/lkml/2010/7/15/313">Mathieu Desnoyers</a><ul><li class="origin"><a href="/lkml/2010/7/15/322">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/15/322">"H. Peter Anvin"</a></li><li><a href="/lkml/2010/7/15/323">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/15/328">"H. Peter Anvin"</a></li><li><a href="/lkml/2010/7/15/331">Andi Kleen</a></li></ul></li><li><a href="/lkml/2010/7/15/324">Mathieu Desnoyers</a></li></ul></li><li><a href="/lkml/2010/7/16/317">Mathieu Desnoyers</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 15 Jul 2010 15:16:12 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 1/2] x86_64 page fault NMI-safe</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Jul 15, 2010 at 3:01 PM, Mathieu Desnoyers<br />&lt;mathieu.desnoyers&#64;efficios.com&gt; wrote:<br />&gt;<br />&gt;                 . NMI exit code<br />&gt; and fake NMI entry are made reentrant with respect to NMI handler interruption<br />&gt; by testing, at the very beginning of the NMI handler, if a NMI is nested over<br />&gt; the whole nmi_atomic .. nmi_atomic_end code region.<br /><br />That is totally bogus. The NMI can be nested by exceptions and<br />function calls - the whole _point_ of this thing. So testing "rip" for<br />anything else than the specific final "iret" is meaningless. You will<br />be in an NMI region regardless of what rip is.<br /><br />&gt; This code assumes NMIs have a separate stack.<br /><br />It also needs to be made per-cpu (and the flags be per-cpu).<br /><br />Then you could in fact possibly test the stack pointer for whether it<br />is in the NMI stack area, and use the value of %rsp itself as the<br />flag. So you could avoid the flag entirely. Because testing %rsp is<br />valid - testing %rip is not.<br /><br />That would also avoid the race, because %rsp (as a flag) now gets<br />cleared atomically by the "iret". So that might actually solve things.<br /><br />                          Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
