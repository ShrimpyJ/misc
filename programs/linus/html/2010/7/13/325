    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/7/1/295">First message in thread</a></li><li><a href="/lkml/2010/7/13/317">Peter Palfrader</a><ul><li><a href="/lkml/2010/7/13/322">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2010/7/13/332">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/13/332">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2010/7/13/404">"H. Peter Anvin"</a></li></ul></li><li><a href="/lkml/2010/7/13/333">Peter Palfrader</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 13 Jul 2010 10:59:49 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 134/149] x86, paravirt: Add a global synchronization point  for pvclock</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 13, 2010 at 10:50 AM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; No, you didn't back-port it wrong. I just didn't fix the right part. I<br />&gt; thought the PV code used xchg, not cmpxchg, so I only patched that.<br />&gt; But cmpxchg has the exact same issue.<br />&gt;<br />&gt; Does this fix it?<br /><br />Btw, this second patch was a bit more aggressive than the first one,<br />and actually removes the "memory" clobber entirely, and the fake cast<br />of the target type.<br /><br />That shouldn't matter _except_ if people actually use cmpxchg to<br />implement their own locking, since now the compiler could potentially<br />move unrelated memory references around the lock. Of course, if you<br />use cmpxchg to implement your own locking, you're probably doing<br />something wrong anyway (ie you'll get the wrong memory barriers on<br />various architectures), so it should all be fine.<br /><br />But I thought I'd mention it. And I don't really know how much gcc<br />moves memory accesses around a "asm volatile" - the gcc docs are<br />historically very vague ("volatile asms aren't moved around<br />'significantly'", whatever 'significant' means)<br /><br />And btw, none of the above should be taken to mean that I have tested<br />the patch or found it to be otherwise good. It might be totally broken<br />for other reasons. Caveat emptor.<br /><br />                             Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
