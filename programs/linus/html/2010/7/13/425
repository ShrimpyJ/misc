    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/7/1/295">First message in thread</a></li><li><a href="/lkml/2010/7/13/404">"H. Peter Anvin"</a><ul><li><a href="/lkml/2010/7/13/420">Jeremy Fitzhardinge</a><ul><li class="origin"><a href="/lkml/2010/7/14/240">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/14/240">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2010/7/14/242">"H. Peter Anvin"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 13 Jul 2010 17:15:02 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 134/149] x86, paravirt: Add a global synchronization point  for pvclock</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 13, 2010 at 4:49 PM, Jeremy Fitzhardinge &lt;jeremy&#64;goop.org&gt; wrote:<br />&gt;<br />&gt; The documentation makes no reference to that property; in fact it<br />&gt; suggests it is outright not true:<br /><br />The gcc documentation wrt inline asm's is totally worthless. Don't<br />even bother quoting it - because the gcc people themselves have never<br />cared. If the docs ever end up not matching what they want to do, they<br />will just change the documentation.<br /><br />In other words, at least historically the docs are not in any way<br />meaningful. They are not a "these are the semantics we guarantee",<br />they are just random noise. As I mentioned, the docs historically just<br />said something like "will not be moved significantly", and apparently<br />they've been changed to be something else.<br /><br />The only thing that has ever been meaningful is "this works". And, of<br />course, that has changed over time too, including actual<br />recommendations on how to make something work (as mentioned, iirc "+"<br />was only valid on register constraints, and "+m" used to not be<br />allowed _or_ recommended, these days it's the only way to do certain<br />things).<br /><br />It's irritating, because in other circumstances, gcc people take the<br />reverse approach, and consider paper documentation more important than<br />actual implementation issues.  So sometimes they say "hey, this is the<br />spec", but when it comes to their own docs, the answer has<br />historically been "we'll just change the spec".<br /><br />                         Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
