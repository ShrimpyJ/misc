    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/7/14/204">First message in thread</a></li><li><a href="/lkml/2010/7/14/287">Ingo Molnar</a><ul><li><a href="/lkml/2010/7/14/306">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/14/319">Frederic Weisbecker</a><ul><li><a href="/lkml/2010/7/14/324">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/14/369">Mathieu Desnoyers</a></li><li><a href="/lkml/2010/7/14/439">Frederic Weisbecker</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2010/7/14/326">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/14/326">Andi Kleen</a><ul><li><a href="/lkml/2010/7/14/332">Mathieu Desnoyers</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 14 Jul 2010 12:41:58 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 1/2] x86_64 page fault NMI-safe</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 14, 2010 at 12:14 PM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt; On Wed, Jul 14, 2010 at 11:46 AM, Ingo Molnar &lt;mingo&#64;elte.hu&gt; wrote:<br />&gt;&gt; We could solve that by copying that small stack frame off before entering the<br />&gt;&gt; 'generic' NMI routine - but it all feels a bit pulled in by the hair.<br />&gt;<br />&gt; Why? It's much cleaner than making the _real_ codepaths much worse.<br /><br />.. but if the option is to never take a fault at all from the NMI<br />handler, and that is doable, than that would be good, of course.<br /><br />But that may not be fixable. At least not without much more pain than<br />just adding a fairly simple hack to the NMI path itself, and keeping<br />all the NMI pain away from all the other cases.<br /><br />And doing the per-cpu NMI nesting hack would actually also work as a<br />way to essentially block NMI's from critical regions. With my NMI<br />nestign avoidance suggestion, you could literally do something like<br />this to block NMI's:<br /><br />  /* This is just a fake stack structure */<br />  struct nmi_blocker {<br />     unsigned long rflags;<br />     unsigned long cs;<br />     unsigned long rip;<br />   };<br /><br />  void block_nmi_on_this_cpu(struct nmi_blocker *blocker)<br />  {<br />      get_cpu();<br />      memset(blocker, 0, sizeof(*blocker));<br />      per_cpu_nmi_stack_frame = blocker;<br />  }<br /><br />  void unblock_nmi_on_this_cpu(struct nmi_blocker *blocker)<br />  {<br />     per_cpu_nmi_stack_frame = NULL;<br />     barrier();<br />     /* Did an NMI happen? If so, we're now running NMI-blocked by hardware,<br />      * we need to emulate the NMI and do a real 'iret' here<br />      */<br />     if (blocker-&gt;cs == INVALID_CS)<br />        asm volatile(".. build stack frame, call NMI routine ..");<br />     put_cpu();<br />  }<br /><br />or similar. Wouldn't that be nice to have as a capability?<br /><br />                 Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
