    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/7/14/204">First message in thread</a></li><li><a href="/lkml/2010/7/14/204">Mathieu Desnoyers</a><ul><li><a href="/lkml/2010/7/14/205">Mathieu Desnoyers</a><ul><li class="origin"><a href="/lkml/2010/7/14/233">Linus Torvalds</a><ul><li><a href="/lkml/2010/7/14/233">Mathieu Desnoyers</a><ul><li><a href="/lkml/2010/7/14/264">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2010/7/14/206">Mathieu Desnoyers</a><ul><li><a href="/lkml/2010/7/14/226">"Maciej W. Rozycki"</a><ul><li><a href="/lkml/2010/7/14/266">Mathieu Desnoyers</a><ul><li><a href="/lkml/2010/7/14/309">"Maciej W. Rozycki"</a></li></ul></li></ul></li><li><a href="/lkml/2010/7/16/159">Avi Kivity</a><ul><li><a href="/lkml/2010/7/16/210">Mathieu Desnoyers</a><ul><li><a href="/lkml/2010/7/16/222">Andi Kleen</a></li><li><a href="/lkml/2010/7/16/260">Avi Kivity</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2010/7/14/232">Andi Kleen</a><ul><li><a href="/lkml/2010/7/14/236">Mathieu Desnoyers</a><ul><li><a href="/lkml/2010/7/14/292">Andi Kleen</a><ul><li><a href="/lkml/2010/7/14/479">Tejun Heo</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 14 Jul 2010 09:28:41 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 1/2] x86_64 page fault NMI-safe</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 14, 2010 at 8:49 AM, Mathieu Desnoyers<br />&lt;mathieu.desnoyers&#64;efficios.com&gt; wrote:<br />&gt;&gt; I think you're vastly overestimating what is sane to do from an NMI<br />&gt;&gt; context.  It is utterly and totally insane to assume vmalloc is available<br />&gt;&gt; in NMI.<br /><br />I agree that NMI handlers shouldn't touch vmalloc space. But now that<br />percpu data is mapped through the VM, I do agree that other CPU's may<br />potentially need to touch that data, and an interrupt (including an<br />NMI) might be the first to create the mapping.<br /><br />And that's why the faulting code needs to be interrupt-safe for the<br />vmalloc area.<br /><br />However, it does look like the current scheduler should make it safe<br />to access "current-&gt;mm-&gt;pgd" from regular interrupts, so the problem<br />is apparently only an NMI issue. So exactly what are the circumstances<br />that create and expose percpu data on a CPU _without_ mapping it on<br />that CPU?<br /><br />IOW, I'm missing some background here. I agree that at least some<br />basic percpu data should generally be available for an NMI handler,<br />but at the same time I wonder how come that basic percpu data wasn't<br />already mapped?<br /><br />The traditional irq vmalloc race was something like:<br /> - one CPU does a "fork()", which copies the basic kernel mappings<br /> - in another thread a driver does a vmalloc(), which creates a _new_<br />mapping that didn't get copied.<br /> - later on a switch_to() switches to the newly forked process that<br />missed the vmalloc initialization<br /> - we take an interrupt for the driver that needed the new vmalloc<br />space, but now it doesn't have it, and we fill it in at run-time for<br />the (rare) race.<br /><br />and I'm simply not seeing how fork() could ever race with percpu data setup.<br /><br />So please just document the sequence that actually needs the page<br />table setup for the NMI/percpu case.<br /><br />This patch (1/2) doesn't look horrible per se. I have no problems with<br />it. I just want to understand why it is needed.<br /><br />                        Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
