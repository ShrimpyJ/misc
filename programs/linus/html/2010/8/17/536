    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/8/17/521">First message in thread</a></li><li><a href="/lkml/2010/8/17/521">David Miller</a><ul><li class="origin"><a href="/lkml/2010/8/17/542">Linus Torvalds</a><ul><li><a href="/lkml/2010/8/17/542">Linus Torvalds</a><ul><li><a href="/lkml/2010/8/17/547">David Miller</a><ul><li><a href="/lkml/2010/8/18/9">Benjamin Herrenschmidt</a></li></ul></li></ul></li><li><a href="/lkml/2010/8/17/545">David Miller</a><ul><li><a href="/lkml/2010/8/17/551">Al Viro</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 17 Aug 2010 18:31:50 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT] Sparc</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Aug 17, 2010 at 6:03 PM, David Miller &lt;davem&#64;davemloft.net&gt; wrote:<br />&gt;<br />&gt; Among other things, this fixes the rwsem signedness issue we<br />&gt; were discussing earlier today.<br /><br />Your commit message is missing the C rules for hex constants. It says<br /><br />  "hex constants are unsigned unless explicitly casted or negated."<br /><br />and that's not true.<br /><br />The rule is that hex constants are signed _except_ if they don't fit<br />in a signed.<br /><br />So with a 32-bit 'int', 0x123 is signed, but 0x80000000 is unsigned.<br /><br />So the reason (-0x00010000) is signed is _not_ because of the<br />negation, but simply because 0x00010000 fits in a signed int. So for<br />example, the constant (-0xf0000000) is still unsigned, despite the<br />negation.<br /><br />So to make something signed, you need to either cast it, make sure it<br />fits in a signed int, use the 'l' postfix (which also makes it long,<br />of course), or use a decimal representation. So<br /><br />   #define X 4294901760<br /><br />is a _signed_ constant with same value as 0xffff0000 (but it's "signed<br />long", because the rules for decimal numbers and hex numbers are<br />different: a decimal number is always signed and because it doesn't<br />fit in 'int' it will extend to 'long'. A hex number is first done as<br />unsigned, and only extended to long if it doesn't fit in that.<br /><br />To make things _really_ confused, sometimes the types actually depend<br />on whether you're compiling with the c90 standards. A decimal constant<br />is _always_ signed in traditional C - it goes from 'int' to 'long',<br />and stays 'long' even if it doesn't fit (ie with a 32-bit long,<br />2147483648 is of type 'long' even though it doesn't fit in 'long' and<br />is negative). But in c90, it does from 'int' to 'long' to 'unsigned<br />long'.<br /><br />Or maybe it was the other way around. I forget.<br /><br />Confused yet?<br /><br />The basic rule becomes: never _ever_ overflow 'int' in a constant,<br />without specifying the exact type you want. That way you avoid all the<br />subtle cases.<br /><br />                     Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
