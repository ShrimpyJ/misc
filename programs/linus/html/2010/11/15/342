    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/11/6/52">First message in thread</a></li><li><a href="/lkml/2010/11/15/316">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/15/330">Jim Bos</a><ul><li><a href="/lkml/2010/11/15/335">Jim Bos</a></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2010/11/15/346">Jakub Jelinek</a><ul><li><a href="/lkml/2010/11/15/365">Jakub Jelinek</a><ul><li><a href="/lkml/2010/11/15/370">Linus Torvalds</a></li><li><a href="/lkml/2010/11/15/388">Richard Henderson</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Nov 2010 10:56:14 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: gcc 4.5.1 / as 2.20.51.0.11 miscompiling drivers/char/i8k.c ?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Nov 15, 2010 at 10:30 AM, Jim Bos &lt;jim876&#64;xs4all.nl&gt; wrote:<br />&gt;<br />&gt; Attached version with plain 2.6.36 source and version with the committed<br />&gt; patch, i.e with the '"+m" (*regs)'<br /><br />Looks 100% identical in i8k_smm() itself, and I'm not seeing anything<br />bad. The asm has certainly not been optimized away as implied in the<br />archlinux thread.<br /><br />There are differences, but they are with code generation *elsewhere*.<br /><br />To me it is starting to look like the real problem is that gcc has<br />decided that the "i8k_smm()" function is "__attribute__((const))".<br /><br />Which is clearly totally bogus. If a function has an inline asm that<br />has a memory clobber, it is clearly *not* 'const'. But that does<br />explain the bug, and does explain why "+m" makes a difference and why<br />"noinline" does not.<br /><br />So what I _think_ happens is that<br /><br /> - gcc logic for the automatic 'const' attribute for functions is<br />broken, so it marks that function 'const'.<br /><br /> - since the rule for a const function is that it only _looks_ at its<br />attributes and has no side effects, now the callers will decide that<br />'i8k_smm()' cannot change the passed-in structure, so they'll happily<br />optimize away all the accesses to it.<br /><br />                       Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
