    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/10/19/123">First message in thread</a></li><li><a href="/lkml/2010/11/15/511">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/15/524">Mike Galbraith</a><ul><li class="origin"><a href="/lkml/2010/11/15/553">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/15/553">Paul Menage</a><ul><li><a href="/lkml/2010/11/16/169">Mike Galbraith</a></li><li><a href="/lkml/2010/11/16/191">Peter Zijlstra</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Nov 2010 17:18:50 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC/RFT PATCH v3] sched: automated per tty task groups</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Hmm. Just found a bug. I'm not sure if it's the autogroup patches<br />themselves, or whether it's just the cgroup code that the autogroup<br />patch enables for me.<br /><br />When I do<br /><br />   echo t &gt; /proc/sysrq-trigger<br /><br />(or "w") I get a NULL pointer dereference (offset 0x38 - decimal 56)<br />in "cgroup_path+0x7", with a call trace of sched_debug_show,<br />show_state_filter, sysrq_handle_showstate_blocked. I don't have the<br />whole oops, because the machine is really dead at that point<br />(presumably died holding the runqueue lock or some other critical<br />resource), but if required I could take a photo of it. However, I bet<br />it is repeatable, so I doubt you need it.<br /><br />Anyway, that "cgroup_path+0x7" is the very first memory dereference:<br /><br />    movq    56(%rdi), %rsi  # cgrp_5(D)-&gt;dentry, _________p1<br /><br />so sched_debug_show() is apparently calling cgroup_path() with a NULL<br />cgroup. I think it's "print_task()" that is to blame, it does<br /><br />     cgroup_path(task_group(p)-&gt;css.cgroup, ..<br /><br />without checking whether there _is_ any css.cgroup.<br /><br />Peter, that looks like your code (commit d19ca30874f2)<br /><br />Guys?<br /><br />                      Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
