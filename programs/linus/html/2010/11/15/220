    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/11/6/52">First message in thread</a></li><li><a href="/lkml/2010/11/15/108">Andi Kleen</a><ul><li><a href="/lkml/2010/11/15/118">Jakub Jelinek</a><ul><li><a href="/lkml/2010/11/15/125">Andi Kleen</a><ul><li><a href="/lkml/2010/11/15/265">Jim Bos</a><ul><li><a href="/lkml/2010/11/15/293">Jakub Jelinek</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2010/11/15/272">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/15/272">Jim Bos</a><ul><li><a href="/lkml/2010/11/15/316">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2010/11/15/220/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Nov 2010 08:04:49 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: gcc 4.5.1 / as 2.20.51.0.11 miscompiling drivers/char/i8k.c ?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Nov 15, 2010 at 3:16 AM, Jakub Jelinek &lt;jakub&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; I don't see any problems on the assembly level.  i8k_smm is<br />&gt; not inlined in this case and checks all 3 conditions.<br /><br />If it really is related to gcc not understanding that "*regs" has<br />changed due to the memory being an automatic variable, and passing in<br />"regs" itself as a pointer to that automatic variable together with<br />the "memory" clobber not being sufficient, than I think it's the lack<br />of inlining that will automatically hide the bug.<br /><br />(Side note: and I think this does show how much of a gcc bug it is not<br />to consider "memory" together with passing in a pointer to an asm to<br />always be a clobber).<br /><br />Because if it isn't inlined, then "regs" will be seen a a real pointer<br />to some external memory (the caller) rather than being optimized to<br />just be the auto structure on the stack. Because *mem is auto only<br />within the context of the caller.<br /><br />Which actually points to a possible simpler:<br /> - remove the "+m" since it adds too much register pressure<br /> - mark the i8k_smm() as "noinline" instead.<br /><br />Quite frankly, I'd hate to add even more crud to that inline asm (to<br />save/restore the registers manually). It's already not the prettiest<br />thing around.<br /><br />So does the attached patch work for everybody?<br /><br />                             Linus<br /> drivers/char/i8k.c |    6 +++---<br /> 1 files changed, 3 insertions(+), 3 deletions(-)<br /><br />diff --git a/drivers/char/i8k.c b/drivers/char/i8k.c<br />index f0863be..101011e 100644<br />--- a/drivers/char/i8k.c<br />+++ b/drivers/char/i8k.c<br />&#64;&#64; -114,7 +114,7 &#64;&#64; static inline const char *i8k_get_dmi_data(int field)<br /> /*<br />  * Call the System Management Mode BIOS. Code provided by Jonathan Buzzard.<br />  */<br />-static int i8k_smm(struct smm_regs *regs)<br />+static noinline int i8k_smm(struct smm_regs *regs)<br /> {<br /> 	int rc;<br /> 	int eax = regs-&gt;eax;<br />&#64;&#64; -142,7 +142,7 &#64;&#64; static int i8k_smm(struct smm_regs *regs)<br /> 		"lahf\n\t"<br /> 		"shrl $8,%%eax\n\t"<br /> 		"andl $1,%%eax\n"<br />-		:"=a"(rc), "+m" (*regs)<br />+		:"=a"(rc)<br /> 		:    "a"(regs)<br /> 		:    "%ebx", "%ecx", "%edx", "%esi", "%edi", "memory");<br /> #else<br />&#64;&#64; -168,7 +168,7 &#64;&#64; static int i8k_smm(struct smm_regs *regs)<br /> 	    "lahf\n\t"<br /> 	    "shrl $8,%%eax\n\t"<br /> 	    "andl $1,%%eax\n"<br />-	    :"=a"(rc), "+m" (*regs)<br />+	    :"=a"(rc)<br /> 	    :    "a"(regs)<br /> 	    :    "%ebx", "%ecx", "%edx", "%esi", "%edi", "memory");<br /> #endif</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
