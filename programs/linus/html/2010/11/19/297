    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/10/19/123">First message in thread</a></li><li><a href="/lkml/2010/11/19/253">Lennart Poettering</a><ul><li><a href="/lkml/2010/11/19/258">David Miller</a><ul><li class="origin"><a href="/lkml/2010/11/19/337">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/19/337">Ben Gamari</a><ul><li><a href="/lkml/2010/11/19/354">Linus Torvalds</a></li><li><a href="/lkml/2010/11/19/386">Paul Menage</a></li><li><a href="/lkml/2010/11/19/693">Lennart Poettering</a></li></ul></li><li><a href="/lkml/2010/11/19/345">Mike Galbraith</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 19 Nov 2010 09:51:14 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC/RFT PATCH v3] sched: automated per tty task groups</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Guys, calm down. It's really not -that- much of a deal.<br /><br />We can do both. There is basically zero cost in the kernel: you can<br />disabled the feature, and it's not like it's a maintenance headache<br />(all the complexity that matters is the group scheduling itself, not<br />the autogroup code that is well separated). And the kernel approach is<br />useful to just take an otherwise unmodified system and just make it<br />have nice default behavior.<br /><br />And the user level approach? I think it's fine too. If you run systemd<br />for other reasons (or if the gnome people add it to the task launcher<br />or whatever), doing it there isn't wrong. I personally think it's<br />somewhat disgusting to have a user-level callback with processes etc<br />just to clean up a group, but whatever.  As long as it's not common,<br />who cares?<br /><br />And you really _can_ combine them. As mentioned, I'd be nervous about<br />AIM benchmarks. I keep mentioning AIM, but that's because it has shown<br />odd tty issues before. Back when the RT guys wanted to do that crazy<br />blocking BKL thing (replace the spinlock with a semaphore), AIM7<br />plummeted by 40%. And people were looking all over the place (file<br />locking etc), and the tty layer was the biggest reason iirc.<br /><br />Now, I don't know if AIM7 actually uses setsid() heavily etc, and it's<br />possible it never hits it at all and only does read/write/kill. And<br />it's not like AIM7 is the main thing we should look at regardless. But<br />the point is that we know that there are some tty-heavy loads that are<br />relevant, and it's very possible that a hybrid approach with "tty's<br />handled automatically by the kernel, window manager does others in<br />user space" would be a good way to avoid the (potential) nasty side of<br />something that has a lot of short-lived tty connections.<br /><br />So guys, calm down. We don't need to hate each other.<br /><br />                        Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
