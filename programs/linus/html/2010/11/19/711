    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/11/19/41">First message in thread</a></li><li><a href="/lkml/2010/11/19/209">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/19/703">huang ying</a><ul><li class="origin"><a href="/lkml/2010/11/20/5">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/20/5">huang ying</a><ul><li><a href="/lkml/2010/11/20/52">Mark Lord</a></li><li><a href="/lkml/2010/11/20/122">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2010/11/20/135">Elias Gabriel Amaral da Silva</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 19 Nov 2010 18:15:54 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/2] Generic hardware error reporting support</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Nov 19, 2010 at 6:04 PM, huang ying<br />&lt;huang.ying.caritas&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; We thought about 'printk' for hardware errors before, but it has some<br />&gt; issues too.<br />&gt;<br />&gt; 1) It mixes software errors and hardware errors. When Andi Kleen<br />&gt; maintained the Machine Check code, he found many users report the<br />&gt; hardware errors as software bug to software vendor instead of as<br />&gt; hardware error to hardware vendor. Having explicit hardware error<br />&gt; reporting interface may help these users.<br /><br />Bah. Many machine checks _were_ software errors. They were things like<br />the BIOS not clearing some old pending state etc.<br /><br />The confusion came not from printk, but simply from ambiguous errors.<br />When is a machine check hardware-related? It's not at all always<br />obvious.<br /><br />Sometimes machine checks are from uninitialized hardware state, where<br />_software_ hasn't initialized it. Is it a hardware bug? No.<br /><br />&gt; 2) Hardware error reporting may flush other information in printk<br />&gt; buffer. Considering one pin of your ECC DIMM is broken, tons of 1 bit<br />&gt; corrected memory error will be reported. Although we can enforce some<br />&gt; kind of throttling, your printk buffer may be full of the hardware<br />&gt; error reporting eventually.<br /><br />Sure. That doesn't change the fact that finding the data is your<br />/var/log/messages and your regular logging tools is still a lot more<br />useful than having some random tool that is specialized and that most<br />IT people won't know about. And that won't be good at doing network<br />reporting etc etc.<br /><br />The thing is, hardware errors aren't that special. Sure, hardware<br />people always think so. But to anybody else, a hardware error is "just<br />another source of issues".<br /><br />Anybody who thinks that hardware errors are special and needs a<br />special interface is missing that point totally.<br /><br />And I really do understand why people inside Intel would miss that<br />point. To YOU guys the hardware errors you report are magical and<br />special. But that's always true. To _everybody_, the errors _they_<br />report is special. Like snowflakes, we're all unique. And we're all<br />the same.<br /><br />&gt; 3) We need some kind of user space hardware error daemon, which is<br />&gt; used to enforce some policy. For example, if the number of corrected<br />&gt; memory errors reported on one page exceeds the threshold, we can<br />&gt; offline the page to prevent some fatal error to occur in the future,<br />&gt; because fatal error may begin with corrected errors in reality. printk<br />&gt; is good for administrator, and may be not good enough for the hardware<br />&gt; error daemon.<br /><br />And by "we", who do you mean exactly? The fact is, "we" covers a lot<br />of ground, and I don't think your statement is in the least true.<br /><br />Yes, IT people want to know. When they start seeing hardware errors,<br />they'll start replacing the machine as soon as they can. Whether that<br />replacement is then "in five minutes" or "four months from now" is up<br />to their management, their replacement policy, and based on how<br />critical that machine is.<br /><br />IT HAS NOTHING WHAT-SO-EVER TO DO WITH HOW OFTEN THE ERRORS HAPPEN.<br /><br />And yes, Intel can do guidelines, but when you say there should be<br />some "enforced policy" by some tool, you're simply just wrong.<br /><br />                  Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
