    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2010/10/19/123">First message in thread</a></li><li><a href="/lkml/2010/11/16/351">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/16/357">Pekka Enberg</a><ul><li><a href="/lkml/2010/11/16/416">Kay Sievers</a><ul><li><a href="/lkml/2010/11/16/426">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2010/11/16/423">Lennart Poettering</a><ul><li><a href="/lkml/2010/11/17/214">Stephen Clark</a></li></ul></li></ul></li><li><a href="/lkml/2010/11/16/359">	david&#64;lang ...</a><ul><li><a href="/lkml/2010/11/16/424">Lennart Poettering</a><ul><li><a href="/lkml/2010/11/16/429">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/16/481">Lennart Poettering</a></li></ul></li><li><a href="/lkml/2010/11/16/435">Pekka Enberg</a></li></ul></li></ul></li><li><a href="/lkml/2010/11/16/369">Dhaval Giani</a><ul><li><a href="/lkml/2010/11/16/385">Diego Calleja</a></li><li class="origin"><a href="/lkml/2010/11/16/396">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/16/396">Paul Menage</a><ul><li><a href="/lkml/2010/11/16/413">Vivek Goyal</a></li></ul></li><li><a href="/lkml/2010/11/16/451">Lennart Poettering</a><ul><li><a href="/lkml/2010/11/20/109">Mika Laitio</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2010/11/16/420">Lennart Poettering</a><ul><li><a href="/lkml/2010/11/16/437">David Miller</a><ul><li><a href="/lkml/2010/11/16/460">Lennart Poettering</a><ul><li><a href="/lkml/2010/11/16/480">David Miller</a></li></ul></li></ul></li><li><a href="/lkml/2010/11/16/455">Alan Cox</a><ul><li><a href="/lkml/2010/11/16/469">Linus Torvalds</a><ul><li><a href="/lkml/2010/11/16/484">Lennart Poettering</a></li><li><a href="/lkml/2010/11/17/502">Lennart Poettering</a></li></ul></li><li><a href="/lkml/2010/11/16/482">Lennart Poettering</a></li></ul></li><li><a href="/lkml/2010/11/17/458">James Cloos</a></li></ul></li><li><a href="/lkml/2010/11/22/17">Balbir Singh</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 16 Nov 2010 11:45:55 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC/RFT PATCH v3] sched: automated per tty task groups</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Nov 16, 2010 at 11:27 AM, Dhaval Giani &lt;dhaval.giani&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; So what do you think about something like systemd handling it. systemd<br />&gt; already does a lot of this stuff already in the form of process<br />&gt; tracking, so it is quite trivial to do this. And more happily avoids<br />&gt; all this complexity in the kernel.<br /><br />What complexity? Have you looked at the patch? It has no complexity anywhere.<br /><br />It's a _lot_ less complex than having system daemons you don't<br />control. We have not had good results with that approach in the past.<br />System daemons tend to cause nasty problems, and debugging them is a<br />nightmare.<br /><br />Have you ever tried to debug the interaction between acpid and the<br />kernel? I doubt it. It's not simple.<br /><br />Did you ever try to understand how the old pcmcia code worked, with<br />the user daemon to handle the add/remove requests?<br /><br />Have you ever really worked with the "interesting" situations that<br />come from the X server handling graphics mode switching, and thus<br />being involved in suspend, resume and VT switching? Trust me, just<br />designing the _interfaces_ to do that thing is nasty, and the code<br />itself was a morass. There's a reason the graphics people wanted to<br />put modeswitching in the kernel. Because doing it in a daemon is a<br />f*cking pain in the ass.<br /><br />Put another way: "do it in user space" usually does _not_ make things simpler.<br /><br />For example: how do you do reference counting for a cgroup in user<br />space, when processes fork and exit without you even knowing it? In<br />kernel space, it's _trivial_. That's what kernel/autogroup.c does, and<br />it has lots of support for it, because that kind of reference counting<br />is exactly what the kernel does.<br /><br />In a system daemon? Good luck with that. It's a nightmare. Maybe you<br />could just poll all the cgroups, and try to remove them once a minute,<br />and if they are empty it works. Or something like that. But what a<br />hacky thing it would be.<br /><br />And more importantly: I don't run systemd. Neither do a lot of other<br />people. The way the patch does things, "it just works".<br /><br />Did you go to the phoronix forum to look at how people reacted to the<br />phoronix article about the patch? There were a number of testers. It<br />was just so _easy_ to test and set up. If you want people to run some<br />specific system daemon, it immediately gets much harder to set up and<br />do.<br /><br />                         Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
