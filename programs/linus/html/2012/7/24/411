    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/7/24/370">First message in thread</a></li><li><a href="/lkml/2012/7/24/400">Linus Torvalds</a><ul><li><a href="/lkml/2012/7/24/407">Jeff Law</a><ul><li><a href="/lkml/2012/7/24/395">Linus Torvalds</a></li><li><a href="/lkml/2012/7/24/406">Josh Boyer</a></li><li class="origin"><a href="/lkml/2012/7/24/415">Linus Torvalds</a><ul><li><a href="/lkml/2012/7/24/415">Josh Boyer</a><ul><li><a href="/lkml/2012/7/24/437">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2012/7/24/413">Jeff Law</a></li><li><a href="/lkml/2012/7/24/414">Andreas Schwab</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 24 Jul 2012 12:55:38 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2] posix_types.h: make __NFDBITS compatible with glibc definition</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 24, 2012 at 12:43 PM, Josh Boyer &lt;jwboyer&#64;redhat.com&gt; wrote:<br />&gt;+  ({ long int __d = (d);                                                   \<br />&gt;      (__builtin_constant_p (__d)                                           \<br />&gt;-      ? (__d &gt;= __FD_SETSIZE                                               \<br />&gt;-        ? __fdelt_warn (__d) : (__d / __NFDBITS))                          \<br />&gt;+      ? (0 &lt;= __d &amp;&amp; __d &lt; __FD_SETSIZE                                            \<br />&gt;+        ? (__d / __NFDBITS)                                                \<br />&gt;+        : __fdelt_warn (__d))                                              \<br />&gt;       : __fdelt_chk (__d)); })<br /><br />Ugh. This depends intimately on gcc doing the whole value range<br />propagation thing, and probably generates horrible code when not<br />optimizing, but whatever. It's irrelevant.<br /><br />I vote we get rid of the crap. We'll force-redefine __FD_SETSIZE,<br />because that's the one we really care about. And then just use our<br />internal names for anything else.<br /><br />IOW, just something like this (whitespace-damaged on purpose, because<br />it won't even compile as-is: we'll also need to replace the few uses<br />of __NFDBITS in the kernel with BITS_PER_LONG).<br /><br />   diff --git a/include/linux/posix_types.h b/include/linux/posix_types.h<br />  index f04c98cf44f3..8a79a5021dc1 100644<br />  --- a/include/linux/posix_types.h<br />  +++ b/include/linux/posix_types.h<br />  &#64;&#64; -15,26 +15,14 &#64;&#64;<br />    */<br /><br />   /*<br />  - * Those macros may have been defined in &lt;gnu/types.h&gt;. But we always<br />  - * use the ones here.<br />  + * This macro may have been defined in &lt;gnu/types.h&gt;. But we always<br />  + * use the one here.<br />    */<br />  -#undef __NFDBITS<br />  -#define __NFDBITS	(8 * sizeof(unsigned long))<br />  -<br />   #undef __FD_SETSIZE<br />   #define __FD_SETSIZE	1024<br /><br />  -#undef __FDSET_LONGS<br />  -#define __FDSET_LONGS	(__FD_SETSIZE/__NFDBITS)<br />  -<br />  -#undef __FDELT<br />  -#define	__FDELT(d)	((d) / __NFDBITS)<br />  -<br />  -#undef __FDMASK<br />  -#define	__FDMASK(d)	(1UL &lt;&lt; ((d) % __NFDBITS))<br />  -<br />   typedef struct {<br />  -	unsigned long fds_bits [__FDSET_LONGS];<br />  +	unsigned long fds_bits [__FD_SETSIZE / (8*sizeof(long))];<br />   } __kernel_fd_set;<br /><br />   /* Type of a signal handler.  */<br /><br />Hmm?<br /><br />              Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
