    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/7/25/524">First message in thread</a></li><li><a href="/lkml/2012/7/25/596">Linus Torvalds</a><ul><li><a href="/lkml/2012/7/25/637">Jeff Garzik</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2012/7/26/47">Ingo Molnar</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Jul 2012 10:14:03 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [git patches] libata updates</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 25, 2012 at 7:10 PM, Jeff Garzik &lt;jgarzik&#64;pobox.com&gt; wrote:<br />&gt;<br />&gt; Thanks, so noted.  I guess if the merge gets more complex than something<br />&gt; easily described in an email, that implies that maintainers should do more<br />&gt; cross-coordination and maybe a merge tree.<br /><br />It's fairly rare. It happens mostly with the arch trees for some<br />reason - the ARM tree used to be an unholy mess.<br /><br />And then we have the small "oops, we didn't even notice" things when<br />some driver (or FS) interface changes, and we have a new driver/fs or<br />just extended an old one, and there's a subtle conflict. And people<br />miss those, and quite frankly, it's not a huge deal. We can fix it up<br />later. It's the "oh, I knew about this" cases where it's fixed up as a<br />separate commit I dislike.<br /><br />And quite frankly, I really do a lot of merges, and over the history<br />of git we have not had all that many really complicated ones. I<br />commonly send people email saying "ok, this clashed, you need to<br />double-check my merge", but it's not common that they are really<br />problems.<br /><br />So to a first approximation, I'd actually prefer that submaintainers<br />not care *at*all* about whether something clashes upstream or not. If<br />there are consistent and problematic clashes, that implies some deeper<br />problem, and the solution to that is not "let's pre-merge", but rather<br />more along the lines of "we're doing something wrong, maybe our<br />interfaces are crap, or our modularity is wrong, let's think about<br />it".<br /><br />And for subsystems where we have had problems, it's actually really<br />nice if the maintainer sends me the unmerged "this is the work I've<br />done" tree, and then perhaps has a separate "xyzzy-merged" branch that<br />has a pre-merged version. For cases like that, I will do the merge<br />myself, but I'll actually double-check my merge against the maintainer<br />merge. And it's happened more than once that my merge has differed,<br />and _my_ merge is the correct one. The maintainer may know his code<br />better, but I know my merging. I do a ton of them.<br /><br />For example, this week I've done 66 merges, and 15 of them had<br />conflicts. Of the 15, only two were interesting iirc, but even those<br />weren't really "problematic", they were just enough to trigger me to<br />send out emails to the maintainers about them. And I don't think your<br />libata merge would really have merited even that, apart from the small<br />semantic thing (which would also have been trivial with a oneliner<br />"heads up, check out the semantic change in xyz.c:abcdef()".<br /><br />&gt; What's the best way for libata to move forward, now that this hideous merge<br />&gt; has been pushed out to the Well Known libata branches?  The<br />&gt; pre-jgarzik-merge commit you would have pulled is<br />&gt; dc7f71f486f4f5fa96f6dcf86833da020cde8a11 had my pull request been proper.<br /><br />I'll take your merge, it's not like it's a huge problem. What I care<br />most about is the "flow", and I am making a stink just so that this<br />doesn't become a common issue. We have tons of ugly history, and I'm<br />not black-and-white - problems happen. Big deal. I just want to make<br />sure that they don't become systemic.<br /><br />                  Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
