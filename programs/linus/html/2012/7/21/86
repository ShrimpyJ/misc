    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/7/20/153">First message in thread</a></li><li><a href="/lkml/2012/7/20/153">Ming Lei</a><ul><li><a href="/lkml/2012/7/20/171">Borislav Petkov</a><ul><li><a href="/lkml/2012/7/20/177">Ming Lei</a><ul><li><a href="/lkml/2012/7/20/182">Borislav Petkov</a><ul><li><a href="/lkml/2012/7/20/183">Ming Lei</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2012/7/20/247">Oliver Neukum</a><ul><li><a href="/lkml/2012/7/20/253">Ming Lei</a></li></ul></li><li><a href="/lkml/2012/7/21/2">Ming Lei</a><ul><li><a href="/lkml/2012/7/21/32">"Rafael J. Wysocki"</a><ul><li><a href="/lkml/2012/7/21/53">Ming Lei</a><ul><li><a href="/lkml/2012/7/21/85">"Rafael J. Wysocki"</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="/lkml/2012/7/21/88">Linus Torvalds</a><ul><li><a href="/lkml/2012/7/21/88">"Rafael J. Wysocki"</a></li><li><a href="/lkml/2012/7/21/93">Ming Lei</a><ul><li><a href="/lkml/2012/7/21/95">Linus Torvalds</a><ul><li><a href="/lkml/2012/7/21/96">	david&#64;lang ...</a></li><li><a href="/lkml/2012/7/21/123">Ming Lei</a></li><li><a href="/lkml/2012/7/22/59">Borislav Petkov</a></li></ul></li><li><a href="/lkml/2012/7/21/99">Francois Romieu</a></li></ul></li></ul></li><li><a href="/lkml/2012/7/21/87">"Rafael J. Wysocki"</a><ul><li><a href="/lkml/2012/7/21/94">Ming Lei</a><ul><li><a href="/lkml/2012/7/21/101">"Rafael J. Wysocki"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 21 Jul 2012 10:31:17 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] firmware load: defer request_firmware during early boot and resume</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Jul 20, 2012 at 5:33 AM, Ming Lei &lt;tom.leiming&#64;gmail.com&gt; wrote:<br />&gt; The RFC patch is just for discussing if the idea of deferring<br />&gt; request_firmware is doable for addressing the issue of<br />&gt; request_firmware in resume path, which is caused by driver<br />&gt; unbind/rebind during resume.<br /><br />NAK.<br /><br />It really *has* to be handled some other way.<br /><br />This whole approach seems to actively try to *silently* fix up broken<br />drivers. And it's wrong.<br /><br />There's a reason we warn, and there's a reason we *have* to warn: to<br />let driver writers know that what they are attempting to do MAY NOT<br />WORK.<br /><br />Really.<br /><br />Sure, for a lot of devices it's fine to load the firmware later. But<br />some devices may be part of the resume sequence in very critical ways,<br />and deferring the firmware loading will just mean that the resume will<br />fail.<br /><br />This we *need* the WARN_ON() - so that even in the case where it<br />happens to work, people are very much told that "sure, your<br />suspend/resume may have worked, but it was doing fundamentally wrong<br />things that may mean that for other people it *won't* work".<br /><br />For example, maybe it's a USB network dongle, and for *YOU* it is<br />perfectly fine to defer the firmware loading, so that the network<br />comes back up a few seconds after the system is up and running.<br /><br />But in another machine, that exact same USB network dongle may<br />actually be hardwired on the motherboard (it's fairly common to use<br />USB as a "system bus" in some laptop and embedded devices), and maybe<br />that other machine actually is a thin client that has some tiny rdinit<br />thing, and then everything else is NFS-mounted, and if you resume<br />without networking, the machine is simply *dead*.<br /><br />Ok, so that was a completely made-up example, but we have actually had<br />situations kind of like that, where a device is just not that<br />important for lots of people, but in other situations it's critical<br />for the rest of the suspend/resume to succeed.<br /><br />This is why I'm so vehemently against silently "hiding" these issues.<br /><br />If you have a driver that has problems, make THAT ONE PARTICULAR<br />driver do the deferral explicitly. Don't make some generic "silently<br />defer if there are problems" patch.<br /><br />See what I'm saying? You're solving things in exactly the wrong place,<br />and in exactly the wrong way. You're papering things over, and making<br />the generic code silently just make broken cases work. That's really<br />really bad, because it makes it *easier* for driver writers to do the<br />wrong thing without even thinking about it, and without ever seeing<br />the problem. And then when people say "suspend/resume doesn't work",<br />the driver author says "it works for me" and ignores the problem.<br />Because you've systemically made it easy to ignore the problem, and<br />made it easy to do the wrong thing by default.<br /><br />So we should make driver writers do the right thing by default, and if<br />they cannot do the right thing (and the "isight" camera always comes<br />up, and f*ck it, just fix that driver) then they should do extra work.<br /><br />Seriously. People should load their firmware *before* the<br />suspend/resume cycle. And if that isn't possible, then the system<br />should ABSOLUTELY NOT silently say "whatever" and defer it until<br />later.  We should have that big failure and the big noisy warning, and<br />drivers that need to defer need to do so themselves, so that we never<br />*ever* have that silent automatic defer situation.<br /><br />                          Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
