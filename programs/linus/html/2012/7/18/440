    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/7/18/20">First message in thread</a></li><li><a href="/lkml/2012/7/18/318">Linus Torvalds</a><ul><li><a href="/lkml/2012/7/18/437">Al Viro</a><ul><li class="origin"><a href="/lkml/2012/7/18/443">Linus Torvalds</a><ul><li><a href="/lkml/2012/7/18/443">Al Viro</a><ul><li><a href="/lkml/2012/7/18/471">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 18 Jul 2012 14:25:02 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Bug 3.4.5] reiserfs: mutex_destroy called with locked mutex</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 18, 2012 at 2:20 PM, Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt; On Wed, Jul 18, 2012 at 09:26:57AM -0700, Linus Torvalds wrote:<br />&gt;&gt;<br />&gt;&gt; So I don't think the freeing code could trigger, but a concurrent<br />&gt;&gt; lookup then trying to look up the new directory (and taking the new<br />&gt;&gt; directory i_semaphore lock) could happen, afaik.<br />&gt;<br />&gt; Umm...  The thing is, we'd get WARN_ON() in iput_final() triggering in<br />&gt; that scenario before lockdep could complain.<br /><br />Not for the "look up directory in the dcache, and then lock that<br />inode" case, afaik. You'd get the lock before iput_final(), no?<br /><br />So then "unlock_new_inode()" would run with the inode mutex held,<br />which could explain the lockdep warning, no?<br /><br />             Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
