    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/7/9/460">First message in thread</a></li><li><a href="/lkml/2012/7/14/5">Linus Torvalds</a><ul><li><a href="/lkml/2012/7/14/8">Tejun Heo</a><ul><li class="origin"><a href="/lkml/2012/7/14/12">Linus Torvalds</a><ul><li><a href="/lkml/2012/7/14/12">Tejun Heo</a></li><li><a href="/lkml/2012/7/16/357">Peter Seebach</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 13 Jul 2012 22:00:10 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 5/6] workqueue: introduce NR_WORKER_POOLS and for_each_worker_pool()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Jul 13, 2012 at 9:44 PM, Tejun Heo &lt;tj&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; nr_running is atomic_t (*nr_running)[2].  Ignoring the pointer to<br />&gt; array part, it's just returning the address of N'th element of the<br />&gt; array.  ARRAY + N == &amp;ARRAY[N].<br /><br />None of this matters one whit.<br /><br />You did "&amp;(x)[0]".<br /><br />That's insane. It's crazy. It doesn't even matter what "x" is in<br />between, it's crazy regardless.<br /><br />It's just a really confused way of saying "x" (*). Except it makes the<br />code look like an insane monkey on crack got a-hold of your keyboard<br />when you weren't looking.<br /><br />And to make it worse, "x" itself was the result of doing "*&amp;y". Which<br />was probably written by the insane monkey's older brother, Max, who<br />has been chewing Quaaludes for a few years, and as a result _his_<br />brain really isn't doing too well either. Even for a monkey. And now<br />you're letting *him* at your keyboard too?<br /><br />So you had two separately (but similarly) insane ways of complicating<br />the code so that it was really obfuscated. When it really just<br />computed "y" to begin with, it just added all those "x=*&amp;y" and<br />"&amp;(x)[0]" games around it to make it look complicated.<br /><br />            Linus<br /><br />(*) Technically, "&amp;(x)[0]" is actually a really confused way of saying<br />"(x+0)" while making sure that "x" was a valid pointer. It basically<br />guarantees that if "x" started out as an array, it has now been<br />demoted to a pointer - but since arrays will be demoted to pointers by<br />pretty much any subsequent operation except for "sizeof()" and a<br />couple of other special cases anyway, you can pretty much just say<br />that "&amp;(x)[0]" is "(x+0)" is "x".<br /><br />And "*&amp;y" really is exactly the same as "y", except for again some<br />syntactic checking (ie it is basically an odd way to verify that "y"<br />is an lvalue, since you cannot do an address-of of a non-lvalue).<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
