    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/11/18/182">First message in thread</a></li><li><a href="/lkml/2012/11/29/517">Linus Torvalds</a><ul><li><a href="/lkml/2012/11/29/566">Chris Mason</a><ul><li class="origin"><a href="/lkml/2012/11/29/608">Linus Torvalds</a><ul><li><a href="/lkml/2012/11/29/608">Chris Mason</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Nov 2012 18:13:02 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v2] Do a proper locking for mmap and block size change</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 29, 2012 at 5:16 PM, Chris Mason &lt;chris.mason&#64;fusionio.com&gt; wrote:<br />&gt;<br />&gt; I searched through filemap.c for the magic i_size check that would let<br />&gt; us get away with ignoring i_blkbits in get_blocks, but its just not<br />&gt; there.  The whole fallback-to-buffered scheme seems to rely on<br />&gt; get_blocks checking for i_size.  I really hope I'm just missing<br />&gt; something.<br /><br />So generic_write_checks() limits the size to i_size at for writes (and<br />for "isblk").<br /><br />Sure, then it will do the buffered part after that, but that should<br />all be fine anyway, since by then we use the normal page cache.<br /><br />For reads, generic_file_aio_read() will check pos &lt; size, but doesn't<br />seem to actually limit the size of the iovec.<br /><br />I'm not sure why it doesn't just do "iov_shorten()".<br /><br />Anyway, having looked at actually passing in the block size to<br />get_block(), I can say that is a horrible idea. There are tons of<br />get_block functions (for various filesystems), and *none* of them<br />really want the block size, because they tend to work on block<br />indexes. And if they do want the block size, they'll just get it from<br />the inode or sb, since they are filesystems and it's all stable.<br /><br />So the *only* of the places that would want the block size is<br />fs/block_dev.c. And the callers really already seem to do the i_size<br />check, although they sometimes do it badly. And since there are fewer<br />callers than there are get_block() implementations, I think we should<br />just fix the callers and be done with it.<br /><br />Those generic_file_aio_read/write() functions in fs/direct-io.c really<br />just seem to be badly written. The fact that they may depend on the<br />i_size check in get_blocks() is sad, but I think we should fix it and<br />just remove the check for block devices. That's going to simplify so<br />much..<br /><br />I updated the 'block-dev' branch to have that simpler fs/block_dev.c<br />model instead. I'll look at the iovec shortening later. It's a<br />non-fast-forward thing, look out!<br /><br />(I actually think we should just add the max-offset check to<br />rw_copy_check_uvector(). That one already does the MAX_RW_COUNT thing,<br />and we could make it do a max_offset check as well).<br /><br />                      Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
