    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/11/18/182">First message in thread</a></li><li><a href="/lkml/2012/11/29/358">Linus Torvalds</a><ul><li><a href="/lkml/2012/11/29/371">Chris Mason</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Nov 2012 10:12:30 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Introduce a method to catch mmap_region (was: Recent kernel "mount" slow)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 29, 2012 at 9:51 AM, Chris Mason &lt;chris.mason&#64;fusionio.com&gt; wrote:<br />&gt;<br />&gt; The bigger question is do we have users that expect to be able to set<br />&gt; the blocksize after mmaping the block device (no writes required)?  I<br />&gt; actually feel a little bad for taking up internet bandwidth asking, but<br />&gt; it is a change in behaviour.<br /><br />Yeah, it is. That said, I don't think people will really notice.<br />Nobody mmap's block devices outside of some databases, afaik, and<br />nobody sane mounts a partition at the same time a DB is using it. So I<br />think the new EBUSY check is *ugly*, but I don't realistically believe<br />that it is a problem.  The ugliness of the locking is why I'm not a<br />huge fan of it, but if it works I can live with it.<br /><br />But yes, the mmap tests are new with the locking, and could in theory<br />be problematic if somebody reports that it breaks anything.<br /><br />And like the locking, they'd just go away if we just do the<br />fs/buffer.c approach instead. Because doing things in fs/buffer.c<br />simply means that we don't care (and serialization is provided by the<br />page lock on a per-page basis, which is what mmap relies on anyway).<br /><br />So doing the per-page fs/buffer.c approach (along with the<br />"ACCESS_ONCE()" on inode-&gt;i_blkbits to make sure we get *one*<br />consistent value, even if we don't care *which* value it is) would<br />basically revert to all the old semantics. The only thing it would<br />change is that we wouldn't see oopses.<br /><br />(And in theory, it would allow us to actively mix-and-match different<br />block sizes for a block device, but realistically I don't think there<br />are any actual users of that - although I could imagine that a<br />filesystem would use a smaller block size for file tail-blocks etc,<br />and still want to use the fs/buffer.c code, so it's *possible* that it<br />would be useful, but filesystems have been able to do things like that<br />by just doing their buffers by hand anyway, so it's not really<br />fundamentally new, just a possible generalization of code)<br /><br />                    Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
