    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/11/14/224">First message in thread</a></li><li><a href="/lkml/2012/11/14/224">Ingo Molnar</a><ul><li><a href="/lkml/2012/11/14/225">Ingo Molnar</a><ul><li><a href="/lkml/2012/11/14/573">Rik van Riel</a></li></ul></li><li><a href="/lkml/2012/11/14/226">Ingo Molnar</a><ul><li><a href="/lkml/2012/11/14/570">Rik van Riel</a></li></ul></li><li class="origin"><a href="/lkml/2012/11/14/568">Linus Torvalds</a><ul><li><a href="/lkml/2012/11/14/568">Rik van Riel</a><ul><li><a href="/lkml/2012/11/14/649">Linus Torvalds</a><ul><li><a href="/lkml/2012/11/14/691">Rik van Riel</a></li></ul></li></ul></li><li><a href="/lkml/2012/11/16/482">Ingo Molnar</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 14 Nov 2012 10:01:08 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/2] change_protection(): Count the number of pages affected</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 14, 2012 at 12:50 AM, Ingo Molnar &lt;mingo&#64;kernel.org&gt; wrote:<br />&gt; What do you guys think about this mprotect() optimization?<br /><br />Hmm..<br /><br />If this is mainly about just avoiding the TLB flushing, I do wonder if<br />it might not be more interesting to try to be much more aggressive.<br /><br />As noted elsewhere, we should just notice when vm_page_prot doesn't<br />change at all - even if 'flags' change, it is possible that the actual<br />low-level page protection bits do not (due to the X=R issue).<br /><br />But even *more* aggressively, how about looking at<br /><br /> - not flushing the TLB at all if the bits become  more permissive<br />(taking the TLB micro-fault and letting the CPU just update it on its<br />own)<br /><br /> - even *more* aggressive: if the bits become strictly more<br />restrictive, how about not flushing the TLB at all, *and* not even<br />changing the page tables, and just teaching the page fault code to do<br />it lazily at fault time?<br /><br />Now, the "change protections lazily" might actually be a huge<br />performance problem with the page fault overhead dwarfing any TLB<br />flush costs, but we don't really know, do we? It might be worth trying<br />out.<br /><br />               Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
