    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/11/18/182">First message in thread</a></li><li><a href="/lkml/2012/11/28/513">Mikulas Patocka</a><ul><li><a href="/lkml/2012/11/28/581">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2012/11/28/720">Linus Torvalds</a><ul><li><a href="/lkml/2012/11/28/720">Mikulas Patocka</a></li></ul></li><li><a href="/lkml/2012/11/28/667">Mikulas Patocka</a><ul><li><a href="/lkml/2012/11/28/717">Linus Torvalds</a><ul><li><a href="/lkml/2012/11/28/736">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 28 Nov 2012 15:13:52 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Introduce a method to catch mmap_region (was: Recent kernel "mount" slow)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 28, 2012 at 2:52 PM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt;&gt; For example, __block_write_full_page and __block_write_begin do<br />&gt;&gt;         if (!page_has_buffers(page)) { create_empty_buffers... }<br />&gt;&gt; and then they do<br />&gt;&gt;         WARN_ON(bh-&gt;b_size != blocksize)<br />&gt;&gt;         err = get_block(inode, block, bh, 1)<br />&gt;<br />&gt; Right. And none of this is new.<br /><br />.. which, btw, is not to say that *other* things aren't new. They are.<br /><br />The change to actually change the block device buffer size before then<br />calling "sync_bdev()" is definitely a real change, and as mentioned, I<br />have not tested the patch in any way. If any block device driver were<br />to actually compare the IO size they get against the bdev-&gt;block_size<br />thing, they'd see very different behavior (ie they'd see the new block<br />size as they are asked to write old the old blocks with the old block<br />size).<br /><br />So it does change semantics, no question about that. I don't think any<br />block device does it, though.<br /><br />A bigger issue is for things that emulate what blkdev.c does, and<br />doesn't do the locking. I see code in md/bitmap.c that seems a bit<br />suspicious, for example. That said, it's not *new* breakage, and the<br />"lock at mmap/read/write() time" approach doesn't fix it either (since<br />the mapping will be different for the underlying MD device). So I do<br />think that we should take a look at all the users of<br />"alloc_page_buffers()" and "create_empty_buffers()" to see what *they*<br />do to protect the block-size, but I think that's an independent issue<br />from the raw device access case in fs/block_dev.c..<br /><br />I guess I have to actually test my patch. I don't have very<br />interesting test-cases, though.<br /><br />                       Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
