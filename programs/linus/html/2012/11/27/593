    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/11/27/486">First message in thread</a></li><li><a href="/lkml/2012/11/27/524">Rik van Riel</a><ul><li><a href="/lkml/2012/11/27/526">Johannes Weiner</a><ul><li class="origin"><a href="/lkml/2012/11/28/103">Linus Torvalds</a><ul><li><a href="/lkml/2012/11/28/103">Mel Gorman</a><ul><li><a href="/lkml/2012/11/28/120">Thorsten Leemhuis</a></li><li><a href="/lkml/2012/11/28/289">Mel Gorman</a></li><li><a href="/lkml/2012/11/28/584">Andrew Morton</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 27 Nov 2012 15:19:38 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: kswapd craziness in 3.7</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Nov 27, 2012 at 2:26 PM, Johannes Weiner &lt;hannes&#64;cmpxchg.org&gt; wrote:<br />&gt; On Tue, Nov 27, 2012 at 05:02:36PM -0500, Rik van Riel wrote:<br />&gt;&gt;<br />&gt;&gt; Kswapd going crazy is certainly a large part of the problem.<br />&gt;&gt;<br />&gt;&gt; However, that leaves the issue of page_alloc.c waking up<br />&gt;&gt; kswapd when the system is not actually low on memory.<br />&gt;&gt;<br />&gt;&gt; Instead, kswapd is woken up because memory compaction failed,<br />&gt;&gt; potentially even due to lock contention during compaction!<br />&gt;&gt;<br />&gt;&gt; Ideally the allocation code would only wake up kswapd if<br />&gt;&gt; memory needs to be freed, or in order for kswapd to do<br />&gt;&gt; memory compaction (so the allocator does not have to).<br />&gt;<br />&gt; Maybe I missed something, but shouldn't this be solved with my patch?<br /><br />Ok, guys. Cage fight!<br /><br />The rules are simple: two men enter, one man leaves.<br /><br />And the one who comes out gets to explain to me which patch(es) I<br />should apply, and which I should revert, if any.<br /><br />My current guess is that I should apply the one Johannes just sent<br />("mm: vmscan: fix kswapd endless loop on higher order allocation")<br />after having added the cc to stable to it, and then revert the recent<br />revert (commit 82b212f40059).<br /><br />But I await the Thunderdome. &lt;Cue Tina Turner "We Don't Need Another Hero"&gt;<br /><br />                      Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
