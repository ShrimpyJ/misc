    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/8/31/1">First message in thread</a></li><li><a href="/lkml/2012/8/31/3">Linus Torvalds</a><ul><li><a href="/lkml/2012/8/31/260">Andreas Bombe</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 31 Aug 2012 10:56:29 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [REGRESSION] Xorg doesn't like 4e8b14526 "time: Improve sanity checking of timekeeping inputs"</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Aug 31, 2012 at 10:41 AM, Andreas Bombe &lt;aeb&#64;debian.org&gt; wrote:<br />&gt;<br />&gt; It triggers on ((unsigned long long)ts-&gt;tv_sec &gt;= KTIME_SEC_MAX).<br />&gt; Looking at some straces (I could have thought of that earlier…) X does<br />&gt; in fact call select with unreasonable timeouts:<br />&gt;<br />&gt; | 17:46:55 select(256, [1 3 6 9 10 11 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39], NULL, NULL, {0, 20000}) = 1 (in [24], left {0, 19988})<br />&gt; | 17:46:55 select(256, [1 3 6 9 10 11 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39], NULL, NULL, {0, 19000}) = 1 (in [24], left {0, 18988})<br />&gt; | 17:46:55 select(256, [1 3 6 9 10 11 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39], NULL, NULL, {0, 19000}) = 1 (in [24], left {0, 16804})<br />&gt; | 17:46:55 select(256, [1 3 6 9 10 11 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39], NULL, NULL, {0, 16000}) = 1 (in [24], left {0, 15988})<br />&gt; | 17:46:55 select(256, [1 3 6 9 10 11 18 19 20 21 22 23 25 26 27 28 29 30 31 32 33 34 35 37 38 39], NULL, NULL, {0, 16000}) = 1 (in [9], left {0, 3649})<br />&gt; | 17:46:55 select(256, [1 3 6 9 10 11 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39], NULL, NULL, {0, 3000}) = 1 (in [24], left {0, 2988})<br />&gt; | 17:46:55 select(256, [1 3 6 9 10 11 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39], NULL, NULL, {0, 2000}) = 1 (in [24], left {0, 1988})<br />&gt; | 17:46:55 select(256, [1 3 6 9 10 11 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39], NULL, NULL, {0, 2000}) = 0 (Timeout)<br />&gt; | 17:46:55 select(256, [1 3 6 9 10 11 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39], NULL, NULL, {18446744073709551, 615000}) = -1 EINVAL (Invalid argument)<br /><br />Ok, X clearly *is* doing something wrong, and as you point out, it<br />looks like X has taken a negative milliseconds value, treated it as<br />positive, and then done a (unsigned) divide by 1000 on that to create<br />a large positive seconds value.<br /><br />It's a fairly "natural" error to make if you keep timeouts as<br />milliseconds, and then convert those to a timeval or timespec.<br /><br />At the same time, that value is not really "invalid". It's a<br />crazy-long timeout, but it's a valid timeout. The fact that it doesn't<br />happen to fit into our "jiffies" value is an internal kernel<br />implementation issue that we shouldn't be exposing to user space as an<br />error. Turning the crazy-long timeout into "forever" (or<br />alternatively, into the longest timeout we support) should be the<br />right fix.<br /><br />Andreas, can you check whether John Stultz patch works for you? It<br />looks like it should.<br /><br />Also, letting the X people know that they are doing something crazy<br />sounds like a good idea. Looking at that strace, I'm also struct by<br />the fact that always giving "256" as the number of fds is going to be<br />a performance thing. It would be much better if X actually knew how<br />many bits it really needs, as that means the kernel isn't going to<br />need to look at the bits. So opening a bugzilla for this sounds like a<br />good idea.<br /><br />               Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
