    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/6/26/354">First message in thread</a></li><li><a href="/lkml/2012/8/28/197">Yinghai Lu</a><ul><li><a href="/lkml/2012/8/28/217">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2012/8/29/72">Linus Torvalds</a><ul><li><a href="/lkml/2012/8/29/72">Ram Pai</a><ul><li><a href="/lkml/2012/8/29/157">Yinghai Lu</a></li></ul></li><li><a href="/lkml/2012/8/29/154">Yinghai Lu</a><ul><li><a href="/lkml/2012/8/29/194">Yinghai Lu</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 28 Aug 2012 17:10:43 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH -v12 02/15] resources: Add probe_resource()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Aug 28, 2012 at 10:05 AM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Ugh. Ok, looking closer at this,<br /><br />Btw, looking at that code, I also found what looks like a potential<br />locking bug in allocate_resource().<br /><br />The code does<br /><br />    if (new-&gt;parent)<br />       .. reallocate ..<br /><br />to check whether a resource was already allocated. HOWEVER, it does so<br />without actually holding the resource lock. Which means that<br />"new-&gt;parent" might in theory change.<br /><br />I don't really know if we care. Anybody who does a<br />"allocate_resource()" on an existing resource that might already be in<br />the resource tree hopefully does *not* do that in parallel with<br />another user trying to change the resource allocation, so maybe the<br />right thing to do is to just say "whatever, if there is a race with<br />two threads reallocating the same resource at the same time, the bug<br />is a much more serious one at a higher level".<br /><br />So this may well be a non-issue. It was introduced some time ago, in<br />commit 23c570a67448e ("resource: ability to resize an allocated<br />resource"), since before that we never even allowed re-allocation of<br />an already allocated resource in the first place, and everything<br />happened under the lock.<br /><br />I dunno. Here's a (UNTESTED!) patch that should fix it. Because it's<br />extremely doubtful whether this is a real problem, I'm certainly not<br />going to commit it now, much less mark it for stable. But I'm throwing<br />it out as an RFC. Technically, if people rely on any races being<br />handled by the resource subsystem, this *could* trigger. But I'm<br />hoping that the PCI layer has some higher-level locking for<br />"reallocate the resources of this PCI device". I did *not* check the<br />callers.<br /><br />Btw, reallocate_resource() isn't actually used anywhere in the tree<br />that I can see, so maybe we should remove it and the export, and just<br />have the __reallocate_resource() that is static to resource.c and is<br />to be called only with the lock held.<br /><br />                         Linus<br />[unhandled content-type:application/octet-stream]</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
