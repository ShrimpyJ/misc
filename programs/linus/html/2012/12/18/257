    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/12/17/410">First message in thread</a></li><li><a href="/lkml/2012/12/18/104">Ingo Molnar</a><ul><li><a href="/lkml/2012/12/18/143">Jens Axboe</a><ul><li class="origin"><a href="/lkml/2012/12/19/171">Linus Torvalds</a><ul><li><a href="/lkml/2012/12/19/171">Jens Axboe</a><ul><li><a href="/lkml/2012/12/19/213">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2012/12/18/257/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 18 Dec 2012 08:49:48 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [boot crash] Re: [GIT PULL[ block drivers bits for 3.8</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Dec 18, 2012 at 3:42 AM, Jens Axboe &lt;axboe&#64;kernel.dk&gt; wrote:<br />&gt;<br />&gt; Bah. Does the below fix it up for you?<br /><br />Grr. This is still bullshit.<br /><br />Doing this:<br /><br />    alignment = sector &lt;&lt; 9;<br /><br />is fundamentally crap, because 'sector_t' may well be 32-bit<br />(non-large-block device case). And we're supposed (surprise surprise)<br />to be able to handle devices larger than 4GB in size.<br /><br />So doing *any* of these calculations in bytes is pure and utter crap.<br />You need to do them in sectors. That's what "sector_t" means, and<br />that's damn well how everything should work. Anything that works in<br />bytes is simply pure crap. And don't talk to me about 64-bit math and<br />doing it in "u64" or "loff_t", that's just utterly moronic too.<br /><br />Besides, "sector_div()" is only sensible when you're looking for the<br />remainder of a sector number. That's true in the first case (sector<br />really is a sector number - it's the starting sector of the<br />partition), but the source of alignment and granularity are actually<br />just "unsigned int" (and that's in bytes, not sectors), so using<br />sector_t afterwards is crazy too. You should have used just '%'.<br />Looking around, there are other places where this idiocy happens too<br />(blkdev_issue_discard() seems to think the granularity/alignments are<br />sector_t's too, for example).<br /><br />Anyway, here's a patch to fix the crazy types and the bogus second<br />"sector_div()". It's whitespace-damaged, because not only have I not<br />tested it, I also think somebody needs to look at things in general.<br />The whole "discard_alignment" handling is extremely odd. I don't think<br />it should be called "alignment" at all - because it isn't. It's an<br />alignment *offset*. Look at the normal (non-discard) case, where it's<br />called "alignment_offset" like it should be.<br /><br />So the math is confused, the types are confused, and the naming is<br />confused. Please, somebody check this out, because now *I* am<br />confused.<br /><br />And btw, that whole commit happened too f*cking late too. When I get a<br />pull request, it should damn well have been tested already, and it<br />should have been developed *before* the merge window started. Not the<br />day before the pull request.<br /><br />I'm grumpy, because all of this code is UTTER SH*T, and it was sent to me. Why?<br /><br />                Linus<br /><br />---<br />diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h<br />index acb4f7bbbd32..c23cae25a0c0 100644<br />--- a/include/linux/blkdev.h<br />+++ b/include/linux/blkdev.h<br />&#64;&#64; -1188,14 +1188,25 &#64;&#64; static inline int<br />queue_discard_alignment(struct request_queue *q)<br /><br /> static inline int queue_limit_discard_alignment(struct queue_limits<br />*lim, sector_t sector)<br /> {<br />-       sector_t alignment = sector &lt;&lt; 9;<br />-       alignment = sector_div(alignment, lim-&gt;discard_granularity);<br />+       /* Why are these in bytes, not sectors? */<br />+       unsigned int alignment, granularity, offset;<br /><br />        if (!lim-&gt;max_discard_sectors)<br />                return 0;<br /><br />-       alignment = lim-&gt;discard_granularity + lim-&gt;discard_alignment<br />- alignment;<br />-       return sector_div(alignment, lim-&gt;discard_granularity);<br />+       alignment = lim-&gt;discard_alignment &gt;&gt; 9;<br />+       granularity = lim-&gt;discard_granularity &gt;&gt; 9;<br />+       if (!alignment || !granularity)<br />+               return 0;<br />+<br />+       /* Offset of the partition start in 'granularity' sectors */<br />+       offset = sector_div(sector, granularity);<br />+<br />+       /* And why do we do this modulus *again* in blkdev_issue_discard()? */<br />+       offset = (granularity + alignment - offset) % granularity;<br />+<br />+       /* Turn it back into bytes, gaah */<br />+       return offset &lt;&lt; 9;<br /> }<br /><br /> static inline int bdev_discard_alignment(struct block_device *bdev)<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
