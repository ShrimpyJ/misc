    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/12/12/96">First message in thread</a></li><li><a href="/lkml/2012/12/16/187">Hugh Dickins</a><ul><li><a href="/lkml/2012/12/16/188">Hugh Dickins</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 16 Dec 2012 19:00:12 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mm: fix kernel BUG at huge_memory.c:1474!</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Dec 16, 2012 at 6:56 PM, Hugh Dickins &lt;hughd&#64;google.com&gt; wrote:<br />&gt; Andrea's autonuma-benchmark numa01 hits kernel BUG at huge_memory.c:1474!<br />&gt; in change_huge_pmd called from change_protection from change_prot_numa<br />&gt; from task_numa_work.<br />&gt;<br />&gt; That BUG, introduced in the huge zero page commit cad7f613c4d0 ("thp:<br />&gt; change_huge_pmd(): make sure we don't try to make a page writable")<br />&gt; was trying to verify that newprot never adds write permission to an<br />&gt; anonymous huge page; but Automatic NUMA Balancing's 4b10e7d562c9 ("mm:<br />&gt; mempolicy: Implement change_prot_numa() in terms of change_protection()")<br />&gt; adds a new prot_numa path into change_huge_pmd(), which makes no use of<br />&gt; the newprot provided, and may retain the write bit in the pmd.<br /><br />Ok. I did wonder about that particular conflict, but it looked like<br />neither case was writable, so I resolved it wrongly, and it worked for<br />me, but then I don't have any numa setups, nor do I even enable it..<br /><br />Thanks,<br /><br />                Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
