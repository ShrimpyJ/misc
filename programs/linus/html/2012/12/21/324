    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/11/22/263">First message in thread</a></li><li><a href="/lkml/2012/12/21/243">Linus Torvalds</a><ul><li><a href="/lkml/2012/12/21/271">Hugh Dickins</a><ul><li><a href="/lkml/2012/12/21/322">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2012/12/21/292">Mel Gorman</a><ul><li class="origin"><a href="/lkml/2012/12/21/354">Linus Torvalds</a><ul><li><a href="/lkml/2012/12/21/354">Mel Gorman</a><ul><li><a href="/lkml/2012/12/21/375">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 21 Dec 2012 14:02:04 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] mm, mempolicy: Introduce spinlock to read shared policy tree</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Dec 21, 2012 at 11:58 AM, Mel Gorman &lt;mgorman&#64;suse.de&gt; wrote:<br />&gt;<br />&gt; Kosaki's patch does not fix the actual problem with NUMA hinting<br />&gt; faults. Converting to a spinlock is nice but we'd still hold the PTL at<br />&gt; the time sp_alloc is called and potentially allocating GFP_KERNEL with a<br />&gt; spinlock held.<br /><br />The problem I saw reported - and the problem that the "mutex+spinlock"<br />patch was fixing - wasn't actually sp_alloc(), but just sp_lookup()<br />through mpol_shared_policy_lookup().<br /><br />And converting that to a spinlock would definitely fix it - taking<br />that spinlock quickly for the lookup while holding the pt lock is<br />fine.<br /><br />Now, if we have to call sp_alloc() too at some point, that's<br />different, but that wouldn't be helped by the "mutex+spinlock" patch<br />(that started this thread) anyway.<br /><br />&gt; At the risk of making your head explode, here is another patch.<br /><br />So I don't hate this patch, but I don't see the point of your games in<br />do_pmd_numa_page(). I'm not seeing the allocation in mpol_misplaced(),<br />and that wasn't what the original report was.<br /><br />The backtrace you quote is literally *only* about the fact that you<br />cannot take a mutex inside a spinlock. No allocation, just a lookup.<br /><br />So where's the sp_alloc()?<br /><br />                 Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
