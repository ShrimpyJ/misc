    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/11/22/263">First message in thread</a></li><li><a href="/lkml/2012/12/20/450">David Rientjes</a><ul><li><a href="/lkml/2012/12/21/172">Mel Gorman</a><ul><li class="origin"><a href="/lkml/2012/12/21/271">Linus Torvalds</a><ul><li><a href="/lkml/2012/12/21/271">Hugh Dickins</a><ul><li><a href="/lkml/2012/12/21/322">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2012/12/21/292">Mel Gorman</a><ul><li><a href="/lkml/2012/12/21/324">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 21 Dec 2012 08:53:33 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] mm, mempolicy: Introduce spinlock to read shared policy tree</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Dec 21, 2012 at 5:47 AM, Mel Gorman &lt;mgorman&#64;suse.de&gt; wrote:<br />&gt; On Thu, Dec 20, 2012 at 02:55:22PM -0800, David Rientjes wrote:<br />&gt;&gt;<br />&gt;&gt; This is probably worth discussing now to see if we can't revert<br />&gt;&gt; b22d127a39dd ("mempolicy: fix a race in shared_policy_replace()"), keep it<br />&gt;&gt; only as a spinlock as you suggest, and do what KOSAKI suggested in<br />&gt;&gt; <a href="https://marc.info/?l=linux-kernel&amp;m=133940650731255">http://marc.info/?l=linux-kernel&amp;m=133940650731255</a> instead.  I don't think<br />&gt;&gt; it's worth trying to optimize this path at the cost of having both a<br />&gt;&gt; spinlock and mutex.<br />&gt;<br />&gt; Jeez, I'm still not keen on that approach for the reasons that are explained<br />&gt; in the changelog for b22d127a39dd.<br /><br />Christ, Mel.<br /><br />Your reasons in b22d127a39dd are weak as hell, and then you come up<br />with *THIS* shit instead:<br /><br />&gt; That leads to this third *ugly* option that conditionally drops the lock<br />&gt; and it's up to the caller to figure out what happened. Fooling around with<br />&gt; how it conditionally releases the lock results in different sorts of ugly.<br />&gt; We now have three ugly sister patches for this. Who wants to be Cinderalla?<br />&gt;<br />&gt; ---8&lt;---<br />&gt; mm: numa: Release the PTL if calling vm_ops-&gt;get_policy during NUMA hinting faults<br /><br />Heck no. In fact, not a f*cking way in hell. Look yourself in the<br />mirror, Mel. This patch is ugly, and *guaranteed* to result in subtle<br />locking issues, and then you have the *gall* to quote the "uhh, that's<br />a bit ugly due to some trivial duplication" thing in commit<br />b22d127a39dd.<br /><br />Reverting commit b22d127a39dd and just having a "ok, if we need to<br />allocate, then drop the lock, allocate, re-get the lock, and see if we<br />still need the new allocation" is *beautiful* code compared to the<br />diseased abortion you just posted.<br /><br />Seriously. Conditional locking is error-prone, and about a million<br />times worse than the trivial fix that Kosaki suggested.<br /><br />                         Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
