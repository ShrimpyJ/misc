    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/9/18/272">First message in thread</a></li><li><a href="/lkml/2012/9/18/272">Dave Jones</a><ul><li class="origin"><a href="/lkml/2012/9/18/405">Linus Torvalds</a><ul><li><a href="/lkml/2012/9/18/405">Dave Jones</a><ul><li><a href="/lkml/2012/9/19/212">Raghavendra K T</a><ul><li><a href="/lkml/2012/9/19/343">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2012/9/18/424">Konrad Rzeszutek Wilk</a><ul><li><a href="/lkml/2012/9/18/452">David Rientjes</a><ul><li><a href="/lkml/2012/9/18/457">Linus Torvalds</a></li><li><a href="/lkml/2012/9/18/458">Konrad Rzeszutek Wilk</a></li><li><a href="/lkml/2012/9/18/549">Raghavendra K T</a></li></ul></li><li><a href="/lkml/2012/9/18/456">Linus Torvalds</a><ul><li><a href="/lkml/2012/9/18/461">Konrad Rzeszutek Wilk</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 18 Sep 2012 11:38:44 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 3.6rc6 slab corruption.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Quoting the entire email, since I added Greg to the list of people (as<br />the documented maintainer of debugfs) along with what I think are the<br />guilty parties.<br /><br />Dave, is trinity perhaps doing read calls on the same file in parallel?<br /><br />Because it looks to me like debugfs is racy for that case. At least<br />the file-&gt;private_data accesses are, for the case of that "u32_array"<br />case.<br /><br />In fact it is racy in two different ways:<br /><br /> - the whole "file-&gt;private_data" access is racy (and this is, I<br />think, the bug you are hitting)<br /><br />   If you have multiple readers on the same file, the whole<br /><br />                if (file-&gt;private_data) {<br />                        kfree(file-&gt;private_data);<br />                        file-&gt;private_data = NULL;<br />                }<br /><br />                file-&gt;private_data = format_array_alloc("%u", data-&gt;array,<br />                                                              data-&gt;elements);<br /><br />   thing is just a disaster waiting to happen.<br /><br />It should be easyish to fix by just adding a lock around those things.<br /><br />The other bug is slightly subtler and probably harder to hit (but also<br />harder to fix):<br /><br /> - the whole format_array_alloc() code is one buggy piece of sh*t,<br />since afaik there is nothing that guarantees that the values cannot<br />change. So the notion of "let's format the output once to know how big<br />it is, and then a second time to actually print things into the array<br />we just allocated based on the first time" is pure and utter garbage,<br />afaik.<br /><br />Anyway, this is all fairly recent, and came in through the Xen tree.<br />See commit 9fe2a7015393 ("debugfs: Add support to print u32 array in<br />debugfs").<br /><br />Guys?<br /><br />              Linus<br /><br />On Tue, Sep 18, 2012 at 7:35 AM, Dave Jones &lt;davej&#64;redhat.com&gt; wrote:<br />&gt; I was chasing a networking bug, and had trinity reduced to just making read &amp; setsockopt calls,<br />&gt; and let that run overnight.  I woke up to 800mb of traces from a different bug..<br />&gt;<br />&gt; The traces look mostly like this..<br />&gt;<br />&gt;<br />&gt; =============================================================================<br />&gt; BUG kmalloc-64 (Not tainted): Redzone overwritten<br />&gt; -----------------------------------------------------------------------------<br />&gt;<br />&gt; INFO: 0xffff88001f4b4970-0xffff88001f4b4977. First byte 0xbb instead of 0xcc<br />&gt; INFO: Allocated in u32_array_read+0xd1/0x110 age=0 cpu=6 pid=32767<br />&gt;         __slab_alloc+0x516/0x5a5<br />&gt;         __kmalloc+0x213/0x2c0<br />&gt;         u32_array_read+0xd1/0x110<br />&gt;         vfs_read+0xac/0x180<br />&gt;         sys_read+0x4d/0x90<br />&gt;         system_call_fastpath+0x1a/0x1f<br />&gt; INFO: Freed in u32_array_read+0x99/0x110 age=0 cpu=0 pid=32749<br />&gt;         __slab_free+0x3f/0x3bf<br />&gt;         kfree+0x2d5/0x310<br />&gt;         u32_array_read+0x99/0x110<br />&gt;         vfs_read+0xac/0x180<br />&gt;         sys_read+0x4d/0x90<br />&gt;         system_call_fastpath+0x1a/0x1f<br />&gt; INFO: Slab 0xffffea00007d2d00 objects=41 used=14 fp=0xffff88001f4b7410 flags=0x10000000004081<br />&gt; INFO: Object 0xffff88001f4b4930 &#64;offset=2352 fp=0xffff88001f4b7410<br />&gt;<br />&gt; Bytes b4 ffff88001f4b4920: 1b 20 1c 00 01 00 00 00 5a 5a 5a 5a 5a 5a 5a 5a  . ......ZZZZZZZZ<br />&gt; Object ffff88001f4b4930: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk<br />&gt; Object ffff88001f4b4940: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk<br />&gt; Object ffff88001f4b4950: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk<br />&gt; Object ffff88001f4b4960: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b a5  kkkkkkkkkkkkkkk.<br />&gt; Redzone ffff88001f4b4970: bb bb bb bb bb bb bb bb                          ........<br />&gt; Padding ffff88001f4b4ab0: 5a 5a 5a 5a 5a 5a 5a 5a                          ZZZZZZZZ<br />&gt; Pid: 32756, comm: trinity-child52 Not tainted 3.6.0-rc6+ #44<br />&gt; Call Trace:<br />&gt;  [&lt;ffffffff811c10ad&gt;] ? print_section+0x3d/0x40<br />&gt;  [&lt;ffffffff811c23fe&gt;] print_trailer+0xfe/0x160<br />&gt;  [&lt;ffffffff811c2592&gt;] check_bytes_and_report+0xe2/0x120<br />&gt;  [&lt;ffffffff81023b79&gt;] ? native_sched_clock+0x19/0x80<br />&gt;  [&lt;ffffffff811c2b5b&gt;] check_object+0x18b/0x250<br />&gt;  [&lt;ffffffff8169b7d7&gt;] free_debug_processing+0xc0/0x1fd<br />&gt;  [&lt;ffffffff812d2e29&gt;] ? u32_array_read+0x99/0x110<br />&gt;  [&lt;ffffffff8169ba5c&gt;] __slab_free+0x3f/0x3bf<br />&gt;  [&lt;ffffffff81365a1c&gt;] ? debug_check_no_obj_freed+0x16c/0x210<br />&gt;  [&lt;ffffffff810db04f&gt;] ? lock_release_holdtime.part.26+0xf/0x180<br />&gt;  [&lt;ffffffff812d2e29&gt;] ? u32_array_read+0x99/0x110<br />&gt;  [&lt;ffffffff811c5725&gt;] kfree+0x2d5/0x310<br />&gt;  [&lt;ffffffff812d2e29&gt;] u32_array_read+0x99/0x110<br />&gt;  [&lt;ffffffff811df88c&gt;] vfs_read+0xac/0x180<br />&gt;  [&lt;ffffffff811df9ad&gt;] sys_read+0x4d/0x90<br />&gt;  [&lt;ffffffff816aea2d&gt;] system_call_fastpath+0x1a/0x1f<br />&gt; FIX kmalloc-64: Restoring 0xffff88001f4b4970-0xffff88001f4b4977=0xcc<br />&gt; =============================================================================<br />&gt;<br />&gt; Which looks like we read some file (probably something in sysfs/procfs) that corrupted some internal state.<br />&gt; Any ideas on what I could do to narrow this down ?<br />&gt;<br />&gt; The full traces are at <a href="http://www.codemonkey.org.uk/junk/slab-corrupt.txt">http://www.codemonkey.org.uk/junk/slab-corrupt.txt</a><br />&gt; They vary a little later, but it looks like it's probably all the same problem to me.<br />&gt; Sometimes it flip-flops between "First byte 0xbb instead of 0xcc" and "First byte 0xcc instead of 0xbb"<br />&gt;<br />&gt;<br />&gt; The one outlier being this weird message..<br />&gt;<br />&gt; Sep 18 02:00:13 bitcrush kernel: [36617.487681] hrtimer: interrupt took 242337 ns<br />&gt;<br />&gt; Which is weird, but probably unrelated.<br />&gt;<br />&gt;         Dave<br />&gt;<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
