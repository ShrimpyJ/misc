    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/9/14/99">First message in thread</a></li><li><a href="/lkml/2012/9/24/355">Linus Torvalds</a><ul><li><a href="/lkml/2012/9/24/368">Peter Zijlstra</a><ul><li class="origin"><a href="/lkml/2012/9/24/387">Linus Torvalds</a><ul><li><a href="/lkml/2012/9/24/387">Borislav Petkov</a></li><li><a href="/lkml/2012/9/24/392">Peter Zijlstra</a><ul><li><a href="/lkml/2012/9/24/420">Peter Zijlstra</a></li><li><a href="/lkml/2012/9/24/440">Mike Galbraith</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2012/9/24/486">Peter Zijlstra</a><ul><li><a href="/lkml/2012/9/24/382">Linus Torvalds</a></li><li><a href="/lkml/2012/9/24/388">Peter Zijlstra</a><ul><li><a href="/lkml/2012/9/25/262">Hillf Danton</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Sep 2012 09:30:05 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 20% performance drop on PostgreSQL 9.2 from kernel 3.5.3 to 3.6-rc5 on AMD chipsets - bisected</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 24, 2012 at 9:12 AM, Peter Zijlstra &lt;a.p.zijlstra&#64;chello.nl&gt; wrote:<br />&gt;<br />&gt; So we're looking for an idle cpu around &#64;target. We prefer a cpu of an<br />&gt; idle core, since SMT-siblings share L[12] cache. The way we do this is<br />&gt; by iterating the topology tree downwards starting at the LLC (L3) cache<br />&gt; level. Its groups are either the SMT-siblings or singleton groups.<br /><br />So if it'sally guaranteed to be SMT-siblings or singleton groups, then<br />the whole "for_each_cpu()" is a total disaster. That's a truly<br />expensive way to look up adjacent CPU's. Is there no saner way to look<br />up that thing? Like a simple circular list of SMT siblings (I realize<br />that on x86 that list is either one or two, but other SMT<br />implementations are groups of four or more).<br /><br />So I suspect your patch largely makes things faster (avoid those<br />insane cpumask operations), but the for_each_cpu() one is still an<br />absolutely horrible way to find a couple of basically statically known<br />(modulo hotplug, which is disabled here anyway) CPU's. So even if the<br />algorithm makes sense at some higher level, it doesn't really seem to<br />make sense from an implementation standpoint.<br /><br />Also, do we really want to spread things out that aggressively?<br />How/why do we know that we don't want to share L2 caches, for example?<br />It sounds like a bad idea from a power standpoint, and possibly<br />performance too.<br /><br />                    Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
