    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/9/23/32">First message in thread</a></li><li><a href="/lkml/2012/9/24/15">=?utf-8?B?UGF3ZcWC?= Sikora</a><ul><li><a href="/lkml/2012/9/24/210">Herbert Poetzl</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2012/9/24/438">(Eric W. Biederman)</a><ul><li><a href="/lkml/2012/9/25/18">Herbert Poetzl</a><ul><li><a href="/lkml/2012/11/15/447">=?utf-8?B?UGF3ZcWC?= Sikora</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Sep 2012 10:22:11 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [2.6.38-3.x] [BUG] soft lockup - CPU#X stuck for 23s! (vfs, autofs, vserver)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 24, 2012 at 4:23 AM, Herbert Poetzl &lt;herbert&#64;13thfloor.at&gt; wrote:<br />&gt;<br />&gt; currently we do:<br />&gt;<br />&gt;         br_read_lock(&amp;vfsmount_lock);<br />&gt;         root = current-&gt;fs-&gt;root;<br />&gt;         root_mnt = real_mount(root.mnt);<br />&gt;         point = root.dentry;<br />&gt;<br />&gt;         while ((mnt != mnt-&gt;mnt_parent) &amp;&amp; (mnt != root_mnt)) {<br />&gt;                 point = mnt-&gt;mnt_mountpoint;<br />&gt;                 mnt = mnt-&gt;mnt_parent;<br />&gt;         }<br />&gt;<br />&gt;         ret = (mnt == root_mnt) &amp;&amp; is_subdir(point, root.dentry);<br />&gt;         br_read_unlock(&amp;vfsmount_lock);<br />&gt;<br />&gt; and we have been considering to move the br_read_unlock()<br />&gt; right before the is_subdir() call<br /><br />So the read lock itself should not cause problems. We have tons of<br />high-frequency read-lockers, over quite big areas.<br /><br />But exactly because the readlockers are so high-frequency, I'd expect<br />any problems to be *found* by read-lockers.<br /><br />But the *cause* would likely be<br /> - missing unlocks<br /> - write-locks<br /> - recursion on the locks (including read-locks: they are actually<br />per-cpu spinlocks)<br /><br />but I'd have expected lockdep to find anything obvious like that.<br /><br />If the locking itself is fine, maybe the loop above (or the<br />is_subdir()) is infinite due to mnt-&gt;mnt_parent somehow becoming a<br />circular loop. Maybe due to corrupt data structures traversed inside<br />the lock, causing infinite loops..<br /><br />I really don't know the vserver patches, it would be much more<br />interesting if you can recreate the problems using a standard kernel.<br /><br />                          Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
