    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/8/7/245">First message in thread</a></li><li><a href="/lkml/2012/9/27/440">Joerg Roedel</a><ul><li><a href="/lkml/2012/9/27/424">"Myklebust, Trond"</a></li><li><a href="/lkml/2012/9/27/428">Joerg Roedel</a></li><li><a href="/lkml/2012/9/27/449">"Myklebust, Trond"</a><ul><li class="origin"><a href="/lkml/2012/9/27/470">Linus Torvalds</a><ul><li><a href="/lkml/2012/9/27/470">Dave Jones</a><ul><li><a href="/lkml/2012/9/27/633">Ryan Mallon</a></li></ul></li><li><a href="/lkml/2012/9/27/564">"Myklebust, Trond"</a></li></ul></li><li><a href="/lkml/2012/9/27/483">Joerg Roedel</a><ul><li><a href="/lkml/2012/9/27/505">Bryan Schumaker</a><ul><li><a href="/lkml/2012/9/28/251">Joerg Roedel</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 27 Sep 2012 09:59:13 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: kernel BUG at /data/lemmy/linux.trees.git/fs/nfs/idmap.c:681!</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 27, 2012 at 9:16 AM, Myklebust, Trond<br />&lt;Trond.Myklebust&#64;netapp.com&gt; wrote:<br />&gt;<br />&gt; I cannot see how that BUG_ON can be triggered in the current code, given<br />&gt; that the only place where idmap-&gt;idmap_key_cons is set to a non-NULL<br />&gt; value is covered by a mutex, and that it is always cleared before we<br />&gt; release said mutex.<br /><br />Quite frankly, the "I cannot see" thing is *never* an excuse for a BUG_ON().<br /><br />We don't do kernel-killing asserts in Linux. Never.<br /><br />The only excuse for a BUG_ON() is "I cannot possibly continue, I don't<br />even have an error path I can take".<br /><br />If it's a fundamentally impossible situation, the BUG_ON() should<br />never have been there in the first place!<br /><br />And if it's a "I don't see how it could happen", then it should have<br />been something like<br /><br />    if (WARN_ON_ONCE(condition))<br />        goto cleanup;<br /><br />rather than a BUG_ON().<br /><br />We have too many f*cking BUG_ON's in the kernel, and the fact that one<br />triggers and it has taken a month and a half without it even being<br />resolved is a problem.<br /><br />Get rid of the thing, already, dammit. If you cannot figure out how it<br />can happen, then the *last* thing you want to do is then kill the<br />machine so that it's impossible to debug it sanely.<br /><br />Besides, as far as I can tell, idmap_key_cons locking is suspect<br />anyway. Stuff like this:<br /><br />                cons = ACCESS_ONCE(idmap-&gt;idmap_key_cons);<br />                idmap-&gt;idmap_key_cons = NULL;<br /><br />is an almost certain example of "the code is racy, and we did it<br />wrong". The above is basically *never* correct.<br /><br />If the access is properly locked, then the ACCESS_ONCE() is a bug.<br /><br />And if the access *isn't* properly locked, then setting things to NULL<br />afterwards is in no way safe.<br /><br />IOW, either way, it's broken. And there's at least two of those<br />clearly buggy code-sequences involving that field.<br /><br />So get rid of the BUG_ON() (possibly replacing it with the<br />WARN_ON_ONCE), and please look at those ACCESS_ONCE() sequences and<br />fix them. Either they happen under a lock, or they don't. None of this<br />crazy racy crap, please.<br /><br />                   Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
