    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/9/14/99">First message in thread</a></li><li><a href="/lkml/2012/9/27/487">Linus Torvalds</a><ul><li><a href="/lkml/2012/9/27/499">Borislav Petkov</a><ul><li class="origin"><a href="/lkml/2012/9/27/511">Linus Torvalds</a><ul><li><a href="/lkml/2012/9/27/511">Peter Zijlstra</a><ul><li><a href="/lkml/2012/9/27/522">Borislav Petkov</a></li><li><a href="/lkml/2012/9/27/524">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 27 Sep 2012 11:19:46 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 20% performance drop on PostgreSQL 9.2 from kernel 3.5.3 to 3.6-rc5 on AMD chipsets - bisected</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Sep 27, 2012 at 11:05 AM, Borislav Petkov &lt;bp&#64;alien8.de&gt; wrote:<br />&gt; On Thu, Sep 27, 2012 at 10:44:26AM -0700, Linus Torvalds wrote:<br />&gt;&gt; Or could we just improve the heuristics. What happens if the<br />&gt;&gt; scheduling granularity is increased, for example? It's set to 1ms<br />&gt;&gt; right now, with a logarithmic scaling by number of cpus.<br />&gt;<br />&gt; /proc/sys/kernel/sched_wakeup_granularity_ns=10000000 (10ms)<br />&gt; ------------------------------------------------------<br />&gt; tps = 4994.730809 (including connections establishing)<br />&gt; tps = 5000.260764 (excluding connections establishing)<br />&gt;<br />&gt; A bit better over the default NO_WAKEUP_PREEMPTION setting.<br /><br />Ok, so this gives us something possible to actually play with.<br /><br />For example, maybe SCHED_TUNABLESCALING_LINEAR is more appropriate<br />than SCHED_TUNABLESCALING_LOG. At least for WAKEUP_PREEMPTION. Hmm?<br /><br />(Btw, "linear" right now looks like 1:1. That's linear, but it's a<br />very aggressive linearity. Something like "factor = (cpus+1)/2" would<br />also be linear, but by a less extreme factor.<br /><br />              Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
