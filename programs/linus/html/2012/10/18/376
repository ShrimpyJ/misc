    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/10/17/473">First message in thread</a></li><li><a href="/lkml/2012/10/18/13">Rusty Russell</a><ul><li><a href="/lkml/2012/10/18/212">Josh Boyer</a><ul><li class="origin"><a href="/lkml/2012/10/18/647">Linus Torvalds</a><ul><li><a href="/lkml/2012/10/18/647">Rusty Russell</a><ul><li><a href="/lkml/2012/10/19/209">David Howells</a></li></ul></li><li><a href="/lkml/2012/10/20/101">Romain Francoise</a><ul><li><a href="/lkml/2012/10/20/106">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 18 Oct 2012 09:29:16 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: RFC: sign the modules at install time</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Oct 18, 2012 at 5:11 AM, Josh Boyer &lt;jwboyer&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; It also excludes out-of-tree drivers.  I wouldn't personally shed a tear<br />&gt; for them, but it eliminates a use-case that people could have if we just<br />&gt; stuck to the signed module approach.<br />&gt;<br />&gt; I'd prefer if we just cleaned up what we already have.<br /><br />Exactly. I think the advantage of module signing is that it allows for<br />many different use-cases. People who care deeply about security can do<br />the "sign modules at kernel compile time with a one-time random key<br />that gets removed", and simply always reject anything else. And maybe<br />corporate users want something similar for corporate laptops.<br /><br />And then vendors can do the "sign stuff with vendor key, and print big<br />warning and/or taint the kernel if loading unsigned modules" so that<br />people can at least validate the "standard" modules or something.<br /><br />So signing is the nice flexible option, and technically the right<br />thing to do. I just want to make sure that what we make the *easy*<br />thing to do with that flexible option is the nice sane<br />GoodSecurity(tm) thing. If somebody wants to do something else with<br />it, fine, but it's not what the primary objective of the makefile<br />rules should be about.<br /><br />I like how the default makefiles do that "create and use random key"<br />thing by default. THAT is what I want to see.<br /><br />(Side note: I hope people realize that the random key is generated<br />with a 100-year lifespan. So if you build a kernel today, you do<br />potentially have a "year-2112 problem". I'm not horribly worried, but<br />I *am* a bit worried about 32-bit time_t overflow and I hope 32-bit<br />openssl doesn't do anything odd)<br /><br />               Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
