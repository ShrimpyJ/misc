    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/10/24/885">First message in thread</a></li><li><a href="/lkml/2012/10/24/885">Juri Lelli</a><ul><li><a href="/lkml/2012/10/24/570">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/590">"H. Peter Anvin"</a></li><li><a href="/lkml/2012/10/24/597">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/598">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/600">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/602">"H. Peter Anvin"</a></li><li><a href="/lkml/2012/10/24/605">Linus Torvalds</a></li><li><a href="/lkml/2012/10/24/607">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/641">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/650">Steven Rostedt</a></li><li><a href="/lkml/2012/10/24/653">Linus Torvalds</a></li><li><a href="/lkml/2012/10/24/656">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/669">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/733">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/754">Juri Lelli</a></li><li><a href="/lkml/2012/10/25/17">Geert Uytterhoeven</a></li><li><a href="/lkml/2012/10/25/59">Ingo Molnar</a></li><li><a href="/lkml/2012/10/25/142">Borislav Petkov</a></li><li><a href="/lkml/2012/10/25/270">Peter Zijlstra</a></li><li><a href="/lkml/2012/10/25/275">Peter Zijlstra</a></li><li><a href="/lkml/2012/10/25/310">Peter Zijlstra</a></li><li><a href="/lkml/2012/10/25/414">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/789">Juri Lelli</a></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2012/10/24/804">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/805">Juri Lelli</a></li><li><a href="/lkml/2012/10/26/110">Peter Zijlstra</a></li><li><a href="/lkml/2012/10/26/129">Ingo Molnar</a></li><li><a href="/lkml/2012/10/26/138">Peter Zijlstra</a></li><li><a href="/lkml/2012/10/26/149">Peter Zijlstra</a></li><li><a href="/lkml/2012/10/26/155">Harald Gustafsson</a></li><li><a href="/lkml/2012/10/26/157">Ingo Molnar</a></li><li><a href="/lkml/2012/10/26/170">Thomas Gleixner</a></li><li><a href="/lkml/2012/10/26/173">Peter Zijlstra</a></li><li><a href="/lkml/2012/10/26/230">Steven Rostedt</a></li><li><a href="/lkml/2012/10/26/251">Steven Rostedt</a></li><li><a href="/lkml/2012/10/26/302">Peter Zijlstra</a></li><li><a href="/lkml/2012/10/24/807">Juri Lelli</a></li><li><a href="/lkml/2012/10/26/349">Linus Torvalds</a></li><li><a href="/lkml/2012/10/26/462">Juri Lelli</a></li><li><a href="/lkml/2012/10/26/467">Thomas Gleixner</a></li><li><a href="/lkml/2012/10/26/469">Steven Rostedt</a></li><li><a href="/lkml/2012/10/26/479">Juri Lelli</a></li><li><a href="/lkml/2012/10/26/625">Ingo Molnar</a><ul><li><a href="/lkml/2012/10/26/188">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2012/10/24/835">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/844">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/849">Juri Lelli</a></li><li><a href="/lkml/2012/10/24/865">Juri Lelli</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 25 Oct 2012 15:26:03 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 01/16] math128: Introduce various 128bit primitives</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Oct 25, 2012 at 6:47 AM, Peter Zijlstra &lt;peterz&#64;infradead.org&gt; wrote:<br />&gt; On Wed, 2012-10-24 at 16:18 -0700, Linus Torvalds wrote:<br />&gt;&gt;<br />&gt;&gt; So please, explain what the pressing need is that is so worthwhile<br />&gt;&gt; that this is worth it. Maybe it was in a 00/16 cover letter, but not<br />&gt;&gt; only was that not sent out to the people who got 01, you'd still want<br />&gt;&gt; it in the commit message.<br />&gt;<br />&gt; There's two use cases:<br />&gt;<br />&gt;  1) the proposed SCHED_DEADLINE needs to do some u64xu64 math, it<br />&gt;     ends up having to multiply a deadline (in usec) with runtime (also<br />&gt;     in usec).<br />&gt;<br />&gt;  2) the infrastructure adds mul_u64_u32_shr(), which is something we<br />&gt;     do a lot of with all the time manipulation, apply a multiplier to<br />&gt;     some u64 clock value.<br />&gt;<br />&gt;     We can do better on some archs than we can in generic, so this<br />&gt;     interface could give a win there.<br /><br />So I have no objection to the mul_u64_u32_shr() model, exactly because<br /><br /> - it doesn't actually use u128 anywhere (except perhaps internally,<br />but that is totally about the implementation, not visible anywhere<br />else).<br /><br /> - it is fundamentally optimizable especially on 32-bit architectures<br />where it doesn't need to do a full 64x64 multiply.<br /><br />it's the *rest* of the "u128" math I really object to. I also wonder<br />about the u64xu64 math case for SCHED_DEADLINE, because I assume that<br />it doesn't actually end up using the 128-bit result in that form, but<br />scales it down again some way?<br /><br />In other words, the thing I really object to is exactly the whole<br />"generic 128-bit math". That's the part that can easily get very<br />expensive in 32-bit environments. Even for the "u64xu64" multiply for<br />SCHED_DEADLINE, how could it possibly be true 64-bit values (even if<br />your "usec" was wrong, and it's "nsec").<br /><br />At what point does the scheduler talk/think about billions of seconds<br />in nanoseconds? Seriously?<br /><br />That's a perfect example of where "true 128-bit math" is potentially<br />stupidly expensive on 32-bit platforms, when a 48x48-&gt;96 bit multiply<br />might be cheaper. And if we're talking about some fixed-point<br />arithmetic, and the thing actually gets shifted down again (like the<br />mul_u64_u32_shr) so that the final result is actually guaranteed to<br />fit in (say) 64 bits, then that would be cheaper yet.<br /><br />I realize that some people seem to think that being "generic" is<br />superior, and think that maybe somebody wants to do 128-bit arithmetic<br />for other things. And I think that is exactly the wrong way to think,<br />because it just encourages people to do exactly the wrong thing,<br />because "look, 128-bit arithmetic is easily available so I can do<br />fancy things", and then it just happens to go really fast on x86-64,<br />and then sucks everywhere else.<br /><br />                Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
