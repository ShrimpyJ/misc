    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/10/17/473">First message in thread</a></li><li><a href="/lkml/2012/10/17/514">Josh Boyer</a><ul><li><a href="/lkml/2012/10/17/524">Linus Torvalds</a><ul><li><a href="/lkml/2012/10/17/528">Josh Boyer</a><ul><li><a href="/lkml/2012/10/17/530">Linus Torvalds</a><ul><li><a href="/lkml/2012/10/17/535">Linus Torvalds</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2012/10/17/545">Linus Torvalds</a><ul><li><a href="/lkml/2012/10/17/545">Josh Boyer</a></li><li><a href="/lkml/2012/10/18/14">Rusty Russell</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 17 Oct 2012 16:21:29 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: RFC: sign the modules at install time</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Oct 17, 2012 at 4:07 PM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Hmm. It *should* work for them too, because the debuginfo modules stay<br />&gt; around in the object tree, and never get stripped there. None of this<br />&gt; is different from what we used to do before: we stripped the modules<br />&gt; as we copied them to /lib/modules (where the RPM build obviously would<br />&gt; have that $RPM_BUILD_ROOT prefix on the module install path).<br /><br />Ok, I read your description of the odd way fedora builds debuginfo kernels.<br /><br />I actually think that works fine too. I do agree with adding a "make<br />sign_modules" target, but it would *re-sign* them after "make<br />modules_install" has already signed them once.<br /><br />Why?<br /><br />What you'd do for your debuginfo requirements is:<br /><br /> - do the normal kernel build, and install modules (with *my* patch,<br />which does signing at install time)<br /><br />   This does the normal (conditionally stripped - you just wouldn't<br />strip them, but you cannot have done that before either) modules,<br />installs them, and signs then.<br /><br />   Ta-daa, you have your debuginfo modules installed, and they are<br />signed. Create the debuginfo rpm.<br /><br /> - now, strip the modules. This obviously destroys the signatures<br /><br /> - do the extra "make sign_modules" that you added, that re-signs the<br />already installed modules, and now you can create the non-debuginfo<br />rpm.<br /><br />Voila. "make modules_install" does the right thing for everybody -<br />including normal users. And it does so without the incredible baroque<br />code. And no normal user is expected to ever use the new "make<br />sign_modules", but it allows for the Fedora "we'll want to sign them<br />again".<br /><br />That said, you could even just do "make sign-modules" on your own<br />without any makefile targets. After all, it would just be something<br />like<br /><br />   find $MODULEDIR --name '*.ko | while read i; do script/sign-file<br />keyfile x509file $i; done<br /><br />so it could even be done in that rpm script directly.<br /><br />       Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
