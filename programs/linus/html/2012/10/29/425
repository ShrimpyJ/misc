    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2012/10/25/273">First message in thread</a></li><li><a href="/lkml/2012/10/27/80">Rik van Riel</a><ul><li><a href="/lkml/2012/10/29/414">Borislav Petkov</a><ul><li class="origin"><a href="/lkml/2012/11/17/85">Linus Torvalds</a><ul><li><a href="/lkml/2012/11/17/85">Borislav Petkov</a><ul><li><a href="/lkml/2012/11/17/88">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 29 Oct 2012 10:06:15 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 2/3] x86,mm: drop TLB flush from ptep_set_access_flags</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Oct 29, 2012 at 9:57 AM, Borislav Petkov &lt;bp&#64;alien8.de&gt; wrote:<br />&gt;<br />&gt; On current AMD64 processors,<br /><br />Can you verify that this is true for older cpu's too (ie the old<br />pre-64-bit ones, say K6 and original Athlon)?<br /><br />&gt;                 This is done because a table entry is allowed<br />&gt; to be upgraded (by marking it as present<br /><br />Well, that was traditionally solved by not caching not-present entries<br />at all. Which can be a problem for some things (prefetch of NULL etc),<br />so caching and then re-checking on faults is potentially the correct<br />thing, but I'm just mentioning it because it might not be much of an<br />argument for older microarchitectures..<br /><br />&gt;, or by removing its write,<br />&gt; execute or supervisor restrictions) without explicitly maintaining TLB<br />&gt; coherency. Such an upgrade will be found when the table is re-walked,<br />&gt; which resolves the fault.<br /><br />.. but this is obviously what we're interested in. And since AMD has<br />documented it (as well as Intel), I have this strong suspicion that<br />operating systems have traditionally relied on this behavior.<br /><br />I don't remember the test coverage details from my Transmeta days, and<br />while I certainly saw the page table walker, it wasn't my code.<br /><br />My gut feel is that this is likely something x86 just always does<br />(because it's the right thing to do to keep things simple for<br />software), but getting explicit confirmation about older AMD cpu's<br />would definitely be good.<br /><br />                  Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
