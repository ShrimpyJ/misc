    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/7/20/24">First message in thread</a></li><li><a href="/lkml/1996/7/20/24">Peter Van Eynde</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 19 Jul 1996 13:56:24 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: change of policy on mmap?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 19 Jul 1996, Peter Van Eynde wrote:<br />&gt; <br />&gt; I'm porting a program to Linux that mmaps 128+ MB on startup, but it only<br />&gt; uses about 16 megs of it. The reasons for this bad design is that it uses<br />&gt; a copying garbage collector with different "segments" to store data in.<br />&gt; <br />&gt; The memory is mmaped rwx, anonymous, private and static. Thus linux 2.0.x<br />&gt; always checks if there is enough mem+swap for this --- I don't want this<br />&gt; to happen.<br />&gt; <br />&gt; 1 How can I tell the kernel to mmap it, but _not_ to check if it is<br />&gt; available. How should I modify the mmap call, or could you add another<br />&gt; flag?<br /><br />You can trivially alter the kernel not to check for memory availability, <br />but then the program will obviously only run on your hacked kernel (or on <br />machines with enough mem+swap). If you want to take this approach, just <br />uncomment tha calls to "vm_enough_memory(pages)" that exist in <br />linux/mm/mmap.c (it's used in both sys_brk() and do_mmap(), you can <br />delete both or just the one that is bothering you).<br /><br />&gt; 2 To trow away data (copying gc...) I should do mmap with /dev/null,<br />&gt; right? (or was it /dev/zero)<br /><br />You can use /dev/null, or alternatively an "anonymous" mapping with a <br />"fd" of -1, and the MAP_ANONYMOUS flag set. That way you don't need the <br />open/close stuff at all..<br /><br />&gt; I remember that a while ago there was a thread on usenet about "malloc<br />&gt; lies in Linux". It was then said that mallocing 1GB was ok, so long as you<br />&gt; didn't use the memory. Has policy changed or is mmap(rwx) so different?<br /><br />It has never been true that you can malloc() as much as you want, <br />although some people have claimed it to be so. However, mmap() didn't use <br />to check at all, and that did change with 2.0.<br /><br />Even now the checks are more "heuristics" than real checks that you can <br />depend on making sure you don't run out of memory. You can fool the <br />heuristics if you know what you're doing.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
