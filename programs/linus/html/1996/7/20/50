    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/7/20/30">First message in thread</a></li><li><a href="/lkml/1996/7/20/30">"Hubert A. Bahr"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/1996/7/21/56">(Harald Koenig)</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 19 Jul 1996 07:48:00 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Stablilizing execution time?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 18 Jul 1996, Hubert A. Bahr wrote:<br />&gt; <br />&gt; What can be done beyond running in single user mode to <br />&gt; bring execution time to a more repeatable state.<br /><br />That doesn't necessarily help anything. Execution time in low-load <br />"normal state" should be roughly the same as single user mode. As far as <br />the kernel is concerned it's exactly the same thing, of course, and the <br />only difference is that you _may_ have other processes running (but <br />especially on a workstation type setup there seldom are many of those, <br />and they seldom result in 30 seconds worth of CPU usage).<br /><br />&gt; The problem I have is wanting to test different versions of the<br />&gt; same simulation for performance.  All the data is computed and<br />&gt; the output is identical.  The object code is about 80k stripped<br />&gt; but do to the data being generated the occupied memory will run<br />&gt; about 4Meg.  The execution time is on the order of 9 minutes with<br />&gt; up to 30 seconds variation.  This is on a 486DX-2/66 with a<br />&gt; 256K L2 cache with 16Meg 70ns Ram.  <br /><br />Note that depending on what you're doing, these kinds of variations may <br />be simply due to things like cache effects. Most external PC caches are <br />direct-mapped, and that means that there can easily be bad cache effects <br />if the physical pages you get happen to have bad cache layout for your <br />problem.<br /><br />Some other unixes try to avoid this by being clever about physical page <br />allocation: that may not actually help execution times (you can still get <br />bad cache access patterns), but it _does_ make execution time more <br />predictable. For some things predictability may even be preferable to <br />speed (some hard-real-time people don't like caches at all because they <br />can result in so much unpredictability).<br /><br />The clever allocation of physical memory for cache effects (page <br />colouring) usually helps performance too, especially for the "nice" <br />access patterns (ie single large arrays in memory), so we'll probably <br />have to do that some day.<br /><br />&gt; 	I am guessing that one contribution is the load point of<br />&gt; the code since it could change overlap in cache.  Any thing else is<br />&gt; beyond me.  System time is on the order of .2 sec as reported by<br />&gt; the time command.  The variation noted is when running the identical<br />&gt; code repeatedly and it doesn't appear to have any cyclic effect.<br /><br />You are unlikely to get much system time variation, as the kernel seldom <br />does anything which is very susceptible to cache effects. Most of the <br />time difference is likely to be in user mode or in IO effects (and I <br />assume you have minimized those effects? I assume it's CPU-bound?)<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
