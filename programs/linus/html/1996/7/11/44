    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/7/11/14">First message in thread</a></li><li><a href="/lkml/1996/7/11/14">Kees Bakker</a><ul><li class="origin"><a href="/lkml/1996/7/12/49">Linus Torvalds</a><ul><li><a href="/lkml/1996/7/12/49">Matthias Urlichs</a></li><li><a href="/lkml/1996/7/13/5">Scott Street</a><ul><li><a href="/lkml/1996/7/14/14">Linus Torvalds</a><ul><li><a href="/lkml/1996/7/14/50">Bryn Paul Arnold Jones</a></li><li><a href="/lkml/1996/7/15/23">(Thomas Schoebel-Theuer)</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1996/7/12/43">(really )</a></li><li><a href="/lkml/1996/7/14/18">(Kai Henningsen)</a><ul><li><a href="/lkml/1996/7/16/27">(Alan Cox)</a><ul><li><a href="/lkml/1996/7/17/25">Bryn Paul Arnold Jones</a></li><li><a href="/lkml/1996/7/17/32">(Thomas Koenig)</a></li><li><a href="/lkml/1996/7/17/33">Craig Brozefsky</a><ul><li><a href="/lkml/1996/7/18/27">Zefram</a></li><li><a href="/lkml/1996/7/18/40">Bryn Paul Arnold Jones</a></li><li><a href="/lkml/1996/7/19/4">Shinanyaku</a></li></ul></li><li><a href="/lkml/1996/7/17/36">(Thomas 'Mike' Michlmayr)</a></li><li><a href="/lkml/1996/7/17/57">Todd Graham Lewis</a></li><li><a href="/lkml/1996/7/18/23">Matthew X Economou</a></li><li><a href="/lkml/1996/7/19/47">Martin Mares</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 11 Jul 1996 07:56:18 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: NFS still has caching problem</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 10 Jul 1996, Kees Bakker wrote:<br />&gt; <br />&gt; Today I have booted my system with linux-2.0.4, and saw it still has the<br />&gt; following problem with directory caching. Let's first briefly describe the<br />&gt; test environment.<br />&gt; NFS server, called napoli, is an Alpha, and runs OSF1 v2.0<br />&gt; NFS client 1, called lahti, runs linux-2.0.4 ('out of the box')<br />&gt; NFS client 2, called pori, runs linux-1.3.83 (with my nfs/dir.c patch)<br />&gt; <br />&gt; The test is as follows:<br />&gt; - on one client, write a file<br />&gt; - then do a 'rsh' to another client and 'cat' the file<br />&gt; - again, on the first client, write the same file, different contents<br />&gt; - again, do a 'rsh' to another client and 'cat' the file<br />&gt; You will see that the Linux clients keep showing the old contents if the<br />&gt; size of the file remains the same. If the new size is different, then the<br />&gt; Linux client shows the new contents.<br /><br />This is NOT a bug - it's a feature. The problem is that NFS simply cannot <br />guarantee cache coherency, so either you have to disable caching <br />altogether, or you accept the fact that NFS has these surprising features.<br /><br />The reason that Linux _does_ seem to work if the size has changed is that <br />there is a simple and stupid check that tries to avoid _most_ cases with <br />old caches. It simply notices that "uhhuh, the server has another size <br />than the one we've cached - better invalidate our cache".<br /><br />There is also a timeout for the cache (default 30 seconds, if I remember <br />correctly, and you can set it by hand with a mount parameter), so the <br />update _will_ be seen eventually, but 30 seconds can be a longish time.<br /><br />Now, I'm not saying that this is good behaviour, but on the whole it's a lot<br />better than not caching. I'd be happy to try to make the heuristic for cache<br />invalidates a bit better - one suggestion has been to make the timeout<br />shorter if the file has been modified recently (dynamic timeouts: if the <br />file hasn't been modified in the last month we use long timeouts, if it <br />has changed within the last few minutes we use a timeout of just a second <br />ot something like that).<br /><br />So instead of the patch you sent (which looks fine, but it's a bit more <br />brute-force than I'd like), maybe you could look into the file "file.c" <br />and the "revalidate_inode()" function?<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
