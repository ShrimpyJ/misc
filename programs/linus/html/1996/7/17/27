    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/7/16/51">First message in thread</a></li><li><a href="/lkml/1996/7/16/51">Ove Ewerlid</a><ul><li class="origin"><a href="/lkml/1996/7/19/5">Linus Torvalds</a><ul><li><a href="/lkml/1996/7/19/5">Marc Lewis</a></li><li><a href="/lkml/1996/7/19/25">Ove Ewerlid</a><ul><li><a href="/lkml/1996/7/23/61">(Thomas Koenig)</a></li></ul></li></ul></li><li><a href="/lkml/1996/7/18/17">"Dr. Werner Fink"</a></li><li><a href="/lkml/1996/7/19/42">(Thomas Koenig)</a></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/1996/7/17/27/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 17 Jul 1996 08:23:01 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 3c59x driver 0.25 falls off network</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 16 Jul 1996, Ove Ewerlid wrote:<br />&gt; <br />&gt; Well, after removing the tbusy-optimization from the 0.25 driver things<br />&gt; have worked very well for me (all in all 5 different 3c595 on 4<br />&gt; machines).<br /><br />Thanks for the hint, Ove. Could you try this alternative patch rather <br />than the one you did? This still keeps the optimization, but it rewrites <br />the logic to do it another way without clearing "tbusy" when it does do <br />the optimization, and that was definitely wrong (it kept tbusy cleared <br />after the packet, even though it didn't have size for any larger <br />packets). <br /><br />Others seeing problems with the 3c59x driver (both the old and the newer <br />one), could you please test this patch too (it's against 0.25 in 2.0.7, <br />but it should patch cleanly against any of the newer kernels with the <br />0.25 driver).<br /><br />(Umm, I don't even _have_ a 3c59x card, so this patch is obviously untested.<br />But you all know I write perfect code even when I don't test it, don't you?)<br /><br />		Linus<br /><br />-----<br />--- v2.0.7/linux/drivers/net/3c59x.c	Mon Jul  8 16:09:54 1996<br />+++ linux/drivers/net/3c59x.c	Wed Jul 17 08:11:44 1996<br />&#64;&#64; -750,19 +750,25 &#64;&#64;<br /> 	   we actually have room for this packet.<br /> 	   */<br /> <br />-	if (inw(ioaddr + TxFree) &gt; skb-&gt;len) /* We actually have free room. */<br />-	  dev-&gt;tbusy = 0;			/* Fake out the check below. */<br />-	else if (dev-&gt;tbusy) {<br />-		/* Transmitter timeout, serious problems. */<br />-		int tickssofar = jiffies - dev-&gt;trans_start;<br />-		int i;<br />+	switch (dev-&gt;tbusy) {<br />+		int i, tickssofar;<br />+	default:<br />+		/* even if we're busy, we might have room for a small packet */<br />+		if (inw(ioaddr + TxFree) &gt; skb-&gt;len)<br />+			break;<br /> <br />-		if (tickssofar &lt; 2)		/* We probably aren't empty. */<br />+		/* Check for transmitter timeout, serious problems. */<br />+		tickssofar = jiffies - dev-&gt;trans_start;<br />+<br />+		/* We probably aren't empty - don't bother timeouting (20ms) */<br />+		if (tickssofar &lt; 2*HZ/100)<br /> 			return 1;<br />+<br /> 		/* Wait a while to see if there really is room. */<br /> 		for (i = WAIT_TX_AVAIL; i &gt;= 0; i--)<br /> 			if (inw(ioaddr + TxFree) &gt; skb-&gt;len)<br />-			  break;<br />+				break;<br />+<br /> 		if ( i &lt; 0) {<br /> 			if (tickssofar &lt; TX_TIMEOUT)<br /> 				return 1;<br />&#64;&#64; -771,7 +777,8 &#64;&#64;<br /> 			/* Issue TX_RESET and TX_START commands. */<br /> 			outw(TxReset, ioaddr + EL3_CMD);<br /> 			for (i = 20; i &gt;= 0 ; i--)<br />-				if ( ! inw(ioaddr + EL3_STATUS) &amp; CmdInProgress)                                        break;<br />+				if ( ! inw(ioaddr + EL3_STATUS) &amp; CmdInProgress)<br />+					break;<br /> 			outw(TxEnable, ioaddr + EL3_CMD);<br /> 			dev-&gt;trans_start = jiffies;<br /> 			dev-&gt;tbusy = 0;<br />&#64;&#64; -779,15 +786,8 &#64;&#64;<br /> 			vp-&gt;stats.tx_dropped++;<br /> 			return 0;			/* Yes, silently *drop* the packet! */<br /> 		}<br />-		dev-&gt;tbusy = 0;<br />-	}<br />-<br />-	/* Block a timer-based transmit from overlapping.  This could better be<br />-	   done with atomic_swap(1, dev-&gt;tbusy), but set_bit() works as well.<br />-	   If this ever occurs the queue layer is doing something evil! */<br />-	if (set_bit(0, (void*)&amp;dev-&gt;tbusy) != 0) {<br />-		printk("%s: Transmitter access conflict.\n", dev-&gt;name);<br />-		return 1;<br />+	case 0:<br />+		break;<br /> 	}<br /> <br /> 	/* Put out the doubleword header... */<br />-----<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
