    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/7/7/53">First message in thread</a></li><li><a href="/lkml/1996/7/11/11">(Orlando M. Amador)</a><ul><li><a href="/lkml/1996/7/12/35">Michiel Boland</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1996/7/12/38">(Harald Koenig)</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 13 Jul 1996 09:56:28 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: How does chown(2) works with symlinks?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 11 Jul 1996, Michiel Boland wrote:<br />&gt; <br />&gt; And permissions for a symbolic link /are/ relevant; you cannot<br />&gt; readlink() a symbolic link that has no read permission.<br />&gt; (try ls -l /proc/1)<br /><br />Umm, that's a special case. I made the /proc symlinks work the way _I_ <br />personally think symlinks should work, but for "normal" symlinks the <br />standard UNIX behaviour is that they are always of mode lrxwrxwrxw..<br /><br />I have a few other "sick" ideas for symlinks if I would like to extend <br />them:<br /><br /> - permission checks according to mode bits (not just for /proc). The <br />   kernel actually does this already, it's just that the /proc filesystem <br />   is the only filesystem that has other than full read/write.<br /> - setgid/setuid links would change the fsgid/fsuid for the process that <br />   follows them for the duration of the lookup to the group/owner of the <br />   symlink.<br /><br />Especially the second point is "strange". But it could be very useful for<br />allowing controlled r/w access to _certain_ files without allowing general<br />execute access to the directory the files reside in. It would be a huge <br />security hole if used incorrectly, though (like doing a root setuid <br />symlink to a directory, and then people do a <br /><br />	vi directory/../../../etc/passwd<br /><br />heh ;)<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
