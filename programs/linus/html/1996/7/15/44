    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/7/15/10">First message in thread</a></li><li><a href="/lkml/1996/7/15/10">"A.N.Kuznetsov"</a><ul><li class="origin"><a href="/lkml/1996/7/15/19">Linus Torvalds</a><ul><li><a href="/lkml/1996/7/15/19">"A.N.Kuznetsov"</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Jul 1996 08:37:28 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: NFS caching patch.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />Ok, this is _exactly_ why I didn't check the mtime in the first place, <br />and just to explain WHY this patch is bad bad bad, I'll walk you through <br />it. <br /><br />On Sun, 14 Jul 1996, A.N.Kuznetsov wrote:<br />&gt; diff -ur linux/fs/nfs/file.c linux-obj/fs/nfs/file.c<br />&gt; --- linux/fs/nfs/file.c	Sun Jul 14 21:03:44 1996<br />&gt; +++ linux-obj/fs/nfs/file.c	Sun Jul 14 21:11:36 1996<br />&gt; &#64;&#64; -147,8 +147,23 &#64;&#64;<br />&gt;  	if (pos &gt; inode-&gt;i_size)<br />&gt;  		inode-&gt;i_size = pos;<br />&gt;  	/* Avoid possible Solaris 2.5 nfsd bug */<br />&gt; -	if (inode-&gt;i_ino == fattr.fileid)<br />&gt; +	if (inode-&gt;i_ino == fattr.fileid) {<br />&gt; +<br />&gt; +	/*<br />&gt; +	 *	It is hack, that cannot be avoided for NFSv2,<br />&gt; +	 *	because it has no "weak cache consistency" mechanism.<br />&gt; +	 *	We are deemed to believe, that the file<br />&gt; +	 *	was not changed since previous getattr (or<br />&gt; +	 *	another operation returning gratuitous attributes).<br />&gt; +	 *	Another solution would be to call getattr before<br />&gt; +	 *	each write :-) 				--ANK<br />&gt; +	 *		(see also nfs_notify_change() in inode.c)<br />&gt; +	 */<br />&gt; +		inode-&gt;i_mtime = fattr.mtime.seconds;<br />&gt; +		NFS_MTIME_USECS(inode) = fattr.mtime.useconds;<br />&gt; +<br />&gt;  		nfs_refresh_inode(inode, &amp;fattr);<br />&gt; +	}<br />&gt;  	return written;<br />&gt;  }<br />&gt; <br /><br />The above "hack" is the obvious solution, but it's WRONG.<br /><br />Think of when we write to the file, and have it cached. When the write <br />succeeds, we now update the "mtime" of the local cached data from the <br />resulting file attributes, and _really_ really bad things happen if <br />somebody else has happened to write to the file just before we wrote to <br />it.<br /><br />In short, the above will update "mtime" to a new time _without_ <br />guaranteeing that no changes have taken place in the file between the two <br />dates. Your logic is that "WE changed the file, thus we don't need to <br />invalidate", but the case may be that "WE AND SOMEBODY ELSE changed the <br />file".<br /><br />Now, the above patch will result in us not necessarily flushing the cache<br />_ever_ even if it's full of data that is stale. That's a lot worse than the<br />current behaviour, where we don't flush the cache immediately, but we do<br />flush it eventually when it times out. The current behaviour is at least<br />correct (according to NFS specs you can cache read data for some time), the<br />patch introduces a bug (and your comment about calling "getattr()" before<br />each write is equally broken - you _cannot_ make the race window go away, and<br />it's fundamental to the whole NFSv2 design). <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
