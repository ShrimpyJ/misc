    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/12/1/10">First message in thread</a></li><li><a href="/lkml/1996/12/1/10">Ingo Molnar</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/1996/12/1/20">(Alan Cox)</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 1 Dec 1996 14:51:19 +0200 (EET)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: linux/fs/open.c:sys_open() &amp; filename zero copy patch</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br /><br />On Sun, 1 Dec 1996, Ingo Molnar wrote:<br />&gt; <br />&gt; we currently do getname() to copy the pathname from user-space to<br />&gt; kernel-space. Is this necessary?<br /><br />Yes.<br /><br />&gt; I'm now running a kernel with the following patch, that uses the<br />&gt; user-space pointer. [the patch is against vanilla 2.1.13]<br /><br />This is horribly broken. <br /><br />&gt; the open("temptemp",rw) benchmark went down from 39 usecs to 30 usecs,<br />&gt; mainly due to the __get_free_page() &amp; free() we are not doing now. [on a<br />&gt; 100 MHz Neptun]<br /><br />It "works", but ahs the following problems:<br /> - it accesses user space through a normal pointer. That's a no-no (try<br />   your patch on 2.0.x, for example, or on a m68k machine). Total<br />   breakage.<br /> - it has race conditions like you wouldn't believe. Because the name is<br />   in user space, a page fault (and thus a reschedule) can occur at any<br />   time we access the name in the filesystem layer: like in the lookup()<br />   code. <br /><br />&gt; ps. there are some other places where we use getname() ...<br />&gt; ps2. is it really this easy? :)<br /><br />No, it really is _not_ that easy.<br /><br />Sure, it improves performance, but at the same time you get all the funny<br />"MicroSoft special effects" like random kernel corruption, users who give<br />pointers into kernel memory and are able to look at kernel data,<br />non-deterministic behaviour under heavy load etc etc.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
