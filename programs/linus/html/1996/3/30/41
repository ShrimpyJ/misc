    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/3/29/105">First message in thread</a></li><li><a href="/lkml/1996/3/29/105">David Monro</a><ul><li><a href="/lkml/1996/3/30/30">"Mark E. Levitt"</a></li><li class="origin"><a href="/lkml/1996/3/30/77">Linus Torvalds</a><ul><li><a href="/lkml/1996/3/30/77">(Alan Cox)</a><ul><li><a href="/lkml/1996/3/31/14">Dale Scheetz</a><ul><li><a href="/lkml/1996/3/31/19">(Christoph Lameter)</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1996/3/31/57">Jason Merrill</a></li><li><a href="/lkml/1996/3/31/58">Jason Merrill</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Mar 1996 20:10:49 +0200 (EET)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Slow PPP - caused by duplicate packets?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 30 Mar 1996, David Monro wrote:<br />&gt; <br />&gt; My PPP link has been suffering the dreaded slowness, particularaly if I talk to<br />&gt; the Solaris box which is the main server at the remote end. My ppp server is a<br />&gt; NetBSD/sun3 machine; the remote modem is on a cisco terminal server from which<br />&gt; I rlogin to the netbsd box. I use an mtu of 1500.<br />&gt; <br />&gt; Looking at the modem traffic while using 'more' on a large file with a 80x60<br />&gt; xterm, I noticed that packets seemed to be still coming down the link after I<br />&gt; had got to the end of one page, but before a started the next one. It would<br />&gt; only happen for a second or so after the end of the page.<br />&gt; <br />&gt; So I grabbed tcpdump and had a look at the packets, and there seem to be<br />&gt; duplicate packets on my link! At the end of this mail, you will find the<br />&gt; tcpdump output for one screenful of text. staff is the remote server machine,<br />&gt; running Solaris 2.5. Fuzzbox is the local Linux box, running 1.3.79.<br /><br />Umm.. The tcpdump info you include would seem to indicate that linux is <br />doing everything correctly, and that the Solaris box is doing something <br />stupid.<br /><br />However, I can't imagine that Solaris started doing stupid things for <br />everybody in the 1.3.7x timeframe and worked fine before that, so there <br />must be something we're not seeing here. Does anybody have access to <br />tcpdump at the _other_ end?<br /><br />It _looks_ like the other end is ignoring our first ACK, so it times out, <br />and then sends the packet again. And then we ACK it twice (that's normal <br />linux behaviour - there's the "normal" ACK, and then there is an extra <br />one that comes from the fact that the linux TCP code decides we'd better <br />ack again when we got a packet re-sent).<br /><br />Now, WHY is Solaris ignoring our first ACK?<br /><br />&gt; I don't know a great deal about tcp, but I am sure this shouldn't be happening!<br /><br />Indeed. <br /><br />&gt; fuzzbox:~ # /usr/local/sbin/tcpdump -S -i ppp0<br />&gt; tcpdump: listening on ppp0<br />&gt; 12:05:38.477293 fuzzbox.1023 &gt; staff.login: P 1267692566:1267692567(1) ack 229386462 win 29417 (DF) [tos 0x10]<br />&gt; 12:05:38.747298 staff.login &gt; fuzzbox.1023: P 229386462:229386484(22) ack 1267692567 win 8760 (DF)<br />&gt; 12:05:39.057303 fuzzbox.1023 &gt; staff.login: . ack 229386484 win 29395 [tos 0x10]<br />&gt; 12:05:41.087341 staff.login &gt; fuzzbox.1023: P 229386484:229387935(1451) ack 1267692567 win 8760 (DF)<br />&gt; 12:05:41.387346 fuzzbox.1023 &gt; staff.login: . ack 229387935 win 29404 [tos 0x10]<br /><br />This is a perfectly fine ACK, but..<br /><br />&gt; 12:05:42.627369 staff.login &gt; fuzzbox.1023: . 229386484:229387935(1451) ack 1267692567 win 8760 (DF)<br />&gt; 12:05:42.627369 fuzzbox.1023 &gt; staff.login: . ack 229387935 win 29404 [tos 0x10]<br />&gt; 12:05:42.927375 fuzzbox.1023 &gt; staff.login: . ack 229387935 win 29404 [tos 0x10]<br /><br />..for some reason staff decides to ignore it and resends.<br /><br />Alan, any ideas? The other end would be perfectly right in ignoring our <br />packets if they get sent out with the wrong checksum, for example. Or <br />maybe the compression code (both cslip and ppp use the same code, no?) <br />has problems and "compresses" the packets to something unrecognizable?<br /><br />This does not look like a interrupt latency problem: we seem to be <br />receiving the packets ok. We might not be sending them out ok (tcpdump <br />shows only what the net layer _thinks_ is happening, and there is no <br />guarantee that the packets leave the computer looking ok), but that <br />shouldn't be affected by interrupt latency (the worst that could happen <br />is that send side throughput isn't optimal, but if we're receiving 1.5kB <br />packets ok then it can't be noticeable).<br /><br />Hmm.. Another possibility is that the delayed ACK code is subtly broken, <br />and that Solaris has started re-transmitting the packet before it <br />actually got our ACK for it (there is a 2-second gap between us sending <br />the ACK and the Solaris re-sending, but it might have taken 2 seconds to <br />send a 1451-byte packet on a slow link).<br /><br />David, there are a few places where sk-&gt;ato is initialized to something <br />like "HZ/3", change those to 0, and see if that helps? Just search for them <br />with<br /><br />	grep "ato *=[^=]" *.c<br /><br />in linux/net/ipv4 (two in tcp_input.c and one in af_inet.c, it seems).<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
