    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/3/15/105">First message in thread</a></li><li><a href="/lkml/1996/3/15/105">Hans Georg Zezschwitz</a><ul><li><a href="/lkml/1996/3/15/112"> roque&#64;di ...</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 16 Mar 1996 12:41:29 +0200 (EET)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Wrong use of IRQ-handling in ftape?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 15 Mar 1996, Hans Georg Zezschwitz wrote:<br />&gt;<br />&gt; As writing a section of the Kernel Korner in Linux Journal, I wondered<br />&gt; what the new "device id" meant. <br />&gt; <br />&gt; As Shared Interrupts are a concept supported by PCI, which introduces<br />&gt; device ids as well, I saw those to concepts together and believed<br />&gt; that the device id should is only useful when SA_SHIRQ is set (when<br />&gt; calling request_irq). Howether, when looking at patch-1.3.74.gz, I<br />&gt; noticed that the calls to "request_irq" and "free_irq" don't support<br />&gt; shared irqs, but anyway set the device id. This should not be<br />&gt; harmful, but who understood the new irq-concept wrong, me or the<br />&gt; "patcher"?<br /><br />"dev_id" can be anything, and as far as the rest of the kernel is <br />concerned it just has to be a unique pointer within each interrupt. For <br />most things, that unique pointer might as well be NULL (if you aren't <br />sharing interrupt NULL is as unique as anything else), and that's what <br />most drivers use now.<br /><br />However, the nice thing about "dev_id" is that it's not only used to <br />separate two irq handlers from each other at request/free time, it's <br />_also_ given to the interrupt handler routine when it's called.  And that <br />makes it useful even for interrupts that can't be shared: it can be used <br />as a pointer to the device structure.<br /><br />(the current networking drievrs usually use something like <br />"irq2dev[irqnr]" to get at the device structure for that interrupt, but <br />it would be more efficient to just give the device structure pointer as <br />"dev_id", and use that instead..)<br /><br />The ftape driver uses a pointer to a string, which works but doesn't make <br />much sense (they might as well use NULL, the rest of the kernel doesn't <br />care what it is, and they aren't sharing interrupts anyway, I believe). <br />But it's not wrong, it's just unnecessary.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
