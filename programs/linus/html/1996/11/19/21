    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/11/18/56">First message in thread</a></li><li><a href="/lkml/1996/11/18/56">Andreas Schultz</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 19 Nov 1996 11:25:42 +0200 (EET)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: wait_queue bug ?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br /><br />On Mon, 18 Nov 1996, Andreas Schultz wrote:<br />&gt; <br />&gt; There seems to be a bug in the wait_queue handling. Imagin the following <br />&gt; situation:<br />&gt; <br />&gt; struct {<br />&gt;         ulong test_value;<br />&gt;         struct wait_queue *my_wait_queue;<br />&gt; } my_struct;<br />&gt; <br />&gt; A "sleep_on(&amp;my_struct.my_wait_queue);" overwrites than the value <br />&gt; of test_value, causing all kind of havoc.<br /><br />Hmm.. Have you initialized the wait queues with <br /><br />	init_wait_queue(&amp;my_struct.my_wait_queue);<br /><br />which should set up the wait queue correctly?<br /><br />&gt; It seems that the bug has been introduced in 2.0.16. Have a look at <br />&gt; following pice of code from include/linux/sched.h:<br /><br />It's rather ugly, yes. <br /><br />&gt; extern inline void __add_wait_queue(struct wait_queue ** p,<br />&gt;	struct wait_queue *wait)<br /><br /> [ obscene code removed: I wrote it, I never want to see it again ;-]<br /><br />&gt; and from include/linux/wait.h:<br />&gt; <br />&gt; #define WAIT_QUEUE_HEAD(x) ((struct wait_queue *)((x)-1))<br />&gt; <br />&gt; The assignment of WAIT_QUEUE_HEAD to *next goes to an illegal address !!<br /><br />The code really does assign a pointer to the "previous" word into the<br />wait-queue, but that pointer should never be dereferenced directly. It<br />should always be referenced through the "-&gt;next" entry, which will cancel<br />the effect of the "-1" done in WAIT_QUEUE_HEAD. <br /><br />Now, I agree that it's not pretty, but if you have a weak stomach you<br />shouldn't have looked at the implementation ;) <br /><br />My approach to code cleanliness: the real C code should be readable, but<br />header files are allowed to hide ugly details if the interface to those<br />ugly details is clean. In this case the "interface" is<br /><br />	init_wait_queue(&amp;wait_q_pointer)<br />	sleep_on(&amp;wait_q_pointer);<br />	wake_up(&amp;wait_q_pointer);<br />	... etc ...<br /><br />and the ugly details are just implementation details that you should never<br />see..<br /><br />There could certainly be a bug there somewhere, but I don't see it<br />immediately. I did walk through all this when I wrote it, but right now<br />I'd rather forget it ;)<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
