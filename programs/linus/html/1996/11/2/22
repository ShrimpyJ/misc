    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/11/2/18">First message in thread</a></li><li><a href="/lkml/1996/11/2/18">(Alan Cox)</a><ul><li class="origin"><a href="/lkml/1996/11/2/37">Linus Torvalds</a><ul><li><a href="/lkml/1996/11/2/37">Egor Egorov</a></li><li><a href="/lkml/1996/11/6/2">(Alan Brown)</a><ul><li><a href="/lkml/1996/11/7/8">(Alan Cox)</a><ul><li><a href="/lkml/1996/11/8/3">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1996/11/6/14">Matthias Sattler</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 2 Nov 1996 15:00:59 +0200 (EET)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Since so many people have asked me this</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 2 Nov 1996, Alan Cox wrote:<br />&gt; <br />&gt; Whats in 2.0.23ac#2 thats not in 2.0.24<br />&gt; <br />&gt; 1.	SMP irq forwarding, this gives BIG performance/latency improvements<br />&gt; with Linux/SMP, but its not exactly a bug fix.<br /><br />I was worried about the implications of this on the low-level code the<br />changes to .S files that I was too lazy to test because I don't run 2.0.x any<br />more). It's potentially still a subject for 2.0.x, but Alan's patches also<br />reverted some of the entry.S code to an older version for a reason that I<br />couldn't see (I _suspect_ the reason was just a version skew between us, but<br />I didn't want to play around with the code when I couldn't test it on SMP<br />anyway, so I chickened out and just didn't use that part of the patch at<br />all). <br /><br />[ "Chicken, chicken, Linus is a chicken, kvaa kvaa kvaa.." ]<br /><br />&gt; 2.	Linus version of the socket change uses int not __u32. I'll submit<br />&gt; that as a patch again to use __u32 for the benefit of the folks trying to<br />&gt; get the Linux stack running on a certain 16bit OS<br /><br />The reason I didn't like that one was that I don't like using __u32 unless<br />you really want _exactly_ 32 bits. So I'll happily use __u32 for sequence<br />numbers, on-disk block numbers, IPv4 addresses etc, but I don't like it when<br />the only reason is that you really want to have "enough" bits rather than<br />exactly 32 bits. <br /><br />On the other hand, "long" is not a good idea either, because using 64 bits on<br />the machines I use for it is way overkill. The day we need more than 4GB<br />counters for socket memory allocation I think I'll retire ;)<br /><br />Alan, I suspect we need a new type for Linux/8086. Something that isn't<br />hardware-specific like "u32", and would allow strange architectures to use 36<br />bits or whatever they want to. Suggestions?<br /><br />(No, I don't seriously consider porting to an architecture that doesn't<br />support "u32" easily, my argument is not technical in that sense. I just<br />argue for a way of thinking: think of the "u32" mentality as a necessary evil<br />that should be avoided whenever possible and used only when absolutely<br />necessary). <br /><br />Maybe it's just me that's unnecessarily anal about "u32". It's a perfectly<br />good size, it's just the implications of it that I don't like. <br /><br />&gt; 3.	Several bugs that Linus and others fixed between 2.0.23/2.0.24<br /><br />The most important of these is probably the selection wait-queue stuff.  It<br />will never bite you if you use only X and not gpm/selection at all, but if<br />you're an avid console user and switch between consoles a lot and use<br />selection it can be deadly. <br /><br />The bug is hard to see - it results in random memory corruption and the<br />panics are not generally even close to where the bug actually is. And the<br />corruption doesn't seem to be all that usual, as the bug seems to be<br />reasonably hard to trigger in the first place. But it's at least potentially<br />very serious. <br /><br />Oh, .24 also added a bug (that was also in 23ac): the tulip driver multicast<br />address enabling code has a wrong constant (0x08000 should be 0x08000000)<br />resulting in potential strange problems with tulip hardware. Damn, I'll have<br />to make a .25 for that (and for the SCSI host ordering change which is less<br />lethal but can be rather confusing). <br /><br />			Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
