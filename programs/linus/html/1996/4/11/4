    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/4/7/42">First message in thread</a></li><li><a href="/lkml/1996/4/8/2">Linus Torvalds</a><ul><li><a href="/lkml/1996/4/10/88">(Mike Castle)</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1996/4/14/33">(Kai Henningsen)</a><ul><li><a href="/lkml/1996/4/14/75">(Mike Castle)</a></li><li><a href="/lkml/1996/4/15/104">(Kai Henningsen)</a></li></ul></li><li><a href="/lkml/1996/4/8/74">"Steven L. Baur"</a><ul><li><a href="/lkml/1996/4/9/7">Linus Torvalds</a><ul><li><a href="/lkml/1996/4/9/22">Alan Cox</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 11 Apr 1996 08:49:18 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Crash report #1 with SADISTIC_KMALLOC/no modules</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 8 Apr 1996, Mike Castle wrote:<br />&gt; <br />&gt; Amazingly enough Linus Torvalds said:<br />&gt; &gt; Not possible, unless the chip in question does other things wrong. The <br />&gt; &gt; %cr2 register contains the virtual faulting address, and all the page <br />&gt; &gt; table lookups on a x86 are physical (and thus the page table lookups can <br />&gt; &gt; never fault, like on some other architectures).<br />&gt; <br />&gt; Does this mean that you cannot page out page tables at all, or<br />&gt; it's just a design issue not to?  Can the page tables fill up<br />&gt; physical memory?  Does this also limit the amount of memory in<br />&gt; use to some function of physical memory?<br /><br />You can page out page tables, that's just a normal "page missing" type <br />thing. Linux doesn't do it, because it adds a lot of races, and I don't <br />think the complexity is worth it for the memory you can (potentially) get <br />back. I generally try to optimize for the "there is enough memory" case <br />anyway.<br /><br />What I mean when I say that the page table lookups are done using <br />physical addressing is just that all the page tables contain physical <br />page addresses, and the actual logic that does the virtual-&gt;physical <br />translation never enters itself "recursively" - it does all the lookups <br />using the physical addresses found in the page tables.<br /><br />Thus the actual lookup can never result in a page fault (but if the <br />lookup doesn't find a present page table, that obviously _will_ fault, <br />but then it's the lookup logic that expressly requests the fault, not the <br />"action of looking it up" that faults, if you see the difference.<br /><br />In contrast, the m68k seems to use virtual page tables for some things at <br />least, and the alpha PAL-code uses a virtual page table lookup to speed <br />up normal cases. Then the actual page table lookup can fault, so that you <br />get a "two-level" fault handler type setup - the "normal" fault handler, <br />and the "double-page-fault" handler that handles the cases where the page <br />fault handling logic itself page faulted.<br /><br />(The x86 can also get a so-called "double fault", but that doesn't mean <br />that the hardware translation itself faulted, but that the software <br />handler that was supposed to handle a fault can't be found for some reason. <br />For example, the page fault handler if paged out ;-).<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
