    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/4/9/52">First message in thread</a></li><li><a href="/lkml/1996/4/9/52">(Patrick Schaaf)</a><ul><li><a href="/lkml/1996/4/9/58">Linus Torvalds</a></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/1996/4/9/65">Linus Torvalds</a><ul><li><a href="/lkml/1996/4/9/73">Nick Randell</a></li><li><a href="/lkml/1996/4/9/101">Buddha Buck</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 9 Apr 1996 17:46:57 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Asynchronous read-ahead</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">bof&#64;saarlink.de (Patrick Schaaf):<br />&gt;<br />&gt; Every task, even when cloned, currently gets its own TSS, and switches<br />&gt; between tasks are done with a 'jmp TSS' instruction (see switch_to);<br />&gt; this includes reloading CR3 from the new TSS, which initiates a TLB flush.<br /><br />True, but...<br /><br />&gt; Optimizing it away, as David suggests, would mean to replace the<br />&gt; 'jmp TSS' instruction with code that explicitly saves/restores state<br />&gt; without modifying CR3; it might even save some other restoration work.<br />&gt; I think this change would have minimal impact on other parts of<br />&gt; the kernel; the switch_to is in exactly one place (schedule), setting<br />&gt; up a new task might have to change, but nothing else.<br /><br />Actually, the hardware already does that optimization. If the cr3 value in the<br />new process is the same as the old cr3 value, the TLB's won't be flushed.<br /><br />(That's from intel documentation, not actual testing. I'm lazy).<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
