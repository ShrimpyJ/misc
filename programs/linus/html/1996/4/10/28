    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/4/10/28">First message in thread</a></li><li class="origin"><a href="/lkml/1996/4/10/34">Linus Torvalds</a><ul><li><a href="/lkml/1996/4/10/34">Bill Heagy</a></li><li><a href="/lkml/1996/4/10/54">"Mark E. Levitt"</a><ul><li><a href="/lkml/1996/4/11/17">Steve Davies</a></li></ul></li><li><a href="/lkml/1996/4/11/16">Steve Davies</a></li><li><a href="/lkml/1996/4/12/2">tim middlekoop</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 10 Apr 1996 14:41:59 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Fix for SLOW PPP Bug</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Umm.. I've been looking at the use of "tcp_reset_xmit_timer()", and it may be<br />that we're seeing a timer fight between the delayed acks and retransmissions,<br />where both want to use the same timer and they don't like each other messing<br />with it..<br /><br />Anyway, this would indeed have gotten worse in 1.3.73, because that started<br />using more of the delayed ack logic (the code isn't new per se, it's just used<br />in a new way). That could have made the problem much worse.<br /><br />Anyway, one way to test out this theory would be to check out "tcp_queue()" in<br />tcp_input.c, and find the place where it does something like this:<br /><br />	if (!sk-&gt;delay_acks || th-&gt;fin) {<br />		tcp_send_ack(...<br />	}<br />	else<br />	{<br />		...<br /><br />Now, what happens if you change the test to use the "tcp_send_ack()" path a lot<br />more, and not use the "else" path as much (the else path does the delayed ack<br />thing, and if it is messed up the retransmission code..)<br /><br />I'd suggest changing the "if" case to something like this:<br /><br />	if (!sk-&gt;delay_acks || th-&gt;fin ||<br />	    sk-&gt;bytes_rcv &gt; sk-&gt;max_unacked ||<br />	    sk-&gt;ato &gt; HZ/2 ||<br />	    tcp_raise_window(sk)) {<br />		tcp_send_ack(...<br />	}<br />	else<br />	{<br /><br />(That is essentially what 1.3.72 uses, and while I don't particularly like the<br />extra cases it might help to be overly cautious in this case..)<br /><br />If you do test this, please remove any other patches to your system (ie try the<br />above on a clean 1.3.84 or 85 kernel), so that I don't need to worry about lots<br />of different patches..<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
