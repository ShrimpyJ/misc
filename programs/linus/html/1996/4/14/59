    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/4/14/59">First message in thread</a></li><li class="origin"><a href="/lkml/1996/4/16/1">Linus Torvalds</a><ul><li><a href="/lkml/1996/4/16/1">Gerd Knorr</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 14 Apr 1996 14:40:25 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: sysv filesystem lockups</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On 14 Apr 1996, Raul Miller wrote:<br />&gt; <br />&gt; Linus Torvalds:<br />&gt;  &gt; This is probably not a filesystem question: it looks like the<br />&gt;  &gt; loopback (and possibly md) drivers are broken with newer kernels<br />&gt;  &gt; due to getting confused about the plugs.<br />&gt; <br />&gt; plugs?<br /><br />The low-level driver code uses "plugs" to make sure that requests are <br />queued sanely to disk: a "plug" request is inserted into the request <br />queue to tell the disk drivers not to start the IO immediately, because <br />more requests are coming soon.<br /><br />The md and loopback device drivers probably cause a system deadlock by <br />trying to insert a request on another drivers request queue from within <br />their own unplug routines, before the other devices have been unplugged. <br />If they then sleep, the other devices will never be unplugged, so..<br /><br />One possible fix would be to never plug the md or loopback drivers, and <br />that would be easy enough to test. You'll find the "plug_device()" call <br />in drivers/block/ll_rw_block.c, it looks something like this:<br /><br />	if (!req) {<br />		plug_device(blk_dev + major);<br />	} else ...<br /><br />and you could try to disable the plugging for LOOP_MAJOR and for <br />MD_MAJOR. Something like<br /><br />	if (!req) {<br />		if (major != LOOP_MAJOR &amp;&amp; major != MD_MAJOR)<br />			plug_device(blk_dev + major);<br />	} else ...<br /><br />might be sufficient. Does that work for you?<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
