    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/4/15/105">First message in thread</a></li><li><a href="/lkml/1996/4/16/57">Linus Torvalds</a><ul><li><a href="/lkml/1996/4/20/2">(Gideon Glass)</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 20 Apr 1996 12:21:32 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Unices are created equal, but ...</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On 20 Apr 1996, Gideon Glass wrote:<br />&gt; <br />&gt; &gt;We should probably modify the LRU algorithm to take RSS into account (and <br />&gt; &gt;possibly access patterns, although that is harder to do). However, to be <br />&gt; &gt;quite honest, my personal priority is not that kind of behaviour, so it <br />&gt; &gt;would be up to somebody else to implement this.. (hint hint)<br />&gt; <br />&gt; Would something like madvise be appropriate here? <br /><br />Several people have mentioned madvise, and yes, I know about it. I don't <br />think it's the right answer, though. We might implement madvise() _too_, <br />but more for other things (like judging how much read-ahead we should do <br />on page faults etc.<br /><br />For the swap-out code I'd really prefer it if the code wouldn't rely on <br />user-supplied hints too much (it might take them into account, but it <br />shouldn't rely on them 100%). <br /><br />Somebody also mentioned the paper that said that a random swapout <br />algorithm can be optimal, and while I can imagine doing something like <br />that there are problems with that approach too (the cost of walking the <br />page tables etc). And we really don't want to throw away the possibility <br />of doing swap-outs multiple pages at a time.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
