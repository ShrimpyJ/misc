    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/4/4/41">First message in thread</a></li><li><a href="/lkml/1996/4/4/41">David Monro</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/1996/4/4/65/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 4 Apr 1996 07:37:03 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: PPP and 1.3.83 - even WORSE!</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 4 Apr 1996, David Monro wrote:<br />&gt; <br />&gt; I just tried upgrading to 1.3.83, and tried a couple of transfers. On a<br />&gt; 14.4k link I should (and used to) get 1.5 kB/s. With 1.3.82 I get 0.9,<br />&gt; with 1.3.83 I get 0.23! (This is on a 68Kb file). I think we are going<br />&gt; to see a storm of complaints about this one ;-(<br /><br />That's _very_ interesting. Because 83 has only one very minimal patch to <br />the network code, and that patch shouldn't even trigger under normal <br />circumstances (it's only triggered when the receive queue allocation <br />grows beyond the allowed queue length - which shouldn't happen if the <br />sender sends sane packets within the window).<br /><br />Even worse, the 83 patch actually has a bug that should probably crash <br />the machine if the new code is ever triggered ;-)<br /><br />I'm including the fix for this bug, but I don't think it's responsible: I <br />really think you would see much worse problems than just bad throughput <br />if this bug was ever triggered. I'll take a closer look at the TCP dumps <br />soon, maybe that gives me some idea.<br /><br />One thing that I'm starting to suspect is simply a timing issue: the new <br />code since 1.3.73 has been doing the ACK's from within the timer bottom <br />half handler, asynchronously from the actual network code. Now, if there <br />is a race within the slhc compression, it would be triggered a lot more <br />easily thanks to the more asynchronous network behaviour. <br /><br />	Thanks,<br />			Linus<br /><br />----------<br />--- v1.3.83/linux/net/ipv4/tcp_input.c	Wed Apr  3 16:06:57 1996<br />+++ linux/net/ipv4/tcp_input.c	Wed Apr  3 22:00:35 1996<br />&#64;&#64; -1487,6 +1487,7 &#64;&#64;<br /> 		if (skb-&gt;acked)<br /> 			break;<br /> 		__skb_unlink(skb, list);<br />+		kfree_skb(skb, FREE_READ);<br /> 	}<br /> }<br /> <br />&#64;&#64; -1501,20 +1502,24 &#64;&#64;<br /> {<br /> 	struct sk_buff * skb = list-&gt;next;<br /> <br />-	for (;;) {<br />-		struct sk_buff * next;<br />+	if (skb != (struct sk_buff *) list) {<br />+		for (;;) {<br />+			struct sk_buff * next;<br /> <br />-		if (skb == (struct sk_buff *) list)<br />-			break;<br />-		next = skb-&gt;next;<br />-		if (next-&gt;seq == skb-&gt;seq) {<br />+			next = skb-&gt;next;<br />+			if (next == (struct sk_buff *) list)<br />+				break;<br /> 			if (before(next-&gt;end_seq, skb-&gt;end_seq)) {<br /> 				__skb_unlink(next, list);<br />+				kfree_skb(next, FREE_READ);<br /> 				continue;<br /> 			}<br />-			__skb_unlink(skb, list);<br />+			if (next-&gt;seq == skb-&gt;seq) {<br />+				__skb_unlink(skb, list);<br />+				kfree_skb(skb, FREE_READ);<br />+			}<br />+			skb = next;<br /> 		}<br />-		skb = next;<br /> 	}<br /> }<br /> <br />----------<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
