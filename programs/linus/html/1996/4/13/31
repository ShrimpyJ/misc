    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/4/11/50">First message in thread</a></li><li><a href="/lkml/1996/4/12/32">Linus Torvalds</a><ul><li><a href="/lkml/1996/4/12/36">root</a></li><li><a href="/lkml/1996/4/12/40">Johan Henselmans</a></li><li><a href="/lkml/1996/4/12/54">Henrik Wallin</a><ul><li class="origin"><a href="/lkml/1996/4/13/38">Linus Torvalds</a><ul><li><a href="/lkml/1996/4/13/38">Henrik Wallin</a></li><li><a href="/lkml/1996/4/14/11">Madhusudana Rao</a><ul><li><a href="/lkml/1996/4/14/83">Russell Berry</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/1996/4/13/31/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 13 Apr 1996 10:32:17 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 1.3.87 broken tcp ?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />Ok, does this small patch help 1.3.87?  I'm just reversing one of the <br />patches (and one that might well result in the behaviour you see).<br /><br />		Linus<br /><br />-----<br />diff -u --recursive --new-file v1.3.87/linux/net/ipv4/tcp_input.c linux/net/ipv4/tcp_input.c<br />--- v1.3.87/linux/net/ipv4/tcp_input.c	Fri Apr 12 15:52:12 1996<br />+++ linux/net/ipv4/tcp_input.c	Sat Apr 13 10:15:18 1996<br />&#64;&#64; -172,26 +172,15 &#64;&#64;<br /> 		tcp_send_reset(sk-&gt;saddr,sk-&gt;daddr,th,sk-&gt;prot,NULL,dev, sk-&gt;ip_tos,sk-&gt;ip_ttl);<br /> 		return;<br /> 	}<br />-	<br />-	/* <br />-	 * We got out of sequence data.<br />-	 * This turns out to be tricky. If the packet ends at the<br />-	 * edge of the window, then we MUST ack the packet,<br />-	 * otherwise a lost ACK packet can stall the TCP.<br />-	 * We deal with this case in tcp_queue().<br />-	 * On the other hand, if the packet is further to the<br />-	 * left of the window, then we are looking a retransmitted<br />-	 * packet. If we ACK it we can get into a situation that<br />-	 * will later induce a fast retransmit of another packet.<br />-	 * This can end up eating up half our bandwidth.<br />-	 */<br />-<br />-	/* This case is NOT supposed to be able<br />-	 * to happen. Test for it?<br />-	 */<br />-	if (sk-&gt;acked_seq == end_seq)<br />-		printk("Impossible out of sequence data case.\n");<br />-	return;<br />+<br />+	/*<br />+	 *	4.3reno machines look for these kind of acks so they can do fast<br />+	 *	recovery. Three identical 'old' acks lets it know that one frame has<br />+	 *	been lost and should be resent. Because this is before the whole window<br />+	 *	of data has timed out it can take one lost frame per window without<br />+	 *	stalling. [See Jacobson RFC1323, Stevens TCP/IP illus vol2]<br />+	 */<br />+	tcp_send_ack(sk);<br /> }<br /> <br /> /*<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
