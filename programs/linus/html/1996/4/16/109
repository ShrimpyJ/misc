    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/4/16/60">First message in thread</a></li><li><a href="/lkml/1996/4/16/60">Mikkel Lauritsen</a><ul><li><a href="/lkml/1996/4/17/73">Alan Cox</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 16 Apr 1996 17:30:41 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: vremap() of non-page-aligned memory</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">&gt; <br />&gt; I'm working on a driver for an ATM adapter that insists on<br />&gt; having 0x70 bytes of port memory at 0xfffdff80.<br />&gt; <br />&gt; Does anybody know whether there is a more elegant way (aka.<br />&gt; another function than vremap()) of mapping this into kernel<br />&gt; memory space? The obvious solution is remapping the physical<br />&gt; page that contains the memory chunk, but that appears to<br />&gt; be a somewhat non-portable solution since it relies on a<br />&gt; preset page size etc.<br /><br />You have to map in the thing in chunks (it's not only the way it works, it's<br />the only way it can ever work). However, it's not too hard to do this as<br />portably as anything else in the kernel:<br /><br />	void * addr = vremap(0xfffdff80 &amp; PAGE_MASK, PAGE_SIZE);<br /><br />If you want to make _really_ sure, you actually map two pages (in case the 0x70<br />bytes could possibly be in two different pages, but that's not possible in this<br />case unless the page-size ridiculously small). The you need to do some "offset<br />within area" stuff, but that's easy enough by using PAGE_MASK/PAGE_SIZE.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
