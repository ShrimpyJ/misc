    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/9/20/60">First message in thread</a></li><li><a href="/lkml/1996/9/20/60"> warlord&#64;mit ...</a><ul><li><a href="/lkml/1996/9/20/75">Matthias Urlichs</a></li><li><a href="/lkml/1996/9/20/76">"Andrew E. Mileski"</a></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/1996/9/21/12">Alan Cox</a><ul><li><a href="/lkml/1996/9/29/15">(Robert Millner)</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 21 Sep 1996 09:52:26 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: modules problems</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 20 Sep 1996 warlord&#64;mit.edu wrote:<br />&gt; <br />&gt; Why not just make all the exported kernel interfaces the same whether<br />&gt; the kernel is single processor or SMP?  You shouldn't need to have<br />&gt; multiple modules for kernels with different configurations.  The fact<br />&gt; that modules need to be recompiled based upon the kernel configuration<br />&gt; is a bug.<br /><br />Well, right _now_ it might be possible to do that, but this is not really a<br />issue worth pursuing very much, because with finer-grained locking there will<br />be fundamental changes between the SMP and the non-SMP versions (there are<br />already _some_ changes, but they are currently not very large). <br /><br />Note that although the source for SMP and non-SMP is the same, the header <br />files change a lot of definitions and inline functions so that a SMP <br />kernel looks very different from a UP kernel at a low level.<br /><br />Now, you could consider _that_ a bug, but only if you don't care about<br />performance. The fact is that SMP needs to do things that simply aren't<br />needed at all on UP kernels, and I categorically refuse to slow down a UP<br />kernel only because of "in-kernel binary compatibility issues". That way lies<br />bloatware and non-optimal performance.<br /><br />When SMP machines account for 99% of all Linux installations I might change<br />my mind (and UP would just be a SMP with one CPU), but right now it's the UP<br />kernel that is "more important" and trying to make SMP the default is just<br />not going to happen. <br /><br />Just as one example of a (small) difference between SMP and UP kernels is<br />that a SMP kernel will use the "lock" prefix on atomic accesses (things like<br />"atomic_add()", "set_bit()" etc), while that isn't needed on UP. And <br />that's just the smallest of such changes.<br /><br />		Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
