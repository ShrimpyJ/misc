    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/9/23/51">First message in thread</a></li><li><a href="/lkml/1996/9/24/13">Linus Torvalds</a><ul><li><a href="/lkml/1996/9/25/4">Gerard Roudier</a><ul><li class="origin"><a href="/lkml/1996/9/25/35">Linus Torvalds</a><ul><li><a href="/lkml/1996/9/25/35">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 25 Sep 1996 08:01:44 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: pre 2.1: Neat Oops with ncrBsd</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 24 Sep 1996, Gerard Roudier wrote:<br />&gt; <br />&gt; The 1rst memory mapped IO done by the driver is at offset 4 of the IO <br />&gt; window of the chip. The code uses "readb()" with the vremmaped virtual <br />&gt; address + 4.  Is that ok?<br />&gt; Probably not ...<br /><br />Nope. readb() and vremap() don't mix. <br /><br />Hmm, that's actually hard to handle. In general "vremap()" is only necessary<br />on x86 (where we share the processor memory and PCI IO space).  On a alpha<br />(or PPC, or..) you can use "readb()" without any remapping at all, while on a<br />PC you'd do the vremap() and then directly access the remapped area. <br /><br />&gt; Something has added 0xc0000000 to the offset.<br /><br />That's the readb().<br /><br />Hmm, I think I have an idea.<br /><br />The readb() (and other macros) right now use __va() to change the address<br />into a virtual one. But on the x86 we'd actually be better off with a new<br />"__io()" macro, which instead of adding PAGE_OFFSET would do a logical OR<br />operation. <br /><br />Could you test this change:<br /><br /> - in include/asm-i386/io.h, add a macro like this:<br /><br />	#define __io(x) ((void *)(PAGE_ADDRESS | (unsigned long)(x)))<br /><br /> - in the same file, change all uses of "__va" to "__io".<br /><br />That should make things work, and we can easily make it work on the alpha too<br />(by making "vremap()" a NULL operation on the alpha, as we don't need any<br />remapping, and we can just return the original address)<br /><br />		Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
