    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/9/12/25">First message in thread</a></li><li><a href="/lkml/1996/9/12/25">Chris Adams</a><ul><li class="origin"><a href="/lkml/1996/9/14/18">Linus Torvalds</a><ul><li><a href="/lkml/1996/9/14/18">Chris Adams</a></li><li><a href="/lkml/1996/9/14/22">"Aaron Tiensivu"</a><ul><li><a href="/lkml/1996/9/14/32">"Peter T. Breuer"</a></li><li><a href="/lkml/1996/9/14/57">Paul Matthews</a><ul><li><a href="/lkml/1996/9/14/60">"Peter T. Breuer"</a></li></ul></li></ul></li><li><a href="/lkml/1996/9/14/25">Ingo Molnar</a><ul><li><a href="/lkml/1996/9/14/38">(Alan Cox)</a><ul><li><a href="/lkml/1996/9/14/48">Harvey Fishman</a></li></ul></li><li><a href="/lkml/1996/9/14/42">(Andrew Walker)</a></li><li><a href="/lkml/1996/9/14/46">Edward Welbon</a><ul><li><a href="/lkml/1996/9/14/71">Charlie Wilkinson</a></li></ul></li><li><a href="/lkml/1996/9/14/51">Edward Dunagin</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 13 Sep 1996 14:12:58 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: General protection fault in kswapd in 2.0.18</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 11 Sep 1996, Chris Adams wrote:<br />&gt; <br />&gt; general protection: 0000<br />&gt; CPU:    0<br />&gt; EIP:    0010:[&lt;00119a10&gt;]<br />&gt; EFLAGS: 00010213<br />&gt; eax: 02a67000   ebx: 00333a50   ecx: 00000006   edx: 92a67044<br />&gt; esi: 000003ff   edi: 00001ffe   ebp: 00008000   esp: 07ff2fa4<br />&gt; ds: 0018   es: 0018   fs: 0018   gs: 0018   ss: 0018<br />&gt; Process kswapd (pid: 3, process nr: 3, stackpage=07ff2000)<br />&gt; Stack: 00000006 00000003 00000000 00000000 02a67000 0011ceff 00000006 00000000 <br />&gt;        00000003 0019ccd2 00000000 00009000 0011d0a3 00000003 00000000 00000000 <br />&gt;        00000100 07ff6fdc 07ff320a 001092bb 00000000 0011cf5c 001b01f8 <br />&gt; Call Trace: [&lt;0011ceff&gt;] [&lt;0011d0a3&gt;] [&lt;001092bb&gt;] [&lt;0011cf5c&gt;] <br />&gt; Code: f6 42 14 10 74 0e 0f ba 72 14 04 19 c0 0f ba 6b 18 02 19 c0 <br />&gt; <br />&gt; <br />&gt; Using `/System.map' to map addresses to symbols.<br />&gt; <br />&gt; &gt;&gt;EIP: 119a10 &lt;shrink_mmap+74/1dc&gt;<br />&gt; Trace: 11ceff &lt;try_to_free_page+3f/9c&gt;<br />&gt; Trace: 11d0a3 &lt;kswapd+147/158&gt;<br />&gt; Trace: 1092bb &lt;init+3f/264&gt;<br />&gt; Trace: 11d0a3 &lt;kswapd+147/158&gt;<br />&gt; <br />&gt; Code: 119a10 &lt;shrink_mmap+74/1dc&gt; testb  $0x10,0x14(%edx)<br />&gt; Code: 119a14 &lt;shrink_mmap+78/1dc&gt; je     119a24 &lt;shrink_mmap+88/1dc&gt;<br />&gt; Code: 119a16 &lt;shrink_mmap+7a/1dc&gt; btrl   $0x4,0x14(%edx)<br />&gt; Code: 119a1b &lt;shrink_mmap+7f/1dc&gt; sbbl   %eax,%eax<br />&gt; Code: 119a1d &lt;shrink_mmap+81/1dc&gt; btsl   $0x2,0x18(%ebx)<br />&gt; Code: 119a22 &lt;shrink_mmap+86/1dc&gt; sbbl   %eax,%eax<br /><br />Ok, I went through this, and it's the buffer "b_this_page" circular linked<br />list that has gotten corrupted. <br /><br />Now, the corruption is interesting: the bad pointer in question is in %edx,<br />and it's 0x92a67044 (which is total nonsense for a kernel pointer).  However,<br />the head of that doubly linked list (and probably the correct value for the<br />bogus pointer) is 0x02a67000. Now, that's a interesting pattern, actually:<br /><br />	0x92a67044<br />	0x02a67000<br /><br />Notice the similarity? The first and the two last nibbles have changed, but<br />other than that it looks like it could be just bit corruption. That's two<br />bytes with two-bit corruption, and it _might_ be due to memory problems.  But<br />4 incorrect bits is really rather a lot, so it's hard to say. One thing that<br />you might want to do is to just check out the memory with some good memory<br />tester (no, "testing extended memory" under DOS with qemm or whatever doesn't<br />count ;)<br /><br />Does anybody on the kernel list know of a good test program that is generally<br />available that can be left running over-night or similar? (Actually, if you<br />are in a hot and humid area it's probably best left running over day, during<br />the hottest hours). I'd think that if this is a memory problem it would show<br />up under any reasonably good test if it can result in even four-bit errors.. <br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
