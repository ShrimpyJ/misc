    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/10/17/27">First message in thread</a></li><li><a href="/lkml/1996/10/17/27">David Monro</a><ul><li class="origin"><a href="/lkml/1996/10/17/33">Linus Torvalds</a><ul><li><a href="/lkml/1996/10/17/33">Ingo Molnar</a><ul><li><a href="/lkml/1996/10/17/34">Linus Torvalds</a><ul><li><a href="/lkml/1996/10/17/37">Ingo Molnar</a></li><li><a href="/lkml/1996/10/18/22">"Mark H. Wood"</a></li></ul></li><li><a href="/lkml/1996/10/17/44">Alessandro Suardi</a></li><li><a href="/lkml/1996/10/18/9">Alain KNAFF</a><ul><li><a href="/lkml/1996/10/18/13">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/1996/10/17/50">Klaus Lichtenwalder</a></li></ul></li><li><a href="/lkml/1996/10/17/35">Matthias Urlichs</a></li><li><a href="/lkml/1996/10/17/36">"Theodore Y. Ts'o"</a><ul><li><a href="/lkml/1996/10/17/38">Ingo Molnar</a><ul><li><a href="/lkml/1996/10/18/70">Craig Milo Rogers</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 17 Oct 1996 19:41:52 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: "raw" block devices?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 18 Oct 1996, David Monro wrote:<br />&gt; <br />&gt; Something I've been wondering about for a bit - why doesn't linux have the<br />&gt; equivalent of the "raw" disk devices present on most other unixen I can think<br />&gt; of (OSF, Solaris, SunOS, *BSD)? (For people who haven't seen them, the device<br />&gt; name is traditionally the normal block device with a 'r' prefixed, and it is<br />&gt; a char device rather than a block one). I was talking to a unix kernel guru I<br />&gt; know about what they are used for, and there seem to be two things:<br /><br />The main reason there are no raw devices is that I personally think that <br />raw devices are a stupid idea.<br /><br />&gt; 1) Messing with the raw device doesn't go through the buffer cache, so programs<br />&gt; which basically scan a large device (eg fsck) don't trash the cache. Seems<br />&gt; reasonable. Does e2fsck have some nifty way of not trashing cache currently?<br /><br />I don't think "mkfs" or "fsck" is an argument for raw devices. <br /><br />Yes, they trash the buffer cache, but so what? The buffer cache doesn't<br />actually help, but it doesn't really have much of a detrimental effect<br />either. And having a raw device just for fsck is silly: adding extra code for<br />something that is rarely needed and where the difference between using the<br />buffer cache and raw devices is not really something you care about. <br /><br />&gt; Also this allows eg database systems to be given a slice of disk which they<br />&gt; are in complete control of, and can maybe manage better than the normal<br />&gt; buffering (known access patterns etc).<br /><br />That's a theory I don't subscribe to myself.<br /><br />Sure, there are old-fashioned databases that think they can do a better job<br />of it than the kernel does. They are usually wrong, I suspect. They are using<br />raw devices more for historical reasons than anything else, and they could<br />just as well use a filesystem. <br /><br />There _are_ databases that successfully use filesystems for storage, and they<br />often have obvious advantages (like having BLOBs as separate files so that<br />you can actually access those satellite pictures without going through the<br />database etc). <br /><br />&gt; 2) Because of the above, it should be possible to get data straight from the<br />&gt; device into user memory without any copying.<br /><br />..which is why there is "mmap". mmap is a much better interface anyway.<br /><br />Now, admittedly mmap() doesn't work on any raw partitions either, but that's<br />more due to lack of interest than anything else. Nobody has really needed it<br />enough to actually write the code. Doing a readpage/writepage for a raw<br />partition is kind of trivial. <br /><br />Again, use files and it already works. "Look ma, no memcpy".<br /><br />&gt; Actually I guess what is needed is not necessarily a new device, but possibly<br />&gt; an extra (non-portable, but hey) flag for open (and maybe mmap?) to say `don't<br />&gt; cache this, I'm not going to see it again'. The device is just a way of<br />&gt; saying this without having to code it in the program.<br /><br />We do need a flag like this, but not for read. For mmap it would probably<br />make sense to have a "MAP_NOCACHE" flag that just means that when the kernel<br />maps in a page cache page into the address space of the process it does _not_<br />add it to the page cache itself (so when the page is thrown out for some<br />reason it has to be read back in). <br /><br />		Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
