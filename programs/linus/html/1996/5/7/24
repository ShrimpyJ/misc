    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/5/6/33">First message in thread</a></li><li><a href="/lkml/1996/5/6/33">Thomas Quinot</a><ul><li><a href="/lkml/1996/5/3/51">Linus Torvalds</a><ul><li><a href="/lkml/1996/5/4/24">Thomas Quinot</a></li></ul></li><li class="origin"><a href="/lkml/1996/5/9/9">Linus Torvalds</a><ul><li><a href="/lkml/1996/5/9/9">Robert L Krawitz</a></li><li><a href="/lkml/1996/5/9/70">Matthew Kramer</a></li><li><a href="/lkml/1996/5/12/123">Paul Matthews</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 6 May 1996 16:00:39 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: .96/.97 : random crashes (detailed Oops report)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">&gt; I have been getting random crashes lately (some with Oops info, some<br />&gt; plain reboot. Bad external cache might have interfered, too... :-( ).<br />&gt; <br />&gt; Here is what I was able to grab from the error log :<br />&gt; <br />&gt; Unable to handle kernel NULL pointer dereference at virtual address<br />&gt; c000000008] current-&gt;tss.cr3 = 00333000, %cr3 = 00333000<br /><br />The above looks like a cut-and-paste error, I assume that the faulting address<br />was 0xc0000000 and that the "8]" is some corruption (the "NULL pointer" thing<br />only happens for addresses 0xc0000000-0xc0000fff, so regardless of the<br />corruption the rest of this panic looks strange..)<br /><br />&gt; *pde = 00102067<br />&gt; *pte = 00000027<br />&gt; Oops: 0002<br />&gt; CPU:    0<br />&gt; EIP:    0010:[&lt;00120290&gt;]<br />&gt; EFLAGS: 00010046<br />&gt; eax: 00000000   ebx: 001e3778   ecx: 00000000   edx: 00000296<br />&gt; esi: 00000001   edi: 001bc514   ebp: 00000000   esp: 0117df1c<br />&gt; ds: 0018   es: 0018   fs: 002b   gs: 002b   ss: 0018<br />&gt; Process cpp (pid: 945, process nr: 38, stackpage=0117d000)<br />&gt; Stack: 00f58618 40036d70 0117dfbc ffff0007 001bc514 00000000 00000293<br />&gt; 00119952        00000003 00000000 00000000 00f58618 40036d70 0117dfbc<br />&gt; ffff0007 00f58618        40036d70 0117dfbc ffff0004 001e37ac 00000000<br />&gt; 0011cba0 00a33025 00105025 Call Trace: [&lt;00119952&gt;] [&lt;0011cba0&gt;]<br />&gt; [&lt;0010ff3e&gt;] [&lt;0010fe00&gt;] [&lt;0010a79b&gt;] Code: 89 54 24 14 8b 43 10 8b 4c 24<br />&gt; 10 89 41 10 89 48 20 8d 45 01 <br />&gt; <br />&gt; &gt;&gt;EIP: 120290 &lt;__get_free_pages+c0/1c0&gt;<br />&gt; Trace: 119952 &lt;do_wp_page+12/2b0&gt;<br />&gt; Trace: 11cba0 &lt;filemap_nopage&gt;<br />&gt; Trace: 10ff3e &lt;do_page_fault+13e/2d0&gt;<br />&gt; Trace: 10ff3e &lt;do_page_fault+13e/2d0&gt;<br />&gt; Trace: 10a79b &lt;error_code+4b/60&gt;<br />&gt; <br />&gt; Code: 120290 &lt;__get_free_pages+c0/1c0&gt; movl   %edx,0x14(%esp,1)<br />&gt; Code: 120294 &lt;__get_free_pages+c4/1c0&gt; movl   0x10(%ebx),%eax<br />&gt; Code: 120297 &lt;__get_free_pages+c7/1c0&gt; movl   0x10(%esp,1),%ecx<br />&gt; Code: 12029b &lt;__get_free_pages+cb/1c0&gt; movl   %eax,0x10(%ecx)<br />&gt; Code: 12029e &lt;__get_free_pages+ce/1c0&gt; movl   %ecx,0x20(%eax)<br />&gt; Code: 1202a1 &lt;__get_free_pages+d1/1c0&gt; leal   0x1(%ebp),%eax<br />&gt; <br />&gt; This is ca page_alloc.c:146...<br /><br />Yes. It's also another of those impossible things.. The above instruction<br />should _not_ result in a NULL pointer error, as esp is a perfectly fine kernel<br />pointer (and it's in the kernel stack page, so it looks fine: 0x0117df1c). What<br />kind of CPU do you have? Could it be the same old Cyrix bug in a new disguise?<br /><br />The panic report looks otherwise sane: the above instruction sequence is indeed<br />a normal part of __get_free_pages(), and the stack trace also makes sense, as<br />do the registers in the register dump (faulting instruction is essentially the<br />"unsigned long mapnr = ret-&gt;mapnr;" assignment, and "mapnr = %edx = 296" makes<br />sense: it means it has found a free page at around the 2MB mark..)<br /><br />Ho humm.. Any idea of what could have been going on when this happened? Any<br />pattern at all to it? The above doesn't look like a cache corruption problem,<br />unless your icache might have gotten corrupted some way.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
