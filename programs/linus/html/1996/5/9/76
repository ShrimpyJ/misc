    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/5/5/92">First message in thread</a></li><li><a href="/lkml/1996/5/5/92">(Eyal Lebedinsky)</a><ul><li><a href="/lkml/1996/5/7/11">Hannu Savolainen</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 7 May 1996 11:03:22 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: An idea: a database of modules settings</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">&gt; On Sun, 5 May 1996, Eyal Lebedinsky wrote:<br />&gt; <br />&gt; &gt; How about a standard API where a module can save/restore any number of<br />&gt; &gt; settings between sessions. The module will simply call somethings like<br />&gt; &gt;      save_settings (int id, void *buffer, in size)<br />&gt; &gt; where the id allows a module to save multiple buffers. The info will be<br />&gt; &gt; saved and later the module (when loaded) can request the settings with a<br />&gt; &gt; similar 'get_settings' call.<br />&gt; This looks like the right way to implement persistent data for drivers. <br />&gt; However I prefer using a string ad the 'id'. In this way less <br />&gt; administrative work is required to prevent conflicts between<br />&gt; drivers/modules. <br /><br />No, this is not how to handle this. Saving persistent data in the kernel is a<br />inherently broken idea - it should be done by "insmod" instead, and it should<br />save the data in the filesystem. That way it will survive across a re-boot if<br />the user so wishes etc etc. It's also the "right" way to do it anyway, because<br />there simply is no sense in saving the data in the kernel when you can do it in<br />user level.<br /><br />Obviously "insmod" knows only about user-supplied parameters, and won't be able<br />to save state that the driver itself has auto-detected etc, but that's a<br />feature, not a bug. If it's been autodetected once, it's better to let it be<br />autodetected in the future too..<br /><br />I saw some patyches that did a "vmalloc()" and saved state in a kernel virtual<br />area over multiple "insmod"s, and I sincerely hope I will never have to see<br />that kind of thing ever again in my life. Ugh..<br /><br />I don't know if insmod already handles things like this, but essentially it<br />needs to do "pre-insmod" and "post-insmod" things anyway, where the<br />"pre-insmod" thing can be looking up what addresses it should use (PnP, saved<br />state,  whatever), and "post-insmod" is things like setting up /dev and maybe<br />adding routes for the new network interface it just inserted or whatever..<br /><br />The kernel should not have to know about these things - it just inserts the<br />damn thing, and policy decisions HAVE to be made in user space.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
