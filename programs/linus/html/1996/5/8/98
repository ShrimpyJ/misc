    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/5/6/52">First message in thread</a></li><li><a href="/lkml/1996/5/6/52">Warner Losh</a><ul><li><a href="/lkml/1996/5/8/54">(Alan Cox)</a></li><li class="origin"><a href="/lkml/1996/5/15/80">Linus Torvalds</a><ul><li><a href="/lkml/1996/5/15/80">Simon Shapiro</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 6 May 1996 21:05:42 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Is clobber "memory" in include/asm-i386/system.h necessary?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 4 May 1996, Warner Losh wrote:<br />&gt; <br />&gt; : "volatile" itself causes suboptimal code to be generated<br />&gt; : even in places where it's unnecessary, such as between cli() and sti().<br />&gt; <br />&gt; What about MP machines?  Wouldn't volatile still be needed between a<br />&gt; cli() and sti() because other processors might change the value out<br />&gt; from under you?  Granted, a higher level of locking would prevent<br />&gt; that, but there are cases where you might want that to happen (like in<br />&gt; the lock manager code, assuming it uses atomic memory access<br />&gt; instructions).<br /><br />"volatile" is _never_ a good idea, even in SMP. You already touched on <br />why it's not a good idea: it's unnecessary if we have some locking to <br />prevent concurrent accesses.<br /><br />Now, if we DON'T have locking that prevents concurrent accesses, then we <br />have a major bug in the system.<br /><br />Ergo, using "volatile" means that we have a major bug in the system.<br /><br />QED.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
