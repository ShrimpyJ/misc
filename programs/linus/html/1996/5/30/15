    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/5/30/5">First message in thread</a></li><li><a href="/lkml/1996/5/30/7">Linus Torvalds</a><ul><li><a href="/lkml/1996/6/6/43">Steve Davies</a></li><li><a href="/lkml/1996/5/30/8">"Leonard N. Zubkoff"</a><ul><li class="origin"><a href="/lkml/1996/5/30/20">Linus Torvalds</a><ul><li><a href="/lkml/1996/5/30/20">"Leonard N. Zubkoff"</a></li></ul></li></ul></li><li><a href="/lkml/1996/6/6/46">Steve Davies</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 30 May 1996 11:25:28 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: pre2.0.9 (was Re: CD-ROM Access Crashes)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 29 May 1996, Leonard N. Zubkoff wrote:<br />&gt; <br />&gt; I have verified that dd'ing a CD-R no longer kills my system nor does reading a<br />&gt; bad block.  I was able to read all the good files on my test CD, with the bad<br />&gt; ones getting I/O errors.  It took 1.5 hours to read it all, but there were no<br />&gt; resets and the system worked fine both during and after the test.  However, it<br />&gt; does look like there are repeated requests for the same block, as in this<br />&gt; excerpt:<br /><br />If you just "dd" the raw device, you'll be using the old buffer cache for <br />the blocks. Or did you dd the files from a mounted CD?<br /><br />Anyway, in both cases it's entirely ok to get multiple reads for bad <br />blocks. In fact, the page cache _always_ tries to re-read a block at <br />least twice - it re-tries the operation that failed before it returns an <br />error message.<br /><br />The reason it tries to read twice is (a) it's just plain prudent to try <br />again in case we might have had a tempoarary problem, but more <br />importantly (b) there are some filesystems where it makes a difference <br />_who_ tries to read the file. So if the page cache isn't up-to-date, we <br />_have_ to re-try, because maybe the page cache error was due to somebody <br />else having failed to read the page.<br /><br />The (b) case is obvious over NFS - if somebody has tried to read a page <br />from the file but the read failed due to permission checking, when the <br />right person comes along we can't just tell them "sorry, we have tried to <br />read this page already, it failed, so it's going to fail for you too". So <br />when we read a file and find a page that isn't up-to-date, we can't <br />assume that it's an error before we check a second time.<br /><br />[ Stephen, I'm including you on the Cc explicitly, because I noticed that <br />  you complained about this behaviour in NFS to Olaf Kirch. We're doing <br />  the right thing now, and although this complicates the generic code a bit,<br />  we really _have_ to do it this way ]. <br /><br />&gt; What's definitely not implemented as yet is for a SCSI command that fails with<br />&gt; a MEDIUM ERROR to be processed as a partial success and a partial failure.  The<br />&gt; entire command is treated as having failed.<br /><br />This is bad for performance, and it can result in strange behaviour (if <br />the IO request contained requests from two different file reads that were <br />merged at the IO level they both fail even though the error was <br />potentially in just one of the file). However, if there are IO errors you <br />shouldn't really consider your filesystem reliable anyway, so I don't <br />think this is critical (and the re-try might actually sort this case out <br />correctly too).<br /><br />&gt;			  In addition, it will still signal<br />&gt; an I/O error when a bad sector is encountered, even if we're really at the<br />&gt; logical end of the CD-R.<br /><br />Not really a problem, except if the read-ahead code then results in part <br />of the _good_ sectors also being marked bad (due to the previous code). <br />We should probably disable read-ahead in the old buffer cache in this <br />case (or just fix the nontrivial problem with partial failures).<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
