    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/8/2/6">First message in thread</a></li><li><a href="/lkml/1996/8/2/6">Albert Cahalan</a><ul><li><a href="/lkml/1996/8/2/14">Systemkennung Linux</a></li><li><a href="/lkml/1996/8/5/3">lilo</a><ul><li class="origin"><a href="/lkml/1996/8/6/21">Linus Torvalds</a><ul><li><a href="/lkml/1996/8/6/21">(Peeter Joot)</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 6 Aug 1996 09:32:02 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: proc fs and shared pids</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 4 Aug 1996, lilo wrote:<br />&gt; &gt; <br />&gt; &gt; Great. Could thread ID 0 mean "all threads at once" and the individual<br />&gt; &gt; threads are numbered starting from 1? That would let me kill -9 the<br />&gt; &gt; whole group at once or just one thread at a time.<br />&gt; <br />&gt; This does sound like a great way to please both those of us who are nervous<br />&gt; about not having unique pids, and those who insist on having them.<br />&gt; <br />&gt; If you ignore the existence of the 16-bit thread ID by zeroing it, you get a<br />&gt; kill which affects all of the threads.<br />&gt; <br />&gt; In fact, this sounds so good that there's got to be something technically<br />&gt; wrong with it.... :) :)<br /><br />There isn't. We discussed this some time ago (I don't remember with whom),<br />and it was felt to be generally a "good thing". It has the advantage of<br />allowing normal UNIX utilities to automatically work both on the whole<br />"process" (in the traditional thread meaning) while still allowing the same<br />utilities to handle individual threads if they wanted to. <br /><br />Traditional threads suck. The whole idea with the Linux "clone()" was to look<br />at the thread idea from a new perspective, and have something that makes the<br />difference between threads and processes fade away. We want to have threaded<br />programs, but we ALSO want to not think of the threads as anything special:<br />they are just another form of processes. As such I don't want special thread<br />system calls, instead I want _generic_ system calls that work both in a<br />thread and a process context. That's why I proposed the high-bits thread-ID<br />approach. <br /><br />The only problem as far as I'm concerned is that I don't actually use the<br />thread facilities, and as such I'm unlikely to start coding. I've been hoping<br />that people that are interested in threads start using clone() for them<br />(which finally has happened, thank God), and that as it becomes clear that we<br />need more support (like the thread ID thing) people start sending me patches.<br />Hint hint.. <br /><br />Again, I'd like people not to look too closely at pthreads or other<br />"traditional" threads packages. If people _do_ start playing around with the<br />kernel for better thread support, please don't try to force any pthread<br />specific system calls or anything like that. Think in more generic terms, and<br />do any new system calls (if needed) in such a way that you can implement<br />pthreads on top of them, but don't limit yourself to any specific interface.<br />Try to make the system calls make sense even _outside_ a threaded<br />environment. <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
