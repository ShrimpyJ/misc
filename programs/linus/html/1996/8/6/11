    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/8/6/11">First message in thread</a></li><li class="origin"><a href="/lkml/1996/8/6/19">Linus Torvalds</a><ul><li><a href="/lkml/1996/8/6/19">Philippe Strauss</a><ul><li><a href="/lkml/1996/8/6/27">(Harald Koenig)</a><ul><li><a href="/lkml/1996/8/6/40">Philippe Strauss</a></li></ul></li></ul></li><li><a href="/lkml/1996/8/7/8">"Stephen C. Tweedie"</a><ul><li><a href="/lkml/1996/8/7/35">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 6 Aug 1996 11:55:46 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: I/O request ordering</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 5 Aug 1996, Ray Van Tassle-CRV004 wrote:<br />&gt; <br />&gt; For some time, I have had doubts about the I/O request ordering algorithm in<br />&gt; drivers/block/ll_blk_rw.  Upon examination, it turned out that (as I<br />&gt; suspected) it is a sawtooth rather than an elevator.  And it also<br />&gt; has a bug.<br /><br />Both the sawtooth and the "bug" are actually intentional. I don't guarantee<br />that they are _good_, but the idea is that we want to avoid starvation, and<br />the current IO request ordering should be fairer wrt latency than a elevator. <br /><br />Also, there is another reason for saw-tooth as opposed to real elevator: <br />many harddisks will do pre-fetching, and perform much better if we always <br />read starting from low sectors to high. <br /><br />If you _really_ want to improve performance, you should probably not use an<br />elevator. Instead, you should use something like "saw-tooth with a window",<br />where the "window" part is that the ordering algorithm will actually accept a<br />"backwards" request if it is within an acceptance window (of say 5% of the<br />disk or something like that). That can help a lot due to drive caching<br />(generally track caches). <br /><br />(Kernel compile times are probably not good indications of disk ordering<br />performance, at least not if you have enough memory. I see 90% CPU use for<br />them most of the time). <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
