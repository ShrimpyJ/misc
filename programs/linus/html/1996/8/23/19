    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/8/19/46">First message in thread</a></li><li><a href="/lkml/1996/8/21/50">Gerry Jensen</a><ul><li><a href="/lkml/1996/8/22/44">Russell Berry</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/1996/8/23/19/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 23 Aug 1996 09:08:43 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: irqtune: improve serial port performance by 3x?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 22 Aug 1996, Russell Berry wrote:<br />&gt; <br />&gt; I got this, installed it on both my machines (home/work), and can see a marked <br />&gt; increase in ppp performance.  However, I'm concerned about interrupt priorities, <br />&gt; does this effect _ONLY_ the timer interrupt priorities, or does it actually tweak<br />&gt; the way the kernel interprets all system interrupts???<br /><br />I don't like the fact that irqtune helsp interrupt performance, because the<br />way Linux tries to handle interrupts it _shouldn't_ make a difference. The<br />fact that irqtune obviously _does_ make a difference would indicate that the<br />irq handling has some problem, and irqtune just masks that problem by<br />changing the interrupt priority levels. <br /><br />Essentially, Linux does a "EOI" immediately when it gets the interrupt, and<br />that EOI _should_ mean that all other interrupts will get through, regardless<br />of whether they have lower or higher priority (because the EOI tells the<br />interrupt controller that it can forget about the interrupt that we're now<br />handling).  As such there should be no effect from irqtune, because the<br />interrupt priorities shouldn't really matter. <br /><br />However, Linux uses the "nonspecific" EOI to do this, and while that should<br />work, it may turn out that some interrupt controllers don't like it, and for<br />some reason mask the wrong interrupt. People who see a difference with<br />irqtune, could you test this patch instead (it changes the low-level<br />interrupt handlers to use the "specific" EOI to tell the controller that that<br />specific interrupt is now handled). <br /><br />I'd be very interested in reactions to this patch indeed, can you please <br />try it out and tell me whether this makes any difference?<br /><br />(This is against 2.0.14, but it should patch in cleanly against just about<br />any reasonably recent kernel. Certainly all of the 2.0.x series)<br /><br />		Linus<br />----<br />--- v2.0.14/linux/include/asm-i386/irq.h	Sun Mar 10 09:28:56 1996<br />+++ linux/include/asm-i386/irq.h	Fri Aug 23 08:18:12 1996<br />&#64;&#64; -81,7 +81,7 &#64;&#64;<br />  * a bit - without them it seems that the harddisk driver won't work on<br />  * all hardware. Arghh.<br />  */<br />-#define ACK_FIRST(mask) \<br />+#define ACK_FIRST(mask,nr) \<br /> 	"inb $0x21,%al\n\t" \<br /> 	"jmp 1f\n" \<br /> 	"1:\tjmp 1f\n" \<br />&#64;&#64; -90,10 +90,10 &#64;&#64;<br /> 	"outb %al,$0x21\n\t" \<br /> 	"jmp 1f\n" \<br /> 	"1:\tjmp 1f\n" \<br />-	"1:\tmovb $0x20,%al\n\t" \<br />+	"1:\tmovb $0x60+"#nr",%al\n\t" \<br /> 	"outb %al,$0x20\n\t"<br /> <br />-#define ACK_SECOND(mask) \<br />+#define ACK_SECOND(mask,nr) \<br /> 	"inb $0xA1,%al\n\t" \<br /> 	"jmp 1f\n" \<br /> 	"1:\tjmp 1f\n" \<br />&#64;&#64; -102,11 +102,12 &#64;&#64;<br /> 	"outb %al,$0xA1\n\t" \<br /> 	"jmp 1f\n" \<br /> 	"1:\tjmp 1f\n" \<br />-	"1:\tmovb $0x20,%al\n\t" \<br />+	"1:\tmovb $0x60+"#nr",%al\n\t" \<br /> 	"outb %al,$0xA0\n\t" \<br /> 	"jmp 1f\n" \<br /> 	"1:\tjmp 1f\n" \<br />-	"1:\toutb %al,$0x20\n\t"<br />+	"1:\tmovb $0x62,%al\n\t" \<br />+	"outb %al,$0x20\n\t"<br /> <br /> #define UNBLK_FIRST(mask) \<br /> 	"inb $0x21,%al\n\t" \<br />&#64;&#64; -207,7 +208,7 &#64;&#64;<br /> 	"pushl $-"#nr"-2\n\t" \<br /> 	SAVE_ALL \<br /> 	ENTER_KERNEL \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	"incl "SYMBOL_NAME_STR(intr_count)"\n\t"\<br /> 	"sti\n\t" \<br /> 	"movl %esp,%ebx\n\t" \<br />&#64;&#64; -224,7 +225,7 &#64;&#64;<br /> SYMBOL_NAME_STR(fast_IRQ) #nr "_interrupt:\n\t" \<br /> 	SAVE_MOST \<br /> 	ENTER_KERNEL \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	"incl "SYMBOL_NAME_STR(intr_count)"\n\t" \<br /> 	"pushl $" #nr "\n\t" \<br /> 	"call "SYMBOL_NAME_STR(do_fast_IRQ)"\n\t" \<br />&#64;&#64; -238,7 +239,7 &#64;&#64;<br /> SYMBOL_NAME_STR(bad_IRQ) #nr "_interrupt:\n\t" \<br /> 	SAVE_MOST \<br /> 	ENTER_KERNEL \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	LEAVE_KERNEL \<br /> 	RESTORE_MOST);<br /> 	<br />&#64;&#64; -255,7 +256,7 &#64;&#64;<br /> 	"pushl $-"#nr"-2\n\t" \<br /> 	SAVE_ALL \<br /> 	ENTER_KERNEL \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	"incl "SYMBOL_NAME_STR(intr_count)"\n\t"\<br /> 	"movl %esp,%ebx\n\t" \<br /> 	"pushl %ebx\n\t" \<br />&#64;&#64; -283,7 +284,7 &#64;&#64;<br /> 	"pushl $-"#nr"-2\n\t" \<br /> 	SAVE_ALL \<br /> 	ENTER_KERNEL \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	"incl "SYMBOL_NAME_STR(intr_count)"\n\t"\<br /> 	"sti\n\t" \<br /> 	"movl %esp,%ebx\n\t" \<br />&#64;&#64; -301,7 +302,7 &#64;&#64;<br /> "\n"__ALIGN_STR"\n" \<br /> SYMBOL_NAME_STR(fast_IRQ) #nr "_interrupt:\n\t" \<br /> 	SAVE_MOST \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	SMP_PROF_IPI_CNT \<br /> 	"pushl $" #nr "\n\t" \<br /> 	"call "SYMBOL_NAME_STR(do_fast_IRQ)"\n\t" \<br />&#64;&#64; -312,7 +313,7 &#64;&#64;<br /> "\n"__ALIGN_STR"\n" \<br /> SYMBOL_NAME_STR(bad_IRQ) #nr "_interrupt:\n\t" \<br /> 	SAVE_MOST \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	RESTORE_MOST);<br /> <br /> #define BUILD_RESCHEDIRQ(nr) \<br />&#64;&#64; -345,7 +346,7 &#64;&#64;<br /> SYMBOL_NAME_STR(IRQ) #nr "_interrupt:\n\t" \<br /> 	"pushl $-"#nr"-2\n\t" \<br /> 	SAVE_ALL \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	"incl "SYMBOL_NAME_STR(intr_count)"\n\t"\<br /> 	"sti\n\t" \<br /> 	"movl %esp,%ebx\n\t" \<br />&#64;&#64; -360,7 +361,7 &#64;&#64;<br /> "\n"__ALIGN_STR"\n" \<br /> SYMBOL_NAME_STR(fast_IRQ) #nr "_interrupt:\n\t" \<br /> 	SAVE_MOST \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	"incl "SYMBOL_NAME_STR(intr_count)"\n\t" \<br /> 	"pushl $" #nr "\n\t" \<br /> 	"call "SYMBOL_NAME_STR(do_fast_IRQ)"\n\t" \<br />&#64;&#64; -372,7 +373,7 &#64;&#64;<br /> "\n"__ALIGN_STR"\n" \<br /> SYMBOL_NAME_STR(bad_IRQ) #nr "_interrupt:\n\t" \<br /> 	SAVE_MOST \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	RESTORE_MOST);<br /> 	<br /> #define BUILD_TIMER_IRQ(chip,nr,mask) \<br />&#64;&#64; -386,7 +387,7 &#64;&#64;<br /> SYMBOL_NAME_STR(IRQ) #nr "_interrupt:\n\t" \<br /> 	"pushl $-"#nr"-2\n\t" \<br /> 	SAVE_ALL \<br />-	ACK_##chip(mask) \<br />+	ACK_##chip(mask,(nr&amp;7)) \<br /> 	"incl "SYMBOL_NAME_STR(intr_count)"\n\t"\<br /> 	"movl %esp,%ebx\n\t" \<br /> 	"pushl %ebx\n\t" \<br />-----<br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
