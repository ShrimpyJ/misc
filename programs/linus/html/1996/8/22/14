    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/8/20/23">First message in thread</a></li><li><a href="/lkml/1996/8/21/4">Ingo Molnar</a><ul><li><a href="/lkml/1996/8/21/49">(Richard Henderson)</a><ul><li><a href="/lkml/1996/8/22/3">Tyson D Sawyer</a></li><li><a href="/lkml/1996/8/22/10">Ingo Molnar</a></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 22 Aug 1996 09:50:09 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Jiffies Wraparound (was Re: interrupt counts)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 21 Aug 1996, Richard Henderson wrote:<br />&gt; <br />&gt; &gt; IMHO, we either should forget about it and wait for Merced or anything<br />&gt; &gt; else to move us out of the 32 bit world ... or we should completely avoid<br />&gt; &gt; comparing "jiffies" to variables. We could do this the following way:<br />&gt; &gt; <br />&gt; &gt;   #define IS_TIMED_OUT(timeout) (jiffies&gt;timeout) || \<br />&gt; &gt;                                 (timeout-jiffies&gt;MAX_JIFFIES/2)<br />&gt; <br />&gt; Just rewriting tests from <br />&gt; <br />&gt; 	timeout = jiffies + delay;<br />&gt; 	while (jifies &lt; timeout) continue;<br />&gt; <br />&gt; to<br />&gt; <br />&gt; 	start = jiffies;<br />&gt; 	while (jiffies - start &lt; delay) continue;<br />&gt; <br />&gt; solves the problem, and is much faster.<br /><br />In fact, it's even faster to use<br /><br />	end = jiffies + timeout;<br />	while ((signed)(end - jiffies) &gt; 0) continue;<br /><br />because a comparison against zero generally doesn't need a special compare<br />instruction. (speed doesn't matter in this case, as we're busy waiting<br />anyway, but it might matter in the timeout handler itself). <br /><br />That _does_ require that "timeout" is less or equal to MAX_TIMEOUT:<br /><br />	#define MAX_TIMEOUT ((~0UL)&gt;&gt;1)<br /><br />but this is generally not a real limitation (it means that you can't have<br />timeouts longer than 248 days on a x86, tough luck). <br /><br />		Linus<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
