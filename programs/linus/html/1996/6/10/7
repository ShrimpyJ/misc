    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/6/9/93">First message in thread</a></li><li><a href="/lkml/1996/6/9/93">David Flood</a><ul><li class="origin"><a href="/lkml/1996/6/10/13">Linus Torvalds</a><ul><li><a href="/lkml/1996/6/10/13">Neil Thompson</a></li><li><a href="/lkml/1996/6/10/14">"David S. Miller"</a><ul><li><a href="/lkml/1996/6/10/50">"Andrew E. Mileski"</a><ul><li><a href="/lkml/1996/6/10/72">(Alan Cox)</a></li></ul></li></ul></li><li><a href="/lkml/1996/6/11/10">Johan Henselmans</a></li></ul></li><li><a href="/lkml/1996/6/10/34">Clive Messer</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 10 Jun 1996 08:53:10 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Life after 2.0...</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />This is a "policy" message, not a very technical one, and none of the things<br />here are really set in stone. This just contains some rough plans for the<br />immediate future, and you're free to discuss/flame etc, especially as I won't<br />be around for a while. <br /><br />Anyway, the current plans for 2.0 itself:<br /><br /> - I'll be leaving on Wednesday for Argentina, and I'll be away for <br />   roughly ten days. After that I'll probably be off for another week <br />   just taking a vacation in Finland.<br /><br />   This is planned - I wanted to get 2.0 out before leaving, and I _want_ <br />   there to be a pause in development while people try out 2.0.0. I hope <br />   there will be no major problems with the .0 release, and if there are <br />   I hope they can be discussed publicly (hopefully there will even be <br />   unofficial patches to take care of the worst).<br /><br />   When I get back I will probably have enough pacthes to make a 2.0.1, <br />   as I already have a few cosmetic things (and one more driver).<br /><br /> - I _hope_ that eventually when 2.0.x starts to calm down (may that be <br />   quickly), we can come to some agreement about a "2.0 group" of people <br />   that will continue to keep 2.0 up-to-date, so that it won't die off <br />   when most of the developers move to 2.1.  This group would take care <br />   of any new developments (not in the kernel itself, but things like new <br />   drivers that may need to be ported back to 2.0 if they turn out to be <br />   successful and people need them like the 2940 driver in the 1.2.x <br />   releases).<br /><br />Plans for 2.1:<br /><br /> - We'll have at _least_ a month before I'm even "opening" the 2.1 <br />   development tree. Some developers will hate this, but I really want <br />   people to use 2.0 for a while, even developers. That way if there are <br />   problems, there won't be  two separate trees making bugfixing harder.<br /><br />   There are obviously some projects that will continue to be developed <br />   (IPv6 and the other ports like sparc etc), but I ask that at least the <br />   IPv6 people don't make too much noise about themselves right now, so <br />   that we won't fork too early. I'll be integrating back any of your <br />   patches soon enough..<br /><br /> - After opening up 2.1, I'll first start integrating back the stuff that <br />   I started rejecting for 2.0. This includes IPv6 and Sparc/m68k patches. <br />   That does _not_ mean that they'll all be in 2.1.0 - for my sanity I <br />   want to go reasonably slowly, and judging by 1.3.x it will probably be <br />   something like 2.1.15 until it has all been integrated back.<br /><br /> - x86-specific things: I'll be getting rid of the "%fs" register for <br />   user-mode accesses. Instead, I'll make the kernel data segment cover <br />   the full 32-bit address space, and thus kernel code will really see <br />   that it's mapped at virtual address 0xC0000000. That will mean, among <br />   other things, that drivers can no longer assume that kernel virtual <br />   addresses are the same as physical addresses (but there will be a <br />   simple 1:1 mapping, and the functions to take care of it already exists<br />   and are used on the non-x86 platforms - it really isn't too painful). <br /><br />   Getting rid of %fs allows us to do some things faster, and also allows <br />   us to share some code: "memcpy()" and "memcpy_touser()" will be the <br />   same function (but one word of warning: _conceptually_ you still have to<br />   use the "get_user()" etc functions, not direct pointer accesses. Other<br />   platforms may still have a special user mode segment or other special user<br />   mode addressing requirement. There is also a code movement issue wrt the<br />   non-atomicity of user mode accesses and gcc optimization). <br /><br /> - the generic plans for 2.1 is just to make things faster, support more <br />   hardware, and do it cleanly. That includes PPC/ARM/etc support, <br />   improved SMP code etc etc. We certainly have things to do, no worry <br />   about it getting boring.<br /><br />The over to other things - maintainers. It looks like Alan is slowly<br />disassociating himself from networking, to be concentrating on SMP and other<br />things (Linux/086, he's one sick puppy). We'll try to cope: most of the<br />networking subsystems have their own "sub"maintainers, so hopefully it won't<br />be too painful. <br /><br />I'll probably end up maintaining the basics of networking, at least for a<br />while. I've been wanting to make some re-organizations anyway, like getting<br />rid of the "struct socket", and making the networking use inodes like<br />everything else does (it actually does already, except it hides it by hiding<br />the "struct socket" inside the inode, and this adds some unnecessary<br />complexity). This may be temporary, depending on whether some person shows up<br />who is able (and wants) to be in charge of networking. I certainly will NOT<br />be able to do some of the things Alan has done, simply because I don't know<br />the networking protocols as well as he does. <br /><br />The SCSI layer is now mostly in the hands of Leonard Zubkoff (take a bow), if<br />only because I trust him and he seemed willing. Eric is still around, and<br />we'll pester him endlessly, but I hope he'll be busy doing shared libraries<br />for the alpha, because I really WANT them ;-). People have been discussing<br />SCSI changes for a while - the SCSI layer needs to be streamlined a bit and<br />made a lot easier to understand. <br /><br />Anything I forgot?<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
