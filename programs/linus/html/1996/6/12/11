    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/6/11/88">First message in thread</a></li><li><a href="/lkml/1996/6/11/88">Warner Losh</a><ul><li><a href="/lkml/1996/6/11/110">"David S. Miller"</a></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/1996/6/12/13">"Andrew E. Mileski"</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 12 Jun 1996 08:51:27 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Problem: __inline__ functions in the kernel &amp; cli()/sti() latency measurement</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 11 Jun 1996, Warner Losh wrote:<br />&gt; <br />&gt; Also, you can't reutrn a value from a macro like that.  You can from<br />&gt; an inline function.<br /><br />GNU C _does_ allow you to return a value from a C macro, and I think it's <br />even used by Linux someplace:<br /><br />#define MACRO_RETURNS_ARG(x) ({ \<br />	int __temp_value = x; \<br />	printf("returning %d\n", __temp_value); \<br />	__temp_value; \<br />})<br /><br />The "({ .. })" syntax is a "block expression", and the last statement in <br />the block is the value of the whole expression. ("__tmp_value" used here <br />to get the "x" evaluated only once - you can use other gcc extensions <br />like "__typeof__" to do more generic macros)<br /><br />It's sometimes useful, but most of the time it's just plain stupid to use <br />it, because it only works with gcc (when it comes to the kernel that's <br />ok, but..)<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
