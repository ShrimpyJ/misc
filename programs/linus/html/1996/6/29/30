    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/6/29/27">First message in thread</a></li><li><a href="/lkml/1996/6/29/27">"Christopher A. Smith"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 29 Jun 1996 21:28:02 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: My two cents on network performance</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 29 Jun 1996, Christopher A. Smith wrote:<br />&gt; <br />&gt; System			Size of file	Time	Bytes/second<br />&gt; HPUX 9.05 on HP 9000/712	548053		1.07	512199<br />&gt; Solaris 2.4 on Sparc 5	543184		1.03	527363<br />&gt; AIX 4.1.3 on PowerPC 604	544525		1.24	439133<br />&gt; Linux 2.0 on Pentium 133	539398		12.77	42239<br />&gt; <br />&gt; (The time was found by doing "time cp &lt;local file&gt; &lt;NFS directory&gt;")<br /><br />Umm.. "cp" should really do copies in wsize chunks, so Linux NFS <br />shouldn't actually be any worse than others when you just do a "cp". The <br />Linux NFS deficiencies show up in other things: programs that do lots of <br />small writes like the linker etc (and there aren't really that many <br />programs that do it, because the stdio library works pretty well in doing <br />the write merging itself - but as/ld do fseek's that counteract the Linux <br />stdio implementation).<br /><br />Are you _sure_ you have "rsize=8192,wsize=8192" in your /etc/fstab for <br />the NFS mountpoint options? You should _really_ see a lot better <br />performance than you do with plain "cp".<br /><br />&gt; Normally, our Linux users are dealing with small files or are working on<br />&gt; the local disk, so NFS is hardly a variable.  However, when we try to<br />&gt; compile our project software on a Linux system, whereby the object files,<br />&gt; libraries, and executables are written back to the NFS server, the delay<br />&gt; is quite noticeable.<br /><br />Yes. as/ld really shows the problem. Especially with NFS servers that do <br />(correctly) synchronous NFS writes. Then the stdio library isn't able to <br />do large write system calls, and the current Linux NFS client will do a <br />lot of small writes.<br /><br />Most(?) NFS servers can be configured to do NFS writes asynchronously: <br />that's not good if the server goes down in the middle of a write, but <br />with NFS not being exactly 100% reliable anyway it can often be worth it, <br />especially if you feel safe about your server (ie don't do this if your <br />NFS server is running Solaris 2.1 ;-). Check your NFS server setup..<br /><br />&gt;			Or when a user quits out of Netscape, and it fiddles<br />&gt; with the cache directory, which is done via NFS, the delay is VERY<br />&gt; noticeable.  We began the practice a long time ago of compiling the project<br />&gt; software locally and then moving the objects, libraries, and executables<br />&gt; back to the NFS server with ftp or something similar.<br /><br />You should be able to use "cp" to move them back, but for some reason <br />your cp performance is bad too. Check your wsize setting..<br /><br />&gt; I've thought about potential hardware problems and just don't see what it<br />&gt; could be.  When the project software is compiled locally, the compile is<br />&gt; VERY quick, competing with or even beating the HP, Solaris, and AIX<br />&gt; systems.  NFS reading and other network activities seem -- from the user<br />&gt; perspective -- to be just as fast as our other systems.  It's just NFS<br />&gt; writing which is the bottleneck, from the "data" above and the user<br />&gt; perspective.<br /><br />NFS reading is pretty fast, and indeed NFS write performance should these <br />days be the only performance bottleneck. You seem to be hit worse by it <br />than most places, though, so I suspect you also have something not <br />configured optimally.<br /><br />&gt; I can't imagine that Linux is that slow on NFS writing; I can't imagine<br />&gt; that the developers would tolerate it.  If anyone has any ideas or feedback<br />&gt; on this, I'd appreciate it.<br /><br />Linux NFS writes really _are_ slower than other UNIXes, no question about <br />it. Linux does no write merging at all, and Linux also does all writes <br />totally synchronously. The lack of write merging means that linux <br />performs very badly for lots of small "write()" requests. The synchronous <br />nature of Linux NFS writes also means that Linux does very badly if the <br />NFS server latency is high (even if the throughput of the server would be <br />ok, if the latency for individual requests is bad the Linux client NFS <br />performance suffers a lot).<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
