    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/6/26/33">First message in thread</a></li><li><a href="/lkml/1996/6/26/33"> Andries.Brouwer&#64;cwi ...</a><ul><li><a href="/lkml/1996/6/27/22">"Stephen C. Tweedie"</a><ul><li><a href="/lkml/1996/6/27/33">"Andrew E. Mileski"</a></li><li class="origin"><a href="/lkml/1996/7/1/54">Linus Torvalds</a><ul><li><a href="/lkml/1996/7/1/54">"Carsten Paeth"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 29 Jun 1996 11:00:07 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: SCSI device numbering (was: Re: Ideas for v2.1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 28 Jun 1996, Stephen C. Tweedie wrote:<br />&gt; <br />&gt; &gt; Stephen Tweedie:<br />&gt; &gt; : On Sat, 22 Jun 1996 21:06:39 +0200, Andries.Brouwer&#64;cwi.nl said:<br />&gt; &gt; : &gt; Eric Youngdale:<br />&gt; &gt; : &gt; POSIX requires dev_t to be an arithmetic type (so it cannot be a struct),<br />&gt; <br />&gt; &gt; : One word of warning --- this will break POSIX.  "gcc -ansi<br />&gt; &gt; : -pedantic-errors" will not compile code with long long declarations.<br />&gt; &gt; : Any truly, strictly ANSI environment won't be able to compile programs<br />&gt; &gt; : referencing a 64-bit dev_t.<br />&gt; <br />&gt; &gt; Yes, but that can be repaired just by changing an include file.<br />&gt; <br />&gt; No, not easily.  "gcc -ansi -pedantic-errors" will NOT give you any<br />&gt; way of declaring a 64-bit arithmetic type on Intel.<br /><br />Actually, the best solution is to just modify gcc a bit to know more about<br />the __extension__ keyword, and then make that keyword work correctly with<br />-ansi -pedantic. We _can_ ask for those kinds of changes to gcc, and I<br />suspect gcc maintainers would even be willing to make them. <br /><br />Gcc _already_ has a "__extension__" keyword that can be used to shut up<br />warnings for cases where we want to use gcc extensions. You can write<br />header-files like this, for example (try it with and without the<br />__extension__ to see what it does): <br /><br />  #define strange(x) (__extension__({ int y = x; if (y) y = 2; y; }))<br /><br />So the gcc developers already _do_ support silent extensions like that, <br />it's just a pity the "__extension__" keyword doesn't work in <br />type definitions..<br /><br />Anyway, I think we should be ok with a 12+20 bit dev_t, that sounds like <br />the best solution right now.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
