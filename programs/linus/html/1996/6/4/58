    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/6/1/15">First message in thread</a></li><li><a href="/lkml/1996/6/2/30">(Alan Cox)</a><ul><li><a href="/lkml/1996/6/2/64">"Jon M. Taylor"</a><ul><li><a href="/lkml/1996/6/3/14">Linus Torvalds</a><ul><li><a href="/lkml/1996/6/3/19">"Jon M. Taylor"</a></li><li><a href="/lkml/1996/6/3/25">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/1996/6/4/11">(Brad Pepers)</a><ul><li class="origin"><a href="/lkml/1996/6/5/101">Linus Torvalds</a><ul><li><a href="/lkml/1996/6/5/101">"Jon M. Taylor"</a><ul><li><a href="/lkml/1996/6/6/26">"Theodore Y. Ts'o"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 4 Jun 1996 10:26:39 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: SVGA kernel chipset drivers.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 3 Jun 1996, Brad Pepers wrote:<br />&gt; <br />&gt; Why are graphics cards singled out as the only PC hardware that cannot<br />&gt; be in the kernel?<br />&gt; <br />&gt; Don't get me wrong - I don't want to see massive drivers included in the<br />&gt; kernel.  But some basic support from the kernel for mode switching and<br />&gt; querying of card information along with a user land program that provides<br />&gt; a standard API that uses this information sounds like a good idea to me.<br /><br />There are a few things that singles out graphics as a special case:<br /><br /> - extreme performance requirements. It's one of the few devices (the <br />   others being mainly disk drivers and high-speed networking) where <br />   every cycle counts.<br /> - no good generic interface. This is where it differs from disks and <br />   networking and most of the rest. A disk is a disk is a disk - they <br />   look more-or-less the same to the end user, and you can virtualize <br />   them behind a driver pretty well. However, trying to virtualize a <br />   graphics card is not really possible in a reasonably small API. You <br />   end up losing "special features" that can be critical (like bitmap<br />   caching in video memory etc - stuff like that is very hard to virtualize <br />   without exposing all the details you want to hide in the first place)<br /><br />The problem is really that while you can say that "yes, we can virtualize <br />bitmap caching" etc, the stuff just keeps coming and coming, and in the <br />end you have a list of hundreds of things that the driver needs to know <br />about, and you have a rather complex API to it all, including a "get <br />features" request that tells the user exactly which things are available.<br /><br />In contrast, look at a disk driver: you want to get very good performance <br />from that too, but the interface is rather simple. You read a block, <br />write a block, and have a few special ioctl's to do special cases that <br />are conceptually very simple ("ask geometry", "lock door" etc). And the <br />special cases aren't really performance critical, so you don't have to <br />worry overmuch about them.<br /><br />The closest thing to a video driver in the current kernel is probably the<br />sound driver: that's a reasonably complex beast with a reasonably complex<br />interface. However, the performance constraints are _much_ less of an issue<br />(orders of magnitude less data to shuffle around), and while games etc want<br />to do strange things, the strange things are usually reasonably well-defined<br />("play this snippet of sound in the background while I do other things"). <br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
