    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1996/6/9/62">First message in thread</a></li><li><a href="/lkml/1996/6/10/87">Jeff Johnson</a><ul><li><a href="/lkml/1996/6/11/2">Hasdi R Hashim</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/1996/6/11/86">Bryn Paul Arnold Jones</a><ul><li><a href="/lkml/1996/6/13/94">Michael Neuffer</a><ul><li><a href="/lkml/1996/6/14/11">Bryn Paul Arnold Jones</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1996/6/11/5">Kevin M Bealer</a><ul><li><a href="/lkml/1996/6/11/33">Matthias Urlichs</a><ul><li><a href="/lkml/1996/6/11/40">Alan Cox</a><ul><li><a href="/lkml/1996/6/11/60">Herbert Wengatz</a></li><li><a href="/lkml/1996/6/12/1">Jeff Johnson</a></li><li><a href="/lkml/1996/6/12/40">Bryn Paul Arnold Jones</a></li></ul></li><li><a href="/lkml/1996/6/11/43">Jeff Johnson</a></li><li><a href="/lkml/1996/6/11/55">"B.J. Weschke"</a></li><li><a href="/lkml/1996/6/11/80">Herbert Rosmanith</a></li></ul></li><li><a href="/lkml/1996/6/11/38">Chris Evans</a><ul><li><a href="/lkml/1996/6/11/44">Jeff Johnson</a></li><li><a href="/lkml/1996/6/12/67">(joost witteveen)</a><ul><li><a href="/lkml/1996/6/12/103">(Alan Cox)</a></li></ul></li></ul></li><li><a href="/lkml/1996/6/12/32">(Thomas Quinot)</a><ul><li><a href="/lkml/1996/6/13/9">Bryn Paul Arnold Jones</a><ul><li><a href="/lkml/1996/6/14/59">Thomas Quinot</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1996/6/11/23">Alan Cox</a><ul><li><a href="/lkml/1996/6/11/47">Linus Torvalds</a></li><li><a href="/lkml/1996/6/11/53">Jeff Johnson</a><ul><li><a href="/lkml/1996/6/11/57">Alan Cox</a><ul><li><a href="/lkml/1996/6/11/69">Jeff Johnson</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 11 Jun 1996 09:43:02 +0300 (EET DST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: rationale behind /proc filesystem? (wuz Re: 2.0, loggings....)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 10 Jun 1996, Hasdi R Hashim wrote:<br />&gt; <br />&gt; This is one thing I STILL don't get about /proc filesystem. Just adding<br />&gt; one simple swiss-army kind of syscall should give you all the information<br />&gt; you need about the kernel without even checking the /proc filesystem.  A<br />&gt; syscall implementation is a lot smaller /proc and more efficient (all that<br />&gt; open/read/write/close stuff - yuk!)<br />&gt; <br />&gt; What is the rationale behind /proc filesystem? Is this part of making<br />&gt; almost everything in UNIX look like a file? From my understanding, the aim<br />&gt; of /proc filesystem is enable programs like ps to check on the system<br />&gt; status without poking to version/config specific part of the kernel (did I<br />&gt; get that right?). Why not add a syscall? Can somebody explain this me? :}<br /><br />What does a syscall buy you in a perl script?<br /><br />How do you handle "new" things gracefully with a syscall?<br /><br />How do you handle dynamic things gracefully with a syscall?<br /><br />In short, there are several things going for the /proc implementation:<br /> - you can use _generic_ tools on it (not just perl, although perl is <br />   obviously a good tool)<br /> - it has a very obvious extension mechanism<br /> - it has built-in name services (using the normal UNIX name service: the <br />   filesystem structure). Think of the /proc filesystem like the "DNS" <br />   for kernel information..<br /><br />A system call is faster, agreed. And if there are _real_ problems with <br />the /proc approach, and there is something performance-critical that <br />needs some specific information, we'll add a system call for it. But <br />system calls are a lot harder to make dynamic, and if you try you'd <br />probably end up doing what /proc already does.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
