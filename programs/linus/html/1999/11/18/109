    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/17/88">First message in thread</a></li><li><a href="/lkml/1999/11/17/88">Ingo Molnar</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 18 Nov 1999 19:57:58 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] zoned-2.3.28-K4</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />[ Ok, back from comdex, looking through my horrible backlog of email.. ]<br /><br />On Wed, 17 Nov 1999, Ingo Molnar wrote:<br />&gt; <br />&gt; the latest patchset is at:<br />&gt; <br />&gt; <a href="https://www.redhat.com/~mingo/zoned-2.3.28-K4">http://www.redhat.com/~mingo/zoned-2.3.28-K4</a><br /><br />Ugh. I don't like some of this:<br /><br /> - the "task-&gt;refcount" thing is just silly, considering that any<br />   architecture that uses pages for task allocation would have been better<br />   off just using the memory management refcount like we used to.<br /><br />   Why not do this by just doing a per-architecture "get_task_struct()"<br />   and "put_task_struct()", to go with the already existing "alloc" and<br />   "free" functionality?<br /><br />   Thus, on the 99% of all machines where the page allocator already does<br />   the work for us, we'd just have<br /><br />		#define get_task_struct(tsk) \<br />			atomic_inc(&amp;mem_map[MAP_NR(tsk)].count)<br />		#define put_task_struct(tsk) \<br />			free_task_struct(tsk)<br /><br />   which is just obviously right and cleans up the need to have that silly<br />   refcount. Then ARM can just have a refcount in its own definition of<br />   get_task_struct() and friends in task-&gt;thread.refcount..<br /><br /> - I don't see the reason for renaming page_address() to page_vaddr()?<br /><br /> - "flush_cache_all()" etc in "pgalloc.h"? Senseless. I can see pgalloc.h<br />   containing the page table allocation routines. But why did you move the<br />   other stuff there? Looks like a cut-and-paste bug to me. Why a new<br />   header file at all?<br /><br />Would you mind explaining or re-doing?<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
