    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/19/133">First message in thread</a></li><li class="origin"><a href="/lkml/1999/11/19/135">(Linus Torvalds)</a><ul><li><a href="/lkml/1999/11/19/135">Larry McVoy</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Better lmbench 2.2.14pre4 vs. 2.3.28</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">20 Nov 1999 02:27:47 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;Pine.LNX.4.10.9911161509270.4535-100000&#64;chiara.csoma.elte.hu&gt;,<br />Ingo Molnar  &lt;mingo&#64;chiara.csoma.elte.hu&gt; wrote:<br />&gt;<br />&gt;i'm quite sure these are due to the scheduling heuristics removed in 2.3 -<br />&gt;we are running two lmbench processes on two CPUs, which causes excessive<br />&gt;cross-CPU (and main memory) traffic. Will think about how to solve this<br />&gt;cleanly.<br /><br />I know how to solve it right, but "cleanly"?<br /><br />The problem is that certain events are really of the type "wake up<br />somebody else, and then I will go to sleep".<br /><br />This is true of the pipe case, for example: we've filled the write<br />buffer, and we want to wake up the reader and go to sleep (or we're the<br />reader and we've emptied the buffer and want to go to sleep). <br /><br />In that case, all of our current clever "select a good CPU to schedule<br />for the wakeup" is just so much crap: we should not waste precious CPU<br />cycles doing that, considering that the current thread is "synchronous"<br />wrt the event in question anyway, and we're probably a lot better off<br />just trying to do a nice clean single-CPU re-schedule from the producer<br />to the consumer (or back). <br /><br />In short, what we really want is a "synchronous wakeup": a wakeup that<br />does not imply the "search for a good CPU" heuristic. <br /><br />The problem is that unlike the "WAKEONE" thing, where it is the<br />_sleeper_ that wants to say that it's a special kind of sleeper, this<br />case it's the person who does the wakeup() that wants to tell the world<br />that it's a special kind of waker that wants to wake people up in order<br />for them to do some more work for it.  And we don't have a very nice way<br />of doing that right now, I'm afraid. <br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
