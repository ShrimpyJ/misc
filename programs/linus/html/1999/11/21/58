    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/20/76">First message in thread</a></li><li><a href="/lkml/1999/11/20/76">Manfred Spraul</a><ul><li><a href="/lkml/1999/11/20/84">"Richard B. Johnson"</a><ul><li><a href="/lkml/1999/11/21/7">Manfred Spraul</a><ul><li><a href="/lkml/1999/11/21/19">Gerard Roudier</a><ul><li><a href="/lkml/1999/11/21/29">"Manfred"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1999/11/21/25">Ingo Molnar</a><ul><li><a href="/lkml/1999/11/21/28">"Manfred"</a></li><li><a href="/lkml/1999/11/21/33">Gerard Roudier</a></li><li><a href="/lkml/1999/11/21/35">Alan Cox</a><ul><li><a href="/lkml/1999/11/21/44">Ingo Molnar</a></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 21 Nov 1999 11:05:47 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] Re: spin_unlock optimization(i386)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 21 Nov 1999, Ingo Molnar wrote:<br />&gt; &gt; <br />&gt; &gt; I think it's possible to replace that with<br />&gt; &gt; 	"movl $0,%0"<br />&gt; &gt; which would be a simple, pairable single-tick instruction.<br />&gt; <br />&gt; [this very issue popped up a couple of days ago on FreeBSD mailing lists<br />&gt; as well.]<br /><br />It does NOT WORK!<br /><br />Let the FreBSD people use it, and let them get faster timings. They will<br />crash, eventually.<br /><br />The window may be small, but if you do this, then suddenly spinlocks<br />aren't reliable any more.<br /><br />The issue is not writes being issued in-order (although all the Intel CPU<br />books warn you NOT to assume that in-order write behaviour - I bet it<br />won't be the case in the long run).<br /><br />The issue is that you _have_ to have a serializing instruction in order to<br />make sure that the processor doesn't re-order things around the unlock. <br /><br />For example, with a simple write, the CPU can legally delay a read that<br />happened inside the critical region (maybe it missed a cache line), and<br />get a stale value for any of the reads that _should_ have been serialized<br />by the spinlock.<br /><br />Note that I actually thought this was a legal optimization, and for a<br />while I had this in the kernel. It crashed. In random ways.<br /><br />Note that the fact that it does not crash now is quite possibly because<br />of either <br /> - we have a lot less contention on our spinlocks these days. That might<br />   hide the problem, because the _spinlock_ will be fine (the cache<br />   coherency still means that the spinlock itself works fine - it's just<br />   that it no longer works reliably as an exclusion thing)<br /> - the window is probably very very small, and you have to be unlucky to<br />   hit it. Faster CPU's, different compilers, whatever.<br /><br />I might be proven wrong, but I don't think I am.<br /><br />Note that another thing is that yes, "btcl" may be the worst possible<br />thing to use for this, and you might test whether a simpler "xor+xchgl"<br />might be better - it's still serializing because it is locked, but it<br />should be the normal 12 cycles that Intel always seems to waste on<br />serializing instructions rather than 22 cycles.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
