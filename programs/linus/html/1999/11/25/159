    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/24/59">First message in thread</a></li><li><a href="/lkml/1999/11/24/139">Andrea Arcangeli</a><ul><li><a href="/lkml/1999/11/24/144">Erich Boleyn</a></li><li><a href="/lkml/1999/11/25/152">Manfred Spraul</a><ul><li class="origin"><a href="/lkml/1999/11/25/162">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/25/162">Ingo Molnar</a><ul><li><a href="/lkml/1999/11/25/163">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/1999/11/26/47">Erich Boleyn</a><ul><li><a href="/lkml/1999/11/26/115">Erich Boleyn</a><ul><li><a href="/lkml/1999/11/26/123">Ingo Molnar</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 25 Nov 1999 15:57:58 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: spin_unlock optimization(i386)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 26 Nov 1999, Manfred Spraul wrote:<br />&gt; <br />&gt; [Either my test program is completely buggy, or ]<br />&gt; <br />&gt; We definitively need the memory barrier during set_current_state():<br /><br />Yes. I think that oxymorons explanation is the correct one: we do need the<br />serialization for "lock" operations, and we do need it to protect other<br />data.<br /><br />The reason unlock can be done without serialization is just due to intel<br />breaking symmetry on re-ordering reads and writes: if you allow reads to<br />only pass "upwards", then that in itself is sufficient explanation for why<br />the simple unlock works.<br /><br />And yes, Manfred, this is what you have claimed all along. You were right.<br /><br />I still suspect that Intel doesn't really guarantee this behaviour in its<br />litterature, but on the other hand there is some safety in knowing that NT<br />depends on the behaviour and Intel cannot change it without completely<br />breaking NT...<br /><br />So let's just have the memory barriers we already have, and just optimize<br />the unlock.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
