    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/24/59">First message in thread</a></li><li><a href="/lkml/1999/11/24/134">Andrea Arcangeli</a><ul><li><a href="/lkml/1999/11/24/138">Erich Boleyn</a><ul><li><a href="/lkml/1999/11/24/140">Andrea Arcangeli</a><ul><li><a href="/lkml/1999/11/24/143">Erich Boleyn</a><ul><li><a href="/lkml/1999/11/25/125">Gerard Roudier</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/1999/11/25/50">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/25/50">Oliver Xymoron</a><ul><li><a href="/lkml/1999/11/25/102">Erich Boleyn</a></li><li><a href="/lkml/1999/11/25/104">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1999/11/25/93">Erich Boleyn</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 24 Nov 1999 21:32:11 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: spin_unlock optimization(i386)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 24 Nov 1999, Erich Boleyn wrote:<br />&gt; <br />&gt; IA32 SMP is Processor Ordered for WB memory (why would you use WT for<br />&gt; normal RAM anyway?), which essentially means the same thing as strong<br />&gt; ordering with the following caveat:<br />&gt; <br />&gt; 	Stores from one processor may not all be seen by other processors<br />&gt; 	yet, though if any one store is observed by processor A on<br />&gt; 	processor B, any earlier stores (in program order) from processor<br />&gt; 	A are guaranteed to be observed by processor B.<br /><br />There is a philosophical question here:<br /><br /> "if a store happens and there is nobody to listen, does it make a sound?"<br /><br />What I'm alluding to is that the Intel memory ordering essentially says<br /><br />	CPU 1:			CPU 2<br /><br />	a = 1<br />	b = 2<br /><br />				read b, see 2: we know that a must be 1.<br /><br />HOWEVER, we have a slightly different situation here:<br /><br />	CPU 1			CPU 2<br /><br />	read b<br />	a = 0<br />				read a, see 0<br />				write b<br /><br />Note how both CPU's only did ONE write. That one write does not have any<br />real "order", and really write ordering is not an issue AT ALL.<br /><br />In physics, this issue is called "causality" rather than "order", and I<br />don't think the issue has really been clarified.<br /><br />Basically, everybody agrees on ordering of writes. Intel keeps them in<br />order.<br /><br />What I still find to be the weak point of all the arguments both ways is<br />that I still have NOT seen any real proof that CPU#1 could not see the<br />"future" write of "b". In short, without a synchronizing instruction I<br />don't trust causality - even though I trust order.<br /><br />(There is no question of "order" in the above, as nothing I have so far<br />seen defines the ordering of reads vs writes, and THAT is the basic<br />problem above)<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
