    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/25/16">First message in thread</a></li><li><a href="/lkml/1999/11/25/16">Ingo Molnar</a><ul><li><a href="/lkml/1999/11/25/25">Alan Cox</a><ul><li><a href="/lkml/1999/11/25/78">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1999/11/25/72">Andrea Arcangeli</a><ul><li><a href="/lkml/1999/11/25/154">Ingo Molnar</a></li><li><a href="/lkml/1999/11/25/168">Ingo Molnar</a><ul><li><a href="/lkml/1999/11/25/178">Andrea Arcangeli</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/1999/11/26/24">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/26/24">Jes Sorensen</a></li><li><a href="/lkml/1999/11/26/103">Richard Henderson</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 25 Nov 1999 09:33:55 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] smp-2.3.30-A1, mb(), wmb(), rmb()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />Ingo, I think your "mb()" could just be<br /><br />	#define mb() do { \<br />		int __dummy; \<br />		asm volatile("movl %%eax,%0":"=m" (&amp;dummy): :"memory"); \<br />	} while (0)<br /><br />which instead of using a read-modify-write cycle and a long immediate just<br />uses a single write-cycle. It makes gcc allocate a word on the stack, and<br />sometimes that might be unnecessary, but it should be smaller and faster.<br />You might want to check out code generation..<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
