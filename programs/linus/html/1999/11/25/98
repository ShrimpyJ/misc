    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/8/72">First message in thread</a></li><li><a href="/lkml/1999/11/25/80">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/25/91">Andrea Arcangeli</a><ul><li><a href="/lkml/1999/11/25/89">Andrea Arcangeli</a></li><li class="origin"><a href="/lkml/1999/11/25/99">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/25/99">Manfred Spraul</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 25 Nov 1999 09:57:10 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Patch] shm bug introduced with pagecache in 2.3.11</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 25 Nov 1999, Andrea Arcangeli wrote:<br />&gt; <br />&gt; But I am not been trivially succesfully in fixing the shm swapin races<br />&gt; with "read pte with spinlock acquired, release the spinlock, reacquire the<br />&gt; spinlock and the check if the pte is changed". That's why I added the<br />&gt; spinlock.<br /><br />I was planning on just depending on the sanity of the page cache on this<br />one. Basically we have two cases:<br /> - paging in something new ("no_page"), for which the final test is just<br />   to test that the page table is still zero (ie we don't even need to<br />   save any "original" value).<br /> - paging in something old ("swap_page"), in wich case the final test is<br />   to check that the pte is still the same as swp_entry_to_pte(entry).<br /><br />(we have the rw_page case too, but that is already protected by the<br />spinlock appropriately as far as I can tell, exactly because it already<br />has the same race wrt page_out rather than page_in).<br /><br />No, I haven't checked the exact details. Maybe it's worse than I envision,<br />but it _looks_ like adding a simple spinlock and the test. If the test<br />fails, we just return and expect the fault to happen again..<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
