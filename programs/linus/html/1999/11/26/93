    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/25/176">First message in thread</a></li><li><a href="/lkml/1999/11/25/176"> Andries.Brouwer&#64;cwi ...</a><ul><li class="origin"><a href="/lkml/1999/11/26/102">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/26/102">Oliver Xymoron</a><ul><li><a href="/lkml/1999/11/26/104">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/26/109">Oliver Xymoron</a></li><li><a href="/lkml/1999/11/26/152">Martin Dalecki</a></li></ul></li><li><a href="/lkml/1999/11/26/153">Martin Dalecki</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 26 Nov 1999 11:02:06 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Request for comments (kdev_t and friends...)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 26 Nov 1999 Andries.Brouwer&#64;cwi.nl wrote:<br />&gt; <br />&gt; But how is that different from the planned kdev_t?<br />&gt; <br />&gt; Your "struct block_device *" is precisely kdev_t.<br /><br />No.<br /><br />Notice that "kdev_t" implies that all devices have the same kind of<br />pointer.<br /><br />"struct block_device" implies that, for example, character devices are of<br />a completely different type. <br /><br />Also, the difference is in reference counting. The current setup assumes<br />that you never have to "put" a reference to kdev_t, which is just broken<br />in a dynamic environment - we do NOT want to be required to hold on to<br />"struct block_device" data structures forever, we need to also clean them<br />up after they are no longer referenced by anybody.<br /><br />It's more of an evolution of kdev_t, and I agree with you 100% in that<br />sense.<br /><br />			Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
