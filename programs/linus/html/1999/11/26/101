    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/24/59">First message in thread</a></li><li><a href="/lkml/1999/11/26/95">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/26/94">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/1999/11/26/100">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/26/100">Ingo Molnar</a></li><li><a href="/lkml/1999/11/29/90">Alan Cox</a></li></ul></li><li><a href="/lkml/1999/11/26/110">Jeff Garzik</a></li><li><a href="/lkml/1999/11/29/91">Alan Cox</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 26 Nov 1999 11:19:14 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: spin_unlock optimization(i386)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 26 Nov 1999, Ingo Molnar wrote:<br />&gt; <br />&gt; i believe this still doesnt turn off store forwarding. If two PCI commands<br />&gt; are written to the same register then they might get 'merged', resulting<br />&gt; in the first written command to be lost. This usually doesnt happen, but<br />&gt; can happen, and does happen in some cases.<br /><br />No, the MTRR's turn off store forwarding too.<br /><br />How do we know? Think about DOS. It doesn't _have_ page tables, it depends<br />entirely on the MTRR's to do the right thing wrt IO memory.<br /><br />&gt; the only MTRR stuff we do right now is mmap()-ing the frame buffer via<br />&gt; /dev/mem, right? In that case we are doing things outside of ioremap()'s<br />&gt; scope anyway.<br /><br />Nope. I'm convinced we want to use MTRR's for high-speed networking, for<br />example. You'll get to test thison gigabit soon enough, but the fastest<br />way to feed a networking card is to map a large buffer in PCI memory space<br />and then use the MTRR's to mark it write combining but uncached (whatever<br />intel calls that combination). That way the core will write combine and<br />burst PCI writes, which is what you need for top performance.<br /><br />&gt; actually this is how ioremap_nocache() popped up, i just didnt understand<br />&gt; this issue at that time. (i hope i do now :). About 2 years ago CISCO<br />&gt; found out when developing drivers that their driver fails mysteriously on<br />&gt; PPro boxes. So i sent a small patch to add ioremap_nocache(), but that's<br />&gt; the wrong solution now i believe.<br /><br />It could easily be MTRR's set up wrong. Considering how many broken BIOSes<br />there are out there, that is not that unlikely.<br /><br />On pre-P6 boxes we had the same kind of mysterious problems with some<br />XFree86 setups on _some_ motherboards..<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
