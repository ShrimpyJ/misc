    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/11/25/176">First message in thread</a></li><li><a href="/lkml/1999/11/26/93">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/26/102">Oliver Xymoron</a><ul><li class="origin"><a href="/lkml/1999/11/26/109">Linus Torvalds</a><ul><li><a href="/lkml/1999/11/26/109">Oliver Xymoron</a><ul><li><a href="/lkml/1999/11/26/116">Richard Gooch</a></li><li><a href="/lkml/1999/11/26/154">Martin Dalecki</a></li></ul></li><li><a href="/lkml/1999/11/26/152">Martin Dalecki</a></li></ul></li><li><a href="/lkml/1999/11/26/153">Martin Dalecki</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 26 Nov 1999 12:00:15 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Request for comments (kdev_t and friends...)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 26 Nov 1999, Oliver Xymoron wrote:<br />&gt; <br />&gt; But why would you want that? Block devices look just like char devices. If<br />&gt; you compare all of the (blk|chr) functions in fs/devices.c, they're<br />&gt; identical except for referencing different arrays.<br /><br />But that's BECAUSE they cannot be different right now. Both block devices<br />and character devices are described by the same descriptor "dev_t", which<br />gets translated to the same type "kdev_t" - whether they are block or<br />character devices is irrelevant to those translations, and thus they have<br />to be the same.<br /><br />So of course they look the same.<br /><br />But that's something we want to change. We want to have the pointer to the<br />block request list available immediately, for example. We don't want to do<br />the current lookup stuff that we do on every block IO start (see<br />ll_rw_block.c and wince). We don't want to have a global block statistics<br />array with magic knowledge about how the minor numbers are allocated<br />(again see ll_rw_block.c and wince).<br /><br />We want to have ONE structure per device, and we want to have a direct<br />pointer to that structure that is looked up _once_ on device open and then<br />used ever after. And we want to have /proc just walk the list of allocated<br />structures when somebody asks for statistics, instead of the current mess.<br /><br />&gt; Further, major and minor don't make much sense either anymore. Major<br />&gt; should indicate a device type, with minor indicating an instance. But now<br />&gt; there are multiple devices within a major (misc, mem) and devices that<br />&gt; span majors (tty, scsi). So the terms are more or less arbitrary. So most<br />&gt; of the kernel outside drivers themselves should treat device handles as<br />&gt; opaque.<br /><br />The major/minor stuff should never be used in a perfect world, except for<br />the initial lookup. After that, you would just have "index within this<br />controller" or something, and that depends on the actual hardware.<br /><br />&gt; I'm not sure about this. Imagine kdev_t was a pointer to fops or something<br />&gt; similar. The use of this pointer (in the usual way of using fops) would<br />&gt; imply that the device was open, which would imply that the device driver<br />&gt; was still around. Then dev-&gt;close() is put(dev).<br /><br />Umm.. Look at where "kdev_t" is used. It's embedded in the buffer cache,<br />for example. And right now those have longer lifetimes than open/close.<br /><br />Of course, maybe the right thing is to just not do that. Not allow buffers<br />to survive the close of a device. In which case the "put()" can indeed be<br />done at close time.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
