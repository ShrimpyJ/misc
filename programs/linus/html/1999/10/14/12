    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/10/13/132">First message in thread</a></li><li><a href="/lkml/1999/10/13/132">swoop</a><ul><li class="origin"><a href="/lkml/1999/10/14/25">(Linus Torvalds)</a><ul><li><a href="/lkml/1999/10/14/25">Pavel Machek</a><ul><li><a href="/lkml/1999/10/14/58">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: PCI patch for 2.3.21</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">14 Oct 1999 07:44:52 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;Pine.LNX.4.10.9910140142470.1926-100000&#64;bkg.stp.lt&gt;,<br />swoop  &lt;swoop&#64;bkg.lt&gt; wrote:<br />&gt;<br />&gt;With USB IRQ Disabled in BIOS:<br />&gt;<br />&gt;Was able to login (worked for a while) and afterwords <br />&gt;incurred hard lockup (I guess moved mouse ...). Powering off/on.<br /><br />Ok. <br /><br />This seems to be due to the excessively clever IRQ routing code that is<br />new as of 2.3.19, which thinks that it should fix up things that the<br />BIOS left disabled. <br /><br />Which is absolutely deadly, because the BIOS in this case apparently<br />left the irq routing disabled for a very good reason: it is probably<br />routing the USB IRQ into an SMI, and doing the magic "emulate old<br />devices with USB" in SMM mode thing.<br /><br />When the new PCI code then changes the IRQ routing without being aware<br />of the two levels of drivers that are using the interrupts (the kernel<br />driver for a PS/2 mouse, and the SMM-mode BIOS driver that has the USB<br />device enabled), you end up with an endless stream of USB interrupts<br />that go to the wrong driver (which won't know what to do with them, so<br />they'll keep coming - PCI interrupts are level-triggered, and once they<br />start with nobody to shut them off they will just never stop). <br /><br />&gt;With USB IRQ Enabled in BIOS everything fine.<br /><br />That's because when the USB irq is enabled, the BIOS won't have<br />activated the USB controller because it thinks that the OS will handle<br />the USB interrupt natively (you don't happen to have the USB driver<br />enabled, so in your case the OS will _not_ have enabled the USB<br />controller either, and you never get an endless stream of interrupts,<br />because in this case there won't be any confusion - the only driver that<br />will actually use irq12 is the PS/2 driver and it will be able to<br />correctly handle all incoming interrupts - none of the crossed wires as<br />in the bad case). <br /><br />Martin, the 2.3.19 code must go.  It cannot be fixed up, and this cannot<br />continue. <br /><br />Maybe NOW you understand why I have harped and harped on the issue of<br />NOT trying to fix up random PCI state without having the driver<br />explicitly ask for it? This is going to keep on happening as long as the<br />PCI subsystem continues to think that it can know what the<br />"RightThing(tm)" to do is.  But the PCI subsystem really doesn't know<br />enough in the absense of a driver, and there may be some really good<br />reason why an IO area is not mapped or an IRQ is not enabled. <br /><br />This is why missing interrupt routing stuff and missing IO mappings etc<br />should be enabled ONLY by the driver.  Because by the time the driver<br />enables them, we know that they will be managed properly (or at least at<br />that time it can be considered a driver bug and fixed at the proper<br />level).  Not before. <br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
