    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/10/14/151">First message in thread</a></li><li><a href="/lkml/1999/10/15/169">Linus Torvalds</a><ul><li><a href="/lkml/1999/10/15/173">(Kanoj Sarcar)</a><ul><li class="origin"><a href="/lkml/1999/10/15/179">Linus Torvalds</a><ul><li><a href="/lkml/1999/10/15/179">(Kanoj Sarcar)</a></li></ul></li></ul></li><li><a href="/lkml/1999/10/15/190">Manfred Spraul</a><ul><li><a href="/lkml/1999/10/15/195">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 15 Oct 1999 15:04:33 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] kanoj-mm17-2.3.21 kswapd vma scanning protection</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 15 Oct 1999, Kanoj Sarcar wrote:<br />&gt; <br />&gt; This basically means that you are overloading the page_table_lock to do <br />&gt; the work of the vmlist_lock in my patch. Thus vmlist_modify_lock/<br />&gt; vmlist_access_lock in my patch could be changed in mm.h to grab the <br />&gt; page_table_lock. As I mentioned before, moving to a spinlock to <br />&gt; protect the vma chain will need some changes to the vmscan.c code.<br /><br />Agreed. <br /><br />&gt; The reason I think most people suggested a different lock, namely vmlist_lock,<br />&gt; is to reduce contention on the page_table_lock, so that all the other<br />&gt; paths like mprotect/mlock/mmap/munmap do not end up grabbing the<br />&gt; page_table_lock which is grabbed in the fault path.<br /><br />There can be no contention on the page_table_lock in the absense of the<br />page stealer. The reason is simple: every single thing that gets the page<br />table lock has already gotten the mm lock beforehand, and as such<br />contention is never an issue.<br /><br />Contention _only_ occurs for the specific case when somebody is scanning<br />the page tables in order to free up pages. And at that point it's not<br />contention any more, at that point it is the thing that protects us from<br />bad things happening.<br /><br />As such, the hold time of the spinlock is entirely immaterial, and<br />coalescing the page table lock and the vmlist lock does not increase<br />contention, it only decreases the number of locks you have to get. At<br />least as far as I can see.<br /><br />&gt; Let me know how you want me to rework the patch. Imo, we should keep<br />&gt; the macros vmlist_modify_lock/vmlist_access_lock, even if we do<br />&gt; decide to overload the page table lock.<br /><br />Don't think of it as overloading the page table lock. Notice how the page<br />table lock really isn't a page table lock - it really is just "protection<br />against vmscan", and it's misnamed mainly because the only part we<br />protected was the page tables (which isn't enough). <br /><br />So think of it as a fix to the current protection, and as that fix makes<br />it protect more than just the page tables (makes it protect everything<br />that is required), the name should also change.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
