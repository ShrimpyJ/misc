    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/10/13/13">First message in thread</a></li><li><a href="/lkml/1999/10/13/117">Jeff Garzik</a><ul><li><a href="/lkml/1999/10/13/155">Oliver Xymoron</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 13 Oct 1999 20:46:26 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] dynamic char and block devices</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 13 Oct 1999, Oliver Xymoron wrote:<br />&gt; <br />&gt; Yes. Though it might need a few more primitives to fully realize its<br />&gt; usefulness. My tinkering to make it more flexible isn't getting anywhere -<br />&gt; I wrote a find_resource to either find a resource or find its tree<br />&gt; insertion point, which is now the core of __request_resource. However,<br />&gt; because the list of siblings is singly-linked, it ended up taking a struct<br />&gt; resource ***. Too sick to live.<br /><br />Yeah, I don't think we have triple-indirect pointers in use anywhere so<br />far. And if we do, we probably shouldn't make it more common.<br /><br />&gt; Linus, would you consider a patch to make resource siblings doubly-linked?<br />&gt; We could then use the list macros and avoid the pointer to a pointer stuff<br />&gt; in the current code. Alternately, a tree.h might not be a bad idea.<br /><br />I don't mind a doubly linked list at all, especially if you use the<br />&lt;linux/list.h&gt; implementation.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
