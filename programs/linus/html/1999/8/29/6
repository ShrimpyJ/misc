    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/8/25/133">First message in thread</a></li><li><a href="/lkml/1999/8/27/93">Linus Torvalds</a><ul><li><a href="/lkml/1999/8/28/86">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/1999/8/29/42">Linus Torvalds</a><ul><li><a href="/lkml/1999/8/29/42">Andrea Arcangeli</a><ul><li><a href="/lkml/1999/8/29/70">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Aug 1999 23:19:53 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: new semaphores</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 29 Aug 1999, Andrea Arcangeli wrote:<br />&gt;<br />&gt; It seems to me that there's no need of wake-up the sleepers in the success<br />&gt; path of __down(). If you get the semaphore nobody else can do progresses.<br />&gt; You'll sure wakeup the sleepers some time soon in up().<br /><br />Maybe. Be careful that you don't get this wrong, though: you should NOT<br />think that semaphores are always mutexes, and there could be multiple<br />concurrent "up()" calls with semaphore counts &gt; 1 etc, and I'd rather be<br />safe than sorry.<br /><br />With the rule that you always wake somebody up when the count becomes<br />non-negative, you're at least safe. I'm not sure your new code is.<br /><br />&gt; down_trylock seems buggy because it always returns 1 and it won't make<br />&gt; difference between the case that held the semaphore and the case that find<br />&gt; the semaphore busy.<br /><br />down_trylock has already _failed_.<br /><br />It failed before the call - the down() has failed, and down_trylock just<br />has to correct the counts and then _unconditionally_ tell the world that<br />the failure happened.<br /><br />That part of your patch is definitely bad. There's no way I'll ever add<br />this: you increment the semaphore count without waking people up, which is<br />just a sure way to set yourself up for nasty surprises.<br /><br />Don't try to be clever when the trylock has already proven to have failed<br />once. Th ewhole _point_ of trylock is to try once and give up if it didn't<br />succeed.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
