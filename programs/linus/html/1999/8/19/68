    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/8/19/64">First message in thread</a></li><li><a href="/lkml/1999/8/19/64">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/1999/8/19/70">Linus Torvalds</a><ul><li><a href="/lkml/1999/8/19/70">Chris Wedgwood</a><ul><li><a href="/lkml/1999/8/19/72">Linus Torvalds</a><ul><li><a href="/lkml/1999/8/20/46">Andrea Arcangeli</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 19 Aug 1999 12:57:20 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] 2.3.14: bug-fix for raw IO error recovery</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 19 Aug 1999, Andrea Arcangeli wrote:<br />&gt; <br />&gt; Wouldn't be possible to let get_page_map to give us back more information<br />&gt; by returning -1 if the page_map is not good?<br /><br />Don't do this. It leads to all kinds of problems for 64-bit architectures,<br />I'm not at all sure that casting (int) -1 to a pointer is at all safe. I<br />would not be surprised if it is entirely legal and expected on some<br />architectures for it to become 0x00000000ffffffff, which might be a<br />perfectly valid pointer.<br /><br />If you play error games with pointers, there's just two ways to do it<br />nicely: either the NULL pointer (right now) or by having a nicely<br />abstracted thing that can be extended to do different things on different<br />architectures (this is what the "dcache" error pointers are doing with the<br />ERR_PTR/PTR_ERR/IS_ERR stuff - right now all architectures have pointers<br />that look roughly the same and there is just one global definition for<br />ERR_PTR, but if some strange architecture comes along some day we'll be<br />able to handle it cleanly).<br /><br />In the meantime, things like this are _definitely_ a bad idea.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
