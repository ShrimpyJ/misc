    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/12/17/78">First message in thread</a></li><li><a href="/lkml/1999/12/20/164">(Linus Torvalds)</a><ul><li><a href="/lkml/1999/12/21/3">Ben LaHaise</a><ul><li class="origin"><a href="/lkml/1999/12/21/26">Linus Torvalds</a><ul><li><a href="/lkml/1999/12/21/26">Linus Torvalds</a><ul><li><a href="/lkml/1999/12/21/121">Alexander Viro</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 20 Dec 1999 23:11:54 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: VFS?VM - mmap/write deadlock</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 21 Dec 1999, Ben LaHaise wrote:<br />&gt; <br />&gt; We are talking about 2.4 -- right now one can deadlock by write()ing from<br />&gt; an mmap()'d into the same file.  The granularity of the lock is much<br />&gt; smaller (it's the page lock), but it's still there.<br /><br />Wait.. There was some reason this couldn't happen, we had this discussion<br />with Dave some time ago. Let's see..<br /><br />[ think think think ]<br /><br />Ok: in order to write() from the page, the page must have been paged in.<br /><br />That page-in() will make sure that the page is first _read_. And that read<br />code does not care about the page lock, it only cares about the uptodate<br />bit.  So it's ok to write from a locked page into a locked page, as long<br />as that page is marked up-to-date, because the page-in case won't care<br />about the lock.<br /><br />So the solution comes down from verifying that the page is marked<br />up-to-date _before_ it is accessed and locked for the write. Which<br />automatically happens if the page is just marked up-to-date before we do<br />the "copy_from_user()" (at any time before that we don't care).<br /><br />Ok, I think that was the solution I remember, but it's obviously broken.<br />It leaves a window of non-updated page contents that can be read. Ho<br />humm.. Your suggestion may be the way to go.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
