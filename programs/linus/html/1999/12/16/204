    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/12/13/208">First message in thread</a></li><li><a href="/lkml/1999/12/16/178">Raul Miller</a><ul><li><a href="/lkml/1999/12/16/187">"David S. Miller"</a><ul><li class="origin"><a href="/lkml/1999/12/16/214">Linus Torvalds</a><ul><li><a href="/lkml/1999/12/16/214">"David S. Miller"</a><ul><li><a href="/lkml/1999/12/16/217">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1999/12/17/71">James Simmons</a><ul><li><a href="/lkml/1999/12/17/108">Raul Miller</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 16 Dec 1999 15:53:56 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Thread-private mappings and graphics (was Re: Per-Processor Data Page)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 16 Dec 1999, David S. Miller wrote:<br />&gt; <br />&gt; In one instance I know of a card that caches multiple rendering<br />&gt; context's state, something like up to 8, in the card.  So the<br />&gt; kernel page fault handler would go:<br /><br />I don't understand why people are so hung up about page faults.<br /><br />I think it's ENTIRELY because of historical baggage, and the particular<br />implementation under Irix. <br /><br />What I'm surprised about is that nobody seems to just come out and say:<br /><br /> Page faults are BAD. Playing with the page tables is EXPENSIVE. Page<br /> faults fundamentally are NOT thread-safe, because page tables are<br /> fundamentally shared among threads.<br /><br />Ok. Nobody else said it, so now I have. <br /><br />YOU SHOULD NOT PLAY MM GAMES! They do not scale in SMP, they do not scale<br />with threads, and the costs of missing are absolutely huge. The whole<br />thing is also extremely hard to debug, and implies a much tighter coupling<br />between the kernel and the X server than there should ever be!<br /><br />You can do a _regular_ SMP-safe lock with _real_ thread safety and no<br />faulting behaviour in a few instructions. We're talking maybe 50 cycles<br />here - about 40 cycles for the actual two locked instructions, and a very<br />generous 10 cycles to check whether you are the old owner and going to the<br />switch routine if not).<br /><br />Note that IF you have to switch contexts, the regular lock will be a hell<br />of a lot faster than taking page faults, so let's just ignore that case:<br />page faulting obviously loses, and there's no way anybody can seriously<br />claim anything else.<br /><br />So let's look at the no contention case, where you got the lock, and<br />everything was fine. You spent 50 cycles on verifying it. Big deal. That's<br />50 _CPU_ cycles. Not memory cycles, not PCI cycles. In exchange for those<br />50 cycles you get;<br /> - you can debug things<br /> - it's thread-safe<br /> - you have much lower latency if you DO get graphical context switching,<br />   and you can actually test it in user space first!<br /><br />Oh. And btw. It's already been done. See the 3dfx driver.<br /><br />So forget this playing with mmap and page faults. Use mmap() as a way to<br />access the physical hardware, but NOT as a way to switch contexts. Ok?<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
