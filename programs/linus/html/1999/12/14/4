    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/12/13/208">First message in thread</a></li><li><a href="/lkml/1999/12/13/208">Jon Leech</a><ul><li><a href="/lkml/1999/12/13/217">James Simmons</a><ul><li class="origin"><a href="/lkml/1999/12/14/6">(Linus Torvalds)</a><ul><li><a href="/lkml/1999/12/14/6">Larry McVoy</a></li><li><a href="/lkml/1999/12/14/106">James Simmons</a><ul><li><a href="/lkml/1999/12/14/118">Linus Torvalds</a></li><li><a href="/lkml/1999/12/15/137">(Jim Gettys)</a></li></ul></li></ul></li><li><a href="/lkml/1999/12/14/8">Jon Leech</a><ul><li><a href="/lkml/1999/12/14/10">"David S. Miller"</a><ul><li><a href="/lkml/1999/12/14/117">James Simmons</a></li></ul></li><li><a href="/lkml/1999/12/14/11">(Linus Torvalds)</a></li><li><a href="/lkml/1999/12/14/26">Jason Gunthorpe</a><ul><li><a href="/lkml/1999/12/14/126">(Linus Torvalds)</a></li><li><a href="/lkml/1999/12/15/34">(H. Peter Anvin)</a></li></ul></li><li><a href="/lkml/1999/12/14/78">Manfred Spraul</a></li><li><a href="/lkml/1999/12/14/88">Alan Cox</a><ul><li><a href="/lkml/1999/12/14/107">Larry McVoy</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Thread-private mappings and graphics (was Re: Per-Processor Data Page)</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">13 Dec 1999 22:28:28 -0800</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;Pine.LNX.4.20.9912132229460.10986-100000&#64;imperial.edgeglobal.com&gt;,<br />James Simmons  &lt;jsimmons&#64;edgeglobal.com&gt; wrote:<br />&gt;&gt; <br />&gt;&gt;     The fact is that many workstation apps using the OpenGL API rely on<br />&gt;&gt; threadsafe GL support, and slow lookups would cripple their performance.<br />&gt;&gt; We need to explore implementation options more, but the issue certainly<br />&gt;&gt; could be addressed by thread-private mappings, as is done today on IRIX<br />&gt;&gt; and other platforms.<br /><br />It will never happen on Linux.<br /><br />I'm suprised an SGI person hasn't learnt from past mistakes. IRIX is<br />unstable, and unmaintainable, and please just face it - it's because SGI<br />had the "cool feature of the day" disease.<br /><br />Thread-private mappings WILL NOT HAPPEN. You can obviously do them in<br />SGI Linux, but that way lies madness, and it's something I'll keep<br />pointing out in public. <br /><br />You can have thread-private _pointers_. Just have different mappings of<br />the same hardware context if you have to, and just have different<br />pointers to it in different threads.<br /><br />&gt;He is totally right.The DRE (Direct rendering engine) in<br />&gt;drivers/sgi/char/graphics.c is severly broken.<br /><br />However, thread-private mappings are FUNDAMENTALLY broken. They<br />completely break the whole point of having a thread in the first place,<br />and I can only suggest that if you want them you should look at this<br />great concept that was invented, oh, thirty years ago by people more<br />intelligent than you or I. <br /><br />Namely "fork()". Which gives you the tread-private mapping you want.<br /><br />If you want threads with shared address spaces, then make them SHARED. <br />None of this private stuff.  It's not on the table, and it won't be. <br />I've explained to people why before, and I bet I'll end up explaining<br />again, but the short and sweet of it is that you CANNOT do<br />thread-private mappings without losing most of the performance advatages<br />of a thread in the first place.<br /><br />And once you lose the performance-advantage of threads, not all that<br />much else remains. Threads certainly aren't any easier to program than<br />processes...<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
