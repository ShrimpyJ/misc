    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/7/9/133">First message in thread</a></li><li><a href="/lkml/1999/7/16/5">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/16/14">David Hinds</a><ul><li class="origin"><a href="/lkml/1999/7/16/86">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/16/86">Craig Milo Rogers</a><ul><li><a href="/lkml/1999/7/16/98">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1999/7/16/147">Jonathan Walther</a><ul><li><a href="/lkml/1999/7/16/150">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1999/7/19/24">Pavel Machek</a></li><li><a href="/lkml/1999/7/25/54">Richard Henderson</a><ul><li><a href="/lkml/1999/7/25/56">Linus Torvalds</a></li><li><a href="/lkml/1999/7/25/59">"Andre M. Hedrick"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Jul 1999 09:12:38 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: New kernel/resource.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 16 Jul 1999, David Hinds wrote:<br />&gt; &gt; <br />&gt; &gt; They ARE PCI specific. <br />&gt; &gt; <br />&gt; &gt; What's the problem?<br />&gt; <br />&gt; I've still got a laptop on my desk that doesn't have a PCI bus. <br /><br />Ok.<br /><br />You want to be a stickler.<br /><br />If it's the name you object to, then just don't call it PCI. Call it<br />"peanuts".<br /><br />You have two kinds of peanuts: low-fat and regular.<br /><br />The low-fat peanuts you access with "inb/outb", and there are only 65536<br />of them, so you just number them. The regular ones you access with<br />"readw/writew" and there are four billion of them (and because you cannot<br />keep all four billion in your pocket, you have to have an operation you<br />call "ioremap()" to move part of the regular peanut space into your<br />pocket.<br /><br />In any case, they are a resource to you, and they are uniquely identified<br />with a 16-bit and a 32-bit number to you. They do NOT have any hierarchy:<br />low-fat peanut #0 is identical to low-fat peanut #9000 as far as the<br />driver is concerned, so there is NO notion of special kinds of peanuts.<br /><br />In short, you have a flat address space. Everybody knows that flat address<br />spaces are better than segmented ones. You have a FLAT resource. You have<br />one nice resource tree for the low-fat peanuts, and you have one resource<br />tree for the regular ones.<br /><br />In particular, you don't have two resource trees for one and the same<br />resource. Also, you don't try to have a resource tree based on any<br />electrical hierarchy (ie you do NOT try to follow PCI bridges or whatever<br />that are largely invisible from a software standpoint). <br /><br />There is a hierarchical nature to the new resource tree, but that is meant<br />more to be used for "conceptual" hierarchies - for visualization, and for<br />showing logical groupings that actually do show on a sw level.<br /><br />What the peanuts actually are electrically you don't care about, because<br />you really cannot tell a difference. You might as well call them PCI,<br />because all the other cases (the ISA peanuts and the PCMCIA peanuts) can<br />really be seen as just special (often limited) versions of the generic<br />class of PCI peanuts.<br /><br />I just think that "PCI" makes for a much better name than "peanut",<br />wouldnt you agree.<br /><br />I also think it makes for a hell of a better name than<br />"pci_or_isa_or_pcmcia_or_proprietary_bus_that_uses_io_and_readb".<br /><br />No?<br /><br />&gt; Glancing through the kernel tree, use of inb()/outb() seems to be<br />&gt; fairly common on platforms that do not have PCI busses.  On some<br />&gt; platforms, addresses obtained from ioremap() are dereferenced without<br />&gt; using read[bwl] but I don't know if this is kosher or not, as there is<br />&gt; little documentation of such things.<br /><br />There is documentation: Dcumentation/IO-mapping.txt.<br /><br />Accessing a PCI location with a plain C dereference is wrong. It just<br />happens to work on a x86, but it really doesn't work anywhere else. But<br />because the x86 is obviously the most popular platform, and because of<br />historical reasons, many drivers still do it.<br /><br />&gt; On my PCI-based laptop, there are also a dozen or so devices that<br />&gt; reside behind a PCI-to-ISA bus bridge.  They are accessed using<br />&gt; inb/outb and readb/writeb.  It isn't clear to me where their resources<br />&gt; should go, if you want separate resource trees for each bus.  They are<br />&gt; not PCI devices, but they clearly occupy the same flat address space<br />&gt; as real PCI devices.<br /><br />Exacly. "clearly" is the operative word here. You might as well just<br />consider them to be a slightly less capable form of PCI, could you not?<br /><br />And clearly they ARE flat address spaces. Even if the actual hardware has<br />two completely separate PCI buses (ie I'm NOT talking about a bridge here:<br />a PCI-PCI bridge makes ONE bus out of two buses), at least an intel CPU<br />can still only _address_ it as two separate linear regions. So the outside<br />really doesn't matter - regardless of how complex it is, it is going to<br />end up being just a linear resource as far as the CPU is concerned.<br /><br />So instead of using confusing names like "peanut" or "pci_or_isa_or_<br />pcmcia_or_who_the_hell_cares_what_electrical_bus_is_outside_the_cpu_<br />as_we_cannot_see_it_anyway" , I'm just calling it "PCI". Fair enough? It's<br />99% of the interesting market these days.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
