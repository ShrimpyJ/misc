    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/7/9/133">First message in thread</a></li><li><a href="/lkml/1999/7/17/11">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/17/15">(Rogier Wolff)</a><ul><li class="origin"><a href="/lkml/1999/7/17/19">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/17/19">(Rogier Wolff)</a><ul><li><a href="/lkml/1999/7/17/21">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 17 Jul 1999 00:38:34 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: New kernel/resource.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 17 Jul 1999, Rogier Wolff wrote:<br />&gt; &gt; <br />&gt; &gt; No, ioremap() (which is what I assume you're talking about, rather than<br />&gt; &gt; vmalloc())<br />&gt; <br />&gt; No, I was talking about vmalloc. Thinking about it some more, I think<br />&gt; I was confusing virtual and physical adressing space. You're only<br />&gt; talking about the physical adressing space.<br /><br />Yes, so far I've only been talking about physical addressing resources.<br /><br />&gt;					 Now, virtual adressing space<br />&gt; is also a scarce resource. <br /><br />Agreed.<br /><br />In fact, the virtual address resource was really what drove me to actually<br />re-write the resource management. I got patches from sparc people that<br />kind of mis-used (or depending on how you think of it it could be thought<br />of as "extending in architecture-specific areas") the old resource code.<br /><br />They did that exactly because they wanted to keep track of their virtual<br />memory allocations (which they used for ioremap's - so in this case IO<br />_was_ actually a secondary concern).<br /><br />&gt; So, would it make sense to also put the virtual adressing space in a<br />&gt; resource tree? That's where my example belongs. <br />&gt; <br />&gt; Kernel virtual adressing space:<br />&gt; 	0x00000000 - 0xc0000000  Current user process. <br />&gt; 	0xc0000000 - 0xc00a0000  main memory, below 640k<br />&gt; 	0xc00a0000 - 0xc0100000  ISA io memory. <br />&gt; 	0xc0100000 - 0xc4000000  main memory, above 1Mb  (*)<br />&gt; 	0xc4800000 - 0xc8800000  available for ioremap and vmalloc.  (*)<br /><br />Sure.<br /><br />I don't see all that strong a need for it, but the above is certainly not<br />wrong, and it _could_ be useful. Do you have any real application in mind,<br />or do you just want to visualize the current vmallocs in /proc?<br /><br />So yes, a resource tree like you propose definitely makes sense. I just<br />don't want to implement (or accept patches) purely on "makes sense": I<br />really would like to see a real use of it too. Convince me.<br /><br />(Right now there is already the afore-mentioned sparc-specific use for it,<br />but that can be considered to be a "private" resource, and not something<br />that the rest of the kernel ever cares about. Your suggestion would<br />basically make it a "public" resource, and then I want something else than<br />just a single architectures internal implementation as a argument).<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
