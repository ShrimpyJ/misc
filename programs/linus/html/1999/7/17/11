    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/7/9/133">First message in thread</a></li><li><a href="/lkml/1999/7/17/9">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/17/10">(Rogier Wolff)</a><ul><li class="origin"><a href="/lkml/1999/7/17/15">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/17/15">(Rogier Wolff)</a><ul><li><a href="/lkml/1999/7/17/16">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1999/7/17/47">Riley Williams</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Jul 1999 23:56:04 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: New kernel/resource.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 17 Jul 1999, Rogier Wolff wrote:<br />&gt; <br />&gt; Linus, wasn't it your intention to have the Linux "mm" tree grab<br />&gt; <br />&gt;    0x00000000 - 0x000a0000 &amp; <br />&gt;    0x00100000 - 0x04000000(*)    <br /><br />Yes, the memory init code really should do that. <br /><br />I can't honestly claim that this was my "intention". It's obviously the<br />right thing to do, but I never even thought about it, so claiming intent<br />would be lying.<br /><br />But yes, that is definitely how the iomem resource is supposed to be used.<br /><br />&gt; as the "iomem" (commonly known as main memory) regions that it would<br />&gt; handle, leaving the 640k-1M region free for real IOmem? Wouldn't the<br />&gt; vmalloc be supposed to grab:<br />&gt; <br />&gt;    0x04800000 - 0x08800000 ? <br /><br />No, ioremap() (which is what I assume you're talking about, rather than<br />vmalloc()) should not actually grab the region. One reason for that is<br />that ioremap() doesn't even know who it grabs it for, another reason is<br />that it's actually not illegal to have multiple mappings to the same<br />object.<br /><br />It should really be the driver that does the allocation, and after it has<br />allocated the region it should do the remapping to actually get a window<br />into the region.<br /><br />For example, let's say that you have a subsystem like PCMCIA that<br />allocates a region for itself, but it may not actually do the ioremap()<br />because the PCMCIA code is not necessarily ever going to actually _use_<br />that resource itself: it only allocated it so that it has something to<br />give to the real cards when they are actually inserted. The actual<br />low-level driver may be the one who really does the ioremap(), so<br />ioremap() clearly cannot do the allocation as that has been done earlier.<br /><br />Very few drivers actually do the iomem (I'm trying to come to grips with<br />the new name ;) allocation. It didn't use to exist, so it's only been<br />added for a few drivers. If anybody wants to send in driver updates, or<br />the above architecture memory initialization, that would be appreciated.<br /><br />&gt; and things like that? This would make the name "io memory" even too<br />&gt; specific. But still, iomem is in my opinion a much better name than<br />&gt; something that has "pci".<br /><br />Note that "real memory" is actually "io memory" when seen by any PCI bus<br />master device. So "real" is in the eyes of the beholder ;)<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
