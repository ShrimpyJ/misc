    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/7/16/4">First message in thread</a></li><li><a href="/lkml/1999/7/16/76">Andi Kleen</a><ul><li><a href="/lkml/1999/7/16/87">Zack Weinberg</a><ul><li><a href="/lkml/1999/7/16/103">Andi Kleen</a></li></ul></li><li><a href="/lkml/1999/7/17/85">Alon Ziv</a><ul><li><a href="/lkml/1999/7/17/88">Andi Kleen</a></li><li><a href="/lkml/1999/7/17/91">Alon Ziv</a></li><li><a href="/lkml/1999/7/17/99">Zack Weinberg</a><ul><li><a href="/lkml/1999/7/17/100">Tim Hockin</a><ul><li><a href="/lkml/1999/7/17/101">Ulrich Drepper</a></li><li><a href="/lkml/1999/7/17/103">Tim Hockin</a></li></ul></li><li><a href="/lkml/1999/7/18/32">Alon Ziv</a></li></ul></li><li class="origin"><a href="">(Linus Torvalds)</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: kernel thread support - LWP's</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">19 Jul 1999 01:45:18 GMT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;Pine.SOL.4.05.9907172226570.25819-100000&#64;csa.cs.technion.ac.il&gt;,<br />Alon Ziv  &lt;alonz&#64;cs.Technion.AC.IL&gt; wrote:<br />&gt;<br />&gt;I remember someone (David Wragg &lt;dpw&#64;doc.ic.ac.uk&gt;) once mentioned another<br />&gt;new flag idea: a CLONE_SIBLING flag, which will mean that if the new<br />&gt;thread does a clone() the new thread will get the same ppid of the parent.<br />&gt;This (together with the redefinition of the manager thread, above) will<br />&gt;mean that all of the threads report directly to the manager, and any<br />&gt;thread may create another thread _without_ communicating to the manager<br />&gt;(it just creates a new sibling).<br /><br />This sounds like a Good Idea(tm). <br /><br />It's also a lot more straightforward as a concept than is the notion of<br />CLONE_PID, which never got really implemented because it has a ton of<br />subtle issues (I think that CLONE_PID will basically always just remain<br />useful for the initial kernel threads, and what pthreads needs in<br />addition to the CLONE_SIBLING flag is a CLONE_SIGNALS thing).<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
