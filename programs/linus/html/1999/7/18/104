    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/7/17/1">First message in thread</a></li><li><a href="/lkml/1999/7/17/74">Alon Ziv</a><ul><li><a href="/lkml/1999/7/18/96">David Hinds</a><ul><li class="origin"><a href="/lkml/1999/7/18/109">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/18/109">Alon Ziv</a></li></ul></li><li><a href="/lkml/1999/7/18/116">Alon Ziv</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 18 Jul 1999 13:06:56 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: New kernel/resource.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 18 Jul 1999, David Hinds wrote:<br />&gt; <br />&gt; Linus thinks one resource tree is the only way to go because we are<br />&gt; conceptually describing a single resource.  I think two trees are<br />&gt; better, because the only parts of the kernel that care about the<br />&gt; static info are hot plug bus drivers, and because putting this info in<br />&gt; the same tree with the current info will be tricky. <br /><br />Note that =I= would actually prefer for as much information to be in the<br />device resource tree as at all possible.<br /><br />I actually don't like the fact that right now devices tend to populate the<br />tree only when opened - it makes it hard to write a nice utility that<br />shows all IO ports in the system.<br /><br />So what I want to move towards is that the bus scan will populate the full<br />IO (ioport and memory) resource tree, and that drivers themselves would no<br />longer use the resource tree as a "locking facility", which is what a lot<br />of drivers do now.<br /><br />Yes, some buses don't allow for scanning. ISA (without PnP) is the obvious<br />one. For those we don't have any other option than to have the drivers try<br />to probe and insert their information as they find it. But I'll be very<br />happy if that ends up being the rare case rather than the way it is now,<br />where basically _all_ drivers end up trying to populate the resource tree<br />even if we often have better information from the IO scan.<br /><br />I actually think that maybe our largest difference is that you want to try<br />to make your scheme work in the current setup, while what I really want is<br />a _future_ scheme that just does things right - where the resource tree is<br />always up-to-date _regardless_ of the drivers connected. That's what I'd<br />like to aim for..<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
