    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/7/9/133">First message in thread</a></li><li><a href="/lkml/1999/7/15/148">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/15/179">David Hinds</a><ul><li class="origin"><a href="/lkml/1999/7/16/3">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/16/3">David Hinds</a><ul><li><a href="/lkml/1999/7/16/5">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/1999/7/16/33"> yodaiken&#64;chelm ...</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 15 Jul 1999 15:42:52 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: New kernel/resource.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 15 Jul 1999, David Hinds wrote:<br />&gt; <br />&gt; The names "pci_io_resource" and "pci_mem_resource" should really be<br />&gt; changed to be non-bus-specific, because they are not just PCI<br />&gt; resources.<br /><br />Wrong. They are.<br /><br />If somebody has a system with both sbus and PCI, he'd better create the<br />sbus version of the resources.<br /><br />That wasn't how it used to be, but that is how it is now.<br /><br />&gt;	  I'd also disagree with your logic, because there is one<br />&gt; set of resources from the perspective of hardware (i.e., a tree that<br />&gt; represents how transactions are propagated after they leave the CPU),<br />&gt; and one from the perspective of software (i.e., a tree describing how<br />&gt; drivers interact with regions of CPU address space).  The two can<br />&gt; largely be superimposed, but you're representing two fundamentally<br />&gt; different kinds of information.<br /><br />No. There is one kind of resource - the one from the perspective of a<br />driver. Anything else is irrelevant.<br /><br />The Linux way of accessing PCI is though inb/outb() and readb/writeb()<br />interfaces. The "pci_io_resource" and "pci_mem_resource" protect those<br />interfaces, and nothing else. There's a well-defined 1:1 mapping, and NO<br />confusion between the two. (Well, there's some limited confusion because<br />of the "ioremap()" interface, and to make things clear I should mention<br />that the pci memory resource is the area BEFORE the remapping - the<br />remapped values are only to be seen as a "window" into the real resource).<br /><br />I certainly agree that the Linux way of looking at the PCI resources is<br />not the only way. Some people want to change it so that it's not a flat<br />32-bit resource any more - with different PCI buses showing up explicitly.<br />I personally disagree about the complexity, but I see why people might<br />like that.<br /><br />IF we ever do that, then the PCI resources will be split up to be per-bus<br />resources, but I don't see that happening in the near future.<br /><br />&gt; To give one example (there must be others), for some PCMCIA devices,<br />&gt; the PCMCIA bus driver constructs an IO region by concatenating several<br />&gt; bridge IO windows with different functional properties.  From the<br />&gt; hardware perspective, there are several IO resources in play:<br /><br />Irrelevant. You access it with a well-defined and simple flat address<br />space, and that is the only one that actually matters to a driver. <br /><br />If you have code that reliably fully enumerates the hardware, then we'll<br />look at that code and start changing drivers. Backwards compatibility is<br />evil if it results in things that do not make sense.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
