    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/7/9/133">First message in thread</a></li><li><a href="/lkml/1999/7/14/178">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/15/11">David Hinds</a><ul><li class="origin"><a href="/lkml/1999/7/15/124">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/15/124">David Hinds</a><ul><li><a href="/lkml/1999/7/15/148">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/1999/7/15/13">David Lang</a><ul><li><a href="/lkml/1999/7/15/16">David Hinds</a><ul><li><a href="/lkml/1999/7/15/219">David Lang</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 15 Jul 1999 09:12:08 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: New kernel/resource.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 14 Jul 1999, David Hinds wrote:<br />&gt; <br />&gt; Each PCMCIA socket has multiple independently configurable IO windows<br />&gt; that can be placed anywhere (subject to constraints imposed by the<br />&gt; card), so there can't be a global pcmcia_io_resource.<br /><br />So?<br /><br />The resource allocator is designed so that you cannot add sub-resources to<br />things that can't cover them. That gives the 5-second clean implementation<br />to the problem rather than your ugly secondary setup:<br /><br />	allocate_pcmcia_resource(struct resource *res)<br />	{<br />		int error = -ENORES;<br /><br />		for (i = 0; i &lt; pcmcia_resources; i++) {<br />			error = request_resource(pcmcia[i], res);<br />			if (!error)<br />				break;<br />		}<br />		return error;<br />	}<br /><br />	int free_pcmcia_resource(struct resource *res)<br />	{<br />		return release_resource(res);<br />	}<br /><br />and you're done.<br /><br />&gt; Consider: I insert an IDE PCMCIA device.  It is configured with a<br />&gt; single 16-port IO window: inside that 16-port block is the 8-port data<br />&gt; region and a separate control port.  I've got to allocate a 16-port<br />&gt; block of IO space, then tell the IDE driver how to deal with it.  The<br />&gt; ide_register() interface asks for port #'s for the data and control<br />&gt; ports.  I'd need to change the interface to<br />&gt; <br />&gt;   ide_register(&amp;ide_data_resource, data_base,<br />&gt;                &amp;ide_control_resource, control_base)<br />&gt; <br />&gt; (all these are necessary, because the two IO regions may or may not be<br />&gt; in the same contiguous IO window, and offsets of the IDE registers<br />&gt; within these regions are also not fixed).  All such interfaces need to<br />&gt; be updated.<br /><br />I'm not contesting that there may be interface changes.<br /><br />However, I _am_ saying that I'm not going to add STUPID resource<br />allocators to the basline kernel just to avoid interface changes.<br /><br />The current simple resources are clean and very expressive.  You can<br />obviously do everything you need with them. If you want to do<br />pre-allocation, you can do that - you can just change your internal<br />resources at any time.<br /><br />You could pre-allocate all your resources at bootup time, and then when<br />the pcmcia driver wants to re-allocate a region it just finds one of the<br />pre-allocated areas and then just changes the "name" pointer (and PCMCIA<br />can do all the resource tracking internally).<br /><br />I gave you a clean interface. Leave it that way.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
