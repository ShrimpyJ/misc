    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/1999/7/31/53">First message in thread</a></li><li><a href="/lkml/1999/7/31/60">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/31/63">Ingo Molnar</a><ul><li><a href="/lkml/1999/7/31/81">Ingo Molnar</a><ul><li><a href="/lkml/1999/8/1/48">Andrea Arcangeli</a><ul><li><a href="/lkml/1999/8/2/115">Ingo Molnar</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/1999/7/31/69">Benno Senoner</a><ul><li><a href="/lkml/1999/7/31/72">Ingo Molnar</a></li><li><a href="/lkml/1999/7/31/88">Linus Torvalds</a><ul><li><a href="/lkml/1999/7/31/94"> yodaiken&#64;chelm ...</a><ul><li><a href="/lkml/1999/7/31/98">Steve Underwood</a></li></ul></li><li><a href="/lkml/1999/8/1/1">"Christopher T. Lansdown"</a><ul><li><a href="/lkml/1999/8/1/46">Andrea Arcangeli</a></li></ul></li></ul></li><li><a href="/lkml/1999/8/1/23">Ralf Baechle</a><ul><li><a href="/lkml/1999/8/2/12">Keith Owens</a><ul><li><a href="/lkml/1999/8/2/51"> yodaiken&#64;chelm ...</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 31 Jul 1999 17:34:32 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Scheduling latencies news: less RAM = less latency</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 31 Jul 1999, Ingo Molnar wrote:<br />&gt; <br />&gt; On Sat, 31 Jul 1999, Linus Torvalds wrote:<br />&gt; <br />&gt; &gt; prune_dcache() I can believe. But the report was about d_lookup(). So<br />&gt; &gt; somebody is using bad profiling information, and that's dangerous.<br />&gt; <br />&gt; sure - d_lookup() is definitely bogus.<br /><br />Note that I suspect that prune_dcache() being a problem spot is probably<br />entirely valid, but for all the wrong reasons.<br /><br />For example, I suspect that you can find "free_inodes()" very high on your<br />profiles if you start really looking. We have a few bad behaviour corner<br />cases right now that aren't actually all that hard to trigger: because the<br />new code (rightly) refuses to free inodes when there are pages associated<br />with them (2.2.x used to just force-free the pages), the logic to handle<br />"max_inodes" realy is fairly broken.<br /><br />That brokenness probably feeds over into prune_dcache(). We try<br />desperately to free inodes, but we can't because a lot of them have pages<br />associated with them, and that in turn makes us do bad things with the<br />dcache too (the inode free logic thinks that the reason the inodes are<br />locked down is a dcache reference - something that _used_ to be true).<br /><br />So you end up trying to prune the dcache even when the dcache really<br />doesn't need to be pruned at all, and in situtations where it might not<br />actually be a good idea (again, the dcache pruning refuses to prune an<br />entry with an inode that has active pages...)<br /><br />I've considered just getting rid of the max_inodes thing. The only reason<br />it exists is because we currently don't free the inodes due to memory<br />fragmentation, so we need to artifically cut off the inode supply at some<br />point. We might want to try just using kmalloc/kfree (or a specialized<br />slab thing), but I suspect that will waste much more memory than we do<br />now. It may be worth trying, though.<br /><br />If you're really doing tests in this area, that's something worth looking<br />into, I suspect. I bet you'll have a much harder time triggering dcache<br />problems.<br /><br />&gt; i agree - I wanted to have something for 2.2 for people to test - i wanted<br />&gt; to cure symptoms first, we have way too many latency sources right now and<br />&gt; i first wanted to get something that can be tested. I think that the<br />&gt; uaccess.h changes are too intrusive as well - i'll rework these things.<br /><br />Note that the "si_meminfo()" thing really started its life as a debugging<br />check: verifying that the free pages count actually matched what you got<br />if you counted the pages by hand.<br /><br />It was later dis-used from that capacity, as it's not even correct:<br />si_meminfo gets the wrong results for pages that are part of multi-page<br />allocations (but we didn't use to support multi-page allocations<br />originally). But in the meantime it had been hooked into sys_getinfo(),<br />and thus it stayed on, even though it really is a completely broken piece<br />of code.<br /><br />It's really ridiculous. The only thing si_meminfo really gets us is the<br />number of shared pages, and to calculate that it often uses about 10% of<br />the CPUtime when you have "xosview" active or something like that. We<br />could trivially keep track of the number of shared pages on the fly, but<br />I've been lazy.<br /><br />But getting rid of some of these problems might be valid on 2.2.x too.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
