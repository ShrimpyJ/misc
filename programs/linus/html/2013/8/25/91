    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/8/21/519">First message in thread</a></li><li><a href="/lkml/2013/8/25/78">Linus Torvalds</a><ul><li><a href="/lkml/2013/8/25/88">Oleg Nesterov</a><ul><li class="origin"><a href="/lkml/2013/8/26/342">Linus Torvalds</a><ul><li><a href="/lkml/2013/8/26/342">Oleg Nesterov</a><ul><li><a href="/lkml/2013/8/26/367">Oleg Nesterov</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 25 Aug 2013 13:05:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: /proc/pid/fd &amp;&amp; anon_inode_fops</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Aug 25, 2013 at 12:48 PM, Oleg Nesterov &lt;oleg&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; Or pid_revalidate(), but my concern is task_dumpable() logic.<br />&gt;<br />&gt; pid_revalidate() does inode-&gt;i_*id = GLOBAL_ROOT_*ID if task_dumpable()<br />&gt; fails, but it can fail simply because -&gt;mm = NULL.<br />&gt;<br />&gt; This means that almost everything in /proc/zombie-pid/ becomes root.<br />&gt; Doesn't really hurt, but for what? Looks a bit strange imho.<br /><br />The zombie case shouldn't be relevant, because a zombie will have<br />closed all the file descriptors anyway, so they no longer exist.<br /><br />That said, task_dumpable isn't wonderful, and I suspect we could drop<br />that logic entirely in the tid-fd case if we just use f_cred.<br /><br />The reason we have task_dumpable is exactly because we use the task<br />credentials, and they may not really be relevant to the file<br />credentials. IOW, it's there to protect against execve'ing a suid<br />program that opens some protected file and then in setuid()'s back the<br />the original user after having done the critical stuff.  But<br />file-&gt;f_cred is exactly about the credentials at the time of the open,<br />so it should make things like that irrelevant.<br /><br />            Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
