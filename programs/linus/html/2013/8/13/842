    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/8/12/161">First message in thread</a></li><li><a href="/lkml/2013/8/13/438">Linus Torvalds</a><ul><li><a href="/lkml/2013/8/13/450">Ingo Molnar</a><ul><li><a href="/lkml/2013/8/13/491">Peter Zijlstra</a></li><li><a href="/lkml/2013/8/13/763">"H. Peter Anvin"</a></li></ul></li><li><a href="/lkml/2013/8/13/760">Peter Zijlstra</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 13 Aug 2013 09:38:09 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] per-cpu preempt_count</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Aug 13, 2013 at 9:29 AM, Peter Zijlstra &lt;peterz&#64;infradead.org&gt; wrote:<br />&gt;<br />&gt; The inverted need_resched that gives decl+jnz idea from Ingo should do<br />&gt; it though.<br /><br />I agree that that is a good approach.<br /><br />&gt; Not entirely sure I understand your MSB + jns suggestion:<br />&gt;<br />&gt;   0x80000002 - 1 = 0x80000001<br />&gt;<br />&gt; Both are very much signed and neither wants to cause a reschedule.<br /><br />The thing is, we don't check the preempt count even currently, so the<br />above isn't fatal. The "need preemption" bit being set (or reset with<br />the reverse bit meaning) should be the unusual case with preemption<br />(you have to hit the race), *and* it should be unusual to have deeply<br />nested preemption anyway, so it's fine to test that in the slow path<br />(and we do: preempt_schedule() checks the preempt count being zero and<br />irqs being disabled, *exactly* because the preemption enable check<br />isn't precise).<br /><br />But avoiding a few sloppy cases is certainly good, even if they are<br />unusual, so I do like the reversed bit approach. It also allows us to<br />pick any arbitrary bit, although I'm not sure that matters much.<br /><br />               Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
