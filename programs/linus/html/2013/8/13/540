    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/7/11/709">First message in thread</a></li><li><a href="/lkml/2013/8/2/612">Nathan Zimmer</a><ul><li><a href="/lkml/2013/8/2/604">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/2/605">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/2/606">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/2/611">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/2/615">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/3/107">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/5/152">Ingo Molnar</a></li><li><a href="/lkml/2013/8/12/562">Nathan Zimmer</a><ul><li><a href="/lkml/2013/8/12/554">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/12/556">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/12/558">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/12/560">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/12/561">Nathan Zimmer</a></li><li><a href="/lkml/2013/8/13/251">Ingo Molnar</a></li><li class="origin"><a href="/lkml/2013/8/13/550">Linus Torvalds</a><ul><li><a href="/lkml/2013/8/13/550">"H. Peter Anvin"</a></li><li><a href="/lkml/2013/8/13/558">Mike Travis</a><ul><li><a href="/lkml/2013/8/13/597">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2013/8/16/308">Dave Hansen</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 13 Aug 2013 10:09:34 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC v3 0/5] Transparent on-demand struct page initialization embedded in the buddy allocator</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Aug 12, 2013 at 2:54 PM, Nathan Zimmer &lt;nzimmer&#64;sgi.com&gt; wrote:<br />&gt;<br />&gt; As far as extra overhead. We incur an extra function call to<br />&gt; ensure_page_is_initialized but that is only really expensive when we find<br />&gt; uninitialized pages, otherwise it is a flag check once every PTRS_PER_PMD.<br />&gt; To get a better feel for this we ran two quick tests.<br /><br />Sorry for coming into this late and for this last version of the<br />patch, but I have to say that I'd *much* rather see this delayed<br />initialization using another data structure than hooking into the<br />basic page allocation ones..<br /><br />I understand that you want to do delayed initialization on some TB+<br />memory machines, but what I don't understand is why it has to be done<br />when the pages have already been added to the memory management free<br />list.<br /><br />Could we not do this much simpler: make the early boot insert the<br />first few gigs of memory (initialized) synchronously into the free<br />lists, and then have a background thread that goes through the rest?<br /><br />That way the MM layer would never see the uninitialized pages.<br /><br />And I bet that *nobody* cares if you "only" have a few gigs of ram<br />during the first few minutes of boot, and you mysteriously end up<br />getting more and more memory for a while until all the RAM has been<br />initialized.<br /><br />IOW, just don't call __free_pages_bootmem() on all the pages al at<br />once. If we have to remove a few __init markers to be able to do some<br />of it later, does anybody really care?<br /><br />I really really dislike this "let's check if memory is initialized at<br />runtime" approach.<br /><br />           Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
