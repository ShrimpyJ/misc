    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/8/5/722">First message in thread</a></li><li><a href="/lkml/2013/8/30/546">Linus Torvalds</a><ul><li><a href="/lkml/2013/8/31/191">Al Viro</a><ul><li class="origin"><a href="/lkml/2013/8/31/200">Linus Torvalds</a><ul><li><a href="/lkml/2013/8/31/200">Al Viro</a><ul><li><a href="/lkml/2013/8/31/202">Al Viro</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 31 Aug 2013 15:49:31 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v7 1/4] spinlock: A new lockref structure for lockless update of refcount</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Aug 31, 2013 at 2:23 PM, Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt;<br />&gt; Hmm...  OK, most of these suckers are actually doing just one component;<br />&gt; we can look into 'print the ancestors as well' later, but the minimal<br />&gt; variant would be something like this and it already covers a lot of those<br />&gt; guys.  Comments?<br /><br />Doesn't look wrong, but remember the /proc debugging thing? We<br />definitely wanted more than just one pathname component, and I don't<br />think that's completely rare.<br /><br />So I think it would be better to prepare for that, and simply print to<br />a local buffer, and then use the "string()" function on the end<br />result. Rather than do it directly from the dentry like you do, and<br />then having to do that widen() thing because you couldn't do the<br />strnlen() that that code wanted..<br /><br />Hmm?<br /><br />          Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
