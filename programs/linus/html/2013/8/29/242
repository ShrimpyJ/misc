    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/8/5/722">First message in thread</a></li><li><a href="/lkml/2013/8/29/18">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2013/8/29/130">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2013/8/29/349">Linus Torvalds</a><ul><li><a href="/lkml/2013/8/29/349">Linus Torvalds</a><ul><li><a href="/lkml/2013/8/29/504">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2013/8/30/425">Peter Zijlstra</a><ul><li><a href="/lkml/2013/8/30/420">Linus Torvalds</a></li><li><a href="/lkml/2013/8/30/427">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Aug 2013 09:43:07 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v7 1/4] spinlock: A new lockref structure for lockless update of refcount</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Aug 29, 2013 at 12:00 AM, Ingo Molnar &lt;mingo&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; Lockrefs are combiend spinlock+count objects that fit into a<br />&gt; MESI-cacheline and can be accessed via the cmpxchg8b() primitives and<br />&gt; allow smart combined operations on the count field without necessarily<br />&gt; taking the lock.<br /><br />Side note: I'm going to finally build a new desktop, and made sure<br />that I got a CPU that supports TSX. I'm not convinced transactional<br />memory ends up being usable in general without hardware support for<br />predicting transaction success, but using transactions to do small<br />specialized things like this may well be worth it. Especially since<br />the cmpxchg approach has some issues.<br /><br />We'll see. The real problem is that I'm not sure if I can even see the<br />scalability issue on any machine I actually personally want to use<br />(read: silent). On my current  system I can only get up to 15%<br />_raw_spin_lock by just stat'ing the same file over and over and over<br />again from lots of threads.<br /><br />             Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
