    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/8/5/722">First message in thread</a></li><li><a href="/lkml/2013/8/30/78">Sedat Dilek</a><ul><li><a href="/lkml/2013/8/30/81">Sedat Dilek</a></li><li><a href="/lkml/2013/8/30/117">Sedat Dilek</a><ul><li><a href="/lkml/2013/8/30/123">Ingo Molnar</a><ul><li><a href="/lkml/2013/8/30/124">Sedat Dilek</a><ul><li><a href="/lkml/2013/8/30/130">Sedat Dilek</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2013/8/30/354">Linus Torvalds</a><ul><li><a href="/lkml/2013/8/30/354">Sedat Dilek</a><ul><li><a href="/lkml/2013/8/30/364">Steven Rostedt</a></li><li><a href="/lkml/2013/8/30/374">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 30 Aug 2013 08:34:46 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v7 1/4] spinlock: A new lockref structure for lockless update of refcount</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Aug 30, 2013 at 2:27 AM, Sedat Dilek &lt;sedat.dilek&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; Here on Ubuntu/precise v12.04.3 AMD64 I get these numbers for total loops:<br />&gt;<br />&gt; lockref:  w/o patch | w/ patch<br />&gt; ======================<br />&gt; Run #1: 2.688.094 | 2.643.004<br />&gt; Run #2: 2.678.884 | 2.652.787<br />&gt; Run #3: 2.686.450 | 2.650.142<br />&gt; Run #4: 2.688.435 | 2.648.409<br />&gt; Run #5: 2.693.770 | 2.651.514<br /><br />Yes, so this is pretty much expected.<br /><br />If you don't have a very high core count (you don't mention your<br />system, but that's pretty - I get ~65 million repetitions in 10<br />seconds on my i5-670), the cmpxchg will not help - because you don't<br />actually see the bad "wait on spinlock" behavior in the first place.<br /><br />And a "cmpxchg" is slightly slower than the very optimized spinlocks,<br />and has that annoying "read original value" first issue too. So the<br />patch can make things a bit slower, although it will depends on the<br />microarchitecture (and as mentioned elsewhere, there are other things<br />that can make a bigger difference boot-to-boot - dentry allocation<br />details etc can have "sticky" performance impact).<br /><br />So we may take a small hit in order to then *not* have horrible<br />scalability at the high end.<br /><br />               Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
