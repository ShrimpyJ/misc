    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/10/17/659">First message in thread</a></li><li><a href="/lkml/2013/10/17/659">Davidlohr Bueso</a><ul><li><a href="/lkml/2013/10/17/647">Davidlohr Bueso</a></li><li><a href="/lkml/2013/10/17/648">Davidlohr Bueso</a></li><li><a href="/lkml/2013/10/17/650">Davidlohr Bueso</a></li><li><a href="/lkml/2013/10/17/658">Linus Torvalds</a></li><li><a href="/lkml/2013/10/18/8">Ingo Molnar</a><ul><li><a href="/lkml/2013/10/20/139">Davidlohr Bueso</a><ul><li><a href="/lkml/2013/10/21/12">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/2013/10/18/10">Richard Weinberger</a></li><li><a href="/lkml/2013/10/20/134">Davidlohr Bueso</a><ul><li><a href="/lkml/2013/10/23/139">	walken&#64;google ...</a><ul><li><a href="/lkml/2013/10/24/440">Davidlohr Bueso</a></li></ul></li></ul></li><li><a href="/lkml/2013/10/22/248">	walken&#64;google ...</a><ul><li><a href="/lkml/2013/10/22/353">Andy Lutomirski</a><ul><li><a href="/lkml/2013/10/23/164">Michel Lespinasse</a><ul><li><a href="/lkml/2013/10/23/443">Andy Lutomirski</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2013/10/22/317">Linus Torvalds</a><ul><li><a href="/lkml/2013/10/22/317">Michel Lespinasse</a></li></ul></li><li><a href="/lkml/2013/10/22/583">Davidlohr Bueso</a></li></ul></li><li><a href="/lkml/2013/10/23/133">	walken&#64;google ...</a></li><li><a href="/lkml/2013/10/23/137">Vlastimil Babka</a></li><li><a href="/lkml/2013/10/23/153">	walken&#64;google ...</a></li><li><a href="/lkml/2013/11/4/468">Davidlohr Bueso</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 22 Oct 2013 17:20:40 +0100</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/3] mm,vdso: preallocate new vmas</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Oct 22, 2013 at 4:48 PM,  &lt;walken&#64;google.com&gt; wrote:<br /><br />&gt;<br />&gt; Generally the problems I see with mmap_sem are related to long latency<br />&gt; operations. Specifically, the mmap_sem write side is currently held<br />&gt; during the entire munmap operation, which iterates over user pages to<br />&gt; free them, and can take hundreds of milliseconds for large VMAs.<br /><br />So this would be the *perfect* place to just downgrade the semaphore<br />from a write to a read.<br /><br />Do the vma ops under the write semaphore, then downgrade it to a<br />read-sem, and do the page teardown with just mmap_sem held for<br />reading..<br /><br />Comments? Anybody want to try that? It should be fairly<br />straightforward, and we had a somewhat similar issue when it came to<br />mmap() having to populate the mapping for mlock. For that case, it was<br />sufficient to just move the "populate" phase outside the lock entirely<br />(for that case, we actually drop the write lock and then take the<br />read-lock and re-lookup the vma, for unmap we'd have to do a proper<br />downgrade so that there is no window where the virtual address area<br />could be re-allocated)<br /><br />The big issue is that we'd have to split up do_munmap() into those two<br />phases, since right now callers take the write semaphore before<br />calling it, and drop it afterwards. And some callers do it in a loop.<br />But we should be fairly easily able to make the *common* case (ie<br />normal "munmap()") do something like<br /><br />    down_write(&amp;mm-&gt;mmap_sem);<br />    phase1_munmap(..);<br />    downgrade_write(&amp;mm-&gt;mmap_sem);<br />    phase2_munmap(..);<br />    up_read(&amp;mm-&gt;mmap_sem);<br /><br />instead of what it does now (which is to just do<br />down_write()/up_write() around do_munmap()).<br /><br />I don't see any fundamental problems, but maybe there's some really<br />annoying detail that makes this nasty (right now we do<br />"remove_vma_list() -&gt; remove_vma()" *after* tearing down the page<br />tables, and since that calls the -&gt;close function, I think it has to<br />be done that way. I'm wondering if any of that code relies on the<br />mmap_sem() being held for exclusively for writing. I don't see why it<br />possibly could, but..<br /><br />So maybe I'm being overly optimistic and it's not as easy as just<br />splitting do_mmap() into two phases, but it really *looks* like it<br />might be just a ten-liner or so.. And if a real munmap() is the common<br />case (as opposed to a do_munmap() that gets triggered by somebody<br />doing a "mmap()" on top of an old mapping), then we'd at least allow<br />page faults from other threads to be done concurrently with tearing<br />down the page tables for the unmapped vma..<br /><br />             Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
