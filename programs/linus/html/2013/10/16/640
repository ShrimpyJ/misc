    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/10/16/258">First message in thread</a></li><li><a href="/lkml/2013/10/16/434">"Jan Beulich"</a><ul><li><a href="/lkml/2013/10/16/467">Linus Torvalds</a><ul><li><a href="/lkml/2013/10/16/457">"Jan Beulich"</a></li><li class="origin"><a href="/lkml/2013/10/17/57">Linus Torvalds</a><ul><li><a href="/lkml/2013/10/17/57">"Jan Beulich"</a></li></ul></li><li><a href="/lkml/2013/10/17/100">Gleb Natapov</a><ul><li><a href="/lkml/2013/10/17/107">"Jan Beulich"</a><ul><li><a href="/lkml/2013/10/17/115">Gleb Natapov</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 16 Oct 2013 11:43:13 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH, RFC] x86-64: properly handle FPU code/data selectors</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Oct 16, 2013 at 9:13 AM, Jan Beulich &lt;JBeulich&#64;suse.com&gt; wrote:<br />&gt;<br />&gt; But again - this isn't being done for ordinary 64-bit applications,<br />&gt; this is only happening for KVM guests. And there not being a<br />&gt; protocol for telling the caller whether a certain context hold<br />&gt; 64-bit offsets or selector/offset pairs shouldn't be a reason to<br />&gt; think of a solution to the problem.<br /><br />So having looked at this some more, I would *really* prefer a<br />different solution. The overwriting of the rip/rdp data just really<br />annoys me.<br /><br />Is there any reason to not just do it like the following instead:<br /><br /> - get rid of the "word_size" thing, instead just add separate<br />"fcs/fos" fields (that do *not* alias with rip/rdp).<br /><br /> - on 64-bit, always use 64-bit ops, exactly the way we do now<br /><br /> - if the resulting rip/rpd is zero in the high bits (and we have<br />reason to believe the values exist at all, so X86_FEATURE_NO_FPU_SEL<br />and the AMD test and/or checking that they aren't zero in the low bits<br />too), do an *additional* fnstenv to the sstack, and then just save the<br />resulting fcs/fos in the non-overlapping things. Use a simple helper<br />function for this (that just gets called after the xsave/fxsave logic)<br /><br /> - same on restore.<br /><br />No games. No "this is the word-size of the thing we've saved in<br />memory". No overlapping "this field means one thing or another".<br /><br />For signal handling, save/restore the new fop/fos thing, so that<br />nobody ever sees the changed format, but FP state gets correctly and<br />fully restored over signals too, not just kernel FP stuff.<br /><br />Hmm? That would make me *much* happier, I suspect.<br /><br />           Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
