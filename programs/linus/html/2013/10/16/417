    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/10/16/258">First message in thread</a></li><li><a href="/lkml/2013/10/16/258">"Jan Beulich"</a><ul><li class="origin"><a href="/lkml/2013/10/16/434">Linus Torvalds</a><ul><li><a href="/lkml/2013/10/16/434">"Jan Beulich"</a><ul><li><a href="/lkml/2013/10/16/467">Linus Torvalds</a><ul><li><a href="/lkml/2013/10/16/457">"Jan Beulich"</a></li><li><a href="/lkml/2013/10/16/640">Linus Torvalds</a></li><li><a href="/lkml/2013/10/17/100">Gleb Natapov</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2013/10/16/439">"H. Peter Anvin"</a><ul><li><a href="/lkml/2013/10/16/490">"Jan Beulich"</a><ul><li><a href="/lkml/2013/10/16/509">"H. Peter Anvin"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 16 Oct 2013 08:19:04 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH, RFC] x86-64: properly handle FPU code/data selectors</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Oct 16, 2013 at 5:00 AM, Jan Beulich &lt;JBeulich&#64;suse.com&gt; wrote:<br />&gt;<br />&gt; The basic idea here is to either use a priori information on the<br />&gt; intended state layout (in the case of 32-bit processes) or "sense" the<br />&gt; proper layout (in the case of KVM guests) by inspecting the already<br />&gt; saved FPU rip/rdp, and reading their actual values in a second save<br />&gt; operation.<br /><br />The rip/rdp thing looks very hacky. And *without* the rip/rdp thing, I<br />think the word-size always matches the TIF32 bit, right?<br /><br />Why wouldn't the high bits be zero even in 64-bit mode? It would seem<br />to be a *major* bug if you are in 64-bit mode but (for example) try to<br />use the low 32-bit of virtual memory (ie something x32-like), and now<br />your patch decides to use the 32-bit layout.<br /><br />As far as I can tell, you actually corrupt rid/rdp in that case<br />(because when you write the fcs thing, it overwrites the high bits of<br />rip, and fos overwrites the high bits of rdp). So now bits that<br />*should* be zero are not.<br /><br />So you're basically trying to save some old state by corrupting new<br />state instead.<br /><br />Am I overlooking something?<br /><br />                Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
