    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/8/1/737">First message in thread</a></li><li><a href="/lkml/2013/9/5/572">Behan Webster</a><ul><li><a href="/lkml/2013/9/23/483">Felipe Balbi</a><ul><li><a href="/lkml/2013/9/23/494">Behan Webster</a></li><li class="origin"><a href="/lkml/2013/9/23/505">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/23/505">Behan Webster</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 23 Sep 2013 13:08:50 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] usb: gadget LLVMLinux: Removing the use of VLAIS from the gadget driver</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Sep 23, 2013 at 12:30 PM, Felipe Balbi &lt;balbi&#64;ti.com&gt; wrote:<br />&gt;<br />&gt; I remember there was a discussion of not dropping variable length array<br />&gt; support, wasn't there ?<br /><br />We should definitely drop it. The feature is an abomination. I thought<br />gcc only allowed them at the end of structs, in the middle of a struct<br />it's just f*cking insane beyond belief.<br /><br />That said, for *this* particular case, that USB widget driver already<br />does a ton of small kmalloc's and then remembers the addresses<br />independently. People may not care about performance, but it *might*<br />be a good idea to just do one kmalloc()/kfree(), and then still have<br />those pointer variables, but just be offsets within that one<br />allocation.<br /><br />That's what gcc has to basically do for that thing internally<br />*anyway*, just hidden behind a horrible construct that should never<br />have existed.<br /><br />              Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
