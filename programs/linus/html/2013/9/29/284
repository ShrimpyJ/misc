    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/9/27/477">First message in thread</a></li><li><a href="/lkml/2013/9/28/160">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/28/165">Andi Kleen</a><ul><li><a href="/lkml/2013/9/28/171">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2013/9/28/194">Ingo Molnar</a><ul><li><a href="/lkml/2013/9/28/174">Linus Torvalds</a></li><li><a href="/lkml/2013/9/28/178">Ingo Molnar</a></li><li><a href="/lkml/2013/9/28/179">Linus Torvalds</a></li><li><a href="/lkml/2013/9/28/180">Ingo Molnar</a></li><li><a href="/lkml/2013/9/28/183">Ingo Molnar</a></li><li><a href="/lkml/2013/9/28/185">Ingo Molnar</a></li><li><a href="/lkml/2013/9/30/53">Andrea Arcangeli</a><ul><li><a href="/lkml/2013/9/30/304">Jerome Glisse</a></li><li><a href="/lkml/2013/9/30/385">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/30/486">Andrea Arcangeli</a></li></ul></li><li><a href="/lkml/2013/9/30/463">Andi Kleen</a><ul><li><a href="/lkml/2013/9/30/481">Jerome Glisse</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/105">Peter Zijlstra</a><ul><li><a href="/lkml/2013/9/30/383">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/30/394">Peter Zijlstra</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/211">Peter Zijlstra</a></li><li><a href="/lkml/2013/9/30/229">Peter Zijlstra</a></li><li><a href="/lkml/2013/9/30/386">Waiman Long</a><ul><li><a href="/lkml/2013/10/1/34">Ingo Molnar</a><ul><li><a href="/lkml/2013/10/1/360">Waiman Long</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/407">Tim Chen</a><ul><li><a href="/lkml/2013/9/30/464">Peter Zijlstra</a><ul><li><a href="/lkml/2013/9/30/488">Tim Chen</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/411">Andrew Morton</a><ul><li><a href="/lkml/2013/9/30/417">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/29/280">Davidlohr Bueso</a><ul><li class="origin"><a href="/lkml/2013/9/29/293">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/29/293">Davidlohr Bueso</a><ul><li><a href="/lkml/2013/9/29/296">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2013/9/30/24">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/29/311">Michel Lespinasse</a><ul><li><a href="/lkml/2013/9/30/19">Ingo Molnar</a><ul><li><a href="/lkml/2013/9/30/371">Waiman Long</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/106">Peter Zijlstra</a><ul><li><a href="/lkml/2013/10/1/37">Ingo Molnar</a><ul><li><a href="/lkml/2013/10/1/43">Peter Zijlstra</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 29 Sep 2013 16:26:02 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] rwsem: reduce spinlock contention in wakeup code path</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Sep 29, 2013 at 4:06 PM, Davidlohr Bueso &lt;davidlohr&#64;hp.com&gt; wrote:<br />&gt;&gt;<br />&gt;&gt; Btw, I really hate that thing. I think we should turn it back into a<br />&gt;&gt; spinlock. None of what it protects needs a mutex or an rwsem.<br />&gt;<br />&gt; The same should apply to i_mmap_mutex, having a similar responsibility<br />&gt; to the anon-vma lock with file backed pages. A few months ago I had<br />&gt; suggested changing that lock to rwsem, giving some pretty reasonable<br />&gt; performance improvement numbers.<br />&gt;<br />&gt; <a href="https://lwn.net/Articles/556342/">http://lwn.net/Articles/556342/</a><br /><br />Ok, that's pretty convincing too.<br /><br />Side note: are you sure that the i_mmap_mutex needs to be a sleeping<br />lock at all? It's documented to nest outside the anon_vma-&gt;rwsem, so<br />as long as that is a sleeping lock, the i_mmap_mutex needs to be one<br />too, but looking at the actual users, most of them seem to be *very*<br />similar to the anon_vma-&gt;rwsem users. It is a very close cousin to the<br />anon_vma-&gt;rwsem, after all (just for file-backed pages rather than<br />anonymous ones). No?<br /><br />I dunno. Maybe the ranges are too big and it really has latency<br />issues, the few I looked at looked like fairly trivial interval-tree<br />operations, though.<br /><br />And your numbers for Ingo's patch:<br /><br />&gt; After testing Ingo's anon-vma rwlock_t conversion (v2) on a 8 socket, 80<br />&gt; core system with aim7, I am quite surprised about the numbers -<br />&gt; considering the lack of queuing in rwlocks. A lot of the tests didn't<br />&gt; show hardly any difference, but those that really contend this lock<br />&gt; (with high amounts of users) benefited quite nicely:<br />&gt;<br />&gt; Alltests: +28% throughput after 1000 users and runtime was reduced from<br />&gt; 7.2 to 6.6 secs.<br />&gt;<br />&gt; Custom: +61% throughput after 100 users and runtime was reduced from 7<br />&gt; to 4.9 secs.<br />&gt;<br />&gt; High_systime: +40% throughput after 1000 users and runtime was reduced<br />&gt; from 19 to 15.5 secs.<br />&gt;<br />&gt; Shared: +30.5% throughput after 100 users and runtime was reduced from<br />&gt; 6.5 to 5.1 secs.<br />&gt;<br />&gt; Short: Lots of variance in the numbers, but avg of +29% throughput - no<br />&gt; particular performance degradation either.<br /><br />Are just overwhelming, in my opinion. The conversion *from* a spinlock<br />never had this kind of support behind it.<br /><br />Btw, did anybody run Ingo's patch with lockdep and the spinlock sleep<br />debugging code to verify that we haven't introduced any problems wrt<br />sleeping since the lock was converted into a rw-semaphore?<br /><br />Because quite frankly, considering these kinds of numbers, I really<br />don't see how we could possibly make excuses for keeping that<br />rw-semaphore unless there is some absolutely _horrible_ latency issue?<br /><br />            Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
