    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/9/28/195">First message in thread</a></li><li><a href="/lkml/2013/9/28/195">Al Viro</a><ul><li class="origin"><a href="/lkml/2013/9/29/9">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/29/9">Al Viro</a><ul><li><a href="/lkml/2013/9/29/76">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/29/85">Al Viro</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Sep 2013 13:43:49 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [rfc][possible solution] RCU vfsmounts</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Sep 28, 2013 at 1:27 PM, Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt;         FWIW, I think I have a kinda-sorta solution for that and I'd like<br />&gt; to hear your comments on that.  I want to replace vfsmount_lock with seqlock<br />&gt; and store additional seq number in nameidata, set to vfsmount_seq in the<br />&gt; beginning and rechecked in unlazy_walk/complete_walk.<br /><br />Yes, that would be lovely.<br /><br />&gt;         The obvious variant would be to have unlazy_walk/complete_walk to<br />&gt; grab refcount, check vfsmount_seq and mntput on mismatch.  The trouble<br />&gt; with that is race with what would've been the final mntput() done by<br />&gt; umount(2); complete_walk() would drop that temporary reference and<br />&gt; fail, all right, but... we would get a umount(2) returning without having<br />&gt; actually shut the filesystem down.  Said shutdown would happen in whoever<br />&gt; had been doing pathname resolution that stepped into the race.<br /><br />Sounds reasonable to to me.<br /><br />Side note: I really wish there was some way to avoid having to<br />finalize the vfsmount entirely for some common things. For example,<br />"[l]stat[at]()" really doesn't need it for the common cases (network<br />filesystems may need to revalidate), and is a very critical operation,<br />and we *could* just look up the inode under RCU and never finalize the<br />dentry _or_ the vfsmount. However, very annoyingly, the security layer<br />wants the vfsmount, and we don't know if that is RCU-safe...<br /><br />                Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
