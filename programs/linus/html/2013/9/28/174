    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/9/27/477">First message in thread</a></li><li><a href="/lkml/2013/9/28/160">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/28/165">Andi Kleen</a><ul><li><a href="/lkml/2013/9/28/171">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2013/9/28/194">Ingo Molnar</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2013/9/28/178">Ingo Molnar</a></li><li><a href="/lkml/2013/9/28/179">Linus Torvalds</a></li><li><a href="/lkml/2013/9/28/180">Ingo Molnar</a></li><li><a href="/lkml/2013/9/28/183">Ingo Molnar</a></li><li><a href="/lkml/2013/9/28/185">Ingo Molnar</a></li><li><a href="/lkml/2013/9/30/53">Andrea Arcangeli</a><ul><li><a href="/lkml/2013/9/30/304">Jerome Glisse</a></li><li><a href="/lkml/2013/9/30/385">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/30/486">Andrea Arcangeli</a></li></ul></li><li><a href="/lkml/2013/9/30/463">Andi Kleen</a><ul><li><a href="/lkml/2013/9/30/481">Jerome Glisse</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/105">Peter Zijlstra</a><ul><li><a href="/lkml/2013/9/30/383">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/30/394">Peter Zijlstra</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/211">Peter Zijlstra</a></li><li><a href="/lkml/2013/9/30/229">Peter Zijlstra</a></li><li><a href="/lkml/2013/9/30/386">Waiman Long</a><ul><li><a href="/lkml/2013/10/1/34">Ingo Molnar</a><ul><li><a href="/lkml/2013/10/1/360">Waiman Long</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/407">Tim Chen</a><ul><li><a href="/lkml/2013/9/30/464">Peter Zijlstra</a><ul><li><a href="/lkml/2013/9/30/488">Tim Chen</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/411">Andrew Morton</a><ul><li><a href="/lkml/2013/9/30/417">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/29/280">Davidlohr Bueso</a><ul><li><a href="/lkml/2013/9/29/284">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/29/293">Davidlohr Bueso</a><ul><li><a href="/lkml/2013/9/29/296">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2013/9/30/24">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/29/311">Michel Lespinasse</a><ul><li><a href="/lkml/2013/9/30/19">Ingo Molnar</a><ul><li><a href="/lkml/2013/9/30/371">Waiman Long</a></li></ul></li></ul></li><li><a href="/lkml/2013/9/30/106">Peter Zijlstra</a><ul><li><a href="/lkml/2013/10/1/37">Ingo Molnar</a><ul><li><a href="/lkml/2013/10/1/43">Peter Zijlstra</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Sep 2013 12:33:36 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] rwsem: reduce spinlock contention in wakeup code path</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Sep 28, 2013 at 12:21 PM, Ingo Molnar &lt;mingo&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; If we do that then I suspect the next step will be queued rwlocks :-/ The<br />&gt; current rwlock_t implementation is rather primitive by modern standards.<br />&gt; (We'd probably have killed rwlock_t long ago if not for the<br />&gt; tasklist_lock.)<br /><br />Yeah, I'm not happy about or rwlocks. That's one lock that currently<br />is so broken that I think we could easily argue for making that one<br />queued.<br /><br />Waiman had a qrwlock series that looked reasonable, and I think his<br />later versions were drop-in replacements (ie they automatically just<br />did the RightThing(tm) wrt interrupts taking a recursive read lock - I<br />objected to the first versions that required that to be stated<br />explicitly).<br /><br />I think Waiman's patches (even the later ones) made the queued rwlocks<br />be a side-by-side implementation with the old rwlocks, and I think<br />that was just being unnecessarily careful. It might be useful for<br />testing to have a config option to switch between the two, but we<br />might as well go all the way.<br /><br />The old rwlock's really have been a disappointment - they are slower<br />than spinlocks, and seldom/never end up scaling any better.  Their<br />main advantage was literally the irq behavior - allowing readers to<br />happen without the expense of worrying about irq's.<br /><br />              Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
