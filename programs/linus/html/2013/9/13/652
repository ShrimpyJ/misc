    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/9/10/17">First message in thread</a></li><li><a href="/lkml/2013/9/13/611">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/13/623">Linus Torvalds</a></li><li><a href="/lkml/2013/9/13/641">Al Viro</a><ul><li><a href="/lkml/2013/9/13/648">Al Viro</a><ul><li><a href="/lkml/2013/9/13/650">Al Viro</a></li></ul></li><li class="origin"><a href="/lkml/2013/9/13/651">Linus Torvalds</a><ul><li><a href="/lkml/2013/9/13/651">Linus Torvalds</a></li><li><a href="/lkml/2013/9/13/653">Al Viro</a><ul><li><a href="/lkml/2013/9/13/663">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2013/9/13/642">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 13 Sep 2013 16:25:48 -0400</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: linux-next: manual merge of the akpm tree with Linus' tree</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Sep 13, 2013 at 4:00 PM, Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />\&gt;<br />&gt; It is right - for one thing, we are holding the lock on that LRU list,<br />&gt; so list_lru_del() would deadlock right there.  For another, the same<br />&gt; list_lru_walk (OK, list_lru_walk_node()) will do -&gt;nr_items decrement<br />&gt; when we return LRU_REMOVED to it, so we don't want to do it twice.<br />&gt; Plain list_del_init() is correct here.<br /><br />Yes. And I found the opposite bug in one place: when we are collecting<br />dentries by walking the parents etc, we do *not* hold the global RCU<br />lock, so we cannot use the "d_lru_shrink_list()" thing after all. It's<br />correct as far as the internal logic of fs/dcache.c goes, but it<br />violates the global LRU list rules. So I replaced that with a<br />dentry_lru_del() followed by a d_shrink_add() instead.<br /><br />Updated patch attached.<br /><br />                        Linus<br />[unhandled content-type:application/octet-stream]</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
