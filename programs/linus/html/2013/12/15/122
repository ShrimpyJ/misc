    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/12/10/629">First message in thread</a></li><li><a href="/lkml/2013/12/10/629">Matias Bjorling</a><ul><li class="origin"><a href="/lkml/2013/12/15/124">Linus Torvalds</a><ul><li><a href="/lkml/2013/12/15/124">Jens Axboe</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 15 Dec 2013 12:17:24 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] null_blk: mem garbage on NUMA systems during init</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Jens, ping?<br /><br />Patch looks fine, and it looks completely bogus to set<br /><br />     null_mq_reg.nr_hw_queues<br /><br />to 'nr_online_nodes', when we've potentially done "setup_queues()"<br />with just a single queue.<br /><br />So I'm going to apply this as-is, I'm just wondering why I haven't<br />heard anything from you..<br /><br />                     Linus<br /><br /><br />On Tue, Dec 10, 2013 at 7:50 AM, Matias Bjorling &lt;m&#64;bjorling.me&gt; wrote:<br />&gt; For NUMA systems, initializing the blk-mq layer and using per node hctx. We<br />&gt; initialize submit queues to 1, while blk-mq nr_hw_queues is initialized to the<br />&gt; number of NUMA nodes.<br />&gt;<br />&gt; This makes the null_init_hctx function overwrite memory outside of what it<br />&gt; allocated. In my case it lead to writing garbage into struct request_queue's<br />&gt; mq_map.<br />&gt;<br />&gt; Signed-off-by: Matias Bjorling &lt;m&#64;bjorling.me&gt;<br />&gt; ---<br />&gt;  drivers/block/null_blk.c | 8 ++++----<br />&gt;  1 file changed, 4 insertions(+), 4 deletions(-)<br />&gt;<br />&gt; diff --git a/drivers/block/null_blk.c b/drivers/block/null_blk.c<br />&gt; index ea192ec..f370fc1 100644<br />&gt; --- a/drivers/block/null_blk.c<br />&gt; +++ b/drivers/block/null_blk.c<br />&gt; &#64;&#64; -495,23 +495,23 &#64;&#64; static int null_add_dev(void)<br />&gt;<br />&gt;         spin_lock_init(&amp;nullb-&gt;lock);<br />&gt;<br />&gt; +       if (queue_mode == NULL_Q_MQ &amp;&amp; use_per_node_hctx)<br />&gt; +               submit_queues = nr_online_nodes;<br />&gt; +<br />&gt;         if (setup_queues(nullb))<br />&gt;                 goto err;<br />&gt;<br />&gt;         if (queue_mode == NULL_Q_MQ) {<br />&gt;                 null_mq_reg.numa_node = home_node;<br />&gt;                 null_mq_reg.queue_depth = hw_queue_depth;<br />&gt; +               null_mq_reg.nr_hw_queues = submit_queues;<br />&gt;<br />&gt;                 if (use_per_node_hctx) {<br />&gt;                         null_mq_reg.ops-&gt;alloc_hctx = null_alloc_hctx;<br />&gt;                         null_mq_reg.ops-&gt;free_hctx = null_free_hctx;<br />&gt; -<br />&gt; -                       null_mq_reg.nr_hw_queues = nr_online_nodes;<br />&gt;                 } else {<br />&gt;                         null_mq_reg.ops-&gt;alloc_hctx = blk_mq_alloc_single_hw_queue;<br />&gt;                         null_mq_reg.ops-&gt;free_hctx = blk_mq_free_single_hw_queue;<br />&gt; -<br />&gt; -                       null_mq_reg.nr_hw_queues = submit_queues;<br />&gt;                 }<br />&gt;<br />&gt;                 nullb-&gt;q = blk_mq_init_queue(&amp;null_mq_reg, nullb);<br />&gt; --<br />&gt; 1.8.3.2<br />&gt;<br />&gt; --<br />&gt; To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />&gt; the body of a message to majordomo&#64;vger.kernel.org<br />&gt; More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />&gt; Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
