    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/12/19/676">First message in thread</a></li><li><a href="/lkml/2013/12/19/676">"tip-bot for H. Peter Anvin"</a><ul><li><a href="/lkml/2013/12/19/693">Ingo Molnar</a><ul><li><a href="/lkml/2013/12/19/732">Peter Zijlstra</a><ul><li><a href="/lkml/2013/12/20/78">Ingo Molnar</a></li></ul></li><li class="origin"><a href="/lkml/2013/12/19/713">Linus Torvalds</a><ul><li><a href="/lkml/2013/12/19/713">Ingo Molnar</a></li><li><a href="/lkml/2013/12/19/715">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Dec 2013 05:46:37 +0900</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [tip:x86/idle] x86, idle: Use static_cpu_has() for CLFLUSH workaround, add barriers</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Dec 20, 2013 at 5:40 AM, Ingo Molnar &lt;mingo&#64;kernel.org&gt; wrote:<br />&gt;<br />&gt; The first mb() looks superfluous, because see<br />&gt; current_set_polling_and_test():<br />&gt;<br />&gt; static inline bool __must_check current_set_polling_and_test(void)<br />&gt; {<br />&gt;         __current_set_polling();<br />&gt;<br />&gt;         /*<br />&gt;          * Polling state must be visible before we test NEED_RESCHED,<br />&gt;          * paired by resched_task()<br />&gt;          */<br />&gt;         smp_mb();<br />&gt;<br />&gt;         return unlikely(tif_need_resched());<br />&gt; }<br />&gt;<br />&gt; So it already has a (MFENCE) barrier after -&gt;flags is modified.<br /><br />So what?<br /><br />The mb() isn't necessarily against the *write*, it is also against the *read*.<br /><br />If the cflush is needed before the monitor, it's likely because the<br />monitor instruction has some bug with already-existing cachelines in<br />shared state or whatever.<br /><br />Which means that we want to make sure that the cflush is ordered wrt<br />*reads* from that cacheline too.<br /><br />cflush has nothing specifically to do with writes.<br /><br />             Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
