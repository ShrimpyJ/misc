    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/12/21/112">First message in thread</a></li><li><a href="/lkml/2013/12/21/112">Linus Torvalds</a><ul><li><a href="/lkml/2013/12/21/126">"John Stoffel"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2013/12/23/409">"H. Peter Anvin"</a><ul><li><a href="/lkml/2013/12/23/411">Linus Torvalds</a><ul><li><a href="/lkml/2013/12/24/6">"H. Peter Anvin"</a></li></ul></li></ul></li><li><a href="/lkml/2013/12/24/182">Ingo Molnar</a><ul><li><a href="/lkml/2013/12/26/180">Linus Torvalds</a><ul><li><a href="/lkml/2013/12/26/221">"H. Peter Anvin"</a><ul><li><a href="/lkml/2013/12/26/251">"H. Peter Anvin"</a></li></ul></li><li><a href="/lkml/2013/12/27/8">"H. Peter Anvin"</a><ul><li><a href="/lkml/2013/12/27/229">"H. Peter Anvin"</a></li></ul></li><li><a href="/lkml/2013/12/27/236">tip-bot for Linus Torvalds</a></li><li><a href="/lkml/2013/12/27/238">"tip-bot for H. Peter Anvin"</a></li><li><a href="/lkml/2013/12/27/239">"tip-bot for H. Peter Anvin"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 21 Dec 2013 16:11:32 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] speeding up the stat() family of system calls...</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Dec 21, 2013 at 2:54 PM, John Stoffel &lt;john&#64;stoffel.org&gt; wrote:<br />&gt;<br />&gt; Any numbers of how much better this is?  I'm travelling<br />&gt; tomorrow, so I won't have time to spin up a VM and play, though it's<br />&gt; tempting to do so.<br /><br />On most _real_ loads, the kernel footprint is pretty small, and<br />obviously if you do IO or other stuff, the cost of some wasted CPU<br />cycles in stat() is negligible. And even if you loop doing normal<br />'stat()' (and everything is cached), over a filesystem, the actual<br />path walk itself is still dominant, although at that point the CPU<br />overhead of the stat data copy starts to at least show up in profiles.<br />Showing up in profiles is why I started looking at it.<br /><br />And then, for the extreme case, my test program went from 0.92s to<br />0.80s. But that stupid test program just does ten million fstat(0,&amp;st)<br />calls, in order to show the highest cp_new_stat() CPU overhead (with<br />minimal cache footprint). So at that point it's about a 13%<br />difference, when the only other overhead really is just the system<br />call itself. The profile went from<br /><br />  10.42%  a.out  [k] copy_user_enhanced_fast_string<br />   5.91%  a.out  [k] cp_new_stat<br /><br />(the "copy_user_enhanced_fast_string" is the "rep movsb" that copies<br />things to user space) to<br /><br />   6.69%  a.out  [k] cp_new_stat<br /><br />(and here there is no separate user-copy, since it's all done directly<br />inside the optimized cp_new_stat).<br /><br />It's worth pointing out that the 5.91% -&gt; 6.69% profile change of<br />cp_new_stat() is *not* because cp_new_stat() got slower: it's simply a<br />direct result of the 13% performance improvements - 13% of the cycles<br />went away, and so 5.91% becomes 6.69%.<br /><br />But the above 13% is really the extreme case with hot caches etc.<br />Normally it's not really noticeable in any bigger picture load. For<br />example, on a big "git diff", the cp_new_stat() function shows up at<br />0.63% of the load, so making it faster isn't going to make any very<br />noticeable difference.<br /><br />The reason I care really is that that stat overhead always does show<br />up on the kinds of profiles I care about, even if it's never all that<br />high. In other words, it's more of an annoyance over how stupid that<br />code was than a huge performance increase.<br /><br />                Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
