    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/12/21/46">First message in thread</a></li><li><a href="/lkml/2013/12/21/46">Vaibhav Shinde</a><ul><li class="origin"><a href="/lkml/2013/12/21/101">Linus Torvalds</a><ul><li><a href="/lkml/2013/12/21/101">Oleg Nesterov</a></li><li><a href="/lkml/2013/12/22/27">Oleg Nesterov</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 21 Dec 2013 09:47:17 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] skip increamenting nr for TASK_UNINTERRUPTIBLE</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Again, adding Oleg to the cc. And I don't think this is correct, since<br />SIGKILL can actually kill uninterruptible processes too<br />(TASK_WAKEKILL) so the basic premise of the patch is incorrect. And<br />again, we do have that whole issue with exit_mm() serialization.<br /><br />                   Linus<br /><br />On Sat, Dec 21, 2013 at 4:18 AM, Vaibhav Shinde &lt;v.bhav.shinde&#64;gmail.com&gt; wrote:<br />&gt; Dear All,<br />&gt;<br />&gt; We found below issue in coredump for uninterruptible task -<br />&gt;<br />&gt; From 1c46f0327d98ad593d8913f9f1dad352f8f44304 Mon Sep 17 00:00:00 2001<br />&gt; From: Ajeet Yadav &lt;ajeet.yadav.77&#64;gmail.com&gt;<br />&gt; Date: Sat, 21 Dec 2013 17:06:05 +0530<br />&gt; Subject: [PATCH] skip increamenting nr for TASK_UNINTERRUPTIBLE<br />&gt;<br />&gt; In coredump case, where thread_1 faults while thread_2 is in<br />&gt; TASK_UNINTERRUPTIBLE state, it cannot handle the SIGKILL.<br />&gt; Thus the process hangs on event.<br />&gt; The coredump routine freezes until the thread state is<br />&gt; uninterruptible.<br />&gt;<br />&gt; Solution: Continue for coredump, without waiting for uninterruptible<br />&gt;  thread, as it will get killed as soon as it returns from<br />&gt;  uninterruptible state.<br />&gt;  Therefore do not increament thread count for threads with<br />&gt;  TASK_UNINTERRUPTIBLE.<br />&gt;<br />&gt; Signed-off-by: Ajeet Yadav &lt;ajeet.yadav.77&#64;gmail.com&gt;<br />&gt; Signed-off-by: Vaibhav Shinde &lt;v.bhav.shinde&#64;gmail.com&gt;<br />&gt; ---<br />&gt;  fs/coredump.c |    3 ++-<br />&gt;  1 file changed, 2 insertions(+), 1 deletions(-)<br />&gt;<br />&gt; diff --git a/fs/coredump.c b/fs/coredump.c<br />&gt; index 447b02c..54b0664 100644<br />&gt; --- a/fs/coredump.c<br />&gt; +++ b/fs/coredump.c<br />&gt; &#64;&#64; -281,7 +281,8 &#64;&#64; static int zap_process(struct task_struct *start,<br />&gt; int exit_code)<br />&gt;   if (t != current &amp;&amp; t-&gt;mm) {<br />&gt;   sigaddset(&amp;t-&gt;pending.signal, SIGKILL);<br />&gt;   signal_wake_up(t, 1);<br />&gt; - nr++;<br />&gt; + if(!(t-&gt;state &amp; TASK_UNINTERRUPTIBLE))<br />&gt; + nr++;<br />&gt;   }<br />&gt;   } while_each_thread(start, t);<br />&gt;<br />&gt; --<br />&gt; 1.7.9.5<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
