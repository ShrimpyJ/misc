    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/7/14/29">First message in thread</a></li><li><a href="/lkml/2013/7/14/70">Linus Torvalds</a><ul><li><a href="/lkml/2013/7/15/424">"H. Peter Anvin"</a><ul><li class="origin"><a href="/lkml/2013/7/15/437">Linus Torvalds</a><ul><li><a href="/lkml/2013/7/15/437">"H. Peter Anvin"</a></li><li><a href="/lkml/2013/7/15/439">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Jul 2013 11:56:21 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [LLVMdev] [PATCH] x86/asm: avoid mnemonics without type suffix</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Jul 15, 2013 at 11:40 AM, H. Peter Anvin &lt;hpa&#64;zytor.com&gt; wrote:<br />&gt; On 07/14/2013 12:49 PM, Linus Torvalds wrote:<br />&gt;<br />&gt; This is also why the Intel manuals point out that "some assemblers" can<br />&gt; take things like:<br />&gt;<br />&gt;         bt[l] $63,(%rsi)<br />&gt;<br />&gt; ... and turn it into:<br />&gt;<br />&gt;         btl $31,4(%rsi)<br />&gt;<br />&gt; This is definitely the friendly thing to do toward the human programmer.<br />&gt;  Unfortunately gas doesn't, nor does e.g. NASM.<br /><br />Yeah, that's definitely a "quality of implementation" issue. Clearly<br />"bt $63,mem" is talking about bit 63, and a quality assembler would<br />either warn about it or just do the RightThing(tm) like the intel<br />manual says.<br /><br />I'd actually like to say "think you" to the gas people, because gas<br />today may not do the above, but gas today is still *lightyears* ahead<br />of where it used to be two decades ago. Back in those dark ages, GNU<br />as was even documented to be *only* about turning compiler output into<br />object code, and gas was the ghastliest assembler on the planet - it<br />silently did horrible horrible things, and didn't do *anything*<br />user-friendly or clever. It would entirely ignore things like implied<br />sizes from register names etc, and generate code that was obviously<br />not at all what the user expected, but because cc1 always used<br />explicit sizes etc and only generated very specific syntax, it "wasn't<br />an issue".<br /><br />gas has improved immensely in this regard, and the fact that it<br />silently takes a $63 and effectively turns it into $31 is something I<br />think is not nice and not a good QoI, but considering where gas came<br />from, I'm not going to complain about it too much. It's<br />"understandable", even if it isn't great.<br /><br />But quite frankly, partly because of just how bad gas used to be wrt<br />issues like this, I think that any other assembler should aim to be at<br />_least_ as good as gas, if not better. Because I definitely don't want<br />to go back to the bad old days. I've been there, done that. Assemblers<br />that are worse than gas are not worth working with. gas should be<br />considered the minimal implementation quality, and llvm-as should<br />strive to do better rather than worse..<br /><br />(NASM used to be *much* more pleasant to work with than gas. Maybe you<br />should strive to make nasm DTRT wrt bt and constants, and maintain<br />that lead?)<br /><br />                   Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
