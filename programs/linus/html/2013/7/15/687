    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/7/15/668">First message in thread</a></li><li><a href="/lkml/2013/7/15/668">Dave Jones</a><ul><li class="origin"><a href="/lkml/2013/7/15/693">Linus Torvalds</a><ul><li><a href="/lkml/2013/7/15/693">Dave Jones</a><ul><li><a href="/lkml/2013/7/15/705">Linus Torvalds</a><ul><li><a href="/lkml/2013/7/15/712">Dave Jones</a></li><li><a href="/lkml/2013/7/16/19">Al Viro</a></li><li><a href="/lkml/2013/7/16/35">Dave Chinner</a></li><li><a href="/lkml/2013/7/16/297">Vince Weaver</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Jul 2013 19:32:51 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: splice vs execve lockdep trace.</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">Hmm. I don't have a lot of ideas, I'm just adding lockdep, splice and<br />FS people (and Oleg, just because) to the cc to see if anybody else<br />does.<br /><br />Al, Peter?<br /><br />So the problematic op *seems* to be the splice into /proc/&lt;pid&gt;/attr/<br />files, which causes that "pipe -&gt; cred_guard_mutex" locking.<br /><br />While the *normal* ordering would be the other way around, coming from<br />execve(), which has the cred_guard_mutex -&gt; VFS locks ordering for<br />reading the executable headers.<br /><br />Al, can we break either of those? Do we need to hold on to the cred<br />mutex that long? We get it fairly early (prepare_bprm_creds) and we<br />drop it very late (install_exec_creds), which means that it covers a<br />lot. But that seems pretty basic. The splice into /proc/&lt;pid&gt;/attr/*<br />seems to be the more annoying one, and maybe we just shouldn't allow<br />splicing into or from /proc?<br /><br />Dave, is this new (it doesn't *smell* new to me), or is it just that<br />trinity is doing new splice things?<br /><br />Or is the XFS i_iolock required for this thing to happen at all?<br />Adding Ben Myers to the cc just for luck/completeness.<br /><br />                Linus<br /><br />On Mon, Jul 15, 2013 at 6:53 PM, Dave Jones &lt;davej&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; [  696.047396] ======================================================<br />&gt; [  696.049036] [ INFO: possible circular locking dependency detected ]<br />&gt; [  696.050689] 3.11.0-rc1+ #53 Tainted: G        W<br />&gt; [  696.052182] -------------------------------------------------------<br />&gt; [  696.053846] trinity-child2/14017 is trying to acquire lock:<br />&gt; [  696.055429]  (&amp;sig-&gt;cred_guard_mutex){+.+.+.}, at: [&lt;ffffffff8122fa55&gt;] proc_pid_attr_write+0xf5/0x140<br />&gt; [  696.057652] but task is already holding lock:<br />&gt; [  696.060171]  (&amp;pipe-&gt;mutex/1){+.+.+.}, at: [&lt;ffffffff811c7096&gt;] pipe_lock+0x26/0x30<br />&gt; [  696.062097] which lock already depends on the new lock.<br />&gt; [  696.065723] the existing dependency chain (in reverse order) is:<br />&gt; [  696.068295] -&gt; #2 (&amp;pipe-&gt;mutex/1){+.+.+.}:<br />&gt; [  696.070650]        [&lt;ffffffff810c4bd1&gt;] lock_acquire+0x91/0x1f0<br />&gt; [  696.072258]        [&lt;ffffffff8170677a&gt;] mutex_lock_nested+0x7a/0x410<br />&gt; [  696.073916]        [&lt;ffffffff811c7096&gt;] pipe_lock+0x26/0x30<br />&gt; [  696.075464]        [&lt;ffffffff811f0024&gt;] generic_file_splice_write+0x64/0x170<br />&gt; [  696.077192]        [&lt;ffffffffa001afc0&gt;] xfs_file_splice_write+0xb0/0x230 [xfs]<br />&gt; [  696.078914]        [&lt;ffffffff811f1f5a&gt;] SyS_splice+0x24a/0x7e0<br />&gt; [  696.080455]        [&lt;ffffffff81714694&gt;] tracesys+0xdd/0xe2<br />&gt; [  696.082000] -&gt; #1 (&amp;(&amp;ip-&gt;i_iolock)-&gt;mr_lock){++++++}:<br />&gt; [  696.084428]        [&lt;ffffffff810c4bd1&gt;] lock_acquire+0x91/0x1f0<br />&gt; [  696.086017]        [&lt;ffffffff8108bc92&gt;] down_read_nested+0x52/0xa0<br />&gt; [  696.087643]        [&lt;ffffffffa007b310&gt;] xfs_ilock+0x1d0/0x280 [xfs]<br />&gt; [  696.089305]        [&lt;ffffffffa001aa12&gt;] xfs_file_aio_read+0x112/0x3e0 [xfs]<br />&gt; [  696.091037]        [&lt;ffffffff811be2c0&gt;] do_sync_read+0x80/0xb0<br />&gt; [  696.092571]        [&lt;ffffffff811be931&gt;] vfs_read+0xa1/0x170<br />&gt; [  696.094124]        [&lt;ffffffff811c4ae1&gt;] kernel_read+0x41/0x60<br />&gt; [  696.095693]        [&lt;ffffffff811c4d03&gt;] prepare_binprm+0xb3/0x130<br />&gt; [  696.097307]        [&lt;ffffffff811c6b29&gt;] do_execve_common.isra.29+0x599/0x6c0<br />&gt; [  696.099036]        [&lt;ffffffff811c6f36&gt;] SyS_execve+0x36/0x50<br />&gt; [  696.100577]        [&lt;ffffffff81714a79&gt;] stub_execve+0x69/0xa0<br />&gt; [  696.102157] -&gt; #0 (&amp;sig-&gt;cred_guard_mutex){+.+.+.}:<br />&gt; [  696.104536]        [&lt;ffffffff810c40b6&gt;] __lock_acquire+0x1786/0x1af0<br />&gt; [  696.106189]        [&lt;ffffffff810c4bd1&gt;] lock_acquire+0x91/0x1f0<br />&gt; [  696.107813]        [&lt;ffffffff817062b5&gt;] mutex_lock_interruptible_nested+0x75/0x4c0<br />&gt; [  696.109616]        [&lt;ffffffff8122fa55&gt;] proc_pid_attr_write+0xf5/0x140<br />&gt; [  696.111243]        [&lt;ffffffff811bf372&gt;] __kernel_write+0x72/0x150<br />&gt; [  696.112870]        [&lt;ffffffff811f03f9&gt;] write_pipe_buf+0x49/0x70<br />&gt; [  696.114503]        [&lt;ffffffff811efa24&gt;] splice_from_pipe_feed+0x84/0x140<br />&gt; [  696.116202]        [&lt;ffffffff811efdce&gt;] __splice_from_pipe+0x6e/0x90<br />&gt; [  696.117836]        [&lt;ffffffff811f18c1&gt;] splice_from_pipe+0x51/0x70<br />&gt; [  696.119419]        [&lt;ffffffff811f1919&gt;] default_file_splice_write+0x19/0x30<br />&gt; [  696.121147]        [&lt;ffffffff811f1f5a&gt;] SyS_splice+0x24a/0x7e0<br />&gt; [  696.122719]        [&lt;ffffffff81714694&gt;] tracesys+0xdd/0xe2<br />&gt; [  696.124272] other info that might help us debug this:<br />&gt;<br />&gt; [  696.127604] Chain exists of:  &amp;sig-&gt;cred_guard_mutex --&gt; &amp;(&amp;ip-&gt;i_iolock)-&gt;mr_lock --&gt; &amp;pipe-&gt;mutex/1<br />&gt;<br />&gt; [  696.131445]  Possible unsafe locking scenario:<br />&gt;<br />&gt; [  696.133763]        CPU0                    CPU1<br />&gt; [  696.135108]        ----                    ----<br />&gt; [  696.136420]   lock(&amp;pipe-&gt;mutex/1);<br />&gt; [  696.137745]                                lock(&amp;(&amp;ip-&gt;i_iolock)-&gt;mr_lock);<br />&gt; [  696.139469]                                lock(&amp;pipe-&gt;mutex/1);<br />&gt; [  696.141030]   lock(&amp;sig-&gt;cred_guard_mutex);<br />&gt; [  696.142409]<br />&gt;  *** DEADLOCK ***<br />&gt;<br />&gt; [  696.145237] 2 locks held by trinity-child2/14017:<br />&gt; [  696.146532]  #0:  (sb_writers#4){.+.+.+}, at: [&lt;ffffffff811f2441&gt;] SyS_splice+0x731/0x7e0<br />&gt; [  696.148435]  #1:  (&amp;pipe-&gt;mutex/1){+.+.+.}, at: [&lt;ffffffff811c7096&gt;] pipe_lock+0x26/0x30<br />&gt; [  696.150357] stack backtrace:<br />&gt; [  696.152287] CPU: 2 PID: 14017 Comm: trinity-child2 Tainted: G        W    3.11.0-rc1+ #53<br />&gt; [  696.156695]  ffffffff825270a0 ffff8801fee2db90 ffffffff8170164e ffffffff824f84c0<br />&gt; [  696.158392]  ffff8801fee2dbd0 ffffffff816fda92 ffff8801fee2dc20 ffff8802331446d8<br />&gt; [  696.160300]  ffff880233143fc0 0000000000000002 0000000000000002 ffff8802331446d8<br />&gt; [  696.162217] Call Trace:<br />&gt; [  696.163292]  [&lt;ffffffff8170164e&gt;] dump_stack+0x4e/0x82<br />&gt; [  696.164695]  [&lt;ffffffff816fda92&gt;] print_circular_bug+0x200/0x20f<br />&gt; [  696.166194]  [&lt;ffffffff810c40b6&gt;] __lock_acquire+0x1786/0x1af0<br />&gt; [  696.167677]  [&lt;ffffffff810c4bd1&gt;] lock_acquire+0x91/0x1f0<br />&gt; [  696.169111]  [&lt;ffffffff8122fa55&gt;] ? proc_pid_attr_write+0xf5/0x140<br />&gt; [  696.170633]  [&lt;ffffffff8122fa55&gt;] ? proc_pid_attr_write+0xf5/0x140<br />&gt; [  696.172151]  [&lt;ffffffff817062b5&gt;] mutex_lock_interruptible_nested+0x75/0x4c0<br />&gt; [  696.173765]  [&lt;ffffffff8122fa55&gt;] ? proc_pid_attr_write+0xf5/0x140<br />&gt; [  696.175280]  [&lt;ffffffff8122fa55&gt;] ? proc_pid_attr_write+0xf5/0x140<br />&gt; [  696.176793]  [&lt;ffffffff8119e869&gt;] ? alloc_pages_current+0xa9/0x170<br />&gt; [  696.178301]  [&lt;ffffffff8122fa55&gt;] proc_pid_attr_write+0xf5/0x140<br />&gt; [  696.179799]  [&lt;ffffffff811f03b0&gt;] ? splice_direct_to_actor+0x1f0/0x1f0<br />&gt; [  696.181346]  [&lt;ffffffff811bf372&gt;] __kernel_write+0x72/0x150<br />&gt; [  696.182796]  [&lt;ffffffff811f03b0&gt;] ? splice_direct_to_actor+0x1f0/0x1f0<br />&gt; [  696.184354]  [&lt;ffffffff811f03f9&gt;] write_pipe_buf+0x49/0x70<br />&gt; [  696.185779]  [&lt;ffffffff811efa24&gt;] splice_from_pipe_feed+0x84/0x140<br />&gt; [  696.187293]  [&lt;ffffffff811f03b0&gt;] ? splice_direct_to_actor+0x1f0/0x1f0<br />&gt; [  696.188850]  [&lt;ffffffff811efdce&gt;] __splice_from_pipe+0x6e/0x90<br />&gt; [  696.190325]  [&lt;ffffffff811f03b0&gt;] ? splice_direct_to_actor+0x1f0/0x1f0<br />&gt; [  696.191878]  [&lt;ffffffff811f18c1&gt;] splice_from_pipe+0x51/0x70<br />&gt; [  696.193335]  [&lt;ffffffff811f1919&gt;] default_file_splice_write+0x19/0x30<br />&gt; [  696.194896]  [&lt;ffffffff811f1f5a&gt;] SyS_splice+0x24a/0x7e0<br />&gt; [  696.196312]  [&lt;ffffffff81714694&gt;] tracesys+0xdd/0xe2<br />&gt;<br />&gt;<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
