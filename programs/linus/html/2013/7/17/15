    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/7/15/668">First message in thread</a></li><li><a href="/lkml/2013/7/16/553">Ben Myers</a><ul><li><a href="/lkml/2013/7/16/519">Linus Torvalds</a></li><li><a href="/lkml/2013/7/16/537">Dave Chinner</a></li><li><a href="/lkml/2013/7/16/549">Linus Torvalds</a></li><li><a href="/lkml/2013/7/17/3">Dave Chinner</a><ul><li class="origin"><a href="/lkml/2013/7/17/40">Linus Torvalds</a><ul><li><a href="/lkml/2013/7/17/40">Dave Chinner</a><ul><li><a href="/lkml/2013/7/17/391">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 16 Jul 2013 21:54:09 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: splice vs execve lockdep trace.</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 16, 2013 at 9:06 PM, Dave Chinner &lt;david&#64;fromorbit.com&gt; wrote:<br />&gt;<br />&gt; Right, and that's one of the biggest problems page based IO has - we<br />&gt; can't serialise it against other IO and other page cache<br />&gt; manipulation functions like hole punching. What happens when a<br />&gt; splice read or mmap page fault races with a hole punch? You get<br />&gt; stale data being left in the page cache because we can't serialise<br />&gt; the page read with the page cache invalidation and underlying extent<br />&gt; removal.<br /><br />But Dave, that's *good*.<br /><br />You call it "stale data".<br /><br />I call it "the data was valid at some point".<br /><br />This is what "splice()" is fundamentally all about.<br /><br />Think of it this way: even if you are 100% serialized during the<br />"splice()" operation, what do you think happens afterwards?<br /><br />Seriously, think it through.<br /><br />That data is in a kernel buffer - the pipe. The fact that it was<br />serialized at the time of the original splice() doesn't make _one_<br />whit of a difference, because after the splice is over, the data still<br />sits around in that pipe buffer, and you're no longer serializing it.<br />Somebody else truncating the file or punching a hole in the file DOES<br />NOT MATTER. It's too late.<br /><br />In other words, trying to "protect" against that kind of race is stupid.<br /><br />You're missing the big picture because you're concentrating on the<br />details. Look beyond what happens inside XFS, and think about the<br />higher-level meaning of splice() itself.<br /><br />So the only guarantee splice *should* give is entirely per-page. If<br />you think it gives any other serialization, you're fundamentally<br />wrong, because it *cannot*. See?<br /><br />                     Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
