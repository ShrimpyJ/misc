    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/7/19/627">First message in thread</a></li><li><a href="/lkml/2013/7/19/647">Waiman Long</a><ul><li><a href="/lkml/2013/7/19/658">Thomas Gleixner</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2013/7/19/724">Waiman Long</a><ul><li><a href="/lkml/2013/7/25/237">Jan-Simon =?ISO-8859-1?Q?M=F6ller?=</a></li></ul></li></ul></li><li><a href="/lkml/2013/7/20/53">Peter Zijlstra</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 19 Jul 2013 12:48:26 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mutex: Fix mutex_can_spin_on_owner</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Jul 19, 2013 at 12:41 PM, Thomas Gleixner &lt;tglx&#64;linutronix.de&gt; wrote:<br />&gt;<br />&gt; That's true for your particular compiler, but it's not guaranteed at<br />&gt; all. So it matters even when your compiler generates the same<br />&gt; code. Others might not. There is a world outside of x8664.<br /><br />Well, in this case, I think we can pretty safely say that a compiler<br />has to be seriously buggered to not just doit as a single load. If<br />there are reloads in that sequence, the compiler is past bad.<br /><br />That said, I'm absolutely not arguing against the fix, and it needs to<br />be done. Not so much because of "a compiler might screw it up" as<br />simply because it's (a) the right thing to do and (b) documentation<br />about the fact that we're doing special things that aren't really<br />locked.<br /><br />In particular, I could imagine us some day checking that ACCESS_ONCE()<br />accesses are never cacheline crossers or multiword accesses, neither<br />of which may be atomic. A 64-bit ACCESS_ONCE on a 32-bit machine would<br />be a bug, for example. Not that I think we do that, but the point is<br />that ACCESS_ONCE() is about more than just compiler code generation.<br />It's documentation, and it's a possible venue for sanity-checking.<br /><br />               Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
