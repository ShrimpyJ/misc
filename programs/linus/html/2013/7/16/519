    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/7/15/668">First message in thread</a></li><li><a href="/lkml/2013/7/16/35">Dave Chinner</a><ul><li><a href="/lkml/2013/7/16/41">Al Viro</a><ul><li><a href="/lkml/2013/7/16/70">Dave Chinner</a></li><li><a href="/lkml/2013/7/16/72">Dave Chinner</a></li></ul></li><li><a href="/lkml/2013/7/16/553">Ben Myers</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2013/7/16/537">Dave Chinner</a></li><li><a href="/lkml/2013/7/16/549">Linus Torvalds</a></li><li><a href="/lkml/2013/7/17/3">Dave Chinner</a><ul><li><a href="/lkml/2013/7/17/15">Linus Torvalds</a><ul><li><a href="/lkml/2013/7/17/40">Dave Chinner</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 16 Jul 2013 13:18:06 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: splice vs execve lockdep trace.</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Jul 16, 2013 at 12:33 PM, Ben Myers &lt;bpm&#64;sgi.com&gt; wrote:<br />&gt;&gt; &gt;<br />&gt;&gt; &gt; And looking more at that, I'm actually starting to think this is an<br />&gt;&gt; &gt; XFS locking problem. XFS really should not call back to splice while<br />&gt;&gt; &gt; holding the inode lock.<br /><br />.. that was misleading, normally "inode lock" would be i_lock, but<br />here I meant the XFS-specific i_iolock.<br /><br />But you clearly picked up on it:<br /><br />&gt; CPU0                            CPU1                            CPU2<br />&gt; ----                            ----                            ----<br />&gt; lock(&amp;sig-&gt;cred_guard_mutex);<br />&gt;                                 lock(&amp;pipe-&gt;mutex/1);<br />&gt;                                                                 lock(&amp;(&amp;ip-&gt;io_lock)-&gt;mr_lock);<br />&gt; lock(&amp;(&amp;ip-&gt;io_lock)-&gt;mr_lock);<br />&gt;                                 lock(&amp;sig-&gt;cred_guard_mutex);<br />&gt;                                                                 lock(&amp;pipe-&gt;mutex/1);<br /><br />Yup.<br /><br />&gt; I agree that fixing this in XFS seems to be the most reasonable plan,<br />&gt; and Dave's approach looks ok to me.  Seems like patch 1 should go<br />&gt; through Al's tree, but we'll also need to commit it to the xfs tree<br />&gt; prerequisite to patch 2.<br /><br />Btw, is there some reason why XFS couldn't just use<br />generic_file_splice_read() directly?<br /><br />I'm not arguing against Dave's patches, since the splice_write case<br />would seem to want them regardless, but I'm not even seeing why XFS<br />couldn't just avoid the locking for the splice_read case entirely..And<br />the generic file-splice read function does all that read-ahead stuff<br />and should actually be better for performance. And because it does it<br />from the page cache, it can avoid the locking issues (because it gets<br />the splice pipe lock later, just holding on to the page references).<br /><br />And splice has mmap semantics - the whole point of splice is about<br />moving pages around, after all - so I *think* your current<br />"xfs_rw_ilock(ip, XFS_IOLOCK_SHARED);" is actually over-serialization.<br />The pages will be shared by the pipe buffers anyway, so splicing by<br />definition doesn't imply full data serialization (because the reading<br />of the data itself will happen much later).<br /><br />So the per-page serialization done by readpage() should already be<br />sufficient, no?<br /><br />I dunno. Maybe there's something I'm missing. XFS does seem to wrap<br />all the other generic functions in that lock too, but since mmap() etc<br />clearly have to be able to get things one page at a time (without any<br />wrapping at higher layers), I'm just wondering whether splice_read<br />might not be able to avoid it.<br /><br />                     Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
