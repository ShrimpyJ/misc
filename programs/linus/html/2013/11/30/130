    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/7/5/410">First message in thread</a></li><li><a href="/lkml/2013/11/26/621">Linus Torvalds</a><ul><li><a href="/lkml/2013/11/26/545">Linus Torvalds</a></li><li><a href="/lkml/2013/11/30/15">Simon Kirby</a><ul><li class="origin"><a href="/lkml/2013/11/30/152">Linus Torvalds</a><ul><li><a href="/lkml/2013/11/30/152">Simon Kirby</a></li></ul></li><li><a href="/lkml/2013/11/30/153">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Nov 2013 09:25:33 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [3.10] Oopses in kmem_cache_allocate() via prepare_creds()</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Nov 30, 2013 at 1:43 AM, Simon Kirby &lt;sim&#64;hostway.ca&gt; wrote:<br />&gt; On Tue, Nov 26, 2013 at 03:16:09PM -0800, Linus Torvalds wrote:<br />&gt;&gt;<br />&gt;&gt; The pipe-info structure isn't using its own slab cache, it's just<br />&gt;&gt; using "kmalloc()". So it by definition will merge with all other<br />&gt;&gt; kmalloc() allocations of the same size (or, to be exact, of "similar<br />&gt;&gt; enough size to hit the same size bucket"). In your case it's the<br />&gt;&gt; 192-byte-sized bucket.<br />&gt;<br />&gt; I turned on kmalloc-192 tracing to find what else is using it: struct<br />&gt; nfs_fh, struct bio, and struct cred. Poking around those, struct bio has<br />&gt; bi_cnt, but it is way down in the struct. struct cred has "usage", but it<br />&gt; comes first. Hmm. Nevertheless, I set:<br />&gt;<br />&gt; CONFIG_DEBUG_MUTEXES=y<br />&gt; CONFIG_DEBUG_LIST=y<br />&gt; CONFIG_DEBUG_CREDENTIALS=y<br />&gt;<br />&gt; And tried:<br />&gt;<br />&gt; diff --git a/include/linux/cred.h b/include/linux/cred.h<br />&gt; index 04421e8..2646fe9 100644<br />&gt; --- a/include/linux/cred.h<br />&gt; +++ b/include/linux/cred.h<br />&gt; &#64;&#64; -205,7 +205,9 &#64;&#64; static inline void validate_process_creds(void)<br />&gt;   */<br />&gt;  static inline struct cred *get_new_cred(struct cred *cred)<br />&gt;  {<br />&gt; -       atomic_inc(&amp;cred-&gt;usage);<br />&gt; +       if (atomic_inc_return(&amp;cred-&gt;usage) == 0x6c) {<br />&gt; +               WARN_ON(cred-&gt;uid == 0x6b);<br /><br />Oh, damn, I thought you had found it, and got very excited and already<br />wrote a long email about things I wanted you to try. And then I<br />started looking closer...<br /><br />That test is wrong. Both of those fields are 32-bit, so testing them<br />against 0x6b/0x6c is bogus: you're just catching real cases. The<br />reason it catches omreport is presumably because omreport runs as some<br />special user that happens to have uid 107 (on my machine that happens<br />to be qemu). And having a usage count of 108 isn't particularly<br />strange either - creds get a lot of re-use.<br /><br />So close. It *might* still be one of those cases, but it doesn't<br />really sound very likely. "bi_cnt" is deep inside the struct bio, and<br />"usage" is at offset 0, not offset 4. And the ns_fh isn't very<br />interesting.<br /><br />             Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
