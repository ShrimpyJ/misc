    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/11/19/277">First message in thread</a></li><li><a href="/lkml/2013/11/19/277">Mathieu Desnoyers</a><ul><li><a href="/lkml/2013/11/19/302">Peter Zijlstra</a><ul><li><a href="/lkml/2013/11/19/341">Jakub Jelinek</a><ul><li><a href="/lkml/2013/11/19/315">Peter Zijlstra</a></li></ul></li></ul></li><li><a href="/lkml/2013/11/19/311">Will Deacon</a><ul><li><a href="/lkml/2013/11/19/335">Mathieu Desnoyers</a><ul><li><a href="/lkml/2013/11/19/351">Peter Zijlstra</a><ul><li><a href="/lkml/2013/11/19/525">Richard Henderson</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="/lkml/2013/11/20/253">Linus Torvalds</a><ul><li><a href="/lkml/2013/11/20/253">Mathieu Desnoyers</a></li><li><a href="/lkml/2013/11/21/354">Alexander Holler</a><ul><li><a href="/lkml/2013/11/21/550">Luis Lozano</a></li><li><a href="/lkml/2013/11/21/560">Linus Torvalds</a><ul><li><a href="/lkml/2013/11/21/581">Alexander Holler</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 19 Nov 2013 16:41:17 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: current_thread_info() not respecting program order with gcc 4.8.x</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Nov 19, 2013 at 7:29 AM, Mathieu Desnoyers<br />&lt;mathieu.desnoyers&#64;efficios.com&gt; wrote:<br />&gt;<br />&gt; Since each current_thread_info() is a different asm ("sp") without clobber nor volatile, AFAIU, the compiler is within its right to reorder them.<br /><br />I don't understand why you say that.<br /><br />The ordering of the access to the asm("sp") register is totally<br />irrelevant. You are "correct" in saying that the compiler is within<br />its right to re-order them, but that is the worst kind of correct:<br />it's totally immaterial. In fact, we *want* the compiler to not just<br />re-order the accesses to %sp, but to notice that it can combine them,<br />and do CSE on that whole expression when it is used multiple times<br />within the same function (like it often is used).<br /><br />So the compiler can very much decide to re-read %sp all it wants, and<br />re-order those reads all it wants, and that's not the bug at all.<br />Putting a clobber or a volatile on it would disable the optimization<br />we *want* to happen.<br /><br />So don't bark up the wrong tree.<br /><br />The bug seems to be that gcc re-orders the *memory* *accesses* through<br />that point, which is not correct in any way, shape, or form. If we<br />have a write to a memory location followed by a read of the same<br />memory location, the compiler ABSOLUTELY MUST NOT RE-ORDER THEM. The<br />write obviously changes the value of the read.<br /><br />It seems that some gcc alias analysis completely incorrectly thinks<br />that they are not the same memory location, and do not alias. My guess<br />would be that gcc sees that that they are based on the stack pointer<br />with "different" offsets, and decides that the memory locations must<br />be different - without noticing that the "&amp; ~(THREAD_SIZE - 1)" will<br />end up generating the same address for both of them.<br /><br />There may be some insane "two different objects on the stack cannot<br />alias" logic, which is true for *objects* on the stack, but it sure as<br />hell isn't true for random accesses through asm("sp").<br /><br />If I read this thread correctly, you're all talking about something<br />else than the actual bug, and are trying to say that there is<br />something wrong with re-ordering the access to %sp itself. Missing the<br />_real_ bug entirely. See above.<br /><br />                  Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
