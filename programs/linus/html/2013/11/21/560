    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/11/19/277">First message in thread</a></li><li><a href="/lkml/2013/11/19/610">Linus Torvalds</a><ul><li><a href="/lkml/2013/11/20/253">Mathieu Desnoyers</a></li><li><a href="/lkml/2013/11/21/354">Alexander Holler</a><ul><li><a href="/lkml/2013/11/21/550">Luis Lozano</a></li><li class="origin"><a href="/lkml/2013/11/21/581">Linus Torvalds</a><ul><li><a href="/lkml/2013/11/21/581">Alexander Holler</a><ul><li><a href="/lkml/2013/11/21/592">Luis Lozano</a></li><li><a href="/lkml/2013/11/21/601">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 21 Nov 2013 14:32:34 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: current_thread_info() not respecting program order with gcc 4.8.x</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 21, 2013 at 8:02 AM, Alexander Holler &lt;holler&#64;ahsoftware.de&gt; wrote:<br />&gt;<br />&gt; Luis Lozano just noted (see <a href="https://lkml.org/lkml/2013/11/20/625">https://lkml.org/lkml/2013/11/20/625</a>) that<br />&gt; current_thread_info() has the prototype<br />&gt;<br />&gt; static inline struct thread_info *current_thread_info(void)<br />&gt; __attribute_const__;<br />&gt;<br />&gt; on arm (and arm64 and unicore32, something the paste from Mathieu missed so<br />&gt; most people here might have missed that detail too). It's a very good<br />&gt; finding from Luis.<br /><br />No, because it is immaterial.<br /><br />We *want* gcc to optimize away multiple accesses to "sp". Because it<br />doesn't *matter* whether "sp" changes or not, the *result* is always<br />the same. That's what the "const" means.<br /><br />The "&amp; ~(THREAD_SIZE - 1)" part will remove all the bits that can<br />change. Really. So the result *is* constant (within one thread).<br />Marking it constant and telling gcc that it can combine these things<br />is correct.<br /><br />Guys, read my email again.<br /><br />The bug is not that gcc can re-order or combine the accesses to "sp".<br />WE WANT THAT TO HAPPEN.<br /><br />The bug is *outside* that "current_thread_info()" macro/inline<br />function. It's the *dereference* of the pointer that gcc re-orders.<br />AND THAT IS WRONG.<br /><br />Gcc seems to mess up the alias analysis, and decide that the<br />deferences cannot alias. Which is wrong. They clearly *can* alias,<br />exactly because the value of "sp &amp; ~(THREAD_SIZE - 1)" ends up having<br />the same value all the time.<br /><br />                 Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
