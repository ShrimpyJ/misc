    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2013/11/12/324">First message in thread</a></li><li><a href="/lkml/2013/11/12/324">Waiman Long</a><ul><li><a href="/lkml/2013/11/12/325">Waiman Long</a><ul><li><a href="/lkml/2013/11/12/797">Waiman Long</a></li></ul></li><li><a href="/lkml/2013/11/12/364">Waiman Long</a></li><li><a href="/lkml/2013/11/12/368">Waiman Long</a></li><li><a href="/lkml/2013/11/12/371">Waiman Long</a><ul><li class="origin"><a href="/lkml/2013/11/18/328">Linus Torvalds</a><ul><li><a href="/lkml/2013/11/18/328">Andi Kleen</a><ul><li><a href="/lkml/2013/11/18/479">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2013/11/18/671">"Long, Wai Man"</a></li></ul></li></ul></li><li><a href="/lkml/2013/11/12/377">Waiman Long</a></li><li><a href="/lkml/2013/11/12/697">Waiman Long</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Nov 2013 10:11:48 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH v6 3/5] qrwlock: Enable fair queue read/write lock</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Nov 12, 2013 at 6:48 AM, Waiman Long &lt;Waiman.Long&#64;hp.com&gt; wrote:<br />&gt; By default, queue rwlock is fair among writers and gives preference<br />&gt; to readers allowing them to steal lock even if a writer is<br />&gt; waiting. However, there is a desire to have a fair variant of<br />&gt; rwlock that is more deterministic. To enable this [..]<br /><br />Is there really any point in having the option for unfair at all?<br /><br />From your timings, it looks like the unfair locks are more expensive<br />for the writer side, but since pretty much the whole point of rwlocks<br />is when readers are the common case, I don't think we care.<br /><br />And I'm not at all convinced we want the complexity of two different<br />kinds of rwlocks with different semantics and extra code for said<br />semantics..<br /><br />Your *original* fair rwlocks were unusable, since they didn't allow<br />for the irq semantics that most users need, but afaik your current<br />version always makes an irq/bh-context reader work even when the lock<br />is otherwise trying to be fair, so this whole dual behavior seems to<br />be largely pointless.<br /><br />No?<br /><br />                        Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
