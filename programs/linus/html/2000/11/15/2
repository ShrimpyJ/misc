    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/11/15/46">First message in thread</a></li><li><a href="/lkml/2000/11/15/46"> schwidefsky&#64;de ...</a><ul><li class="origin"><a href="">(Linus Torvalds)</a></li><li><a href="/lkml/2000/11/15/9">Andi Kleen</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Memory management bug</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">15 Nov 2000 08:45:47 -0800</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;C1256998.004585F4.00&#64;d12mta07.de.ibm.com&gt;,<br />&gt;	 After some trickery with some special hardware feature (storage<br />&gt;keys) I found out that empty_bad_pmd_table and empty_bad_pte_table have<br />&gt;been put to the page table quicklists multiple(!) times.<br /><br />This is definitely bad, and means that something else really bad is<br />going on.<br /><br />In fact, I have this fairly strong suspicion that we should just get rid<br />of the "bad" page tables altogether, and make the stuff that now uses<br />them BUG() instead. <br /><br />The whole concept of "bad" page tables comes from very early on in<br />Linux, when the way the page fault handler worked was that if it ran out<br />of memory or something else really bad happened, it would insert a dummy<br />page table entry that was guaranteed to let the CPU continue.  That way<br />the page fault handler was always "successful" from a hardware<br />standpoint, even if it ended up trying to kill the process. <br /><br />This used to be required simply because a page fault in kernel space<br />originally needed to let the process unwind sanely and cleanly.<br /><br />These days, the requirement that page faults always "succeed" is long<br />long gone. The exception handling mechanism handles the cases where we<br />validly can take a page fault, and in other cases we will just kill the<br />process outright. As such, the bad page tables should no longer be<br />needed, and are apparently just hiding some nasty bugs.<br /><br />What happens if you just replace all places that would use a bad page<br />table with a BUG()? (Ie do _not_ add the bug to the place where you<br />added the test: by that time it's too late.  I'm talking about the<br />places where the bad page tables are used, like in the error cases of<br />"get_pte_kernel_slow()" etc.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
