    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/11/17/187">First message in thread</a></li><li><a href="/lkml/2000/11/17/224">(Linus Torvalds)</a><ul><li><a href="/lkml/2000/11/18/7">"Udo A. Steinberg"</a><ul><li><a href="/lkml/2000/11/18/80">Alan Cox</a><ul><li><a href="/lkml/2000/11/18/70">Linus Torvalds</a><ul><li><a href="/lkml/2000/11/18/32">adrian</a></li><li><a href="/lkml/2000/11/18/142">"Udo A. Steinberg"</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2000/11/18/11">adrian</a><ul><li><a href="/lkml/2000/11/18/39">Michael Meding</a></li></ul></li><li><a href="/lkml/2000/11/18/29">Brian Gerst</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2000/11/18/36/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 18 Nov 2000 08:26:27 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Freeze on FPU exception with Athlon</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 18 Nov 2000, Brian Gerst wrote:<br />&gt; <br />&gt; I get Floating Point Exception (core dumped), but I needed to use the<br />&gt; modified program below to keep GCC from optimizing the division away as<br />&gt; a constant.  This is on test11-pre5.<br /><br />I'm starting to suspect that it's really a combination of three things: <br /> - 3dnow optimization (ie you have to compile the kernel with Athlon<br />   support)<br /> - pending, but not yet noticed, FPU exceptions.<br /> - a bug/feature in the kernel, where a process exit does not bother to<br />   clear the FPU, only marks it as "unused".<br /><br />If I'm right, the proper test-program should be something like<br /><br />	int main(int argc, char **argv)<br />	{<br />	        asm("fldcw %0": :"m" (0));<br />	        asm("fldz ; fld1 ; fdiv");<br />		sleep(1);<br />	        return 0;<br />	}<br /><br />where it's important that we do not wait for the result of the fdiv, we<br />just exit after having caused a pending exception (and you cannot do this <br />reliably from C code - depending on compiler version and optimizations<br />gcc may try to write the bad value back to memory etc). <br /><br />Now, with the pending exception, do a 3dnow MMX memcpy() - which will<br />clear the TS bit (because it decides that the FP state can be thrown<br />away and doesn't need to do a full save/restore) and start using the FPU.<br />Boom. Instant FP exception. With the exception handler deciding that<br />nobody owns the FP state, and thus doing nothing sane.<br /><br />If I'm right (and I'm _always_ right), the following patch would make a<br />difference.<br /><br />Markus?<br /><br />		Linus<br /><br />----<br />--- v2.4.0-test10/linux/arch/i386/kernel/traps.c	Tue Oct 31 12:42:26 2000<br />+++ linux/arch/i386/kernel/traps.c	Fri Nov 17 21:52:55 2000<br />&#64;&#64; -643,6 +640,12 &#64;&#64;<br /> asmlinkage void do_coprocessor_error(struct pt_regs * regs, long error_code)<br /> {<br /> 	ignore_irq13 = 1;<br />+<br />+	/* Due to lazy error handling, we might have false pending errors! */<br />+	if (!current-&gt;used_math) {<br />+		init_fpu();<br />+		return;<br />+	}	<br /> 	math_error((void *)regs-&gt;eip);<br /> }<br /> <br />&#64;&#64; -700,6 +703,12 &#64;&#64;<br /> 	if (cpu_has_xmm) {<br /> 		/* Handle SIMD FPU exceptions on PIII+ processors. */<br /> 		ignore_irq13 = 1;<br />+<br />+		/* Due to lazy error handling, we might have false pending errors! */<br />+		if (!current-&gt;used_math) {<br />+			init_fpu();<br />+			return;<br />+		}	<br /> 		simd_math_error((void *)regs-&gt;eip);<br /> 	} else {<br /> 		/*<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
