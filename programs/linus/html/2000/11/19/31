    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/11/13/38">First message in thread</a></li><li><a href="/lkml/2000/11/18/47">Linus Torvalds</a><ul><li><a href="/lkml/2000/11/18/52">David Hinds</a></li><li><a href="/lkml/2000/11/19/7">David Ford</a><ul><li class="origin"><a href="/lkml/2000/11/19/44">Linus Torvalds</a><ul><li><a href="/lkml/2000/11/19/44">David Ford</a><ul><li><a href="/lkml/2000/11/19/143">Andrew Park</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2000/11/19/31/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 18 Nov 2000 21:36:06 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] pcmcia event thread. (fwd)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 18 Nov 2000, David Ford wrote:<br />&gt; Linus Torvalds wrote:<br />&gt; <br />&gt; &gt; Can you (you've probably done this before, but anyway) enable DEBUG in<br />&gt; &gt; arch/i386/kernel/pci-i386.h? I wonder if the kernel for some strange<br />&gt; &gt; reason doesn't find your router, even though "dump_pirq" obviously does..<br />&gt; &gt; If there's something wrong with the checksumming for example..<br />&gt; <br />&gt; ..building now.<br /><br />Actually, try this patch first. It adds the PCI_DEVICE_ID_INTEL_82371MX<br />router type, and also makes the PCI router search fall back more<br />gracefully on the device it actually found if there is not an exact match<br />on the "compatible router" entry...<br /><br />It should make Linux find and accept the chip you have. Knock wood.<br /><br />		Linus<br /><br />--- v2.4.0-test10/linux/arch/i386/kernel/pci-irq.c	Tue Oct 31 12:42:26 2000<br />+++ linux/arch/i386/kernel/pci-irq.c	Sat Nov 18 21:11:19 2000<br />&#64;&#64; -283,12 +297,19 &#64;&#64;<br /> 	{ "PIIX", PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82371FB_0, pirq_piix_get, pirq_piix_set },<br /> 	{ "PIIX", PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82371SB_0, pirq_piix_get, pirq_piix_set },<br /> 	{ "PIIX", PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82371AB_0, pirq_piix_get, pirq_piix_set },<br />+	{ "PIIX", PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82371MX,   pirq_piix_get, pirq_piix_set },<br /> 	{ "PIIX", PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82443MX_0, pirq_piix_get, pirq_piix_set },<br />+<br /> 	{ "ALI", PCI_VENDOR_ID_AL, PCI_DEVICE_ID_AL_M1533, pirq_ali_get, pirq_ali_set },<br />+<br /> 	{ "VIA", PCI_VENDOR_ID_VIA, PCI_DEVICE_ID_VIA_82C586_0, pirq_via_get, pirq_via_set },<br /> 	{ "VIA", PCI_VENDOR_ID_VIA, PCI_DEVICE_ID_VIA_82C596, pirq_via_get, pirq_via_set },<br /> 	{ "VIA", PCI_VENDOR_ID_VIA, PCI_DEVICE_ID_VIA_82C686, pirq_via_get, pirq_via_set },<br />+<br /> 	{ "OPTI", PCI_VENDOR_ID_OPTI, PCI_DEVICE_ID_OPTI_82C700, pirq_opti_get, pirq_opti_set },<br />+<br />+	{ "NatSemi", PCI_VENDOR_ID_CYRIX, PCI_DEVICE_ID_CYRIX_5520, pirq_cyrix_get, pirq_cyrix_set },<br />+<br /> 	{ "default", 0, 0, NULL, NULL }<br /> };<br /> <br />&#64;&#64; -298,7 +319,6 &#64;&#64;<br /> static void __init pirq_find_router(void)<br /> {<br /> 	struct irq_routing_table *rt = pirq_table;<br />-	u16 rvendor, rdevice;<br /> 	struct irq_router *r;<br /> <br /> #ifdef CONFIG_PCI_BIOS<br />&#64;&#64; -308,32 +328,31 &#64;&#64;<br /> 		return;<br /> 	}<br /> #endif<br />-	if (!(pirq_router_dev = pci_find_slot(rt-&gt;rtr_bus, rt-&gt;rtr_devfn))) {<br />+	/* fall back to default router if nothing else found */<br />+	pirq_router = pirq_routers + sizeof(pirq_routers) / sizeof(pirq_routers[0]) - 1;<br />+<br />+	pirq_router_dev = pci_find_slot(rt-&gt;rtr_bus, rt-&gt;rtr_devfn);<br />+	if (!pirq_router_dev) {<br /> 		DBG("PCI: Interrupt router not found at %02x:%02x\n", rt-&gt;rtr_bus, rt-&gt;rtr_devfn);<br />-		/* fall back to default router */<br />-		pirq_router = pirq_routers + sizeof(pirq_routers) / sizeof(pirq_routers[0]) - 1;<br /> 		return;<br /> 	}<br />-	if (rt-&gt;rtr_vendor) {<br />-		rvendor = rt-&gt;rtr_vendor;<br />-		rdevice = rt-&gt;rtr_device;<br />-	} else {<br />-		/*<br />-		 * Several BIOSes forget to set the router type. In such cases, we<br />-		 * use chip vendor/device. This doesn't guarantee us semantics of<br />-		 * PIRQ values, but was found to work in practice and it's still<br />-		 * better than not trying.<br />-		 */<br />-		DBG("PCI: Guessed interrupt router ID from %s\n", pirq_router_dev-&gt;slot_name);<br />-		rvendor = pirq_router_dev-&gt;vendor;<br />-		rdevice = pirq_router_dev-&gt;device;<br />-	}<br />-	for(r=pirq_routers; r-&gt;vendor; r++)<br />-		if (r-&gt;vendor == rvendor &amp;&amp; r-&gt;device == rdevice)<br />+<br />+	for(r=pirq_routers; r-&gt;vendor; r++) {<br />+		/* Exact match against router table entry? Use it! */<br />+		if (r-&gt;vendor == rt-&gt;rtr_vendor &amp;&amp; r-&gt;device == rt-&gt;rtr_device) {<br />+			pirq_router = r;<br /> 			break;<br />-	pirq_router = r;<br />-	printk("PCI: Using IRQ router %s [%04x/%04x] at %s\n", r-&gt;name,<br />-	       rvendor, rdevice, pirq_router_dev-&gt;slot_name);<br />+		}<br />+		/* Match against router device entry? Use it as a fallback */<br />+		if (r-&gt;vendor == pirq_router_dev-&gt;vendor &amp;&amp; r-&gt;device == pirq_router_dev-&gt;device) {<br />+			pirq_router = r;<br />+		}<br />+	}<br />+	printk("PCI: Using IRQ router %s [%04x/%04x] at %s\n",<br />+		pirq_router-&gt;name,<br />+		pirq_router_dev-&gt;vendor,<br />+		pirq_router_dev-&gt;device,<br />+		pirq_router_dev-&gt;slot_name);<br /> }<br /> <br /> static struct irq_info *pirq_get_info(struct pci_dev *dev, int pin)<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
