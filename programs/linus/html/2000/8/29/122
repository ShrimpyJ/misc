    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/8/28/23">First message in thread</a></li><li><a href="/lkml/2000/8/28/124">Dimitris Michailidis</a><ul><li><a href="/lkml/2000/8/28/131">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/28/96">Dimitris Michailidis</a><ul><li><a href="/lkml/2000/8/28/187">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/28/114">George Anzinger</a></li><li><a href="/lkml/2000/8/28/126">George Anzinger</a></li></ul></li></ul></li><li><a href="/lkml/2000/8/28/118">Dimitris Michailidis</a><ul><li><a href="/lkml/2000/8/29/11">Ingo Molnar</a><ul><li><a href="/lkml/2000/8/29/1">Andrea Arcangeli</a></li><li><a href="/lkml/2000/8/29/13">"David S. Miller"</a></li><li><a href="/lkml/2000/8/29/121">Dimitris Michailidis</a></li></ul></li></ul></li><li class="origin"><a href="">(Linus Torvalds)</a></li></ul></li><li><a href="/lkml/2000/8/29/72">Ingo Molnar</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] scheduler bugfix, SMP, 2.4.0-test7</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">28 Aug 2000 22:09:37 -0700</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;XFMail.20000828195609.dimitris&#64;engr.sgi.com&gt;,<br />Dimitris Michailidis  &lt;dimitris&#64;cthulhu.engr.sgi.com&gt; wrote:<br />&gt;<br />&gt;I thought about it some more.  Yes, I can tell statically if I am the idle<br />&gt;thread or not, but how do I tell if the process that was running before me on<br />&gt;the CPU is the idle thread?<br /><br />Ehh.. Color me confused?<br /><br />Isn't this _exactly_ what you get if you know who the caller is (by<br />having different callers call different routines)?<br /><br />Basically, the "previous process" that did the schedule, is, by<br />definition, the process that called into the scheduler.<br /><br />So if we have the idle thread use a special scheduler, we always know<br />that the process that ran previously on the CPU was the idle thread. We<br />will switch _into_ a non-idle thread, and that thread will eventually<br />context switch away through the "normal" scheduler, but we certainly<br />know we used to be idle.<br /><br />Note that this would require that we do the eip restore slightly<br />differently. Right now we restore eip in the middle of the scheduler,<br />which means that when we schedule to a new process we will continue at<br />the point the new process required. That, I suspect, may be what you<br />were alluding to.<br /><br />Taking advantage of who called the scheduler would require that we don't<br />play the eip games quite at that point: we'd have to restore the eip of<br />the new process as the very last thing we'd do, rather than in the<br />middle of scheduling. But that would be nice anyway, as the current<br />thing is really hard to think about sometimes.<br /><br />(The natural way to change eip would be to change it on the stack frame,<br />so that when "schedule()" returns, it just automatically returns to the<br />proper place.  We actually do that right now, except we do it inside the<br />"__switch_to" call rather than the scheduler call.)<br /><br />Hmm.  I dunno.  But I'd love to get rid of the silly schedule_tail call<br />in "ret_from_fork". AND we'd get the nice idle thread behaviour. <br /><br />But looking at the implementation, it really looks qutie nasty to<br />implement any other way than the strange way it is done now.  So I guess<br />you're right. <br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
