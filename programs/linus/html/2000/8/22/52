    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/8/21/25">First message in thread</a></li><li><a href="/lkml/2000/8/22/64">"Eric S. Raymond"</a><ul><li><a href="/lkml/2000/8/22/23">Linus Torvalds</a></li><li><a href="/lkml/2000/8/22/69">"Eric S. Raymond"</a><ul><li class="origin"><a href="/lkml/2000/8/23/16">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/23/16">(Rogier Wolff)</a><ul><li><a href="/lkml/2000/8/23/47">Linus Torvalds</a></li><li><a href="/lkml/2000/8/23/87">Andre Hedrick</a></li></ul></li><li><a href="/lkml/2000/8/23/59">Paul Gortmaker</a></li><li><a href="/lkml/2000/8/23/129">"Mike A. Harris"</a><ul><li><a href="/lkml/2000/8/23/116">(John Alvord)</a></li></ul></li></ul></li><li><a href="/lkml/2000/8/23/97">"Eric S. Raymond"</a></li></ul></li><li><a href="/lkml/2000/8/23/52">Wolfgang Walter</a></li><li><a href="/lkml/2000/8/23/73">Ingo Molnar</a><ul><li><a href="/lkml/2000/8/23/13">(Kai Henningsen)</a></li></ul></li><li><a href="/lkml/2000/8/23/114"> yodaiken&#64;fsmlabs ...</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 22 Aug 2000 11:01:26 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Re: Move of input drivers, some word needed from you</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 22 Aug 2000, Eric S. Raymond wrote:<br />&gt;<br />&gt; Linus Torvalds &lt;torvalds&#64;transmeta.com&gt;:<br />&gt; &gt; But the "common code helps" thing is WRONG. Face it. It can hurt. A lot.<br />&gt; &gt; And people shouldn't think it is the God of CS.<br />&gt; <br />&gt; I think you're mistaken about this. <br /><br />I'll give you a rule of thumb, and I can back it up with historical fact.<br />You can back up yours with nada.<br /><br />Simple rule of thumb:<br /><br /> - sharing is good when it is true 100% sharing, no special cases, and<br />   there is nothing that has reason to avoid the sharing. <br /><br />	Example: the VM layer. TCP/IP. The VFS layer.<br /><br /> - sharing is bad when it's done to 90%, and people work at trying to<br />   avoid using the functionality that some other people want.<br /><br />	Example: the SCSI layer. Parts of the IDE driver. Glibc vs kernel<br />	header files. <br /><br />Quite frankly, the mentality that "we must share all common problems,<br />whether it makes sense or not" has resulted in untold woes. Usually it<br />starts out small. You add one more device. It obviously makes sense to<br />just tweak the code a bit. You add one more. You'll add some special case<br />code that only really matters for that one, and you hope that you got the<br />other cases right.<br /><br />Eventually, you'll have code that spans 5 generations of hardware, where<br />the first generation and the last one basically share _no_ commonality<br />except for the common heritage. And they share a lot of the code, because<br />they have been written to do things the same way, even if it really<br />wouldn't make much sense any more.<br /><br />End result: bad organization for the new hardware, inability to sanely<br />take advantage of the full features of the new hardware. Forcing people to<br />leave old code in place, because it is work-arounds for bugs in hardware<br />three generations gone. People end up having to thread very lightly<br />because the developer probably has access to all the new stuff, but<br />doesn't even have a way to test the old stuff any more - except by having<br />users holler when he broke it by mistake when he added code to handle new<br />cases.<br /><br />Face it. Every once in a while, you have to start afresh. Tell people that<br />"Ok, we can't share this code any more, it's getting to be a major<br />disaster".<br /><br />We've done this quite successfully several times. Each time it resulted in<br />a better product. Which is exactly the reverse of what you advocate.<br /><br />Example 1: "hd.c" was left alone, "ide.c" was created. Some day, we'll<br />hopefully leave "ide.c" alone, and create a "ata100.c" that only handles<br />modern hardware.<br /><br />Example 2: 53c8xx driver. Which broke from the 53c7xx driver and just said<br />"Screw it. That driver is too limited by the hardware it supports. I don't<br />want to deal with it". See also the u14-34f driver vs ultrastor.c.<br /><br />Example 3: ne2k driver. Nope, the ne.c file was not just expanded to<br />handle yet another card type. Yes, it shares the basic 8390 code anyway.<br /><br />This goes on and on and on. According to your logic, none of the above<br />improvements should ever have happened. You're wrong.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
