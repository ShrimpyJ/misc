    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/8/11/134">First message in thread</a></li><li><a href="/lkml/2000/8/11/185">(Linus Torvalds)</a><ul><li><a href="/lkml/2000/8/11/190">dean gaudet</a><ul><li><a href="/lkml/2000/8/11/193">Linus Torvalds</a></li><li><a href="/lkml/2000/8/12/57">"Theodore Y. Ts'o"</a><ul><li><a href="/lkml/2000/8/12/76">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/12/82">Alexander Viro</a></li><li><a href="/lkml/2000/8/12/90">"Theodore Y. Ts'o"</a></li><li><a href="/lkml/2000/8/12/93">Michael Rothwell</a></li><li><a href="/lkml/2000/8/13/117">Alan Cox</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2000/8/13/93">Pavel Machek</a><ul><li class="origin"><a href="/lkml/2000/8/14/38">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/14/38">Pavel Machek</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 13 Aug 2000 10:37:22 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: NTFS-like streams?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 12 Aug 2000, Pavel Machek wrote:<br />&gt; &gt; <br />&gt; &gt; and then access the "Icon" resource in it by just doing<br />&gt; &gt; <br />&gt; &gt; 	xv ~/myfile/Icon <br />&gt; <br />&gt; Sorry, this is not going to work. I played with this with podfuk, and<br />&gt; xv will probably stat myfile (just for fun), notice it is regular<br />&gt; file, and refuse to try to open myfile/Icon.<br />&gt; <br />&gt; What you however can do is xv ~/myfile#utar/Icon. This actually works<br />&gt; for me.<br /><br />I don't think this is a strong argument. Any program that "knows" that it<br />is handling a POSIX filesystem and simply does part of the work itself is<br />always going to break on extensions. That's just unavoidable. Adding the<br />magic string at the end makes "xv" happy, but might easily make something<br />else that assumes POSIX behaviour unhappy instead (ie somebody else does<br />'stat("myfile#utar")' and is unhappy because it doesn't exist).<br /><br />Tough. Whatever we do, complex files are going to act differently from<br />regular files. Even a HFS approach that looks _exactly_ like a UNIX<br />filesystem will confuse programs that get unhappy when the resource files<br />magically disappear when the non-resource file is deleted.<br /><br />Also, note that we can always break things up: even in the presense of<br />programs that _require_ POSIX behaviour because they think they know<br />better than the OS (silly thing to do) you can always just do<br /><br />	cp ~/myfile/Icon Icon.bpm<br />	xv Icon.bpm<br />	cp Icon.bpm ~/myfile/Icon<br /><br />instead. I'm personally worried not about individual programs not being<br />able to take advantage of the resources, but about Linux fundamentally not<br />_supporting_ the notion of resources at all. <br /><br />So what I want to make sure is that Linux supports the infrastructure for<br />people to take advantage of resource forks. The fact that not everybody is<br />going to be able to do so automatically is not my problem. <br /><br />[ Put another way: I suspect that we won't support resource forks natively<br />  for another few years, and HFS etc will have their own specialized<br />  stuff. I don't care all that much. But at the same time I do believe<br />  that eventually we'll probably have to handle it. And at _that_ point I<br />  care about the fact that our internal design has to be robust. It<br />  doesn't have to make everybody happy, but it has to be clean both<br />  conceptually and from a pure implementation standpoint. I don't want a<br />  "hack that works". ]<br /><br />			Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
