    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/8/11/134">First message in thread</a></li><li><a href="/lkml/2000/8/12/132">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/13/24">Abramo Bagnara</a><ul><li><a href="/lkml/2000/8/13/27">Mo McKinlay</a><ul><li><a href="/lkml/2000/8/13/28">Abramo Bagnara</a><ul><li><a href="/lkml/2000/8/13/32">Mo McKinlay</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2000/8/13/30">(Rogier Wolff)</a><ul><li><a href="/lkml/2000/8/13/34">Mo McKinlay</a><ul><li><a href="/lkml/2000/8/13/79">(Rogier Wolff)</a></li></ul></li><li><a href="/lkml/2000/8/13/78">Andrew Pimlott</a><ul><li><a href="/lkml/2000/8/13/82">(Rogier Wolff)</a><ul><li><a href="/lkml/2000/8/13/125">Alan Cox</a></li></ul></li></ul></li><li><a href="/lkml/2000/8/13/95">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/13/100">Michael Rothwell</a><ul><li><a href="/lkml/2000/8/13/104">Linus Torvalds</a></li><li><a href="/lkml/2000/8/13/129">"Theodore Y. Ts'o"</a></li></ul></li><li><a href="/lkml/2000/8/14/244">(Kai Henningsen)</a></li></ul></li></ul></li><li><a href="/lkml/2000/8/13/40">James Sutherland</a></li><li><a href="/lkml/2000/8/13/123">Alan Cox</a><ul><li class="origin"><a href="/lkml/2000/8/13/128">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/13/128">Alan Cox</a><ul><li><a href="/lkml/2000/8/13/145">Linus Torvalds</a></li><li><a href="/lkml/2000/8/13/146">James Sutherland</a></li><li><a href="/lkml/2000/8/13/209">Abramo Bagnara</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 13 Aug 2000 12:42:44 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: NTFS-like streams?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 13 Aug 2000, Alan Cox wrote:<br /><br />&gt; &gt; But "tar" won't even _see_ the thing. Unless "tar" starts to know about<br />&gt; &gt; S_IFCOMPLEX. In which case it's a non-issue.<br />&gt; <br />&gt; oh wonderful. So you've just broken my backup scripts. Congratulations.<br /><br />Alan. <br /><br />Calm down a moment, and THINK.<br /><br />How hard do you think it is to make the tar-test that does<br /><br />	if (S_ISDIR(st-&gt;st_mode)) {<br />		... traverse into directories ..<br />	}<br /><br />instead be<br /><br />	#ifdef S_ISCOMPLEX<br />	#define CAN_TRAVERSE(x) (S_ISCOMPLEX(x) || S_ISDIR(x))<br />	#else<br />	#define CAN_TRAVERSE(x)	(S_ISDIR(x))<br />	#endif<br /><br />	...<br /><br />	if (CAN_TRAVERSE(st-&gt;st_mode)) {<br />		.. traverse into directories ..<br />	}<br /><br />and suddenly tar _can_ handle resource forks. Sure, you'll need some extra<br />logic to handle the complex files data too, but really, Alan.<br /><br />What's the advantage, I hear you say?<br /><br />The above will work on HFS. But so will the current "tar". Resource forks<br />and all.<br /><br />The above will -also- work on NTFS. And the current setup will never do<br />that.<br /><br />&gt; tar is already backing up my HFS test partition, including the resource<br />&gt; forks. <br /><br />..and it can do so. <br /><br />The thing is, right now resource forks are only exported on HFS. As far as<br />I know, the Linux NTFS driver doesn't even try. But people are starting to<br />be more and more interested in supporting NTFS in a real way, rather than<br />the partial support it has now. You-know-who etc.<br /><br />Quite frankly, _eventually_ we'll have to bite the bullet and handle<br />resource forks. Maybe HFS will continue to use the current setup. Who<br />knows? But wouldn't it be nice to have a unified way of handling it? And<br />complain all you like, but the HFS way just cannot be the unified way.<br /><br />There are actually problems with the current HFS hackery: one of the<br />problems is that because it splits things up in different directories, you<br />have multiple dentries pointing to the same inode. That's fine: the dentry<br />code has no trouble with that per se (hard links), but I suspect it causes<br />races on create/remove.<br /><br />At the very least, I hope the virtual ".resource" directory is the same<br />physical inode as the directory it resides in, because otherwise the basic<br />"dir-&gt;i_sem" concurrency protection simply won't work.<br /><br />(To me it looks like that isn't the case. Race city. Nobody probably<br />cares, but it's an example of the fact that HFS is actually buggy as it is<br />implemented right now. Exactly because the VFS layer doesn't understand<br />what it is that HFS is trying to do).<br /><br />Do you see the problem now? Is pointing you to a real bug enough?<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
