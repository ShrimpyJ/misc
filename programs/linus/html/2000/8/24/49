    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/8/23/120">First message in thread</a></li><li><a href="/lkml/2000/8/23/5">(Linus Torvalds)</a><ul><li><a href="/lkml/2000/8/24/80">"Albert D. Cahalan"</a><ul><li><a href="/lkml/2000/8/24/45"> yodaiken&#64;fsmlabs ...</a><ul><li><a href="/lkml/2000/8/24/32">Linus Torvalds</a></li><li><a href="/lkml/2000/8/24/94"> yodaiken&#64;fsmlabs ...</a><ul><li><a href="/lkml/2000/8/24/73"> almesber&#64;lrc ...</a></li><li><a href="/lkml/2000/8/24/128"> yodaiken&#64;fsmlabs ...</a></li></ul></li></ul></li><li><a href="/lkml/2000/8/24/46">"Stephen C. Tweedie"</a><ul><li><a href="/lkml/2000/8/24/108">Alan Cox</a></li></ul></li><li class="origin"><a href="/lkml/2000/8/26/24">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/26/24">"Robert H. de Vries"</a></li></ul></li><li><a href="/lkml/2000/8/24/53">"Andi Kleen"</a><ul><li><a href="/lkml/2000/8/24/26">Linus Torvalds</a></li><li><a href="/lkml/2000/8/24/28">"Andi Kleen"</a><ul><li><a href="/lkml/2000/8/24/33">Alan Cox</a></li></ul></li><li><a href="/lkml/2000/8/24/65"> yodaiken&#64;fsmlabs ...</a><ul><li><a href="/lkml/2000/8/24/106">"Andi Kleen"</a></li></ul></li></ul></li><li><a href="/lkml/2000/8/24/98"> yodaiken&#64;fsmlabs ...</a><ul><li><a href="/lkml/2000/8/24/14"> yodaiken&#64;fsmlabs ...</a><ul><li><a href="/lkml/2000/8/24/15">Alan Cox</a></li></ul></li><li><a href="/lkml/2000/8/24/83">Alan Cox</a></li></ul></li><li><a href="/lkml/2000/8/24/134">"Andi Kleen"</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Aug 2000 21:54:55 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: SCO: "thread creation is about a thousand times faster than on native Linux"</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 24 Aug 2000, Albert D. Cahalan wrote:<br />&gt; <br />&gt; Nobody will send you a sane patch without you at least hinting<br />&gt; at what you might like to see. I'm sure many of us would be happy<br />&gt; to write the code, but not under the expectation that it will<br />&gt; be rejected.<br /><br />Acceptable solution:<br /> - add "tgid" (thread group ID) to "struct task_struct"<br /> - CLONE_PID will leave tgid unchanged.<br /> - non-CLONE_PID will set "tgid" to the same as pid<br /> - get_pid() checks that the new pid is not the tgid of any process.<br /><br />Basically, the above creates a new "session pid" for the collection of<br />threads. This is nothing new: the above is basially _exactly_ the same as<br />p-&gt;pgrp and p-&gt;session, so it fits quite well into the whole pid notion.<br /><br />It also means that "current-&gt;pid" basically becomes a traditional "thread<br />ID", while "current-&gt;tgid" effectively becomes what pthreads calls a<br />"pid". Except Linux does it the right way around, ie the same way we've<br />done sessions and process groups. Because, after all, this _is_ just a<br />process group extension.<br /><br />Now, once you have a "tgid" for each process, you can add system calls to <br /> - sys_gettgid(): get the thread ID<br /> - sys_tgkill(): do a pthreads-like "send signal to thread group" (or<br />   extend on the current sys_kill())<br /><br />Now, the problem is that the thread group kill thing for true POSIX<br />threads signal behaviour probably has to do some strange magic to get the<br />pthreads signal semantics right. I don't even know the exact details here,<br />so somebody who _really_ knows pthreads needs to look long and hard at<br />this (efficiency here may require that we have a circular list of each<br />"thread ID group" - ie that we add the proper process pointer list that<br />gets updated at fork() and exit() so that we can easily walk every process<br />in the process group list).<br /><br />Discussion welcome. Basically, it needs somebody who knows pthreads well,<br />but actually has good taste despite that fact. Such people seem to be in<br />short supply ;)<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
