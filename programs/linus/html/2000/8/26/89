    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/8/24/132">First message in thread</a></li><li><a href="/lkml/2000/8/24/57">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/26/97">David Wragg</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 26 Aug 2000 10:50:34 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: SCO: "thread creation is about a thousand times faster than on</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On 26 Aug 2000, David Wragg wrote:<br />&gt; <br />&gt; &gt; The CLONE_WAITPID patches I don't remember, so please refresh my memory<br />&gt; &gt; about what they look like, and why they were needed in the first place..<br />&gt; <br />&gt; POSIX says that any thread can do a wait() et al. for a child process.<br />&gt; But Linux currently thinks that a child processes is a child of a<br />&gt; particular thread, and so only that thread can wait() for it.<br /><br />Oh, ok.<br /><br />I'd actually disagree with CLONE_WAITPID, then. Because as far as I can<br />tell, you may have two real cases:<br /> - you want to wait on all _your_ children, as a part of a thread group.<br /> - you want to wait on any child of a member in your thread group.<br /><br />And the thread may want to do _both_ of these at different times. Which<br />implies that it is wrong to make this a "at thread-creation" flag. To me,<br />it sounds like it should just be a waitpid() flag, ie add a WTHREAD option<br />of waitpid and be done with it there instead. We'd already need to have<br />the list of threads, and they are protected by the same lock as the list<br />of children, so that shouldn't be very confusing at all...<br /><br />The implementation looks absolutely trivial: change the wait4()<br />implementation to have one outer loop that loops over all the thread group<br />members - but only if WTHREAD is set.<br /><br />(Note that you need this logic already even if you have the CLONE_WAITPID<br />flag, so if anything the WTHREAD flag is a simplification of<br />CLONE_WAITPID, because it makes the decision be a local one, not a global<br />one).<br /><br />Oh, and pthreads probably needs to have the WTHREAD semantics by default,<br />so on second thought it really should be a "WNOTHREAD" to turn it _off_<br />instead.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
