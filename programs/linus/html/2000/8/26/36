    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/8/25/105">First message in thread</a></li><li><a href="/lkml/2000/8/25/105">Rusty Russell</a><ul><li class="origin"><a href="/lkml/2000/8/27/51">Linus Torvalds</a><ul><li><a href="/lkml/2000/8/27/51">Rusty Russell</a><ul><li><a href="/lkml/2000/8/27/37">Alexander Viro</a><ul><li><a href="/lkml/2000/8/27/9"> kuznet&#64;ms2 ...</a></li></ul></li></ul></li><li><a href="/lkml/2000/8/26/99">Alexander Viro</a></li></ul></li><li><a href="/lkml/2000/8/28/113">Alan Cox</a><ul><li><a href="/lkml/2000/8/31/66">Jamie Lokier</a><ul><li><a href="/lkml/2000/8/31/149">Alexander Viro</a><ul><li><a href="/lkml/2000/8/31/185">Jamie Lokier</a></li></ul></li><li><a href="/lkml/2000/8/31/158">Alan Cox</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 26 Aug 2000 11:04:21 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] thread wakeup fix for 2.4.0-test7</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 26 Aug 2000, Rusty Russell wrote:<br />&gt;<br />&gt; &gt; Why do you call this a bug?<br />&gt; &gt; <br />&gt; &gt; Thread 1 still has the fd open (it's used by the poll()).<br />&gt; &gt; <br />&gt; &gt; The fact that thread 2 removed it from the fd table is immaterial.<br />&gt; <br />&gt; Your implementation disagrees with you: poll already returns POLLNVAL.<br />&gt; With the patch it just returns it immediately, rather than returning<br />&gt; it when/if it times out.<br /><br />Tough. It's still because YOUR program is buggy. You closed a file<br />descriptor that was in use.<br /><br />&gt; Single Unix Specification also disagrees with you:<br />&gt; <br />&gt; 	The close() function will deallocate the file descriptor<br />&gt; 	indicated by fildes. To deallocate means to make the file<br />&gt; 	descriptor available for return by subsequent calls to open()<br />&gt; 	or other functions that allocate file descriptors.<br /><br />No. SuS agrees with me 100%.<br /><br />The above is exactly what Linux does. The file descriptor is the _integer<br />number_allocated_to_that_process_ to describe the file. It has got NOTHING<br />to do with the file itself - think about dup() etc. <br /><br />The _file_ is kept open by the poll(). The file descriptor is closed.<br /><br />Think about mmap(): you can do<br /><br />	mmap(fd)<br />	close(fd);<br />	... the _file_ is still active through the mapping ...<br /><br />and the mmap doesn't go away. Nobody expects the mmap() to go away just<br />because you closed the fd. It's still there - and in fact SuS _requires_<br />that it is still there.<br /><br />The poll case is 100% the same.<br /><br />As is, btw, read() and write() and just about everything else. Try it. Do<br /><br />	thread 0<br /><br />	read(fd, xxxxx) /* blocks */<br /><br />					close(fd);<br /><br />	... read continues to work ...<br /><br />and the above is obviously the only "sane" semantics. <br /><br />"fd" is just a handle. Once you've looked it up, it's not used any more.<br />Closing it after the fact is a non-issue - you just got rid of the handle<br />that we've already used.<br /><br />&gt; So we could sleep in close (forever, maybe) until the polls are<br />&gt; finished if you prefer.<br /><br />Nope.<br /><br />Should close() wait until all memory mappings are gone too? Obviously not.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
