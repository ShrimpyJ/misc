    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/7/13/208">First message in thread</a></li><li><a href="/lkml/2000/7/13/230">Jeff Garzik</a><ul><li><a href="/lkml/2000/7/14/115">Andrew Morton</a><ul><li class="origin"><a href="/lkml/2000/7/14/122">(Linus Torvalds)</a><ul><li><a href="/lkml/2000/7/14/122">Richard Gooch</a><ul><li><a href="/lkml/2000/7/14/185">Matthew Wilcox</a></li><li><a href="/lkml/2000/7/16/23">"Theodore Y. Ts'o"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: PATCH 2.4.0.4.6: workaround for BUG() in slab.c</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">14 Jul 2000 11:16:19 -0700</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;396F2DF2.6FB2A67A&#64;uow.edu.au&gt;,<br />Andrew Morton  &lt;andrewm&#64;uow.edu.au&gt; wrote:<br />&gt;<br />&gt;We don't want to create another kernel thread just for cardbus.<br /><br />Actually, we do.<br /><br />In fact, we already did. There's a thread per socket, exactly because in<br />the end a lot of these things need to have a thread context. Do a 'ps ax'<br />and grep for "CardBus Watcher"..<br /><br />However, for all the wrong reasons (ie this is not how the old cs layer<br />works), the rest of the pcmcia layer doesn't know about this, and uses<br />timers for all its delays (because it thinks that it runs from an<br />interrupt context), instead of just doing a "schedule_timeout()". <br /><br />&gt;I think the best general way to fix this is for the timer handler to do<br />&gt;nothing but register a callback with something which is running in<br />&gt;process context, such as `swapper'.<br /><br />Actually, the best thing is to not use a timer handler at all, because<br />cs really _can_ sleep now. Which would make the code a lot more readable<br />too (the current timer-driven state-machine is rather opaque..)<br /><br />[ Except this only works with the yenta.c driver - the other low-level<br />  drivers don't do this.  I'm inclined to remove the other low-level<br />  drivers from the kernel, and just say that the in-kernel pcmcia<br />  support only supports cardbus controllers until somebody decides to<br />  port them to use kernel threads.  Which should be fairly easy, but<br />  requires testing. ]<br /><br />Comments?<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
