    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/7/27/5">First message in thread</a></li><li><a href="/lkml/2000/7/27/48">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/27/53">"Theodore Y. Ts'o"</a><ul><li><a href="/lkml/2000/7/27/55">Jamie Lokier</a></li><li class="origin"><a href="/lkml/2000/7/27/62">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/27/62">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/27/213">Jamie Lokier</a></li></ul></li><li><a href="/lkml/2000/7/27/212">Ulrich Drepper</a><ul><li><a href="/lkml/2000/7/27/66">Jamie Lokier</a></li><li><a href="/lkml/2000/7/27/68">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2000/7/27/215">"Theodore Y. Ts'o"</a><ul><li><a href="/lkml/2000/7/27/208">Linus Torvalds</a></li><li><a href="/lkml/2000/7/27/209">Jamie Lokier</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 27 Jul 2000 08:49:17 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: RLIM_INFINITY inconsistency between archs</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 27 Jul 2000, Theodore Y. Ts'o wrote:<br />&gt; <br />&gt;     (c) do a simple "generation" script. This is what I'd do in the case of<br />&gt; 	O_NOFOLLOW. In your makefile, just have<br />&gt; <br />&gt; 	   nofollow.h:<br />&gt; 		   grep define.*O_NOFOLLOW $(KERNELDIR)/include/asm-$(ARCH)/fcntl.h &gt; nofollow.h<br />&gt; <br />&gt; The only problem with this sort of thing is that you need to somehow<br />&gt; find KERNELDIR.   Some kind of convention to make it easy to set<br />&gt; KERNELDIR, even if it isn't /usr/src/linux because you don't like the<br />&gt; history and because stuff you don't like is depending on /usr/src/linux,<br />&gt; would be really useful.  Say, for example, /boot/kernel-headers being a<br />&gt; symlink to the kernel headers corresponding to the default kernel to be<br />&gt; booted?<br /><br />No. You really miss the point. That _still_ makes the program depend<br />differently on which kernel happens to be on which machine. Which is so<br />obviously wrong that I don't understand how anybody can accept it.<br /><br />I know people who _routinely_ compile stuff over NFS on another machine<br />simply because that other machine is a lot faster, and the network is<br />fast. They expect the binary to be the same. And I agree 100% percent. It<br />should NOT depend on your particular kernel configuration (and yes, some<br />kernel header files actually _change_: they depend on whether the kernel<br />was compiled for a PII or a i386 etc).<br /><br />Say you have a build-server that runs an older kernel because it doesn't<br />really matter, and it's not running gnome etc. Say your desktop uses USB<br />and you've upgraded. Or the reverse may be true, where the build-server is<br />a SMP machine that uses a newer kernel because it handles the load better.<br /><br />With your approach, that build-server would be unable to generate programs<br />that take advantage of the new features that somebody wanted to have in<br />the program. They would generate programs that are doing things that the<br />locally generated programs wouldn't be doing.<br /><br />What I mean is that the above generation-script should be generated<br />_once_. The source gets distributed with the generated file, so that<br />whatever happens you at least get reliable results in a reasonably<br />heterogenous environment.<br /><br />A "normal user" would never generate nofollow.h at all. The generation<br />script would be used by the _maintainer_ or by people who add new features<br />(And yes, in the above example it's rather simplistic. A real example<br />would generate the proper architecture ifdef's etc). <br /><br />I expect that library versions and compiler versions should matter to<br />compiling programs. But I do _not_ want kernel versions to do that. It's<br />already painful for people that you have to have the right library<br />version. I'd _hate_ to see source code that says "requires kernel 2.3.99<br />or higher sources in /usr/src/linux" in addition to saying "needs<br />glibc-2.1.2 or newer for threading reasons".<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
