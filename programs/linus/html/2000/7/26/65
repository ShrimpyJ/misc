    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/7/25/193">First message in thread</a></li><li><a href="/lkml/2000/7/25/194">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/26/55">"Stuart MacDonald"</a><ul><li class="origin"><a href="/lkml/2000/7/26/70">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/26/70">Tigran Aivazian</a><ul><li><a href="/lkml/2000/7/26/79">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 26 Jul 2000 08:55:17 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] removal of unnecessary irq save/restore in tasklet_hi_schedule</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 26 Jul 2000, Stuart MacDonald wrote:<br />&gt; &gt;<br />&gt; &gt; No, hard-irq's _can_ be re-entered. One hard-irq cannot re-enter itself,<br />&gt; &gt; but you can have _different_ irq's enter each other. As such, to avoid<br />&gt; &gt; deadlock in on the local CPU the current code is needed..<br />&gt; <br />&gt; So the following is allowable?<br />&gt; <br />&gt; hard_irq_a() {<br />&gt; ..<br />&gt;   hard_irq_b();<br />&gt; ..<br />&gt; }<br /><br />Yes.<br /><br />&gt; hard_irq_b() {<br />&gt; ..<br />&gt;   hard_irq_a();<br />&gt; ..<br />&gt; }<br /><br />Yes.<br /><br />&gt; Then hard_irq_a has re-entered itself.<br /><br />No.<br /><br />Both of the above are allowable, BUT <br /><br />	hard_irq_a()<br />		hard_irq_b()<br />			hard_irq_a()<br /><br />is not. We use the interrupt blocking hardware to make sure that as long<br />as irq A is running, further instances of irq A are blocked. OTHER<br />interrupts can still happen.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
