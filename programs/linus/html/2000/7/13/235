    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/7/13/3">First message in thread</a></li><li><a href="/lkml/2000/7/13/159">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/13/231">Richard Gooch</a><ul><li><a href="/lkml/2000/7/13/167">Richard Gooch</a><ul><li><a href="/lkml/2000/7/13/173">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/13/174">Alan Cox</a></li><li><a href="/lkml/2000/7/13/184">Martin Douda</a></li><li><a href="/lkml/2000/7/13/190">Urban Widmark</a></li><li><a href="/lkml/2000/7/14/6">Mike Castle</a></li></ul></li></ul></li><li><a href="/lkml/2000/7/13/213">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/14/99">Marco Colombo</a></li></ul></li></ul></li><li><a href="/lkml/2000/7/13/241">"Jeff V. Merkey"</a><ul><li><a href="/lkml/2000/7/13/163">Alan Cox</a><ul><li><a href="/lkml/2000/7/13/219">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/14/36">David Howells</a></li></ul></li><li><a href="/lkml/2000/7/13/234">"Jeff V. Merkey"</a></li></ul></li><li class="origin"><a href="/lkml/2000/7/13/166">Linus Torvalds</a><ul><li><a href="/lkml/2000/7/13/166">"Jeff V. Merkey"</a><ul><li><a href="/lkml/2000/7/13/170">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2000/7/13/242">Christopher Thompson</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 13 Jul 2000 14:49:28 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Announce] BKL shifting into drivers and filesystems - beware</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 13 Jul 2000, Jeff V. Merkey wrote:<br />&gt; &gt; <br />&gt; <br />&gt; Breaking the device drivers, protocol stacks, disk drivers, file<br />&gt; systems, etc. out of the kernel  proper and forcing them to always be<br />&gt; loadable modules would achieve this end with the added benefit of<br />&gt; allowing folks to plug in their own optimized binary versions -- Like<br />&gt; NetWare and NT are today. <br /><br />No, it would be a complete disaster.<br /><br />You'd get the same kind of disaster that all binary-only modules have: you<br />cannot change fundamental interfaces.<br /><br />In another five or ten years, we may be at the point where the fundamental<br />interfaces _really_ don't change, and that we've handled all the<br />scalability issues and that we have no need to add new interfaces. At THAT<br />point we can just say "ok, drivers are truly independent".<br /><br />It's not true today.<br /><br />Basically, the thing that allows 2.4.x to scale as well as it does (and it<br />does really well: look at the current SpecWeb99 world record numbers, and<br />compare it to the also-ran second place), is exactly because we had all<br />the source in one place, and we _could_ make fundamental changes. Claiming<br />anything else is silly - if we had broken-up device drivers, we'd have<br />been up shit creek without a paddle. End of story.<br /><br />This is the thing that people don't understand. In theory it is wonderful<br />to have modularization. It's the best thing on earth. But if that<br />modularization means that you can't fix the module interfaces, then you're<br />going to remain broken for all time.<br /><br />This is why I rather fix module interfaces early and often. Make sure that<br />we (a) have good interfaces that matches what the different parts of the<br />kernel want to have and (b) make people used to the fact that a driver or<br />a filesystem is not a static thing, and keep them aware of the fact that<br />it depends on the kernel underneath it.<br /><br />We're certainly getting closer to a good interface in many areas. The<br />current VFS interfaces, for example, are pretty good - although many of<br />the less important ones still depend on the kernel lock etc. But we're<br />_not_ at the stage yet where we could just say "ok, a driver is a driver,<br />and we don't need to worry about it".<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.rutgers.edu<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
