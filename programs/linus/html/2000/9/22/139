    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/9/19/85">First message in thread</a></li><li><a href="/lkml/2000/9/22/93">Linus Torvalds</a><ul><li><a href="/lkml/2000/9/22/126">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/2000/9/22/79">Linus Torvalds</a><ul><li><a href="/lkml/2000/9/22/79">Andrea Arcangeli</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 22 Sep 2000 11:08:21 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: GCC proposal for "&#64;" asm constraint</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 22 Sep 2000, Andrea Arcangeli wrote:<br />&gt;<br />&gt; If you don't like the name smp_mb__before/after_clear_bit (not that I like it<br />&gt; too much too) suggestions are welcome. Maybe we could use a single<br />&gt; smp_mb__across_bitops() instead?<br /><br />I suspect that we should just split up the bitops.<br /><br />We've done this once already. We used to have just one set of bitops that<br />always returned the old value, and it was inefficient when many users<br />don't actually care and you can often do it faster if the return value<br />doesn't matter. Thus the (long ago) split of "set_bit()" to "set_bit()"<br />and "test_and_set_bit()".<br /><br />These days we have similar issues. In many cases we don't even want the<br />SMP safety - we just want to set a bit, and we already do locking. This<br />shows up in the mm code, for example - we use test_and_change_bit() for<br />the buddy allocator, and it doesn't have to be atomic because we have to<br />have locking for other reasons anyway. So on x86 we basically waste cycles<br />on locked accesses several times for each alloc/free page.<br /><br />The same is true in the filesystems - many of them want to change block or<br />inode allocation bitmap bits, but they have to hold a lock anyway (usually<br />the kernel lock in addition to the superblock lock.<br /><br />And in some circumstances (page locking, possible buffer cache locking)<br />you obviously do want the memory barrier stuff, and you're right, making<br />it associated with the bit operations allows for faster code on x86 where<br />the locked bit ops are barriers in themselves.<br /><br />Ugh. There's quite a lot of combinations there. Maybe your approach is the<br />cleanest one.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
