    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/9/16/2">First message in thread</a></li><li><a href="/lkml/2000/9/17/63">Linus Torvalds</a><ul><li><a href="/lkml/2000/9/17/125">Jan Niehusmann</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2000/9/17/126">Torben Mathiasen</a><ul><li><a href="/lkml/2000/9/17/40">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 17 Sep 2000 17:43:20 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: SCSI scanning</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 17 Sep 2000, Jan Niehusmann wrote:<br />&gt; <br />&gt; Further investigation shows that this duplication is caused by  the call<br />&gt; to scan_scsis in line 1565 of scsi.c, and this one can not be commented out<br />&gt; as it is needed. <br />&gt; <br />&gt; But I have some problems understanding all the module/non-module stuff:<br />&gt; hosts.c, lines 1002-1004, look as follows:<br />&gt; <br />&gt; #ifdef CONFIG_BLK_DEV_SD<br />&gt;     scsi_register_device(&amp;sd_template);<br />&gt; #endif<br />&gt; <br />&gt; If I understand that correctly, the line is executed for both <br />&gt; CONFIG_BLK_DEV_SD=m and CONFIG_BLK_DEV_SD=y, isn't it?<br /><br />No.<br /><br />The above seems to be the bug. Or at least part of it.<br /><br />CONFIG_BLK_DEV_SD is only defined for the non-modular case.<br /><br />The config options behave differently on a C and on a configuration level.<br />On a Makefile/config level, they have values like "y"/"m"/"n". On a C<br />level, the logic is<br /><br />	"y" -&gt; #define CONFIG_XXX 1<br />	"m"/"n" -&gt; #undef CONFIG_XXX<br /><br />which may not be logical, but that's how it has historically always<br />worked.<br /><br />(Actually, it ends up being fairly logical - think of the Makefile level<br />as the level that decides what and when things get compiled, and the C<br />level is used to determine what _other_ things the code can depend on<br />being enabled - something being a module is irrelevant).<br /><br />So the above code behaves differently depending on whether BLK_DEV_SD is a<br />module or not.<br /><br />This is somethin gI've been trying very hard to go away - behaviour should<br />_not_ depend on whether something is a module, and it should not be<br />visible on a source code level. I want well-behaving modules to act as if<br />being compiled into the kernel was just a matter of being "early-loaded".<br />That way there is only one path through the system, and we don't get the<br />kind of problems that used to plague different drivers where they acted<br />quite differently depending on whether they were modular or not.<br /><br />(Why do I hate that? I don't use modules myself, and I hate getting<br />bug-reports on something that is broken when modular. So I want the<br />modular case to be the same as the non-modular case, so that I don't need<br />to worry about testing two entirely different configurations).<br /><br />&gt; &gt; and I don't see why we can't just remove that one and make modules and<br />&gt; &gt; compiled-in behave the same.<br />&gt; <br />&gt; We probably should, but this would mean changes to scsi.c, hosts.c,<br />&gt; and perhaps scsi_module.c, which is included in every low level scsi driver.<br />&gt; This may not be a change we want to do in 2.3, the additional #ifdef MODULE<br />&gt; in sd.c and sr.c is a much smaller change.<br /><br />I don't agree. I suspect that the change to remove the one or two places<br />like the above are not only as small, but they will mean that the problem<br />is fixed once and for all.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
