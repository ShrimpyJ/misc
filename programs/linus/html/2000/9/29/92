    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/9/26/90">First message in thread</a></li><li><a href="/lkml/2000/9/29/140">Jeff Garzik</a><ul><li><a href="/lkml/2000/9/29/108">Alan Cox</a><ul><li class="origin"><a href="/lkml/2000/9/29/50">Linus Torvalds</a><ul><li><a href="/lkml/2000/9/29/50">Alan Cox</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 29 Sep 2000 09:07:32 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] esssolo1.c: get rid of check_region</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 29 Sep 2000, Alan Cox wrote:<br /><br />&gt; &gt; In solo1_probe, an FM interface is registered.<br />&gt; &gt; <br />&gt; &gt; So, IMHO there is a bug somewhere...  Why register an FM interface in<br />&gt; &gt; probe, and then check_region for another FM driver in _open?  Is this<br />&gt; &gt; intentional or really a bug?<br />&gt; <br />&gt; The I/O port range is only activated in open<br /><br />Which is almost certainly a mis-feature.<br /><br />The IO port ranges (along with the IO memory ranges) should generally be<br />allocated and requested as soon as they are known. Now, that _may_ be at<br />open() time - there are cards that actually shut down completely and do<br />not react to IO etc until actually enabled through some magic means (*)<br />and potentially you could allocate the IO range dynamically at open() time<br />and make them shut up at any other time.<br /><br />But usually, you tend to know the IO port range at init time, and<br />allocating the port early rather than late at least gives other drivers<br />the _potential_ to be able to avoid clashes etc. No, it doesn't work all<br />that well with modules etc, but on the whole it's nice to make old ISA<br />drivers etc aware of the fact that there is a driver that already claimed<br />the region.<br /><br />No, it doesn't matter in the case of the esssolo1 driver. It's a PCI<br />controller, and the PCI layer will have registered the ports anyway, so<br />you won't have the issue with ISA probes etc. But it's still a nice rule<br />to follow: tell the rest of the world early rather than late that you're<br />interested in a particular region.<br /><br />But even for PCI drivers, it's a nice way to tell another PCI driver that<br />might be able to handle the same hardware that it's already taken care of.<br />This actually happens for some stuff - like the SCSI drivers where you<br />have a "new" and an "old" driver that can potentially both handle the same<br />controller. If they use request_region() early, there is never any chance<br />of confusion.<br /><br />(The same holds for irq lines, at least the ones that can be shared, but<br />there are performance reasons why people might hold off from this, so it's<br />not as obvious any more).<br /><br />		Linus<br /><br />(*) Any PCI card is the obvious example, but they don't have this issue<br />due to the generic PCI layer knowing about them and initializing them<br />properly anyway. I'm more talking about the ISA PnP kind of things, or the<br />vendor-specific magic sequences.<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
