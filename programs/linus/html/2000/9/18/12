    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/9/17/80">First message in thread</a></li><li><a href="/lkml/2000/9/17/140">Linus Torvalds</a><ul><li><a href="/lkml/2000/9/18/140">Alexander Viro</a><ul><li class="origin"><a href="/lkml/2000/9/18/81">Linus Torvalds</a><ul><li><a href="/lkml/2000/9/18/81">Alexander Viro</a><ul><li><a href="/lkml/2000/9/18/226">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2000/9/18/224">Alexander Viro</a><ul><li><a href="/lkml/2000/9/18/80">Alexander Viro</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 17 Sep 2000 21:46:33 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: The INN/mmap bug</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 18 Sep 2000, Alexander Viro wrote:<br />&gt; <br />&gt; We might as well do it in create_empty_buffers(), FWIW. Do you see any<br />&gt; case when it would mean extra work? I'm thinking about the following:<br />&gt; <br />&gt; 	if (page is uptodate)<br />&gt; 		do get_block(...,0) for all buffers and mark them uptodate<br />&gt; <br />&gt; in the end of buffer-ring creation. Comments?<br /><br />The above _will_ cause extra work, notably for the case of writing to a<br />hole (first create_empty_buffers() will do the get_block( .., 0) and get a<br />zero, then the writing will do a get_block( .., 1) to actually allocate<br />the block.<br /><br />We could push the "create" thing into create_empty_buffers(), though. We'd<br />give it a "begin,end" the way writing wants, and a reader (or truncate)<br />would just pass in 0,0.<br /><br />Hmmm.. I like that approach - because I suspect that eventually we want to<br />change the FS mapping function away from the current buffer-based one, and<br />make it a page-based one to let the low-level filesystem handle the tail<br />etc issues itself.<br /><br />And when we do that, we'd have to pass in that "I'm going to want to dirty<br />this range" information anyway, and the current "create_empty_buffers()"<br />would in fact become the new "map this page, please" function.<br /><br />At that point, block_write_full_page() would become something like<br /><br />	unsigned long index = inode-&gt;i_size &gt;&gt; PAGE_CACHE_SHIFT;<br /><br />	offset = inode-&gt;i_size &amp; (PAGE_CACHE_SIZE-1);<br />	if (index &gt; page-&gt;index)<br />		offset = PAGE_CACHE_SIZE;<br /><br />	create_empty_buffers(page, 0, offset);<br />	for_each_buffer(page) {<br />		if (buffer_mapped(bh))<br />			mark_buffer_dirty(bh);<br />	}<br /><br />which would certainly be simpler than the current code. Hmm.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
