    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/9/17/80">First message in thread</a></li><li><a href="/lkml/2000/9/18/226">Linus Torvalds</a><ul><li><a href="/lkml/2000/9/18/42">Alexander Viro</a><ul><li class="origin"><a href="/lkml/2000/9/18/22">Linus Torvalds</a><ul><li><a href="/lkml/2000/9/18/22">Alexander Viro</a><ul><li><a href="/lkml/2000/9/18/37">Andreas Dilger</a></li><li><a href="/lkml/2000/9/18/86">Roman Zippel</a></li><li><a href="/lkml/2000/9/18/196">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2000/9/18/190">Alexander Viro</a></li></ul></li><li><a href="/lkml/2000/9/19/138">Daniel Phillips</a><ul><li><a href="/lkml/2000/9/19/22">Daniel Phillips</a></li><li><a href="/lkml/2000/9/19/65">Daniel Phillips</a></li><li><a href="/lkml/2000/9/19/109">Alexander Viro</a></li></ul></li><li><a href="/lkml/2000/9/18/180">Alexander Viro</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Sep 2000 13:10:10 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: The INN/mmap bug</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 18 Sep 2000, Alexander Viro wrote:<br />&gt; &gt; <br />&gt; &gt; but should instead be<br />&gt; &gt; <br />&gt; &gt; 	static int make_buffer_uptodate(struct page *page, struct buffer_head * bh)<br />&gt; &gt; 	{<br />&gt; &gt; 		if (Page_Uptodate(page)) {<br />&gt; 		    ^^^^^^^^^^^^^^^^^^^<br />&gt; &gt; 			set_bit(BH_Uptodate, &amp;bh-&gt;b_state);<br />&gt; &gt; 			return;<br />&gt; &gt; 		}<br />&gt; &gt; 		ll_rw_block(READ, 1, &amp;bh);<br />&gt; &gt; 	}<br />&gt; <br />&gt; &gt; Forget about your "stage 1" and "stage 2" complications. They shouldn't<br />&gt; 				  ^^^^^^^^^^<br />&gt; &gt; exist.<br />&gt; <br />&gt; 	Erm...<br /><br />No, but that's just because you _think_ about the problem the wrong way<br />around.<br /><br />If you think about it like the above, it's not a "stage" at all. It's just<br />part of getting the buffer to be up-to-date.<br /><br />Very logical, very simple, no "fscking mess" at all.<br /><br />That's my argument. You're trying to make it a problem. It's not. It's<br />something new with the page cache, yes - the fact that the page cache<br />drives the logic means that the buffer "uptodate" logic is different, but<br />if you think about it some, you'll realize that that's actually just a<br />natural outgrowth of the fact that the buffer cache is slaved to the page<br />cache these days. <br /><br />It's not a "stage 2". It's a basic fact of life - we don't care _how_ the<br />page got to be up-to-date, because for all we know there are other ways to<br />get it to be up-to-date than your "stage 1". <br /><br />For example, a recvfile() implementation could mark the page up-to-date by<br />virtue of getting the information off the network. No "stage 1" or "stage<br />2" there at all: the make_buffer_uptodate() logic does _not_ mean that we<br />lost the buffers from "stage 1", it might equally well mean that we got<br />the page up-to-date through some other means.<br /><br />Just change how you think about the problem, and suddenly it's not a mess,<br />it's a design.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
