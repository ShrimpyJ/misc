    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/10/13/196">First message in thread</a></li><li><a href="/lkml/2000/10/16/125">Andrea Arcangeli</a><ul><li><a href="/lkml/2000/10/16/115">Linus Torvalds</a></li><li><a href="/lkml/2000/10/16/138">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/2000/10/17/71">Linus Torvalds</a><ul><li><a href="/lkml/2000/10/17/71">Andrea Arcangeli</a><ul><li><a href="/lkml/2000/10/17/41">Linus Torvalds</a></li><li><a href="/lkml/2000/10/17/90">Andrea Arcangeli</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 16 Oct 2000 20:11:55 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: mapping user space buffer to kernel address space</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 17 Oct 2000, Andrea Arcangeli wrote:<br />&gt; <br />&gt; If you won't delete map_user_kiobuf from your tree I think I've just provided a<br />&gt; real world MM corruption case where the user send the bug report back to us if<br />&gt; we only increase the reference count of the page to pin it.<br /><br />Oh. So to fix a bug, you say "either delete the code, or do something else<br />that is completely idiotic instead"?<br /><br />Sure, that's sensible. NOT.<br /><br />Andrea, explain to me how pinning _could_ work? Explain to me how you'd<br />lock down pages in virtual address space with multiple threads, and how<br />you'd handle the cases of:<br /><br /> - two threads doing direct IO from different parts of the same page<br /> - one thread starting IO from a page, another thread unmapping the range<br /><br />Basically, you can't handle it sanly, because the notion of virtual<br />pinning really isn't a sane notion. The first case would need a special<br />"pinning count". Which is too expensive to be an option, although I've<br />seen patches that seemed to do something like that - I consider the whole<br />notion idiotic.<br /><br />The second case would require that unmap() synchronize completely with the<br />IO. Which is wasteful, and doesn't make any sense: what's the point, when<br />you can avoid it by just not pinning?<br /><br />Neither option is, quite frankly, acceptable.<br /><br />So we're left with your suggestion to remove direct IO completely.<br />Something that I wouldn't mind horribly much, but too many people seem to<br />consider it worth-while - and while I've stubborny fought the direct-IO<br />patches a long time, every single technical argument I've had has been<br />successfully addressed over time.<br /><br />I'm sure this bug will get fixed too. And the fix probably won't end up<br />even being all that painful - it's probably a question of marking the page<br />dirty after completing IO into it and making sure the swap-out logic does<br />the right thing (ie try to write it out again - which is exactly the same<br />thing that happens right now if a user dirties a page while it's busy<br />doing write-out).<br /><br />In fact, the code may do this already, I'll let sct look into the exact<br />details and fix it.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
