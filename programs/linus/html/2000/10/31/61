    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/10/30/194">First message in thread</a></li><li><a href="/lkml/2000/10/30/205">Keith Owens</a><ul><li><a href="/lkml/2000/10/30/153">Keith Owens</a></li><li><a href="/lkml/2000/10/30/228">Rusty Russell</a><ul><li><a href="/lkml/2000/10/31/7">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2000/10/31/96">Peter Samuelson</a><ul><li><a href="/lkml/2000/10/31/13">"H. Peter Anvin"</a><ul><li><a href="/lkml/2000/10/31/115">Horst von Brand</a></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2000/10/31/172">Peter Samuelson</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 31 Oct 2000 09:29:48 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: test10-pre7</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 31 Oct 2000, Peter Samuelson wrote:<br />&gt; <br />&gt; The thing that Keith's patch does is flush these things out into the<br />&gt; open.  By using LINK_FIRST/LINK_LAST, we declare that "these are the<br />&gt; known issues" -- and then the rest of the objects are reordered, and if<br />&gt; something breaks, we track it down and add it to LINK_FIRST.<br /><br />But it doesn't even WORK.<br /><br />You need to have <br /><br />	LINK_FIRST1<br />	LINK_FIRST2<br />	LINK_FIRST3<br />	...<br /><br />etc to get the proper ordering.<br /><br />USB is the _easy_ case. There happen sto be only one file that cares about<br />ordering.<br /><br />In many other cases, like SCSI, we need almost _total_ ordering. For such<br />a case, theer is no "first" or "last" - there is a well-specific ORDER.<br /><br />Do you see the problem now? LINK_FIRST/LINK_LAST is a complete and utter<br />hack, and it WON'T EVER WORK. The only way it would work is to make<br />LINK_FIRST maintain the order, but once you do that LINK_FIRST is<br />completely superfluous, as it ends up being exactly the same as $(obj-y).<br /><br />See the fallacy? LINK_FIRST doesn't solve anything, because in the end it<br />has to do everything O_OBJS will have to do anyway: maintain the full<br />order.<br /><br />So trust me, LINK_FIRST/LINK_LAST is not going to happen. <br /><br />&gt; A few months ago I actually tried to write a make function (yes, GNU<br />&gt; make has these!) to remove duplicates while not sorting, but GNU make<br />&gt; doesn't seem to support the necessary iteration/(tail-)recursion<br />&gt; features.  (Surprising, considering GNU's overall LISP-ish worldview.)<br /><br />Ehh.. <br /><br />There are multiple solutions to this. One is to simply not do that then.<br />We've done that before, it's not all that painful at all. The classic<br />example is the current drivers/net/ Makefile, which is badly written<br />anyway (a mixture of old-style and new-style stuff), and has that 8390.o<br />and slhc.o multiple thing. It's not that hard to re-write by just adding a<br />special<br /><br />	obj-8390-$(CONFIG_xxx) = y<br /><br />for every config that wants 8390.o (and same thing for slhc) and at the<br />very end do a final<br /><br />	obj-$(obj-8390-y) += 8390.o<br /><br />Not as simple as what we have now, but not a disaster like the current<br />lack of ordering is.<br /><br />And if you really want to remove duplicates, at worst we can even use an<br />external program for it - which would solve all these things once and for<br />all. The difference between<br /><br />	$(filter .. black magic lies here ..)<br /><br />and <br /><br />	$(shell .. black magic lies here ..)<br /><br />is not that big.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
