    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/10/22/3">First message in thread</a></li><li><a href="/lkml/2000/10/26/158">(Eric W. Biederman)</a><ul><li><a href="/lkml/2000/10/26/9">Dan Kegel</a><ul><li class="origin"><a href="/lkml/2000/10/26/78">Linus Torvalds</a><ul><li><a href="/lkml/2000/10/26/78">Dan Kegel</a></li><li><a href="/lkml/2000/10/26/92">(Jim Gettys)</a><ul><li><a href="/lkml/2000/10/27/16">"Chris Swiedler"</a></li><li><a href="/lkml/2000/10/26/118">Dan Kegel</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Oct 2000 09:44:21 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 26 Oct 2000, Dan Kegel wrote:<br />&gt; <br />&gt; With level-triggered interfaces like poll(), your chances<br />&gt; of writing a correctly functioning program are higher because you<br />&gt; can throw events away (on purpose or accidentally) with no consequences; <br />&gt; the next time around the loop, poll() will happily tell you the current<br />&gt; state of all the fd's.<br /><br />Agreed.<br /><br />However, we also need to remember what got us to this discussion in the<br />first place. One of the reasons why poll() is such a piggy interface is<br />exactly because it tries to be "nice" to the programmer.<br /><br />I'd much rather have an event interface that is documented to be edge-<br />triggered and is really _lightweight_, than have another interface that<br />starts out with some piggy features.<br /><br />I do understand that level to some degree is "nicer", but everybody pretty<br />much agrees that apart from requireing more care, edge-triggered certainly<br />does everything the level-triggered interfaces do. <br /><br />For example, if you want to only partially handle an event (one of the<br />more valid arguments I've seen, although I do not agree with it actually<br />being all that common or important thing to do), the edge-triggered<br />interface _does_ allow for that. It's fairly easy, in fact: you just<br />re-bind the thing.<br /><br />(My suggested "bind()" interface would be to just always add a newly bound<br />fd to the event queue, but I would not object to a "one-time test for<br />active" kind of "bind()" interface either - which would basically allow<br />for a poll() interface - and the existing Linux internal "poll()"<br />implementation actually already allows for exactly this so it wouldn't<br />even add any complexity).<br /><br />&gt; With edge-triggered interfaces, the programmer must be much more careful<br />&gt; to avoid ever dropping a single event; if he does, he's screwed.<br />&gt; This gives rise to complicated code in apps to remember the current<br />&gt; state of fd's in those cases where the programmer has to drop events.<br /><br />No, the "re-bind()" approach works very simply, and means that the<br />overhead of testing whether the event is still active is not a generic<br />thing that _always_ has to be done, but something where the application<br />can basically give the kernel the information that "this time we're<br />leaving the event possibly half-done, please re-test now".<br /><br />Advantage: performance again. The common case doesn't take the performance<br />hit.<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
