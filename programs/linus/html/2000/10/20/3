    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/10/13/196">First message in thread</a></li><li><a href="/lkml/2000/10/18/164">Linus Torvalds</a><ul><li><a href="/lkml/2000/10/18/16">Andrea Arcangeli</a></li><li><a href="/lkml/2000/10/18/30">Andrea Arcangeli</a></li><li><a href="/lkml/2000/10/18/85">Stephen Tweedie</a></li><li><a href="/lkml/2000/10/20/18">Stephen Tweedie</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Oct 2000 10:34:53 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: mapping user space buffer to kernel address space</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 19 Oct 2000, Stephen Tweedie wrote:<br />&gt; &gt; <br />&gt; &gt; Then, we'd move the "writeout" part into the LRU queue side, and at that<br />&gt; &gt; point I agree with you 100% that we probably should just delay it until<br />&gt; &gt; there are no mappings available<br />&gt; <br />&gt; I've just been talking about this with Ben LaHaise and Rik van Riel,<br />&gt; and Ben brought up a nasty problem --- NFS, which because of its<br />&gt; credentials requirements needs to have the struct file available in<br />&gt; its writepage function.  Of course, if we defer the write then we<br />&gt; don't necessarily have the file available when we come to flush the<br />&gt; page from cache.<br /><br />Yes. But that doesn't mean that swapping couldn't do it (swapping<br />fundamentally doesn't have credentials).<br /><br />And note that this is not about "NFS is broken" - any remote filesystem<br />will have some issues like this, and shared mappings will always have to<br />handle this case.<br /><br />So basically I agree that shared mappings cannot be converted to this<br />setup, I was only talking about the specific case of the swapping (and<br />anonymous shared memory, which along with SysV IPC shm is basically the<br />same thing and already uses the swap cache).<br /><br />So what I was thinking of was the very end of try_to_swap_out(), where we<br />have noticed that we do not have a "swapout()" function, and we need to<br />add the page to the swap cache. I would suggest moving _that_ code to the<br />LRU queue, and handling it conceptually together with the stuff that<br />handles the buffer cache writeout.<br /><br />--<br /><br />And no, I haven't forgotten about the case of direct IO into a shared<br />mapping. That _is_ going to be different in many ways, and I suspect that<br />a solution to that particular issue may be to move the "vm_file"<br />information from when we do the virtual kiobuf lookup into the kiobuf's,<br />because otherwise we'd basically lose that information.<br /><br />(We _already_ lose that information, in fact. Keeping the page in the<br />virtual mapping doesn't really even fix it - because the page can be in<br />multiple virtual mappings with different vm_file's and thus different<br />credentials. And the kiobuf's do not really contain any information of<br />_which_ of the credentials we looked up. It happens to work, but it's<br />conceptually not very correct).<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
