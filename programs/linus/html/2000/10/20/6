    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/10/13/166">First message in thread</a></li><li><a href="/lkml/2000/10/19/149">Linus Torvalds</a><ul><li><a href="/lkml/2000/10/20/104">Ben LaHaise</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Oct 2000 10:18:11 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: oopses in test10-pre4 (was Re: [RFC] atomic pte updates and pae changes, take 3)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 20 Oct 2000, Ben LaHaise wrote:<br />&gt; <br />&gt; The primary reason I added the BUG was that if this is valid, it means<br />&gt; that the pte has to be removed from the page tables first with<br />&gt; pte_get_and_clear since it can be modified by the other CPU.  Although<br />&gt; this may be safe for shm, I think it's very ugly and inconsistent.  I'd<br />&gt; rather make the code transfer the dirty bit to the page struct so that we<br />&gt; *know* there is no information loss.<br /><br />Note that we should have done this regardless of the BUG() tests: remember<br />the PAE case, and the fact that it was illegal to do<br /><br />	set_pte(page_table, swp_entry_to_pte(entry));<br /><br />without having atomically cleared the pte first.<br /><br />So regardless of any dirty/writable issues, that ptep_get_and_clear()<br />should be above the test for the PageSwapCache. Thanks for the patch.<br /><br />Now, I agree 100% with you that we should _also_ make sure that we<br />transfer the dirty bit from the page tables to "struct page". Even if we<br />don't actually use that information right now. We _could_ use it: in<br />particular we could probably fairly easily speed up shared memory handling<br />by using the same kind of optimization that we do for private mappings -<br />using the dirty bit in the page table to determine whether we need to<br />write the page out again or not.<br /><br />This all needs more thought, I suspect. But for now moving the<br />ptep_get_and_clear() up, and removing the BUG() is sufficient to get us<br />where we used to be.<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
