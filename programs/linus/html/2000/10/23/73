    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/10/23/150">First message in thread</a></li><li><a href="/lkml/2000/10/23/150">"Petr Vandrovec"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 23 Oct 2000 13:57:22 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.4.0-test10-pre3:Oops in mm/filemap.c:filemap_write_pa</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 23 Oct 2000, Petr Vandrovec wrote:<br />&gt; <br />&gt; Yes. Bad news. No problem was catched in filemap_nopage, but one<br />&gt; (of 57000) pages was dirty and had page-&gt;mapping == NULL... (maybe<br />&gt; only one was caused that this was just after bootup, with plenty of memory)<br />&gt; Maybe I should look at readahead code?<br /><br />Yes, you're right, read-ahead is in fact even more likely to catch the<br />race.<br /><br />&gt; In case of truncate it is going irrevocable away. Accesses after truncate<br />&gt; should (and sometime give you) SIGBUS...<br /><br />Yes. But I'd rather have a small race where we under certain strange<br />circumstances forget to raise a SIGBUS than have a kernel bug that causes<br />oops and possible filesystem corruption. <br /><br />So I'm not just looking for a fix, I'm also looking for a SIMPLE fix, with<br />perhaps some major surgery later (things like making the inode semaphore a<br />read-write semaphore and just always synchronizing 100% on i_size - which<br />would fix the problem, but is not a 2.4.x thing, no way Jose).<br /><br />&gt; First page-&gt;mapping == NULL entry in syslog is dated 22:23:58, but<br />&gt; couple of entries was lost before (probably I should print only '.' for<br />&gt; each such page; this run there was more than 100 such pages)<br />&gt; Another question is why SIGCHLD was delivered to parent AFTER ftruncate,<br />&gt; but exit was invoked couple of seconds before - maybe it syncs<br />&gt; child address space to disk?<br /><br />exit() basically does do a msync(MSASYNC), so that could be it. <br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
