    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/10/27/175">First message in thread</a></li><li><a href="/lkml/2000/10/27/175">George Anzinger</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 27 Oct 2000 10:47:55 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Full preemption issues</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 27 Oct 2000, George Anzinger wrote:<br />&gt; <br />&gt; First, as you know, we have added code to the spinlock macros to count<br />&gt; up and down a preemption lock counter.  We would like to not do this if<br />&gt; the macro also turns off local interrupts.  The issue here is that in<br />&gt; some places in the code, spin_lock_irq() or spin_lock_irqsave() is<br />&gt; called but spin_unlock_irq() or spin_lock_irqrestore() is not.  This, of<br />&gt; course, confuses the preemption count.  Attached is a patch that<br />&gt; addresses this issue.  At this time we are not asking you to apply this<br />&gt; patch, but to indicate if we are moving in an acceptable direction.<br /><br />Looks entirely sane to me.<br /><br />&gt; The second issue resolves around the naming conventions used in the<br />&gt; kernel.  We want to extend this work to include the SMP kernel, but to<br />&gt; do this we need to have several levels of names for the spinlock<br />&gt; macros.  We note that the kernel uses "_" and "__" prefixes in some<br />&gt; macros, but can not, by inspection, figure out when to uses these<br />&gt; prefixes.  Could you explain this convention or is this wisdom written<br />&gt; somewhere?<br /><br />The "wisdom" is not written down anywhere, and is more a convention than<br />anything else. The convention is that a prepended "__" means that "this is<br />an internal routine, and you can use it, but you should damn well know<br />what you're doing if you do". For example, the most common use is for<br />routines that need external locking - the version that does its own<br />locking and is thus "safe" to use in normal circumstances has the regular<br />name, and the version of the routine that does no locking and depends on<br />the caller to lock for it has the "__" version.<br /><br />Your proto code does not break this convention in any way..<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
