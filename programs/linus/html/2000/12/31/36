    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/12/29/121">First message in thread</a></li><li><a href="/lkml/2000/12/31/48">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/31/62">Andrea Arcangeli</a></li><li><a href="/lkml/2000/12/31/84">Alexander Viro</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 31 Dec 2000 09:12:21 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] Generic deferred file writing</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 31 Dec 2000, Alexander Viro wrote:<br />&gt; <br />&gt; On Sun, 31 Dec 2000, Linus Torvalds wrote:<br />&gt; <br />&gt; &gt; The other thing is that one of the common cases for writing is consecutive<br />&gt; &gt; writing to the end of the file. Now, you figure it out: if get_block()<br />&gt; &gt; really is a bottle-neck, why not cache the last tree lookup? You'd get a<br />&gt; &gt; 99% hitrate for that common case.<br />&gt; <br />&gt; Because it is not a bottleneck. The _real_ bottleneck is in ext2_new_block().<br />&gt; Try to profile it and you'll see.<br />&gt; <br />&gt; We could diddle with ext2_get_block(). No arguments. But the real source of<br />&gt; PITA is balloc.c, not inode.c. Look at the group descriptor cache code and<br />&gt; weep. That, and bitmaps handling.<br /><br />I'm not surprised. Just doign pre-allocation 32 blocks at a time would<br />probably help. But that code really should be re-written, I think.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
