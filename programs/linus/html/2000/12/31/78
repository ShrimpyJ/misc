    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/12/29/121">First message in thread</a></li><li><a href="/lkml/2000/12/30/79">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/31/23">Andrea Arcangeli</a><ul><li><a href="/lkml/2000/12/31/48">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/31/62">Andrea Arcangeli</a></li><li><a href="/lkml/2000/12/31/84">Alexander Viro</a><ul><li><a href="/lkml/2000/12/31/36">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2000/12/31/32">Roman Zippel</a><ul><li><a href="/lkml/2001/4/21/9">Alexander Viro</a><ul><li><a href="/lkml/2001/4/21/170">Roman Zippel</a><ul><li><a href="/lkml/2001/4/22/10">Alexander Viro</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2000/12/31/69">Daniel Phillips</a><ul><li class="origin"><a href="/lkml/2000/12/31/12">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/31/12">Daniel Phillips</a><ul><li><a href="/lkml/2000/12/31/49">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2000/12/31/55">Roman Zippel</a><ul><li><a href="/lkml/2000/12/31/85">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2001/1/2/73">Chris Mason</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 31 Dec 2000 10:44:09 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] Generic deferred file writing</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 31 Dec 2000, Daniel Phillips wrote:<br />&gt; <br />&gt; It's not that hard or inefficient to return the ENOSPC from the usual<br />&gt; point.  For example, make a gross overestimate of the space needed for<br />&gt; the write, compare to a cached filesystem free space value less the<br />&gt; amount deferred so far, and fail to take the optimization if it looks<br />&gt; even close.<br /><br />Let me repeat myself one more time:<br /><br /> I do not believe that "get_block()" is as big of a problem as people make<br /> it out to be.<br /><br />And more importantly:<br /><br /> I strongly believe that trying to be clever is detrimental to your<br /> health. <br /><br /> The "clever" approach is to add tons of complexity, have various<br /> heuristics to try to not overflow, and then try to debug it considering<br /> that the ENOSPC case is actually rather rare.<br /><br /> The "intelligent" approach is just to say that if get_block() shows up on<br /> the performance profiles, then it should be optimized.<br /><br />I'd rather be intelligent than clever. Optimize get_block(), which in the<br />case of ext2 seems to be mostly ext2_new_block() and the balloc.c mess.<br /><br />The argument that Andrea had is bogus: the common case for writes (and<br />writes is the only part that deferred writing would touch) is re-writing<br />the whole file, and the IO to look up the metadata is never an issue for<br />that case. Everything is basically cached and created on-the-fly. IO is<br />not the issue, being good about new block allocation _is_ the issue.<br /><br />Don't get me wrong: I like the notion of deferred writes. But I'm also<br />very pragmatic: I have not heard of a really good argument that makes it<br />obvious that deferred writes is a major win performance-wise that would<br />make it worth the complexity.<br /><br />One form of deferred writes I _do_ like is the mount-time-option form.<br />Because that one doesn't add complexity. Kind of like the "noatime" mount<br />option - it can be worth it under some circumstances, and sometimes it's<br />acceptable to not get 100% unix semantics - at which point deferred writes<br />have none of the disadvantages of trying to be clever.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
