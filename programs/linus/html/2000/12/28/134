    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/12/28/129">First message in thread</a></li><li><a href="/lkml/2000/12/28/129">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/28/46">Marcelo Tosatti</a><ul><li class="origin"><a href="/lkml/2000/12/28/21">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/28/21">Andi Kleen</a><ul><li><a href="/lkml/2000/12/28/108">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2000/12/28/37">Marcelo Tosatti</a><ul><li><a href="/lkml/2000/12/28/123">Rik van Riel</a></li></ul></li><li><a href="/lkml/2000/12/28/40">Daniel Phillips</a></li><li><a href="/lkml/2000/12/28/48">"David S. Miller"</a><ul><li><a href="/lkml/2000/12/29/69">Mark Hemment</a></li></ul></li><li><a href="/lkml/2000/12/28/85">Andi Kleen</a><ul><li><a href="/lkml/2000/12/28/23">Rik van Riel</a></li></ul></li><li><a href="/lkml/2000/12/28/115">"David S. Miller"</a></li><li><a href="/lkml/2000/12/29/7">Daniel Phillips</a></li><li><a href="/lkml/2000/12/28/132">Marcelo Tosatti</a><ul><li><a href="/lkml/2000/12/28/80">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2000/12/28/144">Andi Kleen</a><ul><li><a href="/lkml/2000/12/28/43">"David S. Miller"</a></li><li><a href="/lkml/2000/12/28/61">Rik van Riel</a></li><li><a href="/lkml/2000/12/28/102">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2000/12/29/71">Marcelo Tosatti</a><ul><li><a href="/lkml/2000/12/29/43">(Linus Torvalds)</a></li><li><a href="/lkml/2001/1/3/46">Chris Mason</a></li></ul></li><li><a href="/lkml/2000/12/28/156">Andi Kleen</a></li></ul></li></ul></li><li><a href="/lkml/2000/12/28/62">Jonathan Hudson</a></li><li><a href="/lkml/2000/12/29/90">Tom Rini</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 28 Dec 2000 12:59:22 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: test13-pre5</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Thu, 28 Dec 2000, Marcelo Tosatti wrote:<br />&gt; <br />&gt; On Thu, 28 Dec 2000, Linus Torvalds wrote:<br />&gt; <br />&gt; &gt; This still doesn't tell "sync()" about dirty pages (ie the "innd loses the<br />&gt; &gt; active file after a reboot" bug), but now the places that mark pages dirty<br />&gt; &gt; are under control. Next step..<br />&gt; <br />&gt; Do you really want to split the per-address-space pages list in dirty and<br />&gt; clean lists for 2.4 ?<br />&gt; <br />&gt; Or do you think walking the current per-address-space page list searching<br />&gt; for dirty pages and syncing them is ok?<br /><br />There are a few issues:<br /><br /> - fdatasync/fsync is often quite critical for databases. It's _possibly_<br />   ok to just walk all the pages for an inode, but I'm fairly certain that<br />   this is an area where if we don't have a separate dirty queue we _will_<br />   need to add one later.<br /><br /> - global dirty list for global syn(). We don't have one, and I don't<br />   think we want one. We could add a few lists, and split up the active<br />   list into "active" and "active_dirty", for example, but I don't like<br />   the implications that would probably have for the LRU ordering.<br /><br /> - we absolutely do _not_ want to make "struct page" bigger. We can't<br />   afford to just throw away another 8 bytes per page on adding a new list<br />   structure, I feel. Even if this would be the simplest solution.<br /><br />So right now I think the right idea is to<br /><br /> - split up "address_space-&gt;pages" into "-&gt;clean_pages" and<br />   "-&gt;dirty_pages".  This is fairly easily done, it requires small changes<br />   like making "truncate_inode_pages()" instead be<br />   "truncate_list_pages()", and making "truncate_inode_pages()" call that<br />   for both the dirty and the clean lists. That's about 10 lines of diff<br />   (I already tried this), and that's about the biggest example of<br />   something like that. Most other areas don't much care about the inode<br />   page lists.<br /><br /> - make "SetPageDirty()" do something like<br /><br />	if (!test_and_set(PG_dirty, &amp;page-&gt;flags)) {<br />		spin_lock(&amp;page_cache_lock);<br />		list_del(page-&gt;list);<br />		list_add(page-&gt;list, page-&gt;mapping-&gt;dirty_pages);<br />		spin_unlock(&amp;page_cache_lock);<br />	}<br /><br />   This will require making sure that every place that does a<br />   SetPageDirty() will be ok with this (ie double-check that they all have<br />   a mapping: right now the free_pte() code in mm/memory.c doesn't care,<br />   because it knew that it coul dmark even anonymous pages dirty and<br />   they'd just get ignored.<br /><br /> - make a filemap_fdatasync() that walks the dirty pages and does a<br />   writepage() on them all and moves them to the clean list.<br /><br /> - make fsync() and fdatasync() call the above function before they even<br />   call the low-level per-FS code.<br /><br /> - make sync_inodes() use that same filemap_fdatasync() function so that<br />   the sync() case is handled.<br /><br />All done. It looks something like 5-10 places, most of which are about 10<br />lines of diff each, if even that.<br /><br />The only real worry would be that the locking isn't rigth, but getting the<br />pagemap lock should be the safe thing, and from a lock contention<br />standpoint it should be ok (if we move a lot of pages back and forth, lock<br />contention is going to be the least of our worries, because it implies<br />that we'd be doing a LOT of IO to actually write the pages out).<br /><br />If somebody (you? hint, hint) wants to do this, I'd be very happy - I can<br />do it myself, but because it's my birthday I'm supposed to drag myself off<br />the computer soon and be social, or Tove will be grumpy.<br /><br />And you don't want Tove grumpy.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
