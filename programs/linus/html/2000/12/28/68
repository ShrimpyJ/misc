    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/12/26/13">First message in thread</a></li><li><a href="/lkml/2000/12/26/13">Andrew Morton</a><ul><li><a href="/lkml/2000/12/26/4">Andrea Arcangeli</a></li><li><a href="/lkml/2000/12/26/21">Andrew Morton</a><ul><li><a href="/lkml/2000/12/26/33">Andrea Arcangeli</a></li></ul></li><li><a href="/lkml/2000/12/27/15">Andrew Morton</a><ul><li><a href="/lkml/2000/12/27/73">Andrea Arcangeli</a></li></ul></li><li><a href="/lkml/2000/12/27/25">george anzinger</a></li><li class="origin"><a href="/lkml/2000/12/30/43">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/30/43">Andrew Morton</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 28 Dec 2000 10:46:47 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [prepatch] 2.4 waitqueues</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 27 Dec 2000, Andrew Morton wrote:<br />&gt; <br />&gt; - Introduces a kernel-wide macro `SMP_KERNEL'.  This is designed to<br />&gt;   be used as a `compiled ifdef' in place of `#ifdef CONFIG_SMP'.  There<br />&gt;   are a few examples in __wake_up_common().<br /><br />Please don't do this, it screws up the config option autodetection in<br />"make checkconfig", and also while gcc is reasonably good at deleting dead<br />code, gcc has absolutely no clue at all about deleting dead variables, and<br />will leave the stack slots around giving bigger stack usage and worse<br />cache behaviour.<br /><br />(The gcc stack slot problem is a generic gcc problem - your approach just<br />tends to make it worse).<br /><br />If you want to do this locally somewhere, that's ok, but keep it local.<br /><br />&gt; - SLEEP_ON_VAR, SLEEP_ON_HEAD and SLEEP_ON_TAIL have been changed.  I<br />&gt;   see no valid reason why these functions were, effectively, doing<br />&gt;   this:<br />&gt; <br />&gt; 	spin_lock_irqsave(lock, flags);<br />&gt; 	spin_unlock(lock);<br />&gt; 	schedule();<br />&gt; 	spin_lock(lock);<br />&gt; 	spin_unlock_irqrestore(lock, flags);<br />&gt; <br />&gt;   What's the point in saving the interrupt status in `flags'? If the<br />&gt;   caller _wants_ interrupt status preserved then the caller is buggy,<br />&gt;   because schedule() enables interrupts.  2.2 does the same thing.<br />&gt; <br />&gt;   So this has been changed to:<br />&gt; <br />&gt; 	spin_lock_irq(lock);<br />&gt; 	spin_unlock(lock);<br />&gt; 	schedule();<br />&gt; 	spin_lock(lock);<br />&gt; 	spin_unlock_irq(lock);<br />&gt; <br />&gt;   Or did I miss something?<br /><br />I'm a bit nervous about changing the old compatibility cruft, but the<br />above is probably ok.<br /><br />Anyway, I'd like you to get rid of the global SMP_KERNEL thing (turning it<br />into a local one if you want to for this case), _and_ I'd like to see this<br />patch with the wait-queue spinlock _outside_ the __common_wakeup() path.<br /><br />Why? Those semaphores will eventually want to re-use the wait-queue<br />spinlock as a per-semaphore spinlock, and they would need to call<br />__common_wakeup() with the spinlock held to do so. So let's get the<br />infrastructure in place.<br /><br />		Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
