    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/12/27/47">First message in thread</a></li><li><a href="/lkml/2000/12/28/36">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/28/7">Christoph Rohland</a><ul><li class="origin"><a href="/lkml/2000/12/28/121">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/28/121">Christoph Rohland</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 28 Dec 2000 10:07:03 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Patch] shmem_unuse race fix</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On 28 Dec 2000, Christoph Rohland wrote:<br />&gt; <br />&gt; First we need the following patch since otherwise we use a swap entry<br />&gt; without having the count increased:<br /><br />No, that shouldn't be needed.<br /><br />Look at the code-path: the kernel has the page locked, so nothing will<br />de-allocate the swap entry - so it's perfectly ok to increase it later. I<br />dislike the "magic" __get_swap_page(2) thing - we might make<br />get_swap_page() itself _always_ return a swap entry with count two (one<br />fot eh swap cache, one for the user), or we should keep it the way it was<br />(where we explicitly increment it for the user).<br /><br />&gt; Second there look at this in handle_pte_fault:<br />&gt; <br />&gt; 		/*<br />&gt; 		 * If it truly wasn't present, we know that kswapd<br />&gt; 		 * and the PTE updates will not touch it later. So<br />&gt; 		 * drop the lock.<br />&gt; 		 */<br />&gt; 		spin_unlock(&amp;mm-&gt;page_table_lock);<br />&gt; 		if (pte_none(entry))<br />&gt; 			return do_no_page(mm, vma, address, write_access, pte);<br />&gt; 		return do_swap_page(mm, vma, address, pte, pte_to_swp_entry(entry), write_access);<br />&gt; <br />&gt; The comment is wrong. try_to_unuse will touch it. This stumbles over a<br />&gt; bad swap entry after try_to_unuse complaining about an undead swap<br />&gt; entry.<br />&gt; <br />&gt; If I retry in try_to_unuse it goes into an infinite loop since it<br />&gt; deadlocks with this.<br /><br />Ok. How about making try_to_unuse() just get the VM semaphore instead of<br />the page table lock?<br /><br />Then try_to_unuse() would follow all the right rules, and the above<br />problem wouldn't exist..<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
