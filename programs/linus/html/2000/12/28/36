    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/12/27/47">First message in thread</a></li><li><a href="/lkml/2000/12/27/45">Marcelo Tosatti</a><ul><li><a href="/lkml/2000/12/27/71">Christoph Rohland</a><ul><li class="origin"><a href="/lkml/2000/12/28/7">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/28/7">Christoph Rohland</a><ul><li><a href="/lkml/2000/12/28/96">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 27 Dec 2000 20:35:56 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Patch] shmem_unuse race fix</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On 27 Dec 2000, Christoph Rohland wrote:<br /><br />&gt; Marcelo Tosatti &lt;marcelo&#64;conectiva.com.br&gt; writes:<br />&gt; <br />&gt; &gt; I think that incrementing the swap entry count will not allow swap from<br />&gt; &gt; removing the swap entry (as the comment says)<br />&gt; <br />&gt; I think the culprit is somewhere else. The error occurs in nopage of a<br />&gt; process, not in swapoff.<br /><br />I think swapoff() should be fixed..<br /><br />I moved the<br /><br />	if (PageSwapCache(page))<br />		delete_from_swap_cache(page);<br /><br />thing to _before_ the "unuse_process()" and "shmem_unuse()" code, because<br />I wanted to avoid a race on the PageDirty bit that way. However, that<br />opens up another race, the one you see with "nopage".<br /><br />Woul dyou mind testing this alternate fix instead:<br /><br /> - add the lines<br /><br />	repeat:<br />		ClearPageDirty(page);<br /><br />   to just before the "read_lock(&amp;tasklist_lock);" in try_to_unuse(). We<br />   can obviously mark the page clean, because we _are_ going to get rid of<br />   it, and in the meantime we have a hold on it by virtue of having raised<br />   the page count in "read_swap_cache()".<br /><br /> - move the "delete_from_swap_cache()" call back to _after_ the<br />   unuse() calls.<br /><br /> - but just before deleting the entry, we add a new test:<br /><br />	if (PageDirty(page))<br />		goto repeat;<br /><br />this all should mean that if something moves the dirty bit from a page<br />table to the backing store, we will notice, and just re-do the VM scan,<br />which will mark the page table entry dirty again. And because we delete it<br />from the swap cache late, we aren't severing the link with<br />"nopage" handling.<br /><br />Christoph, how does this sound to you?<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
