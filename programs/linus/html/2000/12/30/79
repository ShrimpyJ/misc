    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2000/12/29/121">First message in thread</a></li><li><a href="/lkml/2000/12/30/47">Andrea Arcangeli</a><ul><li><a href="/lkml/2000/12/30/72">Chris Wedgwood</a></li><li><a href="/lkml/2000/12/30/74">Roman Zippel</a><ul><li class="origin"><a href="/lkml/2000/12/31/23">Linus Torvalds</a><ul><li><a href="/lkml/2000/12/31/23">Andrea Arcangeli</a><ul><li><a href="/lkml/2000/12/31/48">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2000/12/31/32">Roman Zippel</a><ul><li><a href="/lkml/2001/4/21/9">Alexander Viro</a></li></ul></li><li><a href="/lkml/2000/12/31/69">Daniel Phillips</a><ul><li><a href="/lkml/2000/12/31/78">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/1/2/73">Chris Mason</a></li></ul></li></ul></li><li><a href="/lkml/2000/12/30/93">Alexander Viro</a><ul><li><a href="/lkml/2000/12/30/85">Andrea Arcangeli</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Dec 2000 18:28:39 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] Generic deferred file writing</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 31 Dec 2000, Roman Zippel wrote:<br />&gt; <br />&gt; On Sun, 31 Dec 2000, Andrea Arcangeli wrote:<br />&gt; <br />&gt; &gt; &gt; estimate than just the data blocks it should not be hard to add an<br />&gt; &gt; &gt; extra callback to the filesystem.  <br />&gt; &gt; <br />&gt; &gt; Yes, I was thinking at this callback too. Such a callback is nearly the only<br />&gt; &gt; support we need from the filesystem to provide allocate on flush.<br />&gt; <br />&gt; Actually the getblock function could be split into 3 functions:<br />&gt; - alloc_block: mostly just decrementing a counter (and quota)<br />&gt; - get_block: allocating a block from the bitmap<br />&gt; - commit_block: inserting the new block into the inode<br />&gt; <br />&gt; This would be really useful for streaming, one could get as fast as<br />&gt; possible the block number and the data could be very quickly written,<br />&gt; while keeping the cache usage low. Or streaming directly from a device<br />&gt; to disk also wants to get rid of the data as fast as possible.<br /><br />Now, to insert a small note of sanity here: I think people are starting to<br />overdesign stuff.<br /><br />The fact is that currently the "get_block()" interface that the page cache<br />helper functions use does NOT have to be very expensive at all.<br /><br />In fact, in a properly designed filesystem just a bit of low-level caching<br />would easily make the average "get_block()" be very fast indeed. The fact<br />that right now ext2 has not been optimized for this is _not_ a reason to<br />design the VFS layer around a slow get_block() operation.<br /><br />If you look at the generic block-based writing routines, they are actually<br />not all that expensive. Any kind of complication is only going to make<br />those functions more complex, and any performance gained could easily be<br />lost in extra complexity.<br /><br />There are only two real advantages to deferred writing:<br /><br /> - not having to do get_block() at all for temp-files, as we never have to<br />   do the allocation if we end up removing the file.<br /><br />   NOTE NOTE NOTE! The overhead for trying to get ENOSPC and quota errors<br />   right is quite possibly big enough that this advantage is possibly very<br />   questionable.  It's very possible that people could speed things up<br />   using this approach, but I also suspect that it is equally (if not<br />   more) possible to speed things up by just making sure that the<br />   low-level FS has a fast get_block().<br /><br /> - Using "global" access patterns to do a better job of "get_block()", ie<br />   taking advantage of issues with journalling etc and deferring the write<br />   in order to get a bigger journal.<br /><br />The second point is completely different, and THIS is where I think there<br />are potentially real advantages. However, I also think that this is not<br />actually about deferred writes at all: it's really a question of the<br />filesystem having access to the page when the physical write is actually<br />started so that the filesystem might choose to _change_ the allocation it<br />did - it might have allocated a backing store block at "get_block()" time,<br />but by the time it actually writes the stuff out to disk it may have<br />allocated a bigger contiguous area somewhere else for the data..<br /><br />I really think that the #2 thing is the more interesting one, and that<br />anybody looking at ext2 should look at just improving the locking and<br />making the block allocation functions run faster. Which should not be all<br />that difficult - the last time I looked at the thing it was quite<br />horrible.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />Please read the FAQ at <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
