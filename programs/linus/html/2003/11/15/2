    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/11/14/176">First message in thread</a></li><li><a href="/lkml/2003/11/14/191">Linus Torvalds</a><ul><li><a href="/lkml/2003/11/14/193">Linus Torvalds</a></li><li><a href="/lkml/2003/11/15/1">Paul Mackerras</a><ul><li class="origin"><a href="/lkml/2003/11/15/5">Linus Torvalds</a><ul><li><a href="/lkml/2003/11/15/5">Linus Torvalds</a></li><li><a href="/lkml/2003/11/15/8">Paul Mackerras</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2003/11/15/2/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 14 Nov 2003 21:14:03 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] PPC32: cancel syscall restart on signal delivery</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Sat, 15 Nov 2003, Paul Mackerras wrote:<br />&gt; <br />&gt; Now, when we resume that context we will call sys_restart_syscall<br />&gt; which will call restart_block.fn.  Which won't necessarily still point<br />&gt; to do_no_restart_syscall.  So I still think we have a problem.<br /><br />Excellent point. We're actually much better off resetting it at signal<br />return.<br /><br />Which should make all other resets unnecessary.<br /><br />Yes, you can get out of a signal by using longjmp, but that doesn't<br />matter: you can't longjump to a restart call (well, you can, but only if<br />the user literally tries to do the restart by hand, ie he _intended_ to do<br />it).<br /><br />So the _proper_ fix (for x86) should be as appended. Agreed?<br /><br />		Linus<br /><br />----<br />===== arch/i386/kernel/signal.c 1.33 vs edited =====<br />--- 1.33/arch/i386/kernel/signal.c	Tue Nov 11 21:18:46 2003<br />+++ edited/arch/i386/kernel/signal.c	Fri Nov 14 21:13:09 2003<br />&#64;&#64; -132,6 +132,9 &#64;&#64;<br /> {<br /> 	unsigned int err = 0;<br /> <br />+	/* Always make any pending restarted system calls return -EINTR */<br />+	current_thread_info()-&gt;restart_block.fn = do_no_restart_syscall;<br />+<br /> #define COPY(x)		err |= __get_user(regs-&gt;x, &amp;sc-&gt;x)<br /> <br /> #define COPY_SEG(seg)							\<br />&#64;&#64; -503,9 +506,6 &#64;&#64;<br /> 	struct pt_regs * regs)<br /> {<br /> 	struct k_sigaction *ka = &amp;current-&gt;sighand-&gt;action[sig-1];<br />-<br />-	/* Always make any pending restarted system calls return -EINTR */<br />-	current_thread_info()-&gt;restart_block.fn = do_no_restart_syscall;<br /> <br /> 	/* Are we from a system call? */<br /> 	if (regs-&gt;orig_eax &gt;= 0) {<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
