    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/11/14/176">First message in thread</a></li><li><a href="/lkml/2003/11/14/176">Paul Mackerras</a><ul><li class="origin"><a href="/lkml/2003/11/14/180">Linus Torvalds</a><ul><li><a href="/lkml/2003/11/14/180">Linus Torvalds</a></li><li><a href="/lkml/2003/11/14/189">Paul Mackerras</a><ul><li><a href="/lkml/2003/11/14/191">Linus Torvalds</a><ul><li><a href="/lkml/2003/11/14/193">Linus Torvalds</a></li><li><a href="/lkml/2003/11/15/1">Paul Mackerras</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 14 Nov 2003 16:21:38 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] PPC32: cancel syscall restart on signal delivery</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Sat, 15 Nov 2003, Paul Mackerras wrote:<br />&gt; <br />&gt; BTW, do we have a test program that triggers the bug that this fixes?<br /><br />No. In fact, it's an _incredibly_ tiny race, because the old code that <br />only handled it at the return path of the system call that got interrupted <br />would catch the thing in all cases _except_ if the system<br /><br /> (a) decided to restart the system call<br /> (b) got an interrupt _after_ the return to user mode but _before_ the <br />     system call instruction itself actually did the restart<br /> (c) this interrupt caused a new signal with a handler (different from the<br />     one that caused the restart, since that one by definition had no<br />     handler) to the same program.<br /><br />On x86, for the old calling conventions (ie "int 0x80"), that meant that <br />the interrupt window was literally a single instruction. For the new one <br />("sysenter") it was two instructions.  So you literally need a minimum of <br />two different signals, and a incredibly tight window.<br /><br />To make it even worse, even if the above incredibly unlikely thing<br />actually _happens_, most of the time it wouldn't really matter. The worst<br />case schenario is that the signal handler itself does a system call that<br />needs restarting, in which case on signal handler return we now restart<br />the _wrong_ system call once we return. But a more likely schenario is<br />that we restart the right system call after the signal handler has run,<br />rather than returning EINTR.<br /><br />Quite frankly, the only reason I even thought about it was due to the <br />clock_nanosleep() patch to fix the posix timer restart code. Which just <br />made me trace the sequence again in my head.<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
