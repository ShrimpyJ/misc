    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/11/26/110">First message in thread</a></li><li><a href="/lkml/2003/11/26/110">(Bruce Perens)</a><ul><li class="origin"><a href="/lkml/2003/11/26/116">Linus Torvalds</a><ul><li><a href="/lkml/2003/11/26/116">Linus Torvalds</a></li><li><a href="/lkml/2003/11/26/121">Linus Torvalds</a></li><li><a href="/lkml/2003/11/26/122">Linus Torvalds</a><ul><li><a href="/lkml/2003/11/26/130">Bruce Perens</a><ul><li><a href="/lkml/2003/11/26/134">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2003/11/27/22">Herbert Xu</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 26 Nov 2003 09:55:34 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Signal left blocked after signal handler.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />[ Uli added to participants ]<br /><br />On Wed, 26 Nov 2003, Bruce Perens wrote:<br />&gt;<br />&gt; A signal should be blocked while its signal handler is executing, and<br />&gt; then unblocked when the handler returns - unless SA_NOMASK is set.<br />&gt;<br />&gt; -test9 and -test10 leave the signal _blocked_forever_.<br /><br />From what I can tell, this is a glibc bug. Do an "strace" on the program,<br />and see how "siglongjmp()" doesn't appear to do any system calls at all.<br /><br />It's up to siglongjmp() to restore the signal mask that it saved on<br />sigsetjmp().<br /><br />What library version are you using (but yes, I see the same thing with<br />"Fedora Core 1").<br /><br />In fact, with strace I don't even see where the signal mask would be<br />_saved_ in sigsetjmp. So as far as I can tell, this just cannot work.<br /><br />			Linus<br /><br />--- rest of email saved for Uli ---<br />&gt;<br />&gt; This causes the build-time confidence test for Electric Fence to break,<br />&gt; and no doubt lots of other code.<br />&gt;<br />&gt; If SA_NOMASK is set, the signal is not blocked.<br />&gt;<br />&gt; Test program attached below.<br />&gt;<br />&gt; 	Thanks<br />&gt;<br />&gt; 	Bruce<br />&gt;<br />&gt; #include &lt;stdio.h&gt;<br />&gt; #include &lt;stdlib.h&gt;<br />&gt; #include &lt;unistd.h&gt;<br />&gt; #include &lt;signal.h&gt;<br />&gt; #include &lt;setjmp.h&gt;<br />&gt;<br />&gt; static sigjmp_buf	sjbuf;<br />&gt; static int		sig = SIGINT;<br />&gt;<br />&gt; static void<br />&gt; handler(int i)<br />&gt; {<br />&gt; 	struct sigaction	act;<br />&gt;<br />&gt; 	memset((void *)&amp;act, 0, sizeof(act));<br />&gt; 	act.sa_handler = SIG_DFL;<br />&gt;<br />&gt; 	fprintf(stderr, "Signal handler hit!\n");<br />&gt; 	fflush(stderr);<br />&gt; 	sigaction(sig, &amp;act, 0);<br />&gt; 	siglongjmp(sjbuf, 1);<br />&gt;<br />&gt; }<br />&gt;<br />&gt; static void<br />&gt; invoke_signal()<br />&gt; {<br />&gt; 	struct sigaction	act;<br />&gt;<br />&gt; 	memset((void *)&amp;act, 0, sizeof(act));<br />&gt; 	act.sa_handler = handler;<br />&gt;<br />&gt; 	/* act.sa_flags = SA_NOMASK; */<br />&gt;<br />&gt; 	if ( sigsetjmp(sjbuf, 0) == 0 ) {<br />&gt; 		sigaction(sig, &amp;act, 0);<br />&gt; 		fprintf(stderr, "Sending signal... ");<br />&gt; 		fflush(stderr);<br />&gt; 		kill(getpid(), sig);<br />&gt; 		fprintf(stderr, "Huh? Nothing happened. Signal was left blocked.\n");<br />&gt; 	}<br />&gt; }<br />&gt;<br />&gt; int<br />&gt; main(int argc, char * * argv)<br />&gt; {<br />&gt; 	sigset_t	set;<br />&gt;<br />&gt; 	sigemptyset(&amp;set);<br />&gt; 	sigaddset(&amp;set, sig);<br />&gt;<br />&gt; 	invoke_signal();<br />&gt; 	invoke_signal();<br />&gt; 	fprintf(stderr, "Unblocking signal... ");<br />&gt; 	if ( sigsetjmp(sjbuf, 0) == 0 ) {<br />&gt; 		sigprocmask(SIG_UNBLOCK,  &amp;set, 0);<br />&gt; 	}<br />&gt;<br />&gt; 	return 0;<br />&gt; }<br />&gt;<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
