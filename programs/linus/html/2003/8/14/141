    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/8/9/132">First message in thread</a></li><li><a href="/lkml/2003/8/14/134">Linus Torvalds</a><ul><li><a href="/lkml/2003/8/14/136">Jamie Lokier</a><ul><li class="origin"><a href="/lkml/2003/8/14/140">Linus Torvalds</a><ul><li><a href="/lkml/2003/8/14/140">Jamie Lokier</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2003/8/14/141/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 14 Aug 2003 11:33:09 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] revert zap_other_threads breakage, disallow CLONE_THREAD without CLONE_DETACHED</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Thu, 14 Aug 2003, Jamie Lokier wrote:<br />&gt; <br />&gt; I'm thinking of programs that don't use Glibc, but do use these features.<br />&gt; Perhaps I'm the only person who writes such code :)<br /><br />Sure, there have always been projects out there that have used the<br />"native" clone() interfaces, but they're fairly rare, and CLONE_THREAD<br />being a new addition makes it less likely to show up as a problem.<br /><br />&gt; &gt; But yes, there will be a warning, at least for a time (and eventually <br />&gt; &gt; we'll just return -EINVAL silently - ie the program will _fail_ the <br />&gt; &gt; clone(), it won't just act strangely).<br />&gt; <br />&gt; -EINVAL would be great.<br /><br />I've pushed the change to the BK trees, and if you're not a BK user you<br />can just test the attached patch directly to see if it affects you..<br /><br />		Linus<br /><br />----<br /># This is a BitKeeper generated patch for the following project:<br /># Project Name: Linux kernel tree<br /># This patch format is intended for GNU patch command version 2.5 or higher.<br /># This patch includes the following deltas:<br />#	           ChangeSet	1.1149  -&gt; 1.1150 <br />#	include/linux/sched.h	1.159   -&gt; 1.160  <br />#	       kernel/fork.c	1.134   -&gt; 1.135  <br />#<br /># The following is the BitKeeper ChangeSet Log<br /># --------------------------------------------<br /># 03/08/14	torvalds&#64;home.osdl.org	1.1150<br /># Mark CLONE_DETACHED as being irrelevant: it must match CLONE_THREAD.<br /># <br /># CLONE_THREAD without CLONE_DETACHED will now return -EINVAL, and<br /># for a while we will warn about anything that uses it (there are no<br /># known users, but this will help pinpoint any problems if somebody<br /># used to care about the invalid combination).<br /># --------------------------------------------<br />#<br />diff -Nru a/include/linux/sched.h b/include/linux/sched.h<br />--- a/include/linux/sched.h	Thu Aug 14 11:32:19 2003<br />+++ b/include/linux/sched.h	Thu Aug 14 11:32:19 2003<br />&#64;&#64; -49,7 +49,7 &#64;&#64;<br /> #define CLONE_SETTLS	0x00080000	/* create a new TLS for the child */<br /> #define CLONE_PARENT_SETTID	0x00100000	/* set the TID in the parent */<br /> #define CLONE_CHILD_CLEARTID	0x00200000	/* clear the TID in the child */<br />-#define CLONE_DETACHED		0x00400000	/* parent wants no child-exit signal */<br />+#define CLONE_DETACHED		0x00400000	/* Not used - CLONE_THREAD implies detached uniquely */<br /> #define CLONE_UNTRACED		0x00800000	/* set if the tracing process can't force CLONE_PTRACE on this clone */<br /> #define CLONE_CHILD_SETTID	0x01000000	/* set the TID in the child */<br /> #define CLONE_STOPPED		0x02000000	/* Start in stopped state */<br />diff -Nru a/kernel/fork.c b/kernel/fork.c<br />--- a/kernel/fork.c	Thu Aug 14 11:32:19 2003<br />+++ b/kernel/fork.c	Thu Aug 14 11:32:19 2003<br />&#64;&#64; -746,8 +746,22 &#64;&#64;<br /> 	 */<br /> 	if ((clone_flags &amp; CLONE_THREAD) &amp;&amp; !(clone_flags &amp; CLONE_SIGHAND))<br /> 		return ERR_PTR(-EINVAL);<br />-	if ((clone_flags &amp; CLONE_DETACHED) &amp;&amp; !(clone_flags &amp; CLONE_THREAD))<br />+<br />+	/*<br />+	 * CLONE_DETACHED must match CLONE_THREAD: it's a historical<br />+	 * thing.<br />+	 */<br />+	if (!(clone_flags &amp; CLONE_DETACHED) != !(clone_flags &amp; CLONE_THREAD)) {<br />+		/* Warn about the old no longer supported case so that we see it */<br />+		if (clone_flags &amp; CLONE_THREAD) {<br />+			static int count;<br />+			if (count &lt; 5) {<br />+				count++;<br />+				printk(KERN_WARNING "%s trying to use CLONE_THREAD without CLONE_DETACH\n", current-&gt;comm);<br />+			}<br />+		}<br /> 		return ERR_PTR(-EINVAL);<br />+	}<br /> <br /> 	retval = security_task_create(clone_flags);<br /> 	if (retval)<br />&#64;&#64; -877,10 +891,7 &#64;&#64;<br /> 	p-&gt;parent_exec_id = p-&gt;self_exec_id;<br /> <br /> 	/* ok, now we should be set up.. */<br />-	if (clone_flags &amp; CLONE_DETACHED)<br />-		p-&gt;exit_signal = -1;<br />-	else<br />-		p-&gt;exit_signal = clone_flags &amp; CSIGNAL;<br />+	p-&gt;exit_signal = (clone_flags &amp; CLONE_THREAD) ? -1 : (clone_flags &amp; CSIGNAL);<br /> 	p-&gt;pdeath_signal = 0;<br /> <br /> 	/*<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
