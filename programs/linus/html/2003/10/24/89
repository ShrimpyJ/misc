    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/10/20/264">First message in thread</a></li><li><a href="/lkml/2003/10/23/170">Linus Torvalds</a><ul><li><a href="/lkml/2003/10/23/178">Eric Anholt</a></li><li><a href="/lkml/2003/10/23/195">Jeff Garzik</a><ul><li><a href="/lkml/2003/10/23/198">Jon Smirl</a></li><li><a href="/lkml/2003/10/23/210">Jon Smirl</a><ul><li><a href="/lkml/2003/10/24/2">Linus Torvalds</a><ul><li><a href="/lkml/2003/10/28/102">James Simmons</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2003/10/24/92">Linus Torvalds</a><ul><li><a href="/lkml/2003/10/24/92">Petr Vandrovec</a><ul><li><a href="/lkml/2003/10/24/103">Linus Torvalds</a></li><li><a href="/lkml/2003/10/24/118">Ivan Kokshaysky</a></li></ul></li><li><a href="/lkml/2003/10/24/95">Jeff Garzik</a></li></ul></li></ul></li><li><a href="/lkml/2003/10/23/199">Jon Smirl</a></li><li><a href="/lkml/2003/10/25/42">Egbert Eich</a><ul><li><a href="/lkml/2003/10/25/49">Linus Torvalds</a><ul><li><a href="/lkml/2003/10/25/54">Jeff Garzik</a><ul><li><a href="/lkml/2003/10/27/76">Ingo Oeser</a></li><li><a href="/lkml/2003/10/27/80">Keith Whitwell</a></li></ul></li><li><a href="/lkml/2003/10/25/75">Jon Smirl</a></li><li><a href="/lkml/2003/10/25/89">Benjamin Herrenschmidt</a></li><li><a href="/lkml/2003/10/27/70"> jlnance&#64;unity ...</a></li><li><a href="/lkml/2003/10/27/81">Keith Whitwell</a></li><li><a href="/lkml/2003/10/27/82">(Eric W. Biederman)</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 24 Oct 2003 09:44:38 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Dri-devel] Re: [Linux-fbdev-devel] DRM and pci_driver conversion</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Thu, 23 Oct 2003, Jeff Garzik wrote:<br />&gt; <br />&gt; The mechanics aren't complicated, but I seem to recall there being a <br />&gt; Real Good Reason why you want to leave it disabled 99% of the time.  No, <br />&gt; I don't recall that reason :(  But my fuzzy memory seems to think that <br />&gt; "enable, grab a slice o 'rom, disable" was viable.<br /><br />That's not what I'm worried about: yes, it's doable, and it's only ten<br />lines of code, but my point is that having drivers do something like this:<br /><br />&gt;       /* Assign space for ROM resource if not already assigned. Ugly. */<br />&gt;       if (!pci_resource_start(dev, PCI_ROM_RESOURCE))<br />&gt;               if (pci_assign_resource(dev, PCI_ROM_RESOURCE) &lt; 0)<br />&gt;                       return -ENOMEM;<br />&gt; <br />&gt;       /* Enable it. This is too ugly */<br />&gt;       if (!(pci_resource_flags(dev, PCI_ROM_RESOURCE) &amp; PCI_ROM_ADDRESS_ENABLE)) {<br />&gt;               u32 val;<br />&gt;               pci_read_config_dword(dev, PCI_ROM_ADDRESS, &amp;val);<br />&gt;               val |= PCI_ROM_ADDRESS_ENABLE;<br />&gt;               pci_write_config_dword(dev, PCI_ROM_ADDRESS, val);<br />&gt;               pci_resource_flags(dev, PCI_ROM_RESOURCE) |= PCI_ROM_ADDRESS_ENABLE;<br />&gt;       }<br /><br />over and over again _is_ going to cause us problems later. Either we'll<br />change some interface slightly (and have to fix up the drivers), or a<br />couple of the drivers are going to do things _slightly_ wrong (forget to<br />assign the resource, or forget to mark it enabled, or whatever), and then<br />we'll have a subtle bug that only shows up on certain hardware and<br />firmware combinations, depending on how the BIOS sets up regions etc.<br /><br /><br />So wouldn't it be nice if we just had those ten lines as a generic<br />function like<br /><br />	int pci_enable_rom(struct pci_device *dev)<br />	{<br />		...<br /><br />	int pci_disable_rom(..);<br /><br />that does all of this properly for the (few) drivers that need this in <br />order to fetch resource information from the ROM's?<br /><br />That way people could just do<br /><br />	if (pci_enable_device(dev))<br />		return -ENODEV;<br /><br />	if (pci_enable_rom(dev))<br />		return -Exxx;<br /><br />and we wouldn't have to have drivers that have _waay_ too much knowledge<br />about things like assigning bus resources and the PCI_ROM_ADDRESS_ENABLE <br />bit.<br /><br />Drivers really shouldn't need to know or care. A driver writer should just <br />know that his card has a ROM attached to it, and that he will need to <br />enable it explicitly because for most chips we just don't want to waste IO <br />mapping space by enabling it by default.<br /><br />(Yeah, the driver still needs to know about doing the ioremap() etc and<br />only accessing it with read/write[bwl(), but those are common to any<br />memory-mapped thing, so that's not "new" knowledge per se).<br /><br />Case in point: I had to dig around a bit to write those ten lines of code. <br />And I consider myself above-average-knowledgeable about PCI device issues. <br /><br />So I don't think driver writers should have to write those ten lines, the<br />same way I think they should just do "pci_enable_device()" to get the<br />interrupt line and regular BAR things up, and the chip powered on..<br /><br />And no, most drivers really don't care about their roms. Most devices<br />don't even have any roms. But grepping for "PCI_ROM_" shows that there<br />clearly are more than one or two that do (and I'm afraid to think about<br />the ones that use hardcoded values rather than the symbolic ones, just<br />because the driver writer didn't find a helper function and just did it by<br />hand by reading the PCI spec).<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
