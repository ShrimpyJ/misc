    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/12/29/137">First message in thread</a></li><li><a href="/lkml/2003/12/29/137">Arjan van de Ven</a><ul><li class="origin"><a href="/lkml/2003/12/29/278">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/29/278">Rusty Russell</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 29 Dec 2003 11:43:29 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Add support for checking before-the-fact whether an IRQ is</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 29 Dec 2003, Arjan van de Ven wrote:<br />&gt; On Mon, 2003-12-29 at 19:18, Linux Kernel Mailing List wrote:<br />&gt; &gt; ChangeSet 1.1552, 2003/12/29 10:18:11-08:00, torvalds&#64;home.osdl.org<br />&gt; &gt; <br />&gt; &gt; 	Add support for checking before-the-fact whether an IRQ is<br />&gt; &gt; 	already registered or not. The x86 PCI layer wants this for<br />&gt; &gt; 	its availability testing.<br />&gt; &gt; <br />&gt; &gt; 	Doing a request_irq()/free_irq() pair to check this condition<br />&gt; &gt; 	like we used to do can lock the machine if the irq happens to<br />&gt; &gt; 	be screaming.<br />&gt; <br />&gt; <br />&gt; question; which lock prevents someone else claiming the irq and making<br />&gt; it unsharable/unclaimable between can_request_irq() and the eventual<br />&gt; request_irq() ????<br /><br />Nothing. It never did. This is basically a heuristic: "find the irq that <br />looks the least used".<br /><br />I just fixed the heuristic so that it shouldn't cause problems if the <br />system comes up with the BIOS having done something silly like leaving an <br />irq pending..<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
