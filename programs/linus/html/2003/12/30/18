    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/9/6/32">First message in thread</a></li><li><a href="/lkml/2003/12/29/170">Wim Van Sebroeck</a><ul><li><a href="/lkml/2003/12/29/167">Linus Torvalds</a></li><li><a href="/lkml/2003/12/29/233">Matthias Andree</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2003/12/30/86">Ed Tomlinson</a><ul><li><a href="/lkml/2003/12/30/132">Andy Isaacson</a><ul><li><a href="/lkml/2003/12/30/144">"Eric D. Mudama"</a></li><li><a href="/lkml/2003/12/31/95">Ed Tomlinson</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 29 Dec 2003 22:36:08 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] 2.6.0 - Watchdog patches</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 30 Dec 2003, Matthias Andree wrote:<br />&gt; <br />&gt; Not being very used to BK, does that mean I have several trees around:<br /><br />The answer to that question is always a resounding "yes".<br /><br />BK really thrives on having several trees around. You don't _have_ to have <br />them, but basically the default rule should be: use separate trees for <br />everything you can think of that isn't directly dependent on stuff in <br />another tree.<br /><br />That does _not_ mean that you should necessarily create "temporary trees". <br />I actually do that a lot of the time, because I tend to create a totally <br />new clone when I start applying long series of patches or do anything even <br />half-way strange: it's just a lot easier to throw failures away, than it <br />is to try to sort it out later.<br /><br />But most people probably do _not_ want to have that kind of "temporary<br />tree" mentality in general. People should realize that it's ok, and in<br />particular that if you're doing something experimental it's fine to just<br />create a new tree and later on decide that it was crap and just do a full<br />"rm -rf" on it, and realize that the only thing you lost was some time.<br /><br />&gt; 1. the official release tree<br />&gt; 2. an "old tree" with my local change that I'm forwarding<br />&gt; 3. a temporary test tree to see if the merge would succeed, which<br />&gt;    I'll get by cloning (1) and then pulling from (2)?<br /><br />The tree doesn't really need to be temporary per se. It can be your "work <br />tree" - the tree where you merge all the different sources of BK input. I <br />realize that a lot of people only really have two sources of input (the <br />standard tree and their own development tree), but if you get that concept <br />early, you'll find it trivial to merge in other peoples trees into your <br />"work tree", and keep track of many different development trees at the <br />same time and just let BK do the merging for you.<br /><br />&gt; Or am I missing some obvious short cut?<br /><br />Basically, the obvious shortcut is to keep your work-tree around, so you <br />don't have to clone and re-pull it all the time.<br /><br />After a while, your work-tree is really messy (especially if you pull from <br />multiple different development trees), but the point should be that no <br />actual development gets done there, so you don't care: you can always just <br />flush it entirely, and re-create it anew.<br /><br />But you don't have to flush and re-create it _all_ the time. That would <br />just be wasteful. Although if you have the hardware, it isn't that <br />painful..<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
