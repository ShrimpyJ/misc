    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/12/29/11">First message in thread</a></li><li><a href="/lkml/2003/12/29/11">James Bourne</a><ul><li><a href="/lkml/2003/12/30/73">Marcelo Tosatti</a><ul><li class="origin"><a href="/lkml/2003/12/30/172">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/30/172">Marcelo Tosatti</a><ul><li><a href="/lkml/2003/12/30/173">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2004/1/3/142">Pavel Machek</a></li></ul></li><li><a href="/lkml/2003/12/31/10">James Bourne</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 30 Dec 2003 11:59:27 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.4.23-uv3 patch set released</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 30 Dec 2003, Marcelo Tosatti wrote:<br />&gt; <br />&gt; On Mon, 29 Dec 2003, James Bourne wrote:<br />&gt; <br />&gt; &gt; linux-2.4.23-ide-busy-race-fix.patch: Daniel Lux: Fix IDE busy-wait race<br />&gt; <br />&gt; I screwed up the merge of this patch, you also want to apply "Fix IDE<br />&gt; busywait merge" (its the next changeset after this one).<br /><br />I really think that the patch is wrong - it's just insane to "test one <br />more time in case we got an interrupt", when the code around it plays with <br />the interrupt flag all the time. Especially when it is supposed to wait <br />for several timer interrupts while doing this. It appears that the timeout <br />itself is just too damn borderline.<br /><br />I suspect that anything in IDE that uses that idiotic "local_irq_set()"  <br />macro is just broken, and should be rewritten to explicitly enable <br />interrupts. As it is, the code is just incredibly _strange_, and it <br />actually enables interrupts at all the wrong places.<br /><br />Anyway, in ide_wait_stat(), the "timeout" value is always either <br />"WAIT_DRQ" (5*HZ/100) or it is "WAIT_READY" (3*HZ/100). And look at <br />WAIT_READY a bit more: <br /><br />	#if defined(CONFIG_APM) || defined(CONFIG_APM_MODULE)<br />	#define WAIT_READY      (5*HZ)          /* 5sec - some laptops are very slow */<br />	#else<br />	#define WAIT_READY      (3*HZ/100)      /* 30msec - should be instantaneous */<br />	#endif /* CONFIG_APM || CONFIG_APM_MODULE */<br /><br />I bet that the _real_ problem is this. That "3*HZ/100" value is just too <br />damn short. It has already been increased to 5*HZ for anything that has <br />APM enabled, but anybody who doesn't use APM gets a _really_ short <br />timeout.<br /><br />My suggestion: change the non-APM timeout to something much larger. Make<br />it ten times bigger, rather than leaving it at a value that us so small<br />that a single interrupt could make a difference..<br /><br />In fact, right now a single timer interrupt on 2.4.x is the difference<br />between waiting 20ms and 30ms. That's a _big_ relative difference.<br /><br />Andrew - unless you disagree, I'd just be inlined to change both the DRQ<br />and READY timeouts to be a bit larger. On working hardware it shouldn't<br />matter, so how about just making them both be something like 100 msec (and<br />leave that strange really big APM value alone).<br /><br />On 2.6.x, the higher timer frequency should make the time keeping more <br />exact anyway (29-30ms rather than 20-30ms), but that's a small random <br />detail..<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
