    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/12/20/58">First message in thread</a></li><li><a href="/lkml/2003/12/21/73">OGAWA Hirofumi</a><ul><li><a href="/lkml/2003/12/21/82">Manfred Spraul</a><ul><li class="origin"><a href="/lkml/2003/12/21/104">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/21/104">Manfred Spraul</a><ul><li><a href="/lkml/2003/12/21/107">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 21 Dec 2003 12:51:46 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC,PATCH] use rcu for fasync_lock</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 21 Dec 2003, Manfred Spraul wrote:<br />&gt;<br />&gt; Initially I tried to keep the patch as tiny as possible, thus I avoided <br />&gt; adding an inline function. But Stephen Hemminger convinced me to update <br />&gt; the network code, and thus it didn't matter and I've switched to an <br />&gt; inline function.<br />&gt; What do you think about the attached patch?<br /><br />Please, NO!<br /><br />Stuff like this<br /><br />	-       write_lock_irq(&amp;fasync_lock);<br />	+       if (s)<br />	+               lock_sock(s);<br />	+       else<br />	+               spin_lock(&amp;fasync_lock);<br />	+<br /><br />should not be allowed. That's especially true since the choice really is a <br />static one depending on the caller.<br /><br />Just make the caller do the locking.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
