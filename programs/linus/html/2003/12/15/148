    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/12/15/73">First message in thread</a></li><li><a href="/lkml/2003/12/15/73">Toad</a><ul><li><a href="/lkml/2003/12/15/92">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/15/99">Jeff Garzik</a><ul><li><a href="/lkml/2003/12/15/130">Toad</a><ul><li><a href="/lkml/2003/12/15/131">""</a></li><li><a href="/lkml/2003/12/15/132">David T Hollis</a></li><li><a href="/lkml/2003/12/15/133">Jeff Garzik</a></li><li><a href="/lkml/2003/12/16/15">Martin Schlemmer</a></li></ul></li><li><a href="/lkml/2003/12/15/144">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/16/125">(bill davidsen)</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2003/12/15/97">Toad</a><ul><li><a href="/lkml/2003/12/15/150">Linus Torvalds</a></li></ul></li><li class="origin"><a href="/lkml/2003/12/15/157">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/15/157">Jens Axboe</a><ul><li><a href="/lkml/2003/12/15/161">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/15/168">Jens Axboe</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2003/12/15/148/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Dec 2003 10:46:15 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 'bad: scheduling while atomic!', preempt kernel, 2.6.1-test11, reading an apparently duff DVD-R</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 15 Dec 2003, Toad wrote:<br />&gt;<br />&gt; ide-scsi: reset called for 133<br /><br />Ok, I can't trigger an IDE reset even with a bad CDROM, so I'm kind of out<br />of luck on testing this. Can you try out the following silly patch, and<br />report what it says?<br /><br />The old ide-scsi reset function is just terminally broken, there's no way<br />it can work. This patch _might_ make it work, but is more likely to just<br />print out what it's trying to do.<br /><br />		Linus<br /><br />----<br />--- 1.34/drivers/scsi/ide-scsi.c	Tue Dec  2 19:03:55 2003<br />+++ edited/drivers/scsi/ide-scsi.c	Mon Dec 15 10:17:52 2003<br />&#64;&#64; -882,35 +882,26 &#64;&#64;<br /> 	return FAILED;<br /> }<br /><br />-static int idescsi_reset (Scsi_Cmnd *cmd)<br />+static int idescsi_device_reset(Scsi_Cmnd *cmd)<br />+{<br />+	printk("IDE device reset requested\n");<br />+	return FAILED;<br />+}<br />+<br />+static int idescsi_bus_reset(Scsi_Cmnd *cmd)<br /> {<br />-	unsigned long flags;<br />-	struct request *req;<br /> 	idescsi_scsi_t *idescsi = scsihost_to_idescsi(cmd-&gt;device-&gt;host);<br /> 	ide_drive_t *drive = idescsi-&gt;drive;<br /><br />-	printk (KERN_ERR "ide-scsi: reset called for %lu\n", cmd-&gt;serial_number);<br />-	/* first null the handler for the drive and let any process<br />-	 * doing IO (on another CPU) run to (partial) completion<br />-	 * the lock prevents processing new requests */<br />-	spin_lock_irqsave(&amp;ide_lock, flags);<br />-	while (HWGROUP(drive)-&gt;handler) {<br />-		HWGROUP(drive)-&gt;handler = NULL;<br />-		schedule_timeout(1);<br />-	}<br />-	/* now nuke the drive queue */<br />-	while ((req = elv_next_request(drive-&gt;queue))) {<br />-		blkdev_dequeue_request(req);<br />-		end_that_request_last(req);<br />-	}<br />-	/* FIXME - this will probably leak memory */<br />-	HWGROUP(drive)-&gt;rq = NULL;<br />-	if (drive_to_idescsi(drive))<br />-		drive_to_idescsi(drive)-&gt;pc = NULL;<br />-	spin_unlock_irqrestore(&amp;ide_lock, flags);<br />-	/* finally, reset the drive (and its partner on the bus...) */<br />-	ide_do_reset (drive);<br />+	printk("IDE bus reset requested\n");<br />+	ide_do_reset(drive);<br /> 	return SUCCESS;<br />+}<br />+<br />+static int idescsi_host_reset(Scsi_Cmnd *cmd)<br />+{<br />+	printk("IDE host reset requested\n");<br />+	return FAILED;<br /> }<br /><br /> static int idescsi_bios(struct scsi_device *sdev, struct block_device *bdev,<br />&#64;&#64; -935,7 +926,9 &#64;&#64;<br /> 	.ioctl			= idescsi_ioctl,<br /> 	.queuecommand		= idescsi_queue,<br /> 	.eh_abort_handler	= idescsi_abort,<br />-	.eh_device_reset_handler = idescsi_reset,<br />+	.eh_device_reset_handler = idescsi_device_reset,<br />+	.eh_bus_reset_handler	= idescsi_bus_reset,<br />+	.eh_host_reset_handler	= idescsi_host_reset,<br /> 	.bios_param		= idescsi_bios,<br /> 	.can_queue		= 40,<br /> 	.this_id		= -1,<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
