    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/12/14/5">First message in thread</a></li><li><a href="/lkml/2003/12/14/64">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/14/65">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/14/67">Ingo Molnar</a></li><li><a href="/lkml/2003/12/15/84">=?iso-8859-1?Q?J=F6rn?= Engel</a></li></ul></li><li><a href="/lkml/2003/12/14/68">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2003/12/14/76">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/14/76">Ingo Molnar</a><ul><li><a href="/lkml/2003/12/14/78">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2003/12/14/77">Ingo Molnar</a><ul><li><a href="/lkml/2003/12/14/79">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2003/12/15/23">Arjan van de Ven</a><ul><li><a href="/lkml/2003/12/15/205">Roland McGrath</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2003/12/15/208">Roland McGrath</a></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2003/12/14/74/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 14 Dec 2003 14:10:48 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] Re: Problem with exiting threads under NPTL</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />Ingo,<br /><br />I'm being anal for 2.6.0 again and trying to think of all the<br />ramifications of the changes, and I found a serious bug in your patch:<br /><br />Even though the parent ignores SIGCHLD it _can_ be running on another CPU<br />in "wait4()". And since we drop the tasklist lock before we do the<br />"release_task()" on the leader, and since the leader is still marked<br />TASK_ZOMBIE, we may have _two_ different people trying to release it.<br />First the parent, and then the last thread that still remembers the<br />leader.<br /><br />Note that we at this point have not unhashed the thread group leader yet:<br />we just unhashed the last thread. So we're dropping the task list lock,<br />and the leader pointer is _not_ safe to keep that way.<br /><br />We've had that race before, and the fix is to mark the leader TASK_DEAD<br />while still under the tasklist lock - that way the parent won't see the<br />soon-to-be-reaped leader even if it were to happen to be in the middle of<br />a wait4() call and get in while the tasklist lock is released.<br /><br />So how about this patch? It has this bug fixed, and is otherwise a mix of<br />your two patches, along with an added sanity check ("the exit_signal for a<br />thread group leader cannot be -1 until the last thread exited"), which<br />makes the test make a whole lot more sense in my opinion (the previous<br />test for "exit_signal != -1" looks nonsensical, and appears to be a<br />cut-and-paste from somewhere else).<br /><br />Roland, Petr, comments? Can you see any hole in my logic?<br /><br />		Linus<br /><br />----<br />--- 1.119/kernel/exit.c	Mon Oct 27 11:49:59 2003<br />+++ edited/kernel/exit.c	Sun Dec 14 14:00:10 2003<br />&#64;&#64; -49,9 +49,11 &#64;&#64;<br /><br /> void release_task(struct task_struct * p)<br /> {<br />+	int zap_leader;<br /> 	task_t *leader;<br /> 	struct dentry *proc_dentry;<br />-<br />+<br />+repeat:<br /> 	BUG_ON(p-&gt;state &lt; TASK_ZOMBIE);<br /><br /> 	atomic_dec(&amp;p-&gt;user-&gt;processes);<br />&#64;&#64; -70,10 +72,24 &#64;&#64;<br /> 	 * group, and the leader is zombie, then notify the<br /> 	 * group leader's parent process. (if it wants notification.)<br /> 	 */<br />+	zap_leader = 0;<br /> 	leader = p-&gt;group_leader;<br />-	if (leader != p &amp;&amp; thread_group_empty(leader) &amp;&amp;<br />-		    leader-&gt;state == TASK_ZOMBIE &amp;&amp; leader-&gt;exit_signal != -1)<br />+	if (leader != p &amp;&amp; thread_group_empty(leader) &amp;&amp; leader-&gt;state == TASK_ZOMBIE) {<br />+		BUG_ON(leader-&gt;exit_signal == -1);<br /> 		do_notify_parent(leader, leader-&gt;exit_signal);<br />+		/*<br />+		 * If we were the last child thread and the leader has<br />+		 * exited already, and the leader's parent ignores SIGCHLD,<br />+		 * then we are the one who should release the leader.<br />+		 *<br />+		 * do_notify_parent() will have marked it self-reaping in<br />+		 * that case.<br />+		 */<br />+		if (leader-&gt;exit_signal == -1) {<br />+			zap_leader = 1;<br />+			leader-&gt;state = TASK_DEAD;<br />+		}<br />+	}<br /><br /> 	p-&gt;parent-&gt;cutime += p-&gt;utime + p-&gt;cutime;<br /> 	p-&gt;parent-&gt;cstime += p-&gt;stime + p-&gt;cstime;<br />&#64;&#64; -88,6 +104,10 &#64;&#64;<br /> 	proc_pid_flush(proc_dentry);<br /> 	release_thread(p);<br /> 	put_task_struct(p);<br />+<br />+	p = leader;<br />+	if (zap_leader)<br />+		goto repeat;<br /> }<br /><br /> /* we are using it only for SMP init */<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
