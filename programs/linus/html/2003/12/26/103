    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/12/26/86">First message in thread</a></li><li><a href="/lkml/2003/12/26/86">(Anton Ertl)</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 26 Dec 2003 15:28:04 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Page Colouring (was: 2.6.0 Huge pages not working as expected)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 26 Dec 2003, Anton Ertl wrote:<br />&gt; Linus Torvalds &lt;torvalds&#64;osdl.org&gt; writes:<br />&gt; &gt;<br />&gt; &gt;And what you are seeing is likely the fact that random placement is <br />&gt; &gt;guaranteed to not have any worst-case behaviour.<br />&gt; <br />&gt; You probably just put the "not" in the wrong place, but just in case<br />&gt; you meant it: Random replacement does not give such a guarantee.<br /><br />No, I meant what I said.<br /><br />Random placement is the _only_ algorithm guaranteed to have no <br />pathological worst-case behaviour.<br /><br />&gt;							  You<br />&gt; can get the same worst-case behaviour as with page colouring, since<br />&gt; you can get the same mapping.  It's just unlikely.<br /><br />"pathological worst-case" is something that is repeatable. For example, <br />the test-case above is a pathological worst-case schenario for a <br />direct-mapped cache. <br /><br />&gt; Well, even if, on average, it has no performance impact,<br />&gt; reproducibility is a good reason to like it.  Is it good enough to<br />&gt; implement it?  I'll leave that to you.<br /><br />Well, since random (or, more accurately in this case, "pseudo-random") has <br />a number of things going for it, and is a lot faster and cheaper to <br />implement, I don't see the point of cache coloring.<br /><br />That's doubly true since any competent CPU will have at least four-way <br />associativity these days.<br /><br />&gt; However, the main question I want to look at here is: Does it improve<br />&gt; performance, on average?  I think it does, because of spatial<br />&gt; locality.<br /><br />Hey, the discussion in this case showed how it _deproves_ performance (at <br />least if my theory was correct - and it should be easily testable and I <br />bet it is).<br /><br />Also, the work has been done to test things, and cache coloring definitely<br />makes performance _worse_. It does so exactly because it artifically<br />limits your page choices, causing problems at multiple levels (not just at<br />the cache, like this example, but also in page allocators and freeing).<br /><br />So basically, cache coloring results in:<br /> - some nice benchmarks (mainly the kind that walk memory very <br />   predictably, notably FP kernels)<br /> - mostly worse performance in "real life"<br /> - more complex code<br /> - much worse memory pressure<br /><br />My strong opinion is that it is worthless except possibly as a performance<br />tuning tool, but even there the repeatability is a false advantage: if you<br />do performance tuning using cache coloring, there is nothing that<br />guarantees that your tuning was _correct_ for the real world case.<br /><br />In short, you may be doing your performance tuning such that it tunes for<br />or against one of the (known) pathological cases of the layout, nothing<br />more.<br /><br />But hey, some people disagree with me. That's their right. It's not <br />unconstitutional to be wrong ;)<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
