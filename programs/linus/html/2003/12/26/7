    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/12/25/93">First message in thread</a></li><li><a href="/lkml/2003/12/25/103">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/26/3">"H. Peter Anvin"</a></li><li><a href="/lkml/2003/12/26/5">Andy Isaacson</a><ul><li><a href="/lkml/2003/12/26/6">"H. Peter Anvin"</a></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2003/12/29/82">David Lloyd</a></li></ul></li><li><a href="/lkml/2004/1/2/153">Bill Davidsen</a><ul><li><a href="/lkml/2004/1/3/153">Krzysztof Halasa</a><ul><li><a href="/lkml/2004/1/4/4">Bill Davidsen</a><ul><li><a href="/lkml/2004/1/4/127">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 25 Dec 2003 23:08:32 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: GCC 3.4 Heads-up</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 26 Dec 2003, Andy Isaacson wrote:<br />&gt; <br />&gt; But doesn't the first one potentially let the compiler avoid spilling to<br />&gt; memory, if b and c are both in registers?<br /><br />Sure, and you can do it as<br /><br />	tmp = d;<br />	a ? b = tmp : c = tmp;<br /><br />instead if you want to. It all depends on what b/c actually are (ie maybe<br />they are memory-backed anyway).<br /><br />The point being that there are no actual _advantages_ to being<br />non-standard. And there are definitely disadvantages. Lack of portability<br />being one, semantic confusion being another (the semantic confusion is<br />more visible in C++, since there lvalue'ness is more complex. But it's<br />visible in C too, where the gcc extensions can cause buggy programs that<br />_should_ give syntax errors to possibly compile to unexpected results).<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
