    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2003/12/20/40">First message in thread</a></li><li><a href="/lkml/2003/12/20/40">Nick Piggin</a><ul><li><a href="/lkml/2003/12/20/42">Nick Piggin</a><ul><li><a href="/lkml/2003/12/20/43">Nick Piggin</a><ul><li><a href="/lkml/2003/12/20/44">Nick Piggin</a><ul><li><a href="/lkml/2003/12/20/45">Nick Piggin</a></li><li><a href="/lkml/2003/12/20/72">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2003/12/20/68">Ingo Molnar</a><ul><li><a href="/lkml/2003/12/20/85">Nick Piggin</a></li></ul></li></ul></li><li><a href="/lkml/2003/12/20/66">Ingo Molnar</a><ul><li><a href="/lkml/2003/12/20/84">Nick Piggin</a></li></ul></li></ul></li><li><a href="/lkml/2003/12/20/60">Ingo Molnar</a><ul><li><a href="/lkml/2003/12/20/64">Rob Love</a></li><li class="origin"><a href="/lkml/2003/12/20/73">Linus Torvalds</a><ul><li><a href="/lkml/2003/12/20/73">Ingo Molnar</a></li><li><a href="/lkml/2003/12/20/83">Nick Piggin</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2003/12/20/67/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 20 Dec 2003 12:07:17 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/5] 2.6.0 fix preempt ctx switch accounting</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 20 Dec 2003, Ingo Molnar wrote:<br />&gt; <br />&gt; i'd prefer the much simpler patch below. This also keeps the kernel<br />&gt; preemption logic isolated instead of mixing it into the normal path.<br /><br />That patch still gets several cases wrong: we don't update any counters at<br />all for the case where we were TASK_INTERRUPTIBLE and we got made<br />TASK_RUNNING because of having a signal pending.<br /><br />Also, we shouldn't update the context switch counter just because we <br />entered the scheduler. If we don't actually end up switching to anything <br />else, it shouldn't count as a context switch.<br /><br />So how about something like this?<br /><br />Totally untested. Comments?<br /><br />		Linus<br /><br />---<br />===== kernel/sched.c 1.225 vs edited =====<br />--- 1.225/kernel/sched.c	Mon Dec  1 16:00:00 2003<br />+++ edited/kernel/sched.c	Sat Dec 20 12:05:56 2003<br />&#64;&#64; -1470,6 +1470,7 &#64;&#64;<br />  */<br /> asmlinkage void schedule(void)<br /> {<br />+	long *switch_count;<br /> 	task_t *prev, *next;<br /> 	runqueue_t *rq;<br /> 	prio_array_t *array;<br />&#64;&#64; -1516,22 +1517,16 &#64;&#64;<br /> 	 * if entering off of a kernel preemption go straight<br /> 	 * to picking the next task.<br /> 	 */<br />-	if (unlikely(preempt_count() &amp; PREEMPT_ACTIVE))<br />-		goto pick_next_task;<br />-<br />-	switch (prev-&gt;state) {<br />-	case TASK_INTERRUPTIBLE:<br />-		if (unlikely(signal_pending(prev))) {<br />+	switch_count = &amp;prev-&gt;nivcsw;<br />+	if (prev-&gt;state &amp;&amp; !(preempt_count() &amp; PREEMPT_ACTIVE)) {<br />+		switch_count = &amp;prev-&gt;nvcsw;<br />+		if ((prev-&gt;state &amp; TASK_INTERRUPTIBLE) &amp;&amp; unlikely(signal_pending(prev))) {<br /> 			prev-&gt;state = TASK_RUNNING;<br />-			break;<br />+		} else {<br />+			deactivate_task(prev, rq);<br /> 		}<br />-	default:<br />-		deactivate_task(prev, rq);<br />-		prev-&gt;nvcsw++;<br />-		break;<br />-	case TASK_RUNNING:<br />-		prev-&gt;nivcsw++;<br /> 	}<br />+<br /> pick_next_task:<br /> 	if (unlikely(!rq-&gt;nr_running)) {<br /> #ifdef CONFIG_SMP<br />&#64;&#64; -1588,6 +1583,7 &#64;&#64;<br /> 		next-&gt;timestamp = now;<br /> 		rq-&gt;nr_switches++;<br /> 		rq-&gt;curr = next;<br />+		++*switch_count;<br /> <br /> 		prepare_arch_switch(rq, next);<br /> 		prev = context_switch(rq, prev, next);<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
