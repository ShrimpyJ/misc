    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/8/24/277">First message in thread</a></li><li><a href="/lkml/2011/8/24/453">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2011/8/24/458">"H. Peter Anvin"</a><ul><li><a href="/lkml/2011/8/24/459">Jeremy Fitzhardinge</a></li><li class="origin"><a href="/lkml/2011/8/24/467">Linus Torvalds</a><ul><li><a href="/lkml/2011/8/24/467">Linus Torvalds</a><ul><li><a href="/lkml/2011/8/24/469">Jeremy Fitzhardinge</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 24 Aug 2011 16:09:31 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 00/18] x86: Ticket lock + cmpxchg cleanup</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Aug 24, 2011 at 4:05 PM, H. Peter Anvin &lt;hpa&#64;zytor.com&gt; wrote:<br />&gt;<br />&gt; That's not guaranteed in any way to generate a locally atomic instruction.<br /><br />No such guarantee is needed - we hold the lock (until the last store),<br />so as long as it doesn't do anything completely crazy, then the<br />"head++" will work.<br /><br />However, the reason I disagree with it is that I don't think that it's<br />any prettier at all to have the two barriers than it is to just have<br />the asm.<br /><br />I see no advantage of a three-line "pseudo-C" code with two magic<br />barriers over just doing it with the inline asm. The fact that the<br />inline asm also makes the OOSTORE case trivial is just gravy.<br /><br />                     Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
