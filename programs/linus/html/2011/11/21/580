    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/11/21/544">First message in thread</a></li><li><a href="/lkml/2011/11/21/544">Michael Halcrow</a><ul><li><a href="/lkml/2011/11/21/554">Tyler Hicks</a></li><li class="origin"><a href="/lkml/2011/11/23/361">Linus Torvalds</a><ul><li><a href="/lkml/2011/11/23/361">Tyler Hicks</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 21 Nov 2011 16:49:07 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] eCryptfs: Check array bounds for filename characters</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Nov 21, 2011 at 3:32 PM, Michael Halcrow &lt;mhalcrow&#64;google.com&gt; wrote:<br />&gt; Characters with ASCII values greater than the size of<br />&gt; filename_rev_map[] are valid filename<br />&gt; characters. ecryptfs_decode_from_filename() will access kernel memory<br />&gt; beyond that array, and ecryptfs_parse_tag_70_packet() will then<br />&gt; decrypt those characters.<br /><br />Ugh. I really don't like the patch.<br /><br />Why isn't the patch just this one-liner:<br /><br />  diff --git a/fs/ecryptfs/crypto.c b/fs/ecryptfs/crypto.c<br />  index 58609bde3b9f..7c50715c05d6 100644<br />  --- a/fs/ecryptfs/crypto.c<br />  +++ b/fs/ecryptfs/crypto.c<br />  &#64;&#64; -1943,7 +1943,7 &#64;&#64; static unsigned char *portable_filename_chars<br />= ("-.0123456789ABCD"<br /><br />   /* We could either offset on every reverse map or just pad some 0x00's<br />    * at the front here */<br />  -static const unsigned char filename_rev_map[] = {<br />  +static const unsigned char filename_rev_map[256] = {<br />          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 7 */<br />          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 15 */<br />          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* 23 */<br /><br />instead?<br /><br />Making invalid characters over \x50 be somehow magically different<br />from invalid characters elsewhere seems just totally bogus. There are<br />lots of characters that aren't valid, and they have the<br />filename_rev_map[] value of 0 elsewhere.<br /><br />So the simpler one-liner is not only simpler, but gives much saner<br />semantics, I think - now invalid character '\x05' gets exactly the<br />same result as invalid character '\xf5'.<br /><br />Hmm?<br /><br />                         Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
