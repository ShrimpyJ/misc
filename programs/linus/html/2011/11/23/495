    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/11/23/481">First message in thread</a></li><li><a href="/lkml/2011/11/23/481">Tyler Hicks</a><ul><li class="origin"><a href="/lkml/2011/11/24/34">Linus Torvalds</a><ul><li><a href="/lkml/2011/11/24/34">Tyler Hicks</a><ul><li><a href="/lkml/2011/11/24/240">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Nov 2011 14:56:23 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] eCryptfs fixes for 3.2-rc3</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 23, 2011 at 2:25 PM, Tyler Hicks &lt;tyhicks&#64;canonical.com&gt; wrote:<br />&gt;<br />&gt; Tyler Hicks (3):<br />&gt;      eCryptfs: Flush file in vma close<br /><br />I'm not hugely happy with this one.<br /><br />The commit message says:<br /><br />    Dirty pages weren't being written back when an mmap'ed eCryptfs file was<br />    closed before the mapping was unmapped. Since f_ops-&gt;flush() is not<br />    called by the munmap() path, the lower file was simply being released.<br />    This patch flushes the eCryptfs file in the vm_ops-&gt;close() path.<br /><br />Fair enough - you've debugged the problem. You're misusing the -&gt;flush<br />thing which only gets called at close time, rather than flushing<br />things at -&gt;release time. But why?<br /><br />"-&gt;flush()" is very special, and is literally meant for things that<br />need to wait at close time. A file descriptor may be flushed many<br />times for a single open (because it was dup'ed etc), and yes, if it is<br />closed before mmap, it will be flushed before the mmap is done. The<br />"flush()" is basically attached to a particular fd - useful mainly for<br />things like special devices that actually want to delay the close<br />(serial lines etc).<br /><br />But the fundamental issue is that I don't think cryptfs should be<br />using "flush". The file is still *open* when "flush()" is called.<br />That's the fundamental reason for the bug, I think.<br /><br />cryptfs should flush the encrypted information at *release* time, not<br />"flush" time. And that would have avoided the bug with mmap, because<br />release gets called on the very last internal reference count drop of<br />the 'struct file' - so it gets called after the last close *and*<br />munmap.<br /><br />Is there some reason I am missing that cryptfs has to use flush?<br /><br />I'm doing the pull, but I really think that this is papering over the<br />*real* bug, which was the use of 'flush' in the first place.<br /><br />In general, I'd urge people to *not* use "-&gt;flush" at all as a<br />"correctness issue". It's useful to return EIO to "close()" and to be<br />*polite* (ie the return value of "flush()" will be returned to user<br />space at close time), but it really should be seen as a "we try to<br />flush now to try to give user space nice error reports where<br />possible", but it's important to understand that it's not the last<br />close, and if you rely on it for correctness, you're doing something<br />wrong. It's "release()" that is the "get rid of all your state now",<br />and is about correctness. "flush" is purely about being polite.<br /><br />ecryptfs seems to have relied on it for correctness. Not good.<br /><br />                       Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
