    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/7/29/353">First message in thread</a></li><li><a href="/lkml/2011/7/29/354">"H. Peter Anvin"</a><ul><li><a href="/lkml/2011/7/29/366">Matt Mackall</a><ul><li class="origin"><a href="/lkml/2011/7/30/82">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/30/82">Arjan van de Ven</a></li><li><a href="/lkml/2011/7/30/91">Matt Mackall</a><ul><li><a href="/lkml/2011/7/30/93">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2011/7/30/180">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/30/183">"H. Peter Anvin"</a><ul><li><a href="/lkml/2011/7/30/187">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/31/139">"H. Peter Anvin"</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 29 Jul 2011 23:20:40 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/2] random: Add support for architectural random hooks</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Jul 29, 2011 at 2:16 PM, Matt Mackall &lt;mpm&#64;selenic.com&gt; wrote:<br />&gt;<br />&gt; I have already NAKed this approach in no uncertain terms.<br /><br />Doesn't matter.<br /><br />Talking about "standard hardware random number drivers" is just crazy<br />talk, when the instruction is a single instruction that takes tens of<br />nanoseconds to run. Any driver overhead would be just crazy, and no<br />user would ever want that anyway.<br /><br />User space would never use it, because they just want to use the<br />instruction directly.<br /><br />And kernel space doesn't want it either, for the exact same reason.<br />There's no point in making it anything but a simple direct function<br />call, because the whole functionality is so cheap.<br /><br />This is not like some stupid "behind PCI" crap. It's high bandwidth<br />and low latency.<br /><br />If anything, I think Peter's approach perhaps doesn't tie it in close<br />enough. Instead of making it some indirect function you register, just<br />make it an inline function per architecture that just returns how many<br />bits of randomness it gives (default to just an inline function that<br />returns 0 for the case of no on-CPU rng).<br /><br />On x86, choice between the different possible random number generators<br />(if somebody cares enough about the cyrix and whatever ones) could be<br />a an asm_alternate() thing.<br /><br />If you don't trust the CPU rng, don't bother with stupid arguments<br />about electron microscopes.  Test it - or more reasonably - make it<br />just one small part of the entropy pool. But don't make it something<br />heavy-weight, when the whole *point* of having the hardware is to make<br />it light-weight.<br /><br />                 Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
