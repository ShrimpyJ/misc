    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/7/30/157">First message in thread</a></li><li><a href="/lkml/2011/7/30/157">"George Spelvin"</a><ul><li><a href="/lkml/2011/7/30/167">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/30/177">"George Spelvin"</a></li></ul></li><li><a href="/lkml/2011/7/30/178">Bryan Donlan</a><ul><li class="origin"><a href="/lkml/2011/7/30/188">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/30/188">Bryan Donlan</a><ul><li><a href="/lkml/2011/7/30/192">Henrique de Moraes Holschuh</a></li><li><a href="/lkml/2011/7/31/2">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Jul 2011 15:35:29 -1000</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/2] random: Add support for architectural random hooks</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Jul 30, 2011 at 3:02 PM, Bryan Donlan &lt;bdonlan&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; The problem, as you can see here, is we need to test for the existence<br />&gt; of an architecture-specific HWRNG once for _every word processed_.<br /><br />See the patch I sent out. Not only doesn't it check an<br />architecture-specific flag on x86, IT COSTS NOTHING AT ALL on other<br />architectures. Not per byte, not per call, not at all.<br /><br />On x86, it does have the cost of:<br /><br /> - basically one conditional for the whole loop (branching out if<br />there is no rdrand support at all). You cannot do much better than<br />that, except of course if you statically say "compile for an x86 that<br />doesn't have rdrand")<br /><br /> - a per-word cost of checking CF - which you are supposed to do<br />anyway (ie the rdrand hardware will return with CF clear if the data<br />isn't reliable).<br /><br />So at least on x86, I think you can get pretty close to "optimal<br />behavior" with my approach.<br /><br />              Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
