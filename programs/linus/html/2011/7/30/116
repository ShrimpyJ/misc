    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/7/29/353">First message in thread</a></li><li><a href="/lkml/2011/7/30/93">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/30/112">Matt Mackall</a><ul><li class="origin"><a href="/lkml/2011/7/30/132">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/30/132">Ted Ts'o</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Jul 2011 09:29:18 -1000</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/2] random: Add support for architectural random hooks</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Jul 30, 2011 at 9:13 AM, Matt Mackall &lt;mpm&#64;selenic.com&gt; wrote:<br />&gt;<br />&gt; Well then rather than saying my NAK doesn't matter, you should say you<br />&gt; also NAK it.<br /><br />No, I don't think your NAK matters because your arguments were so insane.<br /><br />Talking about electron microscopes and *expanding* on the patch just<br />makes me go "that NAK is not worth worrying about".<br /><br />You comparing the rdrand to 'rdtsc' is more realistic, but it still<br />dismisses how powerful rdrand is.<br /><br />The fact is, even if you worry about some back door for the NSA, or<br />some theoretical lack of perfect 32-bit randomness, we can pretty much<br />depend on it. We still do our own hashing on top of whatever entropy<br />we get out of rdrand, and we would still have all our other stuff.<br />Plus the instruction is public and testable - if Intel did something<br />wrong, they'll be *very* embarrassed.<br /><br />In other words, there's absolutely no reason not to use it, and allow<br />us to get away from /dev/random running out of entropy. We absolutely<br />should use it for bootup randomness (where we currently are somewhat<br />weak), and I absolutely disagree that it should be made into more of a<br />driver abstraction.<br /><br />I'd be willing to take Peter's patch *without* the abstraction, and<br />then just expect to cut it down.<br /><br />But I'd be even more willing to just take something that just<br />introduces a per-arch interface to get a "unsigned long *" that is<br />random, and returning the number of bits of expected entropy in that<br />thing.  And for x86 CPU's with the RDRAND capability bit, I'd give<br />Intel the benefit of the doubt and just make it do a single "rdrand"<br />and return the full 64 bit (or is it a 32-bit interface? I should<br />know, but I didn't look it up).<br /><br />Of course, if there are other known random interfaces that might give<br />more random bits, maybe "void *"+size is actually the right thing.<br />Probably a single word is the most reasonable and simple interface in<br />the absence of examples to the contrary, though.<br /><br />                       Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
