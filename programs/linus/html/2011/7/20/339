    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/7/19/300">First message in thread</a></li><li><a href="/lkml/2011/7/20/238">"Paul E. McKenney"</a><ul><li><a href="/lkml/2011/7/20/239">"Paul E. McKenney"</a></li><li><a href="/lkml/2011/7/20/240">"Paul E. McKenney"</a></li><li><a href="/lkml/2011/7/20/241">"Paul E. McKenney"</a></li><li><a href="/lkml/2011/7/20/242">"Paul E. McKenney"</a></li><li><a href="/lkml/2011/7/20/243">"Paul E. McKenney"</a></li><li><a href="/lkml/2011/7/20/244">"Paul E. McKenney"</a><ul><li class="origin"><a href="/lkml/2011/7/21/11">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/21/11">"Paul E. McKenney"</a></li></ul></li></ul></li><li><a href="/lkml/2011/7/20/245">"Paul E. McKenney"</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 20 Jul 2011 15:44:55 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH tip/core/urgent 3/7] rcu: Streamline code produced by __rcu_read_unlock()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 20, 2011 at 11:26 AM, Paul E. McKenney<br />&lt;paulmck&#64;linux.vnet.ibm.com&gt; wrote:<br />&gt; Given some common flag combinations, particularly -Os, gcc will inline<br />&gt; rcu_read_unlock_special() despite its being in an unlikely() clause.<br />&gt; Use noinline to prohibit this misoptimization.<br /><br />Btw, I suspect that we should at least look at what it would mean if<br />we make the rcu_read_lock_nesting and the preempt counters both be<br />per-cpu variables instead of making them per-thread/process counters.<br /><br />Then, when we switch threads, we'd just save/restore them from the<br />process register save area.<br /><br />There's a lot of critical code sequences (spin-lock/unlock, rcu<br />read-lock/unlock) that currently fetches the thread/process pointer<br />only to then offset it and increment the count. I get the strong<br />feeling that code generation could be improved and we could avoid one<br />level of indirection by just making it a per-thread counter.<br /><br />For example, instead of __rcu_read_lock: looking like this (and being<br />an external function, partly because of header file dependencies on<br />the data structures involved):<br /><br />  push   %rbp<br />  mov    %rsp,%rbp<br />  mov    %gs:0xb580,%rax<br />  incl   0x100(%rax)<br />  leaveq<br />  retq<br /><br />it should inline to just something like<br /><br />  incl %gs:0x100<br /><br />instead. Same for the preempt counter.<br /><br />Of course, it would need to involve making sure that we pick a good<br />cacheline etc that is already always dirty. But other than that, is<br />there any real downside?<br /><br />                       Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
