    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/7/17/103">First message in thread</a></li><li><a href="/lkml/2011/7/17/145">Al Viro</a><ul><li><a href="/lkml/2011/7/18/19">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/18/180">Hugh Dickins</a></li><li class="origin"><a href="/lkml/2011/7/18/249">Linus Torvalds</a><ul><li><a href="/lkml/2011/7/18/249">Al Viro</a><ul><li><a href="/lkml/2011/7/18/265">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2011/7/18/261">Hugh Dickins</a><ul><li><a href="/lkml/2011/7/18/277">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2011/7/18/248/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Jul 2011 11:11:40 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] vfs: fix race in rcu lookup of pruned dentry</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Jul 17, 2011 at 11:31 PM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; Now, I do agree that maybe that case simply should check the dentry<br />&gt; sequence count. I wish all cases did. Hugh patch did that. But the<br />&gt; reason I dislike Hugh's patch is that when I say "I wish they all<br />&gt; did", I mean that I dislike the special casing. And Hugh's patch just<br />&gt; adds *more* special casing for that NULL entry - I'd wish we just<br />&gt; always did it regardless of whether it was NULL or not.<br /><br />Btw, looking at that, I think Hugh's patch is wrong. It does<br /><br />  if (!read_seqcount_retry(&amp;dentry-&gt;d_seq, nd-&gt;seq))<br /><br />but that's after we've done the __follow_mount_rcu() that may actually<br />have changed "nd-&gt;seq" to the mount-point inode (and has changed<br />path-&gt;dentry to match it).<br /><br />Now, it only does it if inode is NULL, so I guess it doesn't matter,<br />but it's the kind of inconsistency that I think is really dangerous,<br />because it basically compares incompatible sequence numbers.<br /><br />Also, looking at that whole mount-point traversal sequence, it looks<br />like __follow_mount_rcu() will happily totally ignore the old sequence<br />number when it replaces it with the mount-point sequence number. So it<br />looks to me that we have a case where we miss the sequence number<br />check that can happen with a positive dentry too!<br /><br />No?<br /><br />So I think that whenever we change "nd-&gt;seq", we should always heck<br />the previous sequence number first (the way do_lookup() itself does<br />for the *normal* traversal case). Otherwise we will have traversed the<br />mount-point without ever having checked the previous sequence number.<br /><br />Something like the (untested) attached patch.<br /><br />Comments? This mount-point case is independent of the negative dentry<br />issue, and probably never really an issue in practice, but...<br /><br />                          Linus<br /> fs/namei.c |   13 ++++++++++++-<br /> 1 files changed, 12 insertions(+), 1 deletions(-)<br /><br />diff --git a/fs/namei.c b/fs/namei.c<br />index 5c867dd1c0b3..f78d2af3aef4 100644<br />--- a/fs/namei.c<br />+++ b/fs/namei.c<br />&#64;&#64; -938,6 +938,8 &#64;&#64; static bool __follow_mount_rcu(struct nameidata *nd, struct path *path,<br /> {<br /> 	for (;;) {<br /> 		struct vfsmount *mounted;<br />+		unsigned int seq;<br />+<br /> 		/*<br /> 		 * Don't forget we might have a non-mountpoint managed dentry<br /> 		 * that wants to block transit.<br />&#64;&#64; -952,9 +954,18 &#64;&#64; static bool __follow_mount_rcu(struct nameidata *nd, struct path *path,<br /> 		mounted = __lookup_mnt(path-&gt;mnt, path-&gt;dentry, 1);<br /> 		if (!mounted)<br /> 			break;<br />+		seq = read_seqcount_begin(&amp;mounted-&gt;mnt_root-&gt;d_seq);<br />+<br />+		/*<br />+		 * The memory barrier in read_seqcount_begin() is sufficient,<br />+		 * so we can use __read_seqcount_retry() to check the prev<br />+		 * sequence numbers.<br />+		 */<br />+		if (!__read_seqcount_retry(&amp;path-&gt;dentry-&gt;d_seq, nd-&gt;seq))<br />+			return false;<br /> 		path-&gt;mnt = mounted;<br /> 		path-&gt;dentry = mounted-&gt;mnt_root;<br />-		nd-&gt;seq = read_seqcount_begin(&amp;path-&gt;dentry-&gt;d_seq);<br />+		nd-&gt;seq = seq;<br /> 	}<br /> 	return true;<br /> }</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
