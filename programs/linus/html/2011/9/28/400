    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/9/14/314">First message in thread</a></li><li><a href="/lkml/2011/9/28/372">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2011/9/28/384">Stephan Diestelhorst</a><ul><li><a href="/lkml/2011/9/28/390">Jeremy Fitzhardinge</a></li><li class="origin"><a href="/lkml/2011/9/28/405">Linus Torvalds</a><ul><li><a href="/lkml/2011/9/28/405">Jeremy Fitzhardinge</a></li><li><a href="/lkml/2011/10/6/172">Stephan Diestelhorst</a><ul><li><a href="/lkml/2011/10/6/261">Jeremy Fitzhardinge</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 28 Sep 2011 11:49:56 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Xen-devel] [PATCH 00/10] [PATCH RFC V2] Paravirtualized ticketlocks</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Sep 28, 2011 at 11:08 AM, Stephan Diestelhorst<br />&lt;stephan.diestelhorst&#64;amd.com&gt; wrote:<br />&gt;<br />&gt; I must have missed the part when this turned into the propose-the-<br />&gt; craziest-way-that-this-still-works.contest :)<br /><br />So doing it just with the "lock addb" probably works fine, but I have<br />to say that I personally shudder at the "surround the locked addb by<br />reads from the word, in order to approximate an atomic read of the<br />upper bits".<br /><br />Because what you get is not really an "atomic read of the upper bits",<br />it's a "ok, we'll get the worst case of somebody modifying the upper<br />bits at the same time".<br /><br />Which certainly should *work*, but from a conceptual standpoint, isn't<br />it just *much* nicer to say "we actually know *exactly* what the upper<br />bits were".<br /><br />But I don't care all *that* deeply. I do agree that the xaddw trick is<br />pretty tricky. I just happen to think that it's actually *less* tricky<br />than "read the upper bits separately and depend on subtle ordering<br />issues with another writer that happens at the same time on another<br />CPU".<br /><br />So I can live with either form - as long as it works. I think it might<br />be easier to argue that the xaddw is guaranteed to work, because all<br />values at all points are unarguably atomic (yeah, we read the lower<br />bits nonatomically, but as the owner of the lock we know that nobody<br />else can write them).<br /><br />                                 Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
