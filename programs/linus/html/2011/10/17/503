    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/10/17/499">First message in thread</a></li><li><a href="/lkml/2011/10/17/499">David Rientjes</a><ul><li class="origin"><a href="/lkml/2011/10/17/510">Linus Torvalds</a><ul><li><a href="/lkml/2011/10/17/510">David Rientjes</a><ul><li><a href="/lkml/2011/10/17/516">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2011/10/17/504">Joe Perches</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Oct 2011 18:20:20 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] Avoid using hardcoded values in kernel/sys.c</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Oct 17, 2011 at 5:55 PM, David Rientjes &lt;rientjes&#64;google.com&gt; wrote:<br />&gt; The release field of struct new_utsname may always change, so avoid<br />&gt; hardcoded values when setting up a buffer to copy to it.<br /><br />This patch is totally bogus.<br /><br />&gt; +static int override_release(char __user *release)<br />&gt;  {<br />&gt; +       const int len = sizeof(release);<br /><br />You just wrote "len = 4" (or 8, for 64-bit architectures) in a very unclear way.<br /><br />IOW, "len" is now the size of the *pointer*. Which is wrong.<br /><br />*And* you then re-introduced the variable-length array, which not only<br />triggered the gcc bug, but which is a BAD IDEA TO BEGIN WITH.<br /><br />Variably sized arrays generate worse code, and can have subtle<br />security issues that aren't obvious (like cause our tools that check<br />for overly big stack usage to quietly fail).<br /><br />Don't use variable-sized arrays on stack. They are never a good idea<br />in kernel space. The fact that we do have other code that does use<br />them too is not an excuse.<br /><br />But using them in this kind of horribly broken manner with the wrong<br />length is just *really* bad.<br /><br />                           Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
