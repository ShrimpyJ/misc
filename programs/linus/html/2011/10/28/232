    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/10/27/299">First message in thread</a></li><li><a href="/lkml/2011/10/28/186">Linus Torvalds</a><ul><li><a href="/lkml/2011/10/28/231">Eric Dumazet</a><ul><li class="origin"><a href="/lkml/2011/10/29/62">Linus Torvalds</a><ul><li><a href="/lkml/2011/10/29/62">Eric Dumazet</a></li><li><a href="/lkml/2011/10/29/71">Linus Torvalds</a><ul><li><a href="/lkml/2011/10/30/11">Eric Dumazet</a></li><li><a href="/lkml/2011/11/1/1">Stephen Rothwell</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 28 Oct 2011 07:55:10 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: &gt;Re: [RFC] should VM_BUG_ON(cond) really evaluate cond</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Fri, Oct 28, 2011 at 7:47 AM, Eric Dumazet &lt;eric.dumazet&#64;gmail.com&gt; wrote:<br />&gt;<br />&gt; So we need a similar idea to remove the volatile from :<br />&gt;<br />&gt; static __always_inline int constant_test_bit(unsigned int nr, const volatile unsigned long *addr)<br />&gt; {<br />&gt; return ((1UL &lt;&lt; (nr % BITS_PER_LONG)) &amp;<br />&gt;         (addr[nr / BITS_PER_LONG])) != 0;<br /><br />Ho humm. Yeah, I think "test_bit()" falls under the same logic: we do<br />not want to combine multiple test-bits into one (because we know there<br />are people looping on it), and we do want to guarantee "access at most<br />once" semantics, but as with "atomic_read()" we should be able to<br />optimize away a totally unused test-bit.<br /><br />The same "empty asm" trick would work there, I think, rather than<br />using "volatile" (well, the function declaration would still have<br />"volatile" because it's legal to use a volatile data type, but we'd<br />cast it away and use the asm trick for the access instead) .<br /><br />Maybe we should make it a generic helper macro ("ACCESS_AT_MOST_ONCE()")?<br /><br />Comments? I think I'm open to tested patches..<br /><br />                      Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
