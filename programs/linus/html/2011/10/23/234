    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2011/10/21/173">First message in thread</a></li><li><a href="/lkml/2011/10/22/188">Linus Torvalds</a><ul><li><a href="/lkml/2011/10/23/162">Josh Stone</a><ul><li class="origin"><a href="/lkml/2011/10/24/306">Linus Torvalds</a><ul><li><a href="/lkml/2011/10/24/306">Josh Stone</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 23 Oct 2011 23:19:21 +0200</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] x86: Fix compilation bug in kprobes' twobyte_is_boostable</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Oct 23, 2011 at 7:07 PM, Josh Stone &lt;jistone&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; Unfortunately, no.  Whatever const-propagation gcc is doing here<br />&gt; (somewhat wrongly per PR50571) is not affected by volatile on that cast.<br />&gt;  I also tried leaving it to the parameter type (no cast), no help.<br /><br />Oh, ok.<br /><br />&gt; I just tried removing the const from twobyte_is_boostable[], and that<br />&gt; also does the trick.  Not sure why I didn't try that first -- I guess<br />&gt; because I saw all the volatiles in bitops.  Is that more palatable, or<br />&gt; would you still rather try to fix it in bitops.h directly?<br /><br />I guess there's no nice bitops.h fix, so maybe the minimal "remove<br />const" is the right thing to do.<br /><br />&gt;&gt;  - Long long ago, we had that "big array" approach for ADDR too. So<br />&gt;&gt; we've wavered between the volatile and using a block memory op. But<br />&gt;&gt; we've used the "volatile" for a long time now for the bit change ones,<br />&gt;&gt; so I don't think we should mix concepts like your patch.<br />&gt;<br />&gt; Do you recall why it settled on volatile?  That seems like the less<br />&gt; descriptive of the two approaches.  But "long long ago" appears to be<br />&gt; beyond recorded (git) history...<br /><br />Yeah, it's really long ago. Iirc the reason it got removed was that<br />there were gcc versions that were unhappy about it, we've had problems<br />in this area before..<br /><br />             Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
