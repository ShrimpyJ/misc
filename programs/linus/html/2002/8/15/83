    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/8/13/136">First message in thread</a></li><li><a href="/lkml/2002/8/15/41">Ingo Molnar</a><ul><li><a href="/lkml/2002/8/15/118">Ingo Molnar</a><ul><li><a href="/lkml/2002/8/15/32">Ingo Molnar</a></li><li class="origin"><a href="/lkml/2002/8/15/14">Linus Torvalds</a><ul><li><a href="/lkml/2002/8/15/14">Ingo Molnar</a><ul><li><a href="/lkml/2002/8/15/97">Linus Torvalds</a></li><li><a href="/lkml/2002/8/15/122">Ingo Molnar</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 15 Aug 2002 11:02:59 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] user-vm-unlock-2.5.31-A2</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Thu, 15 Aug 2002, Ingo Molnar wrote:<br />&gt; <br />&gt; in fact testing these changes in glibc revealed another thing - the top of<br />&gt; the thread's stack has to be 16-byte aligned (for SSE2 support), so the<br />&gt; attached patch ontop of BK-curr would be a better solution, it does not<br />&gt; modify the thread's stack alignment but simply writes to the top of the<br />&gt; stack. (which is the first word of the thread control block.) This removes<br />&gt; a few instructions both from glibc and from the kernel.<br /><br />I do not understand why you want to link this to the stack at all. It <br />doesn't really make sense to me. The "thread exited" thing has nothing to <br />do with the stack, and you're only focused on that because you want to <br />free (or re-use) the stack when it exits.<br /><br />I personally believe that it would make a lot more sense to either pass in<br />a totally independent pointer, or - my preferred approach - to just re-use<br />the TID pointer. Think about it: thread creation sets the TID (if<br />CLONE_SETTID is set) in the thread data structures, and thread exit clears<br />the TID (if CLONE_CLRTID is set). That sounds like a _sensible_ interface.<br /><br />(CLONE_RELEASE_VM doesn't really make sense as a name. It doesn't describe<br />what the flag _means_, it really only describes an implementation detail<br />inside the kernel).<br /><br />Eh?<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
