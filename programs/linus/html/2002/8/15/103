    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/7/30/54">First message in thread</a></li><li><a href="/lkml/2002/8/15/167">Benjamin LaHaise</a><ul><li><a href="/lkml/2002/8/15/153">Linus Torvalds</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2002/8/16/41">William Lee Irwin III</a></li></ul></li><li><a href="/lkml/2002/8/16/163">"Martin J. Bligh"</a><ul><li><a href="/lkml/2002/8/17/2">William Lee Irwin III</a></li><li><a href="/lkml/2002/8/16/156">Linus Torvalds</a><ul><li><a href="/lkml/2002/8/17/17">"Martin J. Bligh"</a><ul><li><a href="/lkml/2002/8/17/21">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 15 Aug 2002 20:50:58 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: aio-core why not using SuS? [Re: [rfc] aio-core for 2.5.29 (Re: async-io API registration for 2.5.29)]</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Thu, 15 Aug 2002, Linus Torvalds wrote:<br />&gt; <br />&gt; My bet is that we'll never do it due to performance issues. It's just <br />&gt; simpler to make the high pages end up being some special stuff (ie the old <br />&gt; "swap victim cache" etc that wouldn't show up to the VM proper).<br /><br />Actually, the simplest schenario is to just make an arbitrary cut-off at<br />8G or 16G of RAM, and make anything above it default to the hugetlb zone,<br />and make that use a separate hugetlb map which does refcounts at 2MB<br />granularity). And create fake "struct page" entries for those things that<br />have to have it, along with a separate kmap area that holds a few of the <br />big mappings.<br /><br />There's an almost complete overlap between people who want hugetlb and <br />64GB x86 machines anyway, so I doubt you'd find people to complain.<br /><br />And the advantage of the hugetlb stuff is exactly the fact that the normal <br />VM doesn't need to worry about it. It's nonswappable, and doesn't get IO <br />done into it through any of the normal paths.<br /><br />Minimal impact.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
