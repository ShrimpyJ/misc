    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/8/13/139">First message in thread</a></li><li><a href="/lkml/2002/8/13/139">Ingo Molnar</a><ul><li><a href="/lkml/2002/8/13/159">Christoph Hellwig</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2002/8/13/168">Christoph Hellwig</a><ul><li><a href="/lkml/2002/8/13/185">Linus Torvalds</a><ul><li><a href="/lkml/2002/8/13/240">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/2002/8/13/187">Erik Andersen</a><ul><li><a href="/lkml/2002/8/13/13">John Levon</a></li><li><a href="/lkml/2002/8/13/146">Christoph Hellwig</a><ul><li><a href="/lkml/2002/8/13/135">Ruth Ivimey-Cook</a></li><li><a href="/lkml/2002/8/13/207">"Richard B. Johnson"</a></li></ul></li><li><a href="/lkml/2002/8/13/153">David Mosberger</a></li><li><a href="/lkml/2002/8/13/203">Ingo Molnar</a><ul><li><a href="/lkml/2002/8/13/24">(Kai Henningsen)</a></li></ul></li><li><a href="/lkml/2002/8/13/268">"H. Peter Anvin"</a><ul><li><a href="/lkml/2002/8/13/287">"H. Peter Anvin"</a></li><li><a href="/lkml/2002/8/13/298">"H. Peter Anvin"</a></li><li><a href="/lkml/2002/8/13/316">David Mosberger</a></li></ul></li></ul></li><li><a href="/lkml/2002/8/13/210">Ingo Molnar</a><ul><li><a href="/lkml/2002/8/14/76">Rusty Russell</a><ul><li><a href="/lkml/2002/8/14/153">Jamie Lokier</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2002/8/13/183">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 13 Aug 2002 09:01:56 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] clone_startup(), 2.5.31-A0</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Tue, 13 Aug 2002, Christoph Hellwig wrote:<br />&gt; <br />&gt; First the name souns horrible.  What about spawn_thread or create_thread<br />&gt; instead?  it's not our good old clone and not a lookalike, it's some<br />&gt; pthreadish monster..<br /><br />This one definitely isn't a pthread-specific problem. The old UNIX fork()  <br />semantics for &lt;pid&gt; returning really are fairly broken, since the notion<br />of returning the pid in a local register is inherently racy for _anything_<br />that wants to maintain a list of its children and needs to access the list <br />in the SIGCHLD handler.<br /><br />(Simple explanation: imagine a child that exits so quickly that the parent<br />hasn't even had time to do the "store pid into the array" before the<br />parent is already signalled with SIGCHLD. Yes, this happens, and yes, it's<br />a real problem. It wasn't that long ago that bash would _crash_ on this).<br /><br />With a system call like this, the parent can<br /> - allocate the new child information block first<br /> - do the fork with the pid pointer pointing into the child information <br />   block.<br /> - when SIGCHLD for that child comes in, all state will have been set up <br />   with no races.<br /><br />Note how this isn't even thread-specific: it very much would work with a<br />regular fork-like approach and a standard shell.<br /><br />&gt; &gt; with the help of this syscall glibc's next-generation pthreads code<br />&gt; <br />&gt; have you discussed this code with IBM's pthread group?  I think we don't<br />&gt; want to add a new syscall that is only useful to glibc..<br /><br />I agree that the name is a bit ugly, but this is a system call that I <br />actually think is fundamentally useful (ie I can see how it would be <br />totally usable quite outside any specific library implementation issues).<br /><br />Talking it over with the IBM threading guys is still worthwhile, though. <br />There may be _other_ information that the IBM guys have problems with, and <br />it could easily be that the interface we really want is even more generic.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
