    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/8/15/181">First message in thread</a></li><li><a href="/lkml/2002/8/15/181">Benjamin LaHaise</a><ul><li><a href="/lkml/2002/8/16/43">Denis Vlasenko</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2002/8/17/92">(Eric W. Biederman)</a><ul><li><a href="/lkml/2002/8/17/118">Benjamin LaHaise</a><ul><li><a href="/lkml/2002/8/17/85">Benjamin LaHaise</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Aug 2002 08:27:43 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] reduce stack usage of sanitize_e820_map</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Fri, 16 Aug 2002, Denis Vlasenko wrote:<br />&gt; &gt;<br />&gt; &gt; Currently, sanitize_e820_map uses 0x738 bytes of stack.  The patch below<br />&gt; &gt; moves the arrays into __initdata, reducing stack usage to 0x34 bytes.<br />&gt; <br />&gt; Is that a real problem? sanitize_e820_map will be called just once at init<br />&gt; time...<br /><br />Well, I would actually want us to have some tools that just say "you can't <br />do that". A flag to gcc that says "-Wstack-depth=200" that just makes gcc <br />refuse to compile functions that have too big of a stack requirement, so <br />that we'd see some of these things immediately.<br /><br />Somebody had a script that greps the kernel disassembly for big stack<br />changes, I suspect Ben used something like that. That's obviously <br />equivalent, but doesn't force developers to be careful.<br /><br />Of course, the ultimate thing checks what the dynamic depths are by <br />looking at the call graph, but since you can avoid the worst stuff by just <br />checking for static issues I htink that's worth it.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
