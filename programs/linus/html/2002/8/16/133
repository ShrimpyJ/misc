    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/8/13/33">First message in thread</a></li><li><a href="/lkml/2002/8/15/205">Linus Torvalds</a><ul><li><a href="/lkml/2002/8/15/90">Trond Myklebust</a></li><li><a href="/lkml/2002/8/15/92">Dax Kelson</a></li><li><a href="/lkml/2002/8/15/187">Roger Luethi</a></li><li><a href="/lkml/2002/8/16/70">Oliver Xymoron</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 16 Aug 2002 12:44:43 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Will NFSv4 be accepted?</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Fri, 16 Aug 2002, Oliver Xymoron wrote:<br />&gt; <br />&gt; Is loopback solid enough currently to make crypto over loopback<br />&gt; worthwhile? It's occurred to me that it might be better to move the<br />&gt; translation hooks down to the generic block layer proper so that<br />&gt; things like LVM and iSCSI and brain-damaged bit-swapped IDE could take<br />&gt; advantage of them without the deadlock-prone layering issues of<br />&gt; loopback. Thoughts?<br /><br />I don't know that it is clear which layer should do it. It's certainly <br />_not_ clear whether the block layer is the right point, and even if you <br />want a hook there I really suspect that upper layers want to pass in <br />"context" data to the encryption layer.<br /><br />In particular, having a global disk security mechanism may not actually be <br />a good idea - you may want to have per-file key information, which at <br />least implies that the block layer cannot do it alone, and upper layers <br />need to pass in different user keys depending on the operation.<br /><br />In other situations, the proper layer is obviously the stream itself (ie<br />the "NFS over SSH/Kerberos" kind of thing), but that approach assumes that<br />you trust the remote end. If you don't trust the remove end, you're back<br />to wanting per-file encryption (possibly in _addition_ to the stream<br />encryption), which then ends up implying that you need to have encryption<br />either at the page cache level or at the actual API level.<br /><br />(The API level tends to be just done with user-level loadable libraries,<br />of course, so there may not be much reason for kernel support there.  <br />Kernel support may or may not be desireable even if the encryption itself<br />were to be done by the user)<br /><br />And separate from the actual encryption, you have key management. Even if <br />the kernel were to do no encryption at all (as with a user-level library <br />approach), I suspect that some people would like to have support for <br />keeping track of which keys a process has.<br /><br />And THIS, I suspect, is one of the major reasons there isn't really all <br />that much encryption in the kernel. There's just too much choice, and <br />different people really need different things - resulting in it being all <br />over the place. <br /><br />Clearly some people trust their servers, and just want to have a safe <br />conduit over the WAN when they access them. Others don't even trust the <br />LAN or the server contents themselves, and want per-file protection with <br />private passwords. And both have a good point. It just means that there is <br />no "hook". There is a "maze of hooks, all slightly different".<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
