    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/8/30/35">First message in thread</a></li><li><a href="/lkml/2002/8/30/87">Linus Torvalds</a><ul><li><a href="/lkml/2002/8/30/104">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2002/8/30/126">Linus Torvalds</a><ul><li><a href="/lkml/2002/8/30/126">Ingo Molnar</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 30 Aug 2002 10:47:30 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] scheduler fixes, 2.5.32-BK</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Fri, 30 Aug 2002, Ingo Molnar wrote:<br />&gt; <br />&gt; hm, indeed, you are right - completions are the only safe method.<br />&gt; <br />&gt; i'm starting to wonder whether it's possible at all (theoretically) to<br />&gt; have a mutex design which has the current semaphore implementation's good<br />&gt; fastpath properties, but could also be used on stack.<br /><br />That's is my point. I don't think there is - although I suspect that many <br />architectures could easily do it. For all I know, there might well be some <br />tricks we could play on x86 with cmpxchg8b, for example.<br /><br />But I simply think that our current "completion vs semaphore" split is a<br />pretty good one conceptually. They may _look_ like they are largely the<br />same operation, but they have pretty distinct behaviour both in what the<br />fast path is (ie "expected behaviour": semaphores expect to succeed,<br />completions expect to wait), and what the release criteria are (semaphores<br />do not guarantee that nobody looks at them after a down() has succeeded,<br />while completions do).<br /><br />And one thing that tends to confirm my belief that "struct completion"  <br />actually makes sense as a separate thing from a semaphore has nothing to <br />do with these implementation details. It's the much more conceptual one: a <br />lot of the cases where we converted to completions are just a lot more <br />_readable_ as completions.<br /><br />Using a semaphore for much of it ("wait for the IO to complete" or "wait<br />for the thread to be set up") counted as a clever trick, but was a fairly<br />obscure clever trick. While the completion thing looks "obvious".<br /><br />So even if the actual implementation of semaphores and completions were<br />100% the same, I would actually want to _keep_ this naming and conceptual<br />difference, simply because it just _looks_ cleaner, in my opinion.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
