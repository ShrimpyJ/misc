    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/10/18/3">First message in thread</a></li><li><a href="/lkml/2002/10/18/149">george anzinger</a><ul><li><a href="/lkml/2002/10/18/190">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/2002/10/18/201">Linus Torvalds</a><ul><li><a href="/lkml/2002/10/18/201">Andrea Arcangeli</a><ul><li><a href="/lkml/2002/10/18/211">Stephen Hemminger</a></li></ul></li><li><a href="/lkml/2002/10/18/245">george anzinger</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 18 Oct 2002 10:19:58 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC][PATCH] linux-2.5.34_vsyscall_A0</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Fri, 18 Oct 2002, Andrea Arcangeli wrote:<br /><br />&gt; On Fri, Oct 18, 2002 at 09:45:41AM -0700, george anzinger wrote:<br />&gt; &gt; Stephen Hemminger wrote:<br />&gt; &gt; &gt; current cpu (and maybe current pid) somehow.  And it would be possible<br />&gt; &gt; &gt; to avoid  preemption while in a vsyscall text page, some other Unix<br />&gt; &gt; &gt; variants do this to implement portions of the thread library in kernel<br />&gt; &gt; &gt; provided user text pages.<br />&gt; &gt; &gt; <br />&gt; &gt; Now there is an idea!  Lock preemption in user space if and<br />&gt; <br />&gt; sounds not good to me, you would miss a wakeup and you would delay the<br />&gt; schedule of 1/HZ in the worst (close to the common) case.<br /><br />That's not the real problem.<br /><br />The real problem is that somebody can jump into the middle of a function <br />(or even into the middle of an instruction), causing the function to do <br />something totally different from the intended effect.<br /><br />In particular, it can cause the function to loop forever.<br /><br />If you disable preemption of user space, you now killed the machine.<br /><br />In short - others may do it, but it's a total _DISASTER_ from a security <br />and stability standpoint. Don't go there.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
