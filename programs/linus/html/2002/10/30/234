    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/10/30/199">First message in thread</a></li><li><a href="/lkml/2002/10/30/199">Mikael Pettersson</a><ul><li class="origin"><a href="/lkml/2002/10/30/259">(Linus Torvalds)</a><ul><li><a href="/lkml/2002/10/30/259">george anzinger</a></li><li><a href="/lkml/2002/10/30/263">george anzinger</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Are x86 trap gate handlers safe for preemption?</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 30 Oct 2002 22:51:10 +0000 (UTC)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;15808.17731.311432.596865&#64;kim.it.uu.se&gt;,<br />Mikael Pettersson  &lt;mikpe&#64;csd.uu.se&gt; wrote:<br />&gt;Consider an exception handler like vector 7, device_not_available:<br />&gt;<br />&gt;ENTRY(device_not_available)<br />&gt;        pushl $-1                       # mark this as an int<br />&gt;        SAVE_ALL<br />&gt;        movl %cr0, %eax<br />&gt;        testl $0x4, %eax                # EM (math emulation bit)<br />&gt;        jne device_not_available_emulate<br />&gt;        preempt_stop<br />&gt;<br />&gt;Since this is invoked via a trap gate and not an interrupt gate,<br />&gt;what's preventing this code from being preempted and resumed on<br />&gt;another CPU before the read from %cr0?<br /><br />Well, since %cr0 should be stable across the task switche, that<br />shouldn't actually matter.<br /><br />&gt;				 Another example is the<br />&gt;machine_check vector (also trap gate) whose handlers access MSRs.<br /><br />This one looks like a real bug. The fix should be to make it an<br />interrupt gate, I suspect. Comments?<br /><br />On the whole, I think it is probably a good idea to make all exceptions<br />be interrupt gates, and then on a case-by-case basis show why some don't<br />need to (ie clearly the system calls should _not_ be interrupt gates,<br />but we've long since made the page fault path use an interrupt gate for<br />similar special register stability reasons).<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
