    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/7/28/40">First message in thread</a></li><li><a href="/lkml/2002/7/28/40">Andrew Morton</a><ul><li><a href="/lkml/2002/7/28/72">Christoph Hellwig</a><ul><li><a href="/lkml/2002/7/28/100">Andrew Morton</a><ul><li><a href="/lkml/2002/7/28/102">Christoph Hellwig</a><ul><li><a href="/lkml/2002/7/28/138">Christoph Hellwig</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="/lkml/2002/7/28/195">Linus Torvalds</a><ul><li><a href="/lkml/2002/7/28/195">Andrew Morton</a><ul><li><a href="/lkml/2002/7/28/209">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 28 Jul 2002 17:04:53 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 11/13] don't hold i_sem during O_DIRECT writes to blockdevs</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 28 Jul 2002, Andrew Morton wrote:<br />&gt;<br />&gt; We're moving in the direction of deprecating the raw driver and<br />&gt; recommending that applications use O_DIRECT reads and writes against<br />&gt; blockdevs.<br /><br />This should probably be done unconditionally or not at all.<br /><br />We've worked very hard on making block devices more "normal" in 2.5.x, and<br />I don't want to start diverging again.<br /><br />If this is really a scalability issue, I would suggest that people who<br />care look into just getting rid of "i_sem", and replacing it with a<br />read-write semaphore that explicitly protects only "i_size". Then you make<br />reads and non-extending writes take that semaphore for reading, and<br />extending writes and truncates taking it for writing.<br /><br />[ The "nonextending writes" case is somewhat interesting, a write probably<br />  needs to actually take the semaphore for writing, and then downgrading<br />  it to reading after it has checked that it doesn't end up extending the<br />  file.<br /><br />  What makes this even more interesting is that depending on the semaphore<br />  implementation you can actually split up the "take write lock" into<br />  "prepare to take write lock" and "turn it into a read lock" or "confirm<br />  write lock", where the "prepare to take write lock" allows existing<br />  readers but not new write-lockers, so that if you downgrade to a read<br />  lock you never had to synchronize with anybody else who was already<br />  reading. ]<br /><br />I'd much rather do this _right_ than have some ugly blockdev-only hack,<br />since the problem certainly would happen with files too. A lot of people<br />want to do databases on a filesystem, just because it is so much easier to<br />administer.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
