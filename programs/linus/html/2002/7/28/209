    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/7/28/40">First message in thread</a></li><li><a href="/lkml/2002/7/28/176">Linus Torvalds</a><ul><li><a href="/lkml/2002/7/28/195">Andrew Morton</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 28 Jul 2002 17:47:39 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 11/13] don't hold i_sem during O_DIRECT writes to blockdevs</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 28 Jul 2002, Andrew Morton wrote:<br />&gt;<br />&gt; We can do the rwsem thing, and that would be good.  But there may<br />&gt; be filesystems which are relying on i_sem to provide protection<br />&gt; against concurrent invokations of get_block(create=1), inside i_size.<br /><br />We actually want to retain i_sem for directory operations anyway (ie the<br />rw-semaphore would be an addition, not a replacement), so the easiest<br />transition would probably be to move the i_sem thing into the filesystems<br />when the rwsem thing is done (the same way the BKL removal worked), and<br />then let the filesystems make their own decisions on when they need it<br />(and the decision might well be to take it in the "create = 1" case, which<br />is likely to be fairly rare for non-extending writes)<br /><br />The other alternative is to move this _all_ into the filesystem entirely,<br />and not have "generic_file_write()" take any lock at all. Let the<br />filesystem first take whatever lock it thinks it needs, and then call<br />"generic_file_write()". Filesystems migh choose to just get i_sem<br />unconditionally both for extending and non-extending writes.<br /><br />That would mean that the filesystems would have to always wrap their use<br />of "generic_file_write()", but a number of them do so anyway because they<br />want to do some other book-keeping. I dunno.<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
