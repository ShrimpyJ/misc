    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/7/29/169">First message in thread</a></li><li><a href="/lkml/2002/7/29/258">Linus Torvalds</a><ul><li><a href="/lkml/2002/7/29/227">Paul Larson</a><ul><li class="origin"><a href="/lkml/2002/7/30/8">Linus Torvalds</a><ul><li><a href="/lkml/2002/7/30/8">Andreas Schwab</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 29 Jul 2002 15:17:32 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] vfs_read/vfs_write small bug fix (2.5.29)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On 29 Jul 2002, Paul Larson wrote:<br />&gt; &gt; <br />&gt; &gt; (Or maybe glibc doesn't know that the kernel pread/pwrite system calls <br />&gt; &gt; were always 64-bit clean, and it just happened to work).<br />?<br />&gt; No, with just this patch it still fails on pread02 and pwrite02.<br /><br />Ok, that just means that it's a library issue now - having looked at<br />historical kernel behaviour (and a lot of 64/bit architectures emulating<br />their old 32/bit system calls), the kernel system call interface is<br />clearly a 64-bit value, ie the kernel only export pread64/pwrite64, not a<br />"traditional" pread/pwrite at all.<br /><br />So the question is what the library should do with a 32-bit negative <br />"offset_t" passed in to the user-level "pread()" implementation. <br /><br />Looking at the disassembly of glibc pread, the implementation seems to be <br />to just clear %edx on x86 (which are the high bits of the 64-bit offset <br />value passed into sys_pread64()). <br /><br />And equally clearly your test wants to get EINVAL.<br /><br />Your test would pass if glibc just sign-extended the 32-bit value to 64 <br />bits, instead of zero-extending it.<br /><br />Alternativealy, your test would pass if glibc just internally checked for <br />a negative offset.<br /><br />I think the sign-extending sounds like the right idea, but that will<br />obviously break applications that _want_ to pread() in the 2GB-4GB address<br />without using pread64(). Something that sounds unlikely to be an issue, of<br />course (and which should have failed with -EBIG at open time anyway)<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
