    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/7/20/76">First message in thread</a></li><li><a href="/lkml/2002/7/20/76">Robert Love</a><ul><li class="origin"><a href="/lkml/2002/7/20/123">Linus Torvalds</a><ul><li><a href="/lkml/2002/7/20/123">Robert Love</a><ul><li><a href="/lkml/2002/7/20/146">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2002/7/20/150">William Lee Irwin III</a><ul><li><a href="/lkml/2002/7/20/114">Robert Love</a></li></ul></li></ul></li><li><a href="/lkml/2002/7/20/121">"David S. Miller"</a><ul><li><a href="/lkml/2002/7/20/117">Robert Love</a></li><li><a href="/lkml/2002/7/20/147">Alan Cox</a><ul><li><a href="/lkml/2002/7/20/160">"David S. Miller"</a><ul><li><a href="/lkml/2002/7/21/41">Alan Cox</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 20 Jul 2002 13:40:22 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] generalized spin_lock_bit</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On 20 Jul 2002, Robert Love wrote:<br />&gt;<br />&gt; The attached patch implements bit-sized spinlocks via the following<br />&gt; interfaces:<br /><br />I'm not entirely convinced.<br /><br />Some architectures simply aren't good at doing bitwise locking, and we may<br />have to change the current "pte_chain_lock()" to a different<br />implementation.<br /><br />In particular, with the current pte_chain_lock() interface, it will be<br />_trivial_ to turn that bit in page-&gt;flags to be instead a hash based on<br />the page address into an array of spinlocks. Which is a lot more portable<br />than the current code.<br /><br />(The current code works, but look at what it generates on old sparcs, for<br />example).<br /><br />Your patch, while it cleans up some things, makes it a lot harder to do<br />those kinds of changes later.<br /><br />So I would suggest (at least for now) to _not_ get rid of the<br />pte_chain_lock() abstraction, and re-doing your patch with that in mind.<br />Gettign rid of the (unnecessary) UP locking is good, but getting rid of<br />the abstraction doesn't look like a wonderful idea to me.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
