    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/9/26/1">First message in thread</a></li><li><a href="/lkml/2002/9/26/1">Andrew Morton</a><ul><li><a href="/lkml/2002/9/26/12">"David S. Miller"</a><ul><li class="origin"><a href="/lkml/2002/9/26/14">Linus Torvalds</a><ul><li><a href="/lkml/2002/9/26/14">"David S. Miller"</a><ul><li><a href="/lkml/2002/9/26/20">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 25 Sep 2002 21:37:23 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch 1/4] prepare_to_wait/finish_wait sleep/wakeup API</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Wed, 25 Sep 2002, David S. Miller wrote:<br />&gt; <br />&gt; I don't want to say that your changes cannot be made to work,<br />&gt; but it's been one of my understandings all these years that<br />&gt; the fact that the task itself controls it's presence on the<br />&gt; wait queue is what allows many races to be handled properly and<br />&gt; cleanly.<br /><br />No, the important part is that the process adds itself and marks itself as<br />sleeping _before_ doing the test. The "marks itself as sleeping" part is <br />the really important one.<br /><br />The "removes itself" was/is really just a matter of being able to handle <br />loops more efficiently (which is probably a case of optimizing for the <br />wrong thing, since the common case is to wait for just _one_ event, <br />especially since we made the herd behaviour go away with the exclusive <br />stuff).<br /><br />The "removes itself" thing was also something I thought was cleaner (have <br />the same entity do both add and remove), but I certainly buy into the CPU <br />lock bouncing arguments against it, so..<br /><br />&gt; For example, the ordering of the test and add/remove from<br />&gt; the wait queue is pretty important.<br /><br />The test and add yes. Remove no, since remove is always done after we know <br />we're waking up.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
