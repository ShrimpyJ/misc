    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/9/26/101">First message in thread</a></li><li><a href="/lkml/2002/9/26/305">Andrew Morton</a><ul><li><a href="/lkml/2002/9/26/308">Linus Torvalds</a><ul><li><a href="/lkml/2002/9/27/33">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2002/9/26/310">Linus Torvalds</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2002/9/27/54">Ingo Molnar</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 26 Sep 2002 15:56:29 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] 'sticky pages' support in the VM, futex-2.5.38-C5</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Thu, 26 Sep 2002, Linus Torvalds wrote:<br />&gt; <br />&gt; and then when we pin a page, we do<br />&gt; <br />&gt; 	/* This is part of the <br />&gt; 	struct page_change_struct pinned_data;<br /><br />That "This is part of the " comment should continue with "struct futex_q", <br />but I went off and was supposed to check what the futex data structure was <br />called, and forgot about updating it.<br /><br />Anyway, the point being that this needs no new allocations in _any_ path,<br />and only extends a structure that we already need for the slow case for<br />futexes. It does imply a new lock, though, and the COW path would have to<br />check that hash (which should scale pretty well, since we only have<br />entries here when somebody is blocked on a futex).<br /><br />Oh, and we need a new hash table, since the native futex hash can't just<br />be re-used due to different indexing - the futex hash is based on physical<br />page and offset, while the page_change_struct hash is based on virtual<br />address and the mm.<br /><br />(I initially thought we could make the page_change_struct hash be based on <br />physical page, but there can be multiple instances of the same physical <br />page being mapped into the same VM, so that wouldn't be a good thing - <br />we'd get callbacks for the wrong virtual address being COW'ed).<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
