    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/9/16/149">First message in thread</a></li><li><a href="/lkml/2002/9/16/228">Linus Torvalds</a><ul><li><a href="/lkml/2002/9/16/244">Robert Love</a><ul><li class="origin"><a href="/lkml/2002/9/17/165">Linus Torvalds</a><ul><li><a href="/lkml/2002/9/17/165">Robert Love</a><ul><li><a href="/lkml/2002/9/17/131">Robert Love</a></li><li><a href="/lkml/2002/9/17/132">Steven Cole</a></li><li><a href="/lkml/2002/9/17/205">Robert Love</a></li><li><a href="/lkml/2002/9/17/255">Robert Love</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 16 Sep 2002 22:56:11 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] BUG(): sched.c: Line 944</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On 16 Sep 2002, Robert Love wrote:<br />&gt; <br />&gt; I was this -&gt; &lt;- close to celebrating.  Not so fast, smarty.<br /><br />You forget - I'm not only a smarty, I'm sick and twisted too.<br /><br />&gt; What about release_kernel_lock() ?<br />&gt; <br />&gt; It sees task-&gt;lock_depth&gt;=0 and calls spin_unlock() on a lock that it<br />&gt; does not hold.<br /><br />We have a simple rule:<br /> - task-&gt;lock_depth = -1 means "no lock held"<br /> - task-&gt;lock_depth &gt;= 0 means "BKL really held"<br /><br />... but what does "task-&gt;lock_depth &lt; -1" mean?<br /><br />Yup: "validly nonpreemptable".<br /><br />So then you have:<br /><br />	#define kernel_locked()	(current-&gt;lock_depth &gt;= 0)<br /><br />	#define in_atomic() (preempt_count() &amp; ~PREEMPT_ACTIVE) != (current-&gt;lock_depth != -1))<br /><br />and you're all set - just set lock_depth to -2 when you exit to show that<br />you don't hold the BKL, but that you are validly not preemtable.<br /><br />I get the award for having the most disgusting ideas.<br /><br />		Linus "but it works and is efficient" Torvalds<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
