    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/9/27/107">First message in thread</a></li><li><a href="/lkml/2002/9/27/115">Linus Torvalds</a><ul><li><a href="/lkml/2002/9/27/118">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2002/9/27/133">Linus Torvalds</a><ul><li><a href="/lkml/2002/9/27/133">Ingo Molnar</a><ul><li><a href="/lkml/2002/9/27/137">Linus Torvalds</a></li><li><a href="/lkml/2002/9/27/146">Ingo Molnar</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 27 Sep 2002 10:05:17 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] 'virtual =&gt; physical page mapping cache', vcache-2.5.38-B8</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Fri, 27 Sep 2002, Ingo Molnar wrote:<br />&gt; <br />&gt; i agree, first hashing the vcache should work. There are some details:  <br />&gt; if we first hash the vcache then we have to set up the queue in a way for<br />&gt; the callback function to notice that this queue is not futex-hashed (ie.  <br />&gt; not live) yet. Otherwise the callback function might attempt to rehash it.  <br />&gt; This means one more branch in the callback function, not a problem.<br /><br />Not necessarily. You can solve _this_ problem by just holding the futex <br />lock over the whole operation. If the COW happens "early" on another CPU, <br />it will then be serialized by the futex lock in the callback function.<br /><br />The futex lock itself is hopefully not going to be contended very much,<br />making the "get it early" approach acceptable. Although if it later _does_<br />get contended, we'll need to split it up some way: it cannot be hashed<br />sanely with the above approach, since there are no unique sub-indexes to<br />hash off as the physical page and offset have zero correlation with the VM<br />/ virtual address.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
