    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/12/17/242">First message in thread</a></li><li><a href="/lkml/2002/12/17/243">Ulrich Drepper</a><ul><li><a href="/lkml/2002/12/18/46">Brian Gerst</a></li><li><a href="/lkml/2002/12/17/254">"H. Peter Anvin"</a><ul><li><a href="/lkml/2002/12/17/258">Linus Torvalds</a><ul><li><a href="/lkml/2002/12/19/18">Pavel Machek</a></li><li><a href="/lkml/2002/12/19/188">Alan Cox</a><ul><li><a href="/lkml/2002/12/19/205">Stephen Rothwell</a></li></ul></li><li><a href="/lkml/2002/12/17/267">Stephen Rothwell</a><ul><li><a href="/lkml/2002/12/17/256">Linus Torvalds</a></li><li><a href="/lkml/2002/12/18/115">Andrew Morton</a></li><li><a href="/lkml/2002/12/17/260">Andrew Morton</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2002/12/17/270">Linus Torvalds</a><ul><li><a href="/lkml/2002/12/17/270">"H. Peter Anvin"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 17 Dec 2002 20:05:35 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Intel P6 vs P7 system call performance</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 17 Dec 2002, H. Peter Anvin wrote:<br />&gt; Ulrich Drepper wrote:<br />&gt; &gt;<br />&gt; &gt; That's good to know but not what I meant.<br />&gt; &gt;<br />&gt; &gt; I referred to syscall/sysret opcodes.  They are broken in their own way<br />&gt; &gt; (destroying ecx on kernel entry) but at least they preserve eip.<br />&gt; &gt;<br />&gt;<br />&gt; Destroying %ecx is a lot less destructive than destroying %eip and %esp...<br /><br />Actually, as far as the kernel is concerned, they are about equally bad.<br /><br />Destroying %eip is the _least_ bad register to destroy, since the kernel<br />can control that part, and it is trivial to just have a single call site.<br /><br />But destroying %esp or %ecx is pretty much totally equivalent - it<br />destroys one user mode register, and it doesn't really matter _which_ one.<br />In both cases 32 bits of user information is destroyed, and they are 100%<br />equivalent as far as the kernel is concerned.<br /><br />On intel with sysenter, destroying %esp means that we have to save the<br />value in %ebp, and we thus lose argument 6.<br /><br />On AMD, %ecx is destroyed on entry, which means that we lose argument 2<br />(which i smore important than arg6, but that only means that the AMD<br />trampoline will have to move the old value of %ecx into %ebp, at which<br />point the two approaches are again exactly the same).<br /><br />In either case, one GP register is irrevocably lost, which means that<br />there are only 5 GP registers left for arguments. And thus both Intel and<br />AMD will have _exactly_ the same problem with six-argument system calls.<br /><br />The _sane_ thing to do would have been to save the old user %esp/%eip on<br />the kernel stack. Preferably together with %eflags and %ss and %cs, just<br />for completeness. That stack save part is _not_ the expensive or complex<br />part of a "int 0x80" or long call (the _complex_ part is all the stupid<br />GDT/IDT lookups and all the segment switching crap).<br /><br />In short, both AMD and Intel optimized away too much.<br /><br />The good news is that since both of them suck, it's easier to make the<br />six-argument decision. Since six arguments are problematic for all major<br />"fast" system calls, my executive decision is to just say that<br />six-argument system calls will just have to continue using the old and<br />slower system call interface. It's kind of a crock, but it's simply due to<br />silly CPU designers.<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
