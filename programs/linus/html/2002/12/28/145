    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/12/28/37">First message in thread</a></li><li><a href="/lkml/2002/12/28/92">Linus Torvalds</a><ul><li><a href="/lkml/2002/12/28/124">Jeff Dike</a><ul><li class="origin"><a href="/lkml/2002/12/29/1">Linus Torvalds</a><ul><li><a href="/lkml/2002/12/29/1">Jeff Dike</a></li></ul></li></ul></li><li><a href="/lkml/2002/12/28/133">Daniel Jacobowitz</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Dec 2002 20:13:44 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Allow UML kernel to run in a separate host address space</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Sat, 28 Dec 2002, Jeff Dike wrote:<br /><br />&gt; torvalds&#64;transmeta.com said:<br />&gt; &gt; On Sat, 28 Dec 2002, Jeff Dike wrote:<br />&gt; &gt; <br />&gt; &gt; &gt; 3 - Ability to manipulate a child's address space (i.e. mmap, munmap,<br />&gt; &gt; &gt; mprotect on an address space which is not current-&gt;mm)<br />&gt; &gt;<br />&gt; &gt; Well, #3 falls under "ptrace()" as far as I'm concerned,<br />&gt; <br />&gt; Not exactly.  UML needs to be able to fiddle an address space that has no<br />&gt; process in it (swapout, COWing, maybe a few other things).  <br /><br />But that is an address space that it should already has access to through, <br />since it created it in the first place (ie it would fall under the normal <br />"sys_mm_indirect()" case).<br /><br />The thing that I _really_ don't want to have is soem uncontrolled way to <br />generate accesses to existing "struct mm_struct"s, since that is really <br />dangerous from a security standpoint.<br /><br />We could have a PTRACE_GET_MM_FD kind of thing for ptrace (and then the <br />gdb/tracer can use that to create mappings in the process), but the reason <br />I want that "hook" to be through ptrace itself is simply that it's a known <br />interface to control other unrelated processes.<br /><br />So if you create the MM's yourself, you can use the indirection directly. <br />But if you want to control your children or unrelated processes, you use <br />ptrace to get the hook. <br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
