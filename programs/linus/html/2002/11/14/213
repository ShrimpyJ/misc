    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/11/14/20">First message in thread</a></li><li><a href="/lkml/2002/11/14/102">Andrea Arcangeli</a><ul><li><a href="/lkml/2002/11/14/105">Andi Kleen</a></li><li><a href="/lkml/2002/11/14/204">Jamie Lokier</a><ul><li class="origin"><a href="/lkml/2002/11/14/245">Linus Torvalds</a><ul><li><a href="/lkml/2002/11/14/245">Andi Kleen</a><ul><li><a href="/lkml/2002/11/15/217">(Kai Henningsen)</a></li></ul></li><li><a href="/lkml/2002/11/15/190">"Mark Hamblin"</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 14 Nov 2002 16:46:17 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: module mess in -CURRENT</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Fri, 15 Nov 2002, Jamie Lokier wrote:<br />&gt; <br />&gt; Once you're talking about nanoseconds, you can have both: each time<br />&gt; you store an mtime, make sure the value is at least 1 nanosecond<br />&gt; greater than the previously stored mtime for any file in the<br />&gt; serialisation domain.  If it is not, simply _wait_ for up to a<br />&gt; nanosecond until the value has advanced enough.<br /><br />Note that the fields already _are_ nanoseconds, it's just not updated at a<br />nanosecond rate. We're updating xtime only at a rate of HZ, where the 1 ms<br />comes from in 2.5.x.<br /><br />And doing a full "gettimeofday()" sounds just a bit too expensive for the<br />stuff that needs to just update an inode time field.<br /><br />But the thing is, we don't actually care about the exact time, we only<br />care about it being monotonically increasing, so I suspect we could just<br />have something like<br /><br />	static unsigned long xtime_count;<br /><br />	static struct timespec current_time(void)<br />	{<br />		struct timespec val;<br />		unsigned long extra;<br /><br />		read_lock_irq(&amp;xtime_lock);<br />		val = xtime;<br />		extra = xtime_count;<br />		xtime_count = extra+1;<br />		read_unlock_irq(&amp;xtime_lock);<br /><br />		val.nsec += count;<br />		if (val.tv_nsec &gt; 1000000000) {<br />			val.tv_nsec -= 1000000000;<br />			val.tv_sec ++;<br />		}<br />		return val;<br />	}<br /><br />and then have the timer clear "xtime_count" every time it updates it.  <br /><br />This obviously doesn't give us nanosecond resolution, but it _does_ give<br />us "unique" timestamps (assuming a system call takes longer than a<br />nanosecond, which is likely true for the next decade or so - after that we<br />can start worrying about whether the users might be outrunning the clock).<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
