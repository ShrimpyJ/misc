    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/11/17/29">First message in thread</a></li><li><a href="/lkml/2002/11/17/49">Linus Torvalds</a><ul><li><a href="/lkml/2002/11/17/55">Ingo Molnar</a></li><li><a href="/lkml/2002/11/17/59">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2002/11/17/69">Linus Torvalds</a><ul><li><a href="/lkml/2002/11/17/69">Ingo Molnar</a></li></ul></li></ul></li><li><a href="/lkml/2002/11/17/71">Ulrich Drepper</a></li><li><a href="/lkml/2002/11/17/87">Jamie Lokier</a></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2002/11/17/61/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 17 Nov 2002 10:27:30 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] threading fix, tid-2.5.47-A3</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Sun, 17 Nov 2002, Ingo Molnar wrote:<br />&gt;<br />&gt; there is no change anywhere due to NPTL. You can start and old glibc<br />&gt; application from within a new glibc application and vice versa.<br /><br />So then your explanation was extremely confused. Can you explain _where_ <br />you're doing the ne wsystem call? If it is at execve() time in the parent, <br />there is no way in hell I will accept it.<br /><br />In fact, I have committed the following to my tree to make sure that there<br />is no user_tid pointer left over when we release a memory space, the old<br />code was buggy and left the user_tid alone over an execve() which meant<br />that a subsequent clone(CLONE_VM) and exit of the old process would have<br />corrupted memory.<br /><br />Feel free to re-send the "set_user_tid()" patch assuming it is done from<br />crt0.S, and not from glibc execve() like your original explanation<br />claimed. Also, please send the set_user_tid() thing _separate_ from <br />whatever else you did, since it has nothing to do with your other changes.<br /><br />		Linus<br /><br />----<br /># This is a BitKeeper generated patch for the following project:<br /># Project Name: Linux kernel tree<br /># This patch format is intended for GNU patch command version 2.5 or higher.<br /># This patch includes the following deltas:<br />#	           ChangeSet	1.863   -&gt; 1.864  <br />#	       kernel/fork.c	1.84    -&gt; 1.85   <br />#<br /># The following is the BitKeeper ChangeSet Log<br /># --------------------------------------------<br /># 02/11/17	torvalds&#64;home.transmeta.com	1.864<br /># Make sure we clean user_tid when we've released the<br /># memory space it was associated with.<br /># --------------------------------------------<br />#<br />diff -Nru a/kernel/fork.c b/kernel/fork.c<br />--- a/kernel/fork.c	Sun Nov 17 10:21:59 2002<br />+++ b/kernel/fork.c	Sun Nov 17 10:21:59 2002<br />&#64;&#64; -408,12 +408,15 &#64;&#64;<br /> 		complete(vfork_done);<br /> 	}<br /> 	if (tsk-&gt;user_tid) {<br />+		int * user_tid = tsk-&gt;user_tid;<br />+		tsk-&gt;user_tid = NULL;<br />+<br /> 		/*<br /> 		 * We dont check the error code - if userspace has<br /> 		 * not set up a proper pointer then tough luck.<br /> 		 */<br />-		put_user(0, tsk-&gt;user_tid);<br />-		sys_futex((unsigned long)tsk-&gt;user_tid, FUTEX_WAKE, 1, NULL);<br />+		put_user(0, user_tid);<br />+		sys_futex((unsigned long)user_tid, FUTEX_WAKE, 1, NULL);<br /> 	}<br /> }<br /> <br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
