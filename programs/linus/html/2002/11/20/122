    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2002/11/17/83">First message in thread</a></li><li><a href="/lkml/2002/11/18/359">Linus Torvalds</a><ul><li><a href="/lkml/2002/11/20/56">Rusty Russell</a><ul><li class="origin"><a href="/lkml/2002/11/24/96">Linus Torvalds</a><ul><li><a href="/lkml/2002/11/24/96">Rusty Russell</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 20 Nov 2002 07:45:20 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Why /dev/sdc1 doesn't show up...</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Wed, 20 Nov 2002, Rusty Russell wrote:<br />&gt; <br />&gt; 	Linus, I would like an answer: how does one register two /proc<br />&gt; entries?<br /><br />I think the answer is simple: you don't.<br /><br />In practice this doesn't happen. And even in theory when it does happen, <br />trying to do it right is _worse_ than just letting it be. So what if one <br />of them fails? Big deal. You didn't get the file, because you are playing <br />with modules that do something that they shouldn't have done.<br /><br />	Rule #1: KISS<br /><br />	Rule #2: "don't overdesign" aka "perfect is the enemy of the good"<br /><br />In other words, screw the cases that don't matter, we only need to verify <br />that we don't oops. Which means that the _right_ approach for proc entries <br />is something like this:<br /><br />	if (register_device(....))<br />		return -ENOMEM;<br /><br />	if (!create_proc_entry("foo"...))<br />		printk("Unable to create '/proc/foo'\n");<br />	if (!create_proc_entry("bar"...))<br />		printk("Unable to create '/proc/bar'\n");<br />	return 0;<br /><br />and simply face the fact that trying to fail the module load at a late <br />time is a bad idea, and if somebody already has registered your /proc <br />entries then the system maintainer is doing something wrong and it is <br />_his_ problem and he can<br /><br />The kernel shouldn't oops. And if that means that we should just leave the <br />module loaded (not return an error), then so what? Hey, it may work fine <br />without the /proc entries, erroring out might be _worse_.<br /><br />This is what happens with built-in drivers already. Modules are nothing <br />but a convenience. They're not "worthy" of complexity.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
