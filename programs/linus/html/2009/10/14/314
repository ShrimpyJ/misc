    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/10/11/195">First message in thread</a></li><li><a href="/lkml/2009/10/14/147">Alan Cox</a><ul><li><a href="/lkml/2009/10/14/218">Linus Torvalds</a><ul><li><a href="/lkml/2009/10/14/234">Paul Fulghum</a></li><li class="origin"><a href="/lkml/2009/10/14/351">Linus Torvalds</a><ul><li><a href="/lkml/2009/10/14/351">Oleg Nesterov</a><ul><li><a href="/lkml/2009/10/14/369">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2009/10/14/416">Boyan</a><ul><li><a href="/lkml/2009/10/14/441">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2009/10/15/248">OGAWA Hirofumi</a><ul><li><a href="/lkml/2009/10/15/281">Oleg Nesterov</a></li><li><a href="/lkml/2009/10/15/352">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2009/10/14/314/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 14 Oct 2009 09:38:43 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Bug #14388] keyboard under X with 2.6.31</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 14 Oct 2009, Linus Torvalds wrote:<br />&gt; <br />&gt; But it's certainly true that it just never happened before. At least for <br />&gt; the !low_latency case, I'm not so sure about the low_latency=1 case, but I <br />&gt; haven't checked either - it would depend on any higher-level <br />&gt; serialization.<br /><br />Btw, we _could_ try to solve this by adding some workqueue function to <br />"run delayed work now", and then always doing the 'flush_to_ldisc()' <br />through the workqueue logic.<br /><br />So this is an "alternate patch": instead of making flush_to_ldisc() be <br />safe to re-enter, we try to make sure it's always called through the whole <br />workqueue logic and thus serialized by that.<br /><br />Of course, keventd itself is multi-threaded, so I'm not entirely sure even <br />-that- guarantees that one 'flush_to_ldisc()' couldn't be pending on one <br />CPU while it is then scheduled and then run on another CPU concurrently <br />too. The WORK_STRUCT_PENDING bit guarantees exclusion from the lists and <br />from being pending, but the work might be both pending and _running_ at <br />the same time, afaik.<br /><br />I'm adding Oleg to the Cc, because he's the workqueue-master. Oleg?<br /><br />The patch below is - surprise, surprise - entirely untested. I'm not sure <br />my 'flush_delayed_work()' implementation is entirely kosher. But it looks <br />like it might work, and it did compile for me (technically this is on top <br />of my flush_to_ldisc() patch, but they should be independent of each <br />other).<br /><br />			Linus<br /><br />---<br /> drivers/char/tty_buffer.c |    2 +-<br /> include/linux/workqueue.h |    1 +<br /> kernel/workqueue.c        |   18 ++++++++++++++++++<br /> 3 files changed, 20 insertions(+), 1 deletions(-)<br /><br />diff --git a/drivers/char/tty_buffer.c b/drivers/char/tty_buffer.c<br />index 0296612..66fa4e1 100644<br />--- a/drivers/char/tty_buffer.c<br />+++ b/drivers/char/tty_buffer.c<br />&#64;&#64; -468,7 +468,7 &#64;&#64; static void flush_to_ldisc(struct work_struct *work)<br />  */<br /> void tty_flush_to_ldisc(struct tty_struct *tty)<br /> {<br />-	flush_to_ldisc(&amp;tty-&gt;buf.work.work);<br />+	flush_delayed_work(&amp;tty-&gt;buf.work);<br /> }<br /> <br /> /**<br />diff --git a/include/linux/workqueue.h b/include/linux/workqueue.h<br />index 7ef0c7b..cf24c20 100644<br />--- a/include/linux/workqueue.h<br />+++ b/include/linux/workqueue.h<br />&#64;&#64; -207,6 +207,7 &#64;&#64; extern int queue_delayed_work_on(int cpu, struct workqueue_struct *wq,<br /> <br /> extern void flush_workqueue(struct workqueue_struct *wq);<br /> extern void flush_scheduled_work(void);<br />+extern void flush_delayed_work(struct delayed_work *work);<br /> <br /> extern int schedule_work(struct work_struct *work);<br /> extern int schedule_work_on(int cpu, struct work_struct *work);<br />diff --git a/kernel/workqueue.c b/kernel/workqueue.c<br />index addfe2d..ccefe57 100644<br />--- a/kernel/workqueue.c<br />+++ b/kernel/workqueue.c<br />&#64;&#64; -640,6 +640,24 &#64;&#64; int schedule_delayed_work(struct delayed_work *dwork,<br /> EXPORT_SYMBOL(schedule_delayed_work);<br /> <br /> /**<br />+ * flush_delayed_work - block until a dwork_struct's callback has terminated<br />+ * &#64;dwork: the delayed work which is to be flushed<br />+ *<br />+ * Any timeout is cancelled, and any pending work is run immediately.<br />+ */<br />+void flush_delayed_work(struct delayed_work *dwork)<br />+{<br />+	if (del_timer(&amp;dwork-&gt;timer)) {<br />+		struct cpu_workqueue_struct *cwq;<br />+		cwq = wq_per_cpu(keventd_wq, get_cpu());<br />+		__queue_work(cwq, &amp;dwork-&gt;work);<br />+		put_cpu();<br />+	}<br />+	flush_work(&amp;dwork-&gt;work);<br />+}<br />+EXPORT_SYMBOL(flush_delayed_work);<br />+<br />+/**<br />  * schedule_delayed_work_on - queue work in global workqueue on CPU after delay<br />  * &#64;cpu: cpu to use<br />  * &#64;dwork: job to be done<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
