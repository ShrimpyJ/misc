    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/10/28/266">First message in thread</a></li><li><a href="/lkml/2009/10/28/266">Jens Axboe</a><ul><li class="origin"><a href="/lkml/2009/10/28/277">Linus Torvalds</a><ul><li><a href="/lkml/2009/10/28/277">Jens Axboe</a><ul><li><a href="/lkml/2009/10/28/288">Jens Axboe</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 28 Oct 2009 12:00:08 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] block fixes for 2.6.32-rc</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 28 Oct 2009, Jens Axboe wrote:<br />&gt; <br />&gt; Neil Brown (1):<br />&gt;       block: use after free bug in __blkdev_get<br />&gt;<br />&gt; diff --git a/fs/block_dev.c b/fs/block_dev.c<br />&gt; index 9cf4b92..8bed055 100644<br />&gt; --- a/fs/block_dev.c<br />&gt; +++ b/fs/block_dev.c<br />&gt; &#64;&#64; -1248,8 +1248,8 &#64;&#64; static int __blkdev_get(struct block_device *bdev, fmode_t mode, int for_part)<br />&gt;  			bd_set_size(bdev, (loff_t)bdev-&gt;bd_part-&gt;nr_sects &lt;&lt; 9);<br />&gt;  		}<br />&gt;  	} else {<br />&gt; -		put_disk(disk);<br />&gt;  		module_put(disk-&gt;fops-&gt;owner);<br />&gt; +		put_disk(disk);<br />&gt;  		disk = NULL;<br />&gt;  		if (bdev-&gt;bd_contains == bdev) {<br />&gt;  			if (bdev-&gt;bd_disk-&gt;fops-&gt;open) {<br /><br />Is this really right? You do the module-put while the disk is still <br />available..<br /><br />I get the feeling that it might have been better to do<br /><br />	struct module *mod = disk-&gt;fops-&gt;owner;<br />	put_disk(disk);<br />	module_put(mod);<br /><br />instead, which tries to make sure that the module is put only after we've <br />gotten rid of the disk entirely.<br /><br />But I dunno. Maybe there is some reason why it's safe either way. You're <br />sure the kobject_put() in put_disk will never call to the module?<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
