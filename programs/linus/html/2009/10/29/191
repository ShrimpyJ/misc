    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/10/26/191">First message in thread</a></li><li><a href="/lkml/2009/10/26/191">David Howells</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 29 Oct 2009 08:31:11 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] CacheFiles: Cleanup redundant tests on unsigned</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 26 Oct 2009, David Howells wrote:<br />&gt;<br />&gt; From: Roel Kluin &lt;roel.kluin&#64;gmail.com&gt;<br />&gt; <br />&gt; The variables are unsigned so the test `&gt;= 0' is always true,<br />&gt; the `&lt; 0' test always fails. The other part of<br />&gt; the test catches wrapped values.<br /><br />This is an excellent example of why I think that some gcc warnings are <br />pure and utter sh*t, and why just blindly trying to avoid them then leads <br />to worse code.<br /><br />&gt; -	if (datalen &lt; 0 || datalen &gt; PAGE_SIZE - 1)<br />&gt; +	if (datalen &gt; PAGE_SIZE - 1)<br />&gt; -	if (fstop &lt; 0 || fstop &gt;= cache-&gt;fcull_percent)<br />&gt; +	if (fstop &gt;= cache-&gt;fcull_percent)<br />&gt; -	if (bstop &lt; 0 || bstop &gt;= cache-&gt;bcull_percent)<br />&gt; +	if (bstop &gt;= cache-&gt;bcull_percent)<br /><br />You've now actively made the code more fragile, only to avoid a warning.<br /><br />The old code was clearly correct. The new code subtle depends on the type <br />of comparison. <br /><br />I _hate_ those idiotic warnings, and in this case the "warning-free" code <br />is actively worse than the original.<br /><br />A smart compiler would see that it's a range check, and one that could <br />have been done as an unsigned comparison (well, for the constant compare <br />case) regardless of the type of the variable being tested. So a _smart_ <br />compiler wouldn't complain, but it might use the signedness information to <br />silently simplify the comparison.<br /><br />A _stupid_ compiler complains, and thus forces people to either ignore the <br />warning, or make the code worse.<br /><br />Which one would you prefer?<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
