    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/10/11/195">First message in thread</a></li><li><a href="/lkml/2009/10/12/724">Linus Torvalds</a><ul><li><a href="/lkml/2009/10/12/731">"Justin P. Mattock"</a><ul><li><a href="/lkml/2009/10/13/70">"=?ISO-8859-15?Q?Fr=E9d=E9ric_L=2E_W=2E_Meunier?="</a><ul><li><a href="/lkml/2009/10/13/107">Boyan</a><ul><li><a href="/lkml/2009/10/13/130">Dmitry Torokhov</a></li><li><a href="/lkml/2009/10/13/286">"=?ISO-8859-15?Q?Fr=E9d=E9ric_L=2E_W=2E_Meunier?="</a></li><li><a href="/lkml/2009/10/13/304">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2009/10/13/164">Alan Cox</a><ul><li><a href="/lkml/2009/10/13/317">"Justin P. Mattock"</a></li></ul></li></ul></li><li><a href="/lkml/2009/10/13/162">Alan Cox</a><ul><li><a href="/lkml/2009/10/13/251">Paul Fulghum</a></li><li class="origin"><a href="/lkml/2009/10/13/303">Linus Torvalds</a><ul><li><a href="/lkml/2009/10/13/303">Linus Torvalds</a></li><li><a href="/lkml/2009/10/13/312">Paul Fulghum</a></li><li><a href="/lkml/2009/10/13/324">Paul Fulghum</a><ul><li><a href="/lkml/2009/10/13/332">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2009/10/18/81">Pavel Machek</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 13 Oct 2009 07:39:31 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Bug #14388] keyboard under X with 2.6.31</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 13 Oct 2009, Alan Cox wrote:<br />&gt; <br />&gt; There is a simple reason the locking is sufficient. If you can call the<br />&gt; function from two places at once in your serial driver at the same you've<br />&gt; scrambled the data order so you've already lost.<br /><br />Umm. No, Alan.<br /><br />You also can race with:<br /><br /> - whoever is _reading_ the buffer, and due to memory ordering may see the <br />   update to the buffer length _before_ it actually sees the data itself. <br />   That spinlock does all the memory ordering too.<br /><br /> - scrambling the data order with two writers is certainly less annoying <br />   than potentially screwing up -&gt;used entirely, and having the memcpy's <br />   overflow the buffer. Both writers may have decided that there is enough <br />   room for each one - but that does not mean that there is enough room <br />   for _both_.<br /><br />Now, I do agree that generally there should be locking at a higher level, <br />and you should never see two concurrent writers. But even if the locking <br />is only for reading, the old locking is simply _wrong_.<br /><br />&gt; &gt;   pointless: they then call tty_insert_flip_string(), which means that the <br />&gt; &gt;   tty_buffer_request_room() call was totally redundant ]<br />&gt; <br />&gt; It's a performance tweak. With a 3G USB modem or similar device running<br />&gt; at 20Mbits or more being able to generate one allocation per chunk<br />&gt; received for DMA made a measurable performance difference on some<br />&gt; platforms. <br /><br />Have you even _read_ the code, Alan?<br /><br />It's not a f*cking performance tweak, and you're ludicrous to claim it is. <br />It's pointless, and it's making the code _slower_ rather than faster.<br /><br />Lookie here, Alan - the common sequence is crap like this:<br /><br />	tty_buffer_request_room(tty, buf-&gt;size);<br />	tty_insert_flip_string(tty, buf-&gt;base, buf-&gt;size);<br /><br />and anybody who claims that is a "performance tweak" doesn't know what the <br />hell he is talking about.<br /><br />Look again.<br /><br />The first thing that tty_insert_flup_string() does is to re-do the same <br />tty_buffer_request_room() call. <br /><br />Performance tweak? No. Most of them are stupid, pointless, and worthless. <br />Many of them do it for a single character too.<br /><br />Not all, no. One or two seem to do one tty_buffer_request_room() call, and <br />then some one-byte-at-a-time thing, but quite frankly, those are sure as <br />hell not going to push lots of data quickly that way either.<br /><br />Maybe there is some driver where there's a point to it, but from a quick <br />grep, I couldn't find any.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
