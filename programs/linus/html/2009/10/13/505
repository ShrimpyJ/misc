    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/10/11/195">First message in thread</a></li><li><a href="/lkml/2009/10/13/456">Boyan</a><ul><li><a href="/lkml/2009/10/13/486">Linus Torvalds</a><ul><li><a href="/lkml/2009/10/13/489">Linus Torvalds</a></li><li class="origin"><a href="/lkml/2009/10/13/602">Linus Torvalds</a><ul><li><a href="/lkml/2009/10/13/602">"=?ISO-8859-15?Q?Fr=E9d=E9ric_L=2E_W=2E_Meunier?="</a><ul><li><a href="/lkml/2009/10/13/606">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2009/10/14/89">Boyan</a></li></ul></li><li><a href="/lkml/2009/10/13/518">Alan Cox</a><ul><li><a href="/lkml/2009/10/13/560">Linus Torvalds</a><ul><li><a href="/lkml/2009/10/13/562">Alan Cox</a></li></ul></li></ul></li><li><a href="/lkml/2009/10/13/521">Paul Fulghum</a><ul><li><a href="/lkml/2009/10/13/557">Linus Torvalds</a><ul><li><a href="/lkml/2009/10/13/561">Alan Cox</a></li><li><a href="/lkml/2009/10/13/587">Paul Fulghum</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2009/10/13/505/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 13 Oct 2009 14:13:54 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [Bug #14388] keyboard under X with 2.6.31</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />Another bug:<br /><br />On Tue, 13 Oct 2009, Linus Torvalds wrote:<br />&gt;  			if (!count) {<br />&gt; -				if (head-&gt;next == NULL)<br />&gt; -					break;<br /><br />Those two lines should _not_ be deleted. I cleaned up a bit too much.<br /><br />The rule is that we must not free the last buffer, because it's also going <br />to be 'tail'.<br /><br />So here's a new version with that fixed (and the previous bug I already <br />mentioned).<br /><br />Whether it _works_ is still not clear. It might eat your pet goldfish, or <br />make farting noises in your general direction. Or it might fix the bug. <br />Who knows?<br /><br />		Linus<br /><br />---<br /> drivers/char/tty_buffer.c |   29 +++++++++++++----------------<br /> 1 files changed, 13 insertions(+), 16 deletions(-)<br /><br />diff --git a/drivers/char/tty_buffer.c b/drivers/char/tty_buffer.c<br />index 3108991..0296612 100644<br />--- a/drivers/char/tty_buffer.c<br />+++ b/drivers/char/tty_buffer.c<br />&#64;&#64; -402,28 +402,26 &#64;&#64; static void flush_to_ldisc(struct work_struct *work)<br /> 		container_of(work, struct tty_struct, buf.work.work);<br /> 	unsigned long 	flags;<br /> 	struct tty_ldisc *disc;<br />-	struct tty_buffer *tbuf, *head;<br />-	char *char_buf;<br />-	unsigned char *flag_buf;<br /> <br /> 	disc = tty_ldisc_ref(tty);<br /> 	if (disc == NULL)	/*  !TTY_LDISC */<br /> 		return;<br /> <br /> 	spin_lock_irqsave(&amp;tty-&gt;buf.lock, flags);<br />-	/* So we know a flush is running */<br />-	set_bit(TTY_FLUSHING, &amp;tty-&gt;flags);<br />-	head = tty-&gt;buf.head;<br />-	if (head != NULL) {<br />-		tty-&gt;buf.head = NULL;<br />-		for (;;) {<br />-			int count = head-&gt;commit - head-&gt;read;<br />+<br />+	if (!test_and_set_bit(TTY_FLUSHING, &amp;tty-&gt;flags)) {<br />+		struct tty_buffer *head;<br />+		while ((head = tty-&gt;buf.head) != NULL) {<br />+			int count;<br />+			char *char_buf;<br />+			unsigned char *flag_buf;<br />+<br />+			count = head-&gt;commit - head-&gt;read;<br /> 			if (!count) {<br /> 				if (head-&gt;next == NULL)<br /> 					break;<br />-				tbuf = head;<br />-				head = head-&gt;next;<br />-				tty_buffer_free(tty, tbuf);<br />+				tty-&gt;buf.head = head-&gt;next;<br />+				tty_buffer_free(tty, head);<br /> 				continue;<br /> 			}<br /> 			/* Ldisc or user is trying to flush the buffers<br />&#64;&#64; -445,9 +443,9 &#64;&#64; static void flush_to_ldisc(struct work_struct *work)<br /> 							flag_buf, count);<br /> 			spin_lock_irqsave(&amp;tty-&gt;buf.lock, flags);<br /> 		}<br />-		/* Restore the queue head */<br />-		tty-&gt;buf.head = head;<br />+		clear_bit(TTY_FLUSHING, &amp;tty-&gt;flags);<br /> 	}<br />+<br /> 	/* We may have a deferred request to flush the input buffer,<br /> 	   if so pull the chain under the lock and empty the queue */<br /> 	if (test_bit(TTY_FLUSHPENDING, &amp;tty-&gt;flags)) {<br />&#64;&#64; -455,7 +453,6 &#64;&#64; static void flush_to_ldisc(struct work_struct *work)<br /> 		clear_bit(TTY_FLUSHPENDING, &amp;tty-&gt;flags);<br /> 		wake_up(&amp;tty-&gt;read_wait);<br /> 	}<br />-	clear_bit(TTY_FLUSHING, &amp;tty-&gt;flags);<br /> 	spin_unlock_irqrestore(&amp;tty-&gt;buf.lock, flags);<br /> <br /> 	tty_ldisc_deref(disc);<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
