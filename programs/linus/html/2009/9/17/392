    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/9/11/348">First message in thread</a></li><li><a href="/lkml/2009/9/17/373">Linus Torvalds</a><ul><li><a href="/lkml/2009/9/17/379">Joel Becker</a><ul><li><a href="/lkml/2009/9/17/472">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2009/9/17/384">Roland Dreier</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 17 Sep 2009 13:55:44 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] ocfs2 changes for 2.6.32</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 17 Sep 2009, Roland Dreier wrote:<br />&gt;  &gt; &gt; I guess one bit of semantics to figure out is what happens if copyfile()<br />&gt;  &gt; &gt; does the async case but then copyfile_ctrl() returns an error halfway<br />&gt;  &gt; &gt; through... is the state of the dest file just undefined?<br />&gt; <br />&gt;  &gt; I think that's the one that most filesystems would prefer. Maybe the file <br />&gt;  &gt; is there, it's just that it's only half copied because the filesystem <br />&gt;  &gt; filled up. <br />&gt; <br />&gt; Makes sense... and even having the state of having the file half-copied<br />&gt; is not really well-defined since a filesystem may want to optimize<br />&gt; things by copying out of order etc.<br /><br />Yeah. <br /><br />The thing to remember is that where you'd use a non-atomic 'copyfile()' <br />system call is as a replacement for just doing the same thing by hand in <br />user space, so any users of this system call would basically have to <br />handle the "oops, it failed with ENOSPC in the middle" _anyway_.<br /><br />So there is no downside to saying "ok, it failed in the middle, you clean <br />up the result", because the user needs to support that anyway.<br /><br />The ones that use copyfile for filesystem-specific snapshots and use the <br />ATOMIC bit to say so obviously don't have this issue. But they aren't <br />looking for a "faster 'cp'" thing - they're looking for very specific <br />semantics, and for the ATOMIC case we can provide those kinds of nice <br />atomic "everything or nothing" semantics.<br /><br />So the fact that some random server-side copy over CIFS/NFS may need <br />cleanup by the user after failing at half-point is not actually a <br />downside. It doesn't affect Joel's kind of fancy use.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
