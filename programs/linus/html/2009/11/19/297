    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/11/18/370">First message in thread</a></li><li><a href="/lkml/2009/11/19/277">Steven Rostedt</a><ul><li><a href="/lkml/2009/11/19/278">Richard Guenther</a><ul><li><a href="/lkml/2009/11/19/289">Andrew Haley</a><ul><li><a href="/lkml/2009/11/19/300">Linus Torvalds</a><ul><li><a href="/lkml/2009/11/19/301">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2009/11/19/293">Thomas Gleixner</a></li><li class="origin"><a href="/lkml/2009/11/19/303">Linus Torvalds</a><ul><li><a href="/lkml/2009/11/19/303">Ingo Molnar</a><ul><li><a href="/lkml/2009/11/19/311">Steven Rostedt</a></li></ul></li><li><a href="/lkml/2009/11/19/348">Thomas Gleixner</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 19 Nov 2009 10:38:59 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: BUG: GCC-4.4.x changes the function frame on some functions</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 19 Nov 2009, Richard Guenther wrote:<br />&gt; <br />&gt; Note that I only can reproduce the issue with<br />&gt; -mincoming-stack-boundary=2, not with -mpreferred-stack-boundary=2.<br /><br />Since you can reproduce it with -mincoming-stack-boundary=2, I woul <br />suggest just fixing mcount handling that way regardless of anything else. <br />The current code generated by gcc is just insane - even for the case where <br />you _want_ 16-byte stack alignment.<br /><br />Instead crazy code like<br /><br />&gt;       push   %edi<br />&gt;       lea    0x8(%esp),%edi<br />&gt;       and    $0xfffffff0,%esp<br />&gt;       pushl  -0x4(%edi)<br />&gt;       push   %ebp<br />&gt;       mov    %esp,%ebp<br />&gt;       ...<br />&gt;       call   mcount<br /><br />the sane thing to do would be to just do it as<br /><br />	push   %ebp<br />	mov    %esp,%ebp<br />	call   mcount<br />	and    $0xfffffff0,%esp<br /><br />since<br /><br /> - no sane 'mcount' implementation can ever care about 16-byte stack <br />   alignment anyway, so aliging the stack before mcount is crazy.<br /><br /> - mcount is special anyway, and is the only thing that cares about that <br />   whole ebp/return address thing is mcount, and _all_ your games with <br />   %edi are about that mcount thing.<br /><br />IOW, once you as a compiler person understand that the 'mcount' call is <br />special, you should have realized that all the work you did for it was <br />totally pointless and stupid to begin with. <br /><br />You must already have that special mcount logic (the whole code to save a <br />register early and push the fake mcount stack frame), so instead of _that_ <br />special logic, change it to a different mcount special logic that <br />associates the 'mcount' call with theframe pointer pushing. <br /><br />That will not only make the Linux kernel tracer happy, it will make all <br />your _other_ users happier too, since you can generate smaller and more <br />efficient code.<br /><br />Admittedly, anybody who compiles with -pg probably doesn't care deeply <br />about smaller and more efficient code, since the mcount call overhead <br />tends to make the thing moot anyway, but it really looks like a win-win <br />situation to just fix the mcount call sequence regardless.<br /><br />&gt; And you didn't provide us with a testcase either ... so please open a <br />&gt; bugzilla and attach preprocessed source of a file that shows the <br />&gt; problem, note the function it happens in and provide the command-line <br />&gt; options you used for building.<br />&gt; <br />&gt; Otherwise it's going to be all speculation on our side.<br /><br />See above - all you need to do is to just fix mcount calling.<br /><br />Now, there is a separate bug that shows that you seem to over-align the <br />stack when not asked for, and yes, since we noticed that I hope that <br />Thomas and friends will fix that, but I think your mcount logic could (and <br />should) be fixed as an independent sillyness.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
