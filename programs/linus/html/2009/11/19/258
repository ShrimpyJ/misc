    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/11/18/370">First message in thread</a></li><li><a href="/lkml/2009/11/19/149">Thomas Gleixner</a><ul><li><a href="/lkml/2009/11/19/178">Thomas Gleixner</a><ul><li><a href="/lkml/2009/11/19/181">Andrew Haley</a><ul><li><a href="/lkml/2009/11/19/190">"H. Peter Anvin"</a><ul><li><a href="/lkml/2009/11/19/187">Richard Guenther</a></li></ul></li><li><a href="/lkml/2009/11/19/191">Steven Rostedt</a><ul><li><a href="/lkml/2009/11/19/198">"H. Peter Anvin"</a></li><li><a href="/lkml/2009/11/19/200">Frederic Weisbecker</a></li></ul></li><li><a href="/lkml/2009/11/19/195">Thomas Gleixner</a><ul><li><a href="/lkml/2009/11/19/201">Andrew Haley</a></li></ul></li><li><a href="/lkml/2009/11/19/196">Steven Rostedt</a></li></ul></li><li><a href="/lkml/2009/11/19/185">"H. Peter Anvin"</a><ul><li><a href="/lkml/2009/11/19/183">Richard Guenther</a></li><li><a href="/lkml/2009/11/19/184">Richard Guenther</a></li><li><a href="/lkml/2009/11/19/256">Andi Kleen</a></li></ul></li><li class="origin"><a href="/lkml/2009/11/19/275">Linus Torvalds</a><ul><li><a href="/lkml/2009/11/19/275">Thomas Gleixner</a></li><li><a href="/lkml/2009/11/19/277">Steven Rostedt</a><ul><li><a href="/lkml/2009/11/19/278">Richard Guenther</a></li></ul></li></ul></li><li><a href="/lkml/2009/11/19/287">Andrew Haley</a><ul><li><a href="/lkml/2009/11/19/292">Steven Rostedt</a><ul><li><a href="/lkml/2009/11/19/294">Andrew Pinski</a></li><li><a href="/lkml/2009/11/19/296">Andrew Haley</a></li><li><a href="/lkml/2009/11/19/299">"H. Peter Anvin"</a></li></ul></li><li><a href="/lkml/2009/11/19/298">Thomas Gleixner</a></li></ul></li></ul></li><li><a href="/lkml/2009/11/20/2">Steven Rostedt</a><ul><li><a href="/lkml/2009/11/20/3">Steven Rostedt</a></li><li><a href="/lkml/2009/11/20/220">Steven Rostedt</a><ul><li><a href="/lkml/2009/11/20/234">"H. Peter Anvin"</a></li><li><a href="/lkml/2009/11/20/305">Andrew Haley</a><ul><li><a href="/lkml/2009/11/20/307">Steven Rostedt</a></li><li><a href="/lkml/2009/11/22/28">"H.J. Lu"</a></li></ul></li><li><a href="/lkml/2009/11/22/24">Ingo Molnar</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 19 Nov 2009 09:39:21 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: BUG: GCC-4.4.x changes the function frame on some functions</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 19 Nov 2009, Thomas Gleixner wrote:<br />&gt; <br />&gt; standard function start:<br />&gt; <br />&gt; 	 push	%ebp<br />&gt; 	 mov	%esp, %ebp<br />&gt; 	 ....<br />&gt; 	 call   mcount<br />&gt; <br />&gt; modified function start on a handful of functions only seen with gcc<br />&gt; 4.4.x on x86 32 bit:<br />&gt; <br />&gt; 	push   %edi<br />&gt; 	lea    0x8(%esp),%edi<br />&gt; 	and    $0xfffffff0,%esp<br />&gt; 	pushl  -0x4(%edi)<br />&gt; 	push   %ebp<br />&gt; 	mov    %esp,%ebp<br />&gt; 	...<br />&gt; 	call   mcount<br /><br />That's some crazy sh*t anyway, since we don't _want_ the stack to be <br />16-byte aligned in the kernel. We do<br /><br />        KBUILD_CFLAGS += $(call cc-option,-mpreferred-stack-boundary=2)<br /><br />why is that not working?<br /><br />So this looks like a gcc bug, plain and simple.<br /><br />&gt; This modification leads to a hard to solve problem in the kernel<br />&gt; function graph tracer which assumes that the stack looks like:<br />&gt; <br />&gt;        return address<br />&gt;        saved  ebp<br /><br />Umm. But it still does, doesn't it? That<br /><br />	pushl  -0x4(%edi)<br />	push   %ebp<br /><br />should do it - the "-0x4(%edi)" thing seems to be trying to reload the <br />return address. No? <br /><br />Maybe I misread the code - but regardless, it does look like a gcc code <br />generation bug if only because we really don't want a 16-byte aligned <br />stack anyway, and have asked for it to not be done.<br /><br />So I agree that gcc shouldn't do that crazy prologue (and certainly _not_ <br />before calling mcount anyway), but I'm not sure I agree with that detail <br />of your analysis or explanation.<br /><br />				Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
