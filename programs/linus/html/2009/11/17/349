    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/11/16/237">First message in thread</a></li><li><a href="/lkml/2009/11/17/216">Linus Torvalds</a><ul><li><a href="/lkml/2009/11/17/252">Tejun Heo</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 17 Nov 2009 11:01:33 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 17/21] workqueue: simple reimplementation of SINGLE_THREAD workqueue</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 18 Nov 2009, Tejun Heo wrote:<br />&gt; <br />&gt; I might have been too early with the 'easy' part but I definitely can<br />&gt; give it a shot.  What do you think about the scheduler notifier<br />&gt; implementation?  It seems we'll end up with three callbacks.  It can<br />&gt; either be three hlist_heads in the struct_task linking each ops or<br />&gt; single hilst_head links ops tables (like the current preempt<br />&gt; notifiers).  Which one should I go with?<br /><br />I have to say that I don't know. Will this eventually be something common? <br />Is the cache footprint problem of 3 pointers that are usually empty worse <br />than the cache problem of following a chain where you don't use half the <br />entries? Who knows?<br /><br />And when it actually _is_ used, is it going to be horrible to have a <br />possibly upredictable indirect branch (and on some architectures, _all_ <br />indirect branches are unpredictable) in a really hot path?<br /><br />In general, "notifiers" are always horrible. If there's only one or two <br />common cases, it's probably going to be better to hardcode those with <br />flags to be tested instead of following function pointers. So I just don't <br />know.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
