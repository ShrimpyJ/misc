    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/7/20/1">First message in thread</a></li><li><a href="/lkml/2009/7/21/349">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/21/423">Troy Moure</a><ul><li class="origin"><a href="/lkml/2009/7/21/495">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/21/495">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/22/37">Troy Moure</a></li></ul></li><li><a href="/lkml/2009/7/21/499">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/22/56">Krzysztof Oledzki</a></li><li><a href="/lkml/2009/7/22/229">Krzysztof Oledzki</a></li></ul></li><li><a href="/lkml/2009/7/22/181">Krzysztof Oledzki</a><ul><li><a href="/lkml/2009/7/22/218">Henrique de Moraes Holschuh</a></li><li><a href="/lkml/2009/7/22/228">Krzysztof Oledzki</a></li><li><a href="/lkml/2009/7/22/285">Ian Lance Taylor</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 21 Jul 2009 17:53:22 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 2.6.27.27</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />[ Added Ian Lance Taylor to the cc, he knows the background, and unlike me <br />  is competent with gcc. ]<br /><br />On Tue, 21 Jul 2009, Troy Moure wrote:<br />&gt; <br />&gt; I think I've found something interesting.  Look at the the code generated <br />&gt; for edid_checksum() in driver/video/fbmon.c.  This is what I see for the <br />&gt; -fno-strict-overflow kernel:<br /><br />Ooh.<br /><br />Bingo. You're 100% right, and you definitely found it (of course, there <br />may be _other_ cases like this, but that's certainly _one_ of the <br />problems, and probably the only one).<br /><br />Just out of curiosity, how did you find it? Now that I know where to look, <br />it's very obvious in the assembler diffs, but I didn't notice it until you <br />pointed it out just because there is so _much_ of the diffs...<br /><br />And yes, that's very much a compiler bug. And I also bet it's very easily <br />fixed.<br /><br />The code in question is this loop:<br /><br />	#define EDID_LENGTH 128<br /><br />	unsigned char i, ...<br /><br />	for (i = 0; i &lt; EDID_LENGTH; i++) {<br />                csum += edid[i];<br />                all_null |= edid[i];<br />        }<br /><br />and gcc -fno-strict-overflow has apparently decided that that is an <br />infinite loop, even though it clearly is not. So then the stupid and buggy <br />compiler will compile that loop (and the whole rest of the function) to <br />the "optimized" version that is just<br /><br />	loop:<br />		jmp loop;<br /><br />I even bet I know why: it looks at "unsigned char", and sees that it is an <br />8-bit variable, and then it looks at "i &lt; EDID_LENGTH" and sees that it is <br />a _signed_ comparison (it's signed because the C type rules mean that <br />'unsigned char' will be extended to 'int' in an expression), and then it <br />decides that in a signed comparison an 8-bit entry is always going to be <br />smaller than 128.<br /><br />Anyway, I bet we can work around the compiler bug by just changing the <br />type of "i" from "unsigned char" to be a plain "int".<br /><br />Krzysztof? Mind testing that?<br /><br />Ian? This is Linux 2.6.27.27 compiled with gcc-4.2.4. I'm not seeing the <br />bug in the gcc I have on my machine (gcc-4.4.0), but the bug is very clear <br />(once you _find_ it, which was the problem) in the binaries that Krzysztof <br />posted. They're still at:<br /><br />    <a href="http://noc.axelspringer.pl/no-strict-overflow-vs-wrapv/vmlinux-fno-strict-overflow.bz2">http://noc.axelspringer.pl/no-strict-overflow-vs-wrapv/vmlinux-fno-strict-overflow.bz2</a> (Hangs)<br />    <a href="http://noc.axelspringer.pl/no-strict-overflow-vs-wrapv/vmlinux-fwrapv.bz2">http://noc.axelspringer.pl/no-strict-overflow-vs-wrapv/vmlinux-fwrapv.bz2</a> (OK)<br />    <a href="http://noc.axelspringer.pl/no-strict-overflow-vs-wrapv/vmlinux-fnone.bz2">http://noc.axelspringer.pl/no-strict-overflow-vs-wrapv/vmlinux-fnone.bz2</a> (OK)<br /><br />and you can clearly see the 'edid_checksum' miscompilation in the objdump <br />disassembly.<br /><br />Thanks Troy,<br /><br />			Linus<br /><br />---<br />Leaving in the context for Ian:<br /><br />Buggy -fno-strict-overflow compilation:<br /><br />&gt; ...<br />&gt; ffffffff803b37ed &lt;edid_checksum&gt;:<br />&gt; ffffffff803b37ed:       53                      push   %rbx<br />&gt; ffffffff803b37ee:       48 89 fb                mov    %rdi,%rbx<br />&gt; ffffffff803b37f1:       e8 8d fd ff ff          callq  ffffffff803b3583 &lt;check_edid&gt;<br />&gt; ffffffff803b37f6:       85 c0                   test   %eax,%eax<br />&gt; ffffffff803b37f8:       89 c6                   mov    %eax,%esi<br />&gt; ffffffff803b37fa:       74 08                   je     ffffffff803b3804 &lt;edid_checksum+0x17&gt;<br />&gt; ffffffff803b37fc:       48 89 df                mov    %rbx,%rdi<br />&gt; ffffffff803b37ff:       e8 c0 fe ff ff          callq  ffffffff803b36c4 &lt;fix_edid&gt;<br />&gt; ffffffff803b3804:       eb fe                   jmp    ffffffff803b3804 &lt;edid_checksum+0x17&gt;<br />&gt; <br />&gt; ffffffff803b3806 &lt;fb_parse_edid&gt;:<br />&gt; ffffffff803b3806:       41 54                   push   %r12<br />&gt; ffffffff803b3808:       48 85 ff                test   %rdi,%rdi<br />&gt; ...<br />&gt; <br />&gt; That last insn in edid_checksum() doesn't look *quite* right to me...<br />&gt; <br />&gt; The -fnone kernel has something a lot more sensible-looking:<br />&gt; <br />&gt; ffffffff803b39dd &lt;edid_checksum&gt;:<br />&gt; ffffffff803b39dd:       53                      push   %rbx<br />&gt; ffffffff803b39de:       48 89 fb                mov    %rdi,%rbx<br />&gt; ffffffff803b39e1:       e8 8d fd ff ff          callq  ffffffff803b3773 &lt;check_$<br />&gt; ffffffff803b39e6:       85 c0                   test   %eax,%eax<br />&gt; ffffffff803b39e8:       89 c6                   mov    %eax,%esi<br />&gt; ffffffff803b39ea:       74 08                   je     ffffffff803b39f4 &lt;edid_c$<br />&gt; ffffffff803b39ec:       48 89 df                mov    %rbx,%rdi<br />&gt; ffffffff803b39ef:       e8 c0 fe ff ff          callq  ffffffff803b38b4 &lt;fix_ed$<br />&gt; ffffffff803b39f4:       31 c9                   xor    %ecx,%ecx<br />&gt; ffffffff803b39f6:       31 f6                   xor    %esi,%esi<br />&gt; ffffffff803b39f8:       31 d2                   xor    %edx,%edx<br />&gt; ffffffff803b39fa:       eb 0a                   jmp    ffffffff803b3a06 &lt;edid_c$<br />&gt; ffffffff803b39fc:       0f b6 c0                movzbl %al,%eax<br />&gt; ffffffff803b39ff:       8a 04 03                mov    (%rbx,%rax,1),%al<br />&gt; ffffffff803b3a02:       01 c1                   add    %eax,%ecx<br />&gt; ffffffff803b3a04:       09 c6                   or     %eax,%esi<br />&gt; ffffffff803b3a06:       88 d0                   mov    %dl,%al<br />&gt; ffffffff803b3a08:       ff c2                   inc    %edx<br />&gt; ffffffff803b3a0a:       81 fa 81 00 00 00       cmp    $0x81,%edx<br />&gt; ffffffff803b3a10:       75 ea                   jne    ffffffff803b39fc &lt;edid_c$<br />&gt; ffffffff803b3a12:       84 c9                   test   %cl,%cl<br />&gt; ffffffff803b3a14:       0f 94 c0                sete   %al<br />&gt; ffffffff803b3a17:       40 84 f6                test   %sil,%sil<br />&gt; ffffffff803b3a1a:       5b                      pop    %rbx<br />&gt; ffffffff803b3a1b:       0f 95 c2                setne  %dl<br />&gt; ffffffff803b3a1e:       21 d0                   and    %edx,%eax<br />&gt; ffffffff803b3a20:       0f b6 c0                movzbl %al,%eax<br />&gt; ffffffff803b3a23:       c3                      retq<br />&gt; <br />&gt; ffffffff803b3a24 &lt;fb_parse_edid&gt;:<br />&gt; ffffffff803b3a24:       41 54                   push   %r12<br />&gt; ffffffff803b3a26:       48 85 ff                test   %rdi,%rdi<br />&gt; <br />&gt; Hope that helps narrow things down ;)<br />&gt; <br />&gt; 	Troy<br />&gt; <br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
