    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/7/20/1">First message in thread</a></li><li><a href="/lkml/2009/7/21/98">Krzysztof Oledzki</a><ul><li><a href="/lkml/2009/7/21/273">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2009/7/21/423">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/21/423">Troy Moure</a><ul><li><a href="/lkml/2009/7/21/493">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2009/7/21/349/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 21 Jul 2009 12:15:39 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 2.6.27.27</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 21 Jul 2009, Linus Torvalds wrote:<br />&gt; <br />&gt; Great. This is all about as perfect as could be asked for. Now it's just a <br />&gt; question of trying to find the right code generation difference...<br /><br />Ok, that "just" is turning out to be really painful.<br /><br />I've tried to do clever things, but the best I've been able to do is to <br />get the relevant differences down to about 22 thousand lines of assembler <br />diffs that don't match either of the working kernels. Sadly, 22KLOC of <br />assembler diffs isn't something anybody can reasonably read to even start <br />to make a guess about which lines are causing problems. <br /><br />So what I'd love to do is to narrow the failure down a bit, by using <br />-fno-strict-overflow only on _parts_ of the tree and then try a couple of <br />kernels to see if they hang, to see which part it is that mis-compiles.<br /><br />With a newer kernel, we could do something like this:<br /><br />	diff --git a/Makefile b/Makefile<br />	index 79957b3..b096be2 100644<br />	--- a/Makefile<br />	+++ b/Makefile<br />	&#64;&#64; -565,9 +565,6 &#64;&#64; KBUILD_CFLAGS += $(call cc-option,-Wdeclaration-after-statement,)<br />	 # disable pointer signed / unsigned warnings in gcc 4.0<br />	 KBUILD_CFLAGS += $(call cc-option,-Wno-pointer-sign,)<br />	 <br />	-# disable invalid "can't wrap" optimizations for signed / pointers<br />	-KBUILD_CFLAGS	+= $(call cc-option,-fno-strict-overflow)<br />	-<br />	 # revert to pre-gcc-4.4 behaviour of .eh_frame<br />	 KBUILD_CFLAGS	+= $(call cc-option,-fno-dwarf2-cfi-asm)<br />	 <br />	diff --git a/drivers/Makefile b/drivers/Makefile<br />	index bc4205d..1250b55 100644<br />	--- a/drivers/Makefile<br />	+++ b/drivers/Makefile<br />	&#64;&#64; -5,6 +5,8 &#64;&#64;<br />	 # Rewritten to use lists instead of if-statements.<br />	 #<br />	 <br />	+subdir-ccflags-y += -fno-strict-overflow<br />	+<br />	 obj-y				+= gpio/<br />	 obj-$(CONFIG_PCI)		+= pci/<br />	 obj-$(CONFIG_PARISC)		+= parisc/<br /><br />to say "use -fno-strict-overflow only when compiling objects in the<br />drivers/ subdirectories", but I'm pretty sure that whole clever<br />'subdir-ccflags-y' thing was added pretty recently, and won't work in<br />2.6.27<br /><br />However, since there is _some_ reason to wonder about whether the problem <br />could be in radeonfb (because the last printouts before the hang are about <br />that), it would be good to test just that part.<br /><br />So if you have the time and energy, it would be very interesting if you <br />could do something like this:<br /><br /> - remove the "KBUILD_CFLAGS  += $(call cc-option,-fno-strict-overflow)"<br />   entirely from the main Makefile.<br /> - one directory at a time, add<br /><br />	ccflags-y += -fno-strict-overflow<br /><br />   to the Makefile in just that particular directory, and compile and test <br />   the kernel. Now, since your old kernel doesn't have that nifty new<br />   "subdir-ccflags-y" thing, you can't do it for big parts of the kernel, <br />   you can literally do it for just the contents of one subdirectory <br />   (non-recusive!) at a time, but while there's two thousand <br />   subdirectories in the Linux kernel sources, judicious sprinking of that <br />   into the tree could hopefully make it possible to find.<br /><br /> - the first Makefile's to test would be 'drivers/video/aty/Makefile'. If <br />   that one doesn't work, some scripting might be in order, eg something <br />   like<br /><br />	for i in $(find drivers -name Makefile)<br />	do<br />		( echo "ccflags-y += -fno-strict-overflow" ; cat $i ) &gt; $i.new<br />		mv $i.new $i<br />	done<br />   should add it to all the subdirectories under 'drivers', etc.<br /><br />and if you can find the subdirectory where '-fno-strict-overflow' makes <br />the difference, at that point I'd love to see the kernel image where <br />things worked (ie the last kernel you booted successfully _before_ the <br />kernel that failed) and the kernel that fails - now hopefully the <br />differences should be much smaller (how small will obviously depend on <br />whether you caught the difference in just one subdirectory or whether you <br />scripted it over lots and lots of subdirectories).<br />Of course, the tighter you can do this, the better. If it happens to be in <br />'drivers/video/aty/' for example, and you end up being really gung-ho <br />about this and want to narrow it down to not just the subdirectory, but a <br />few files, you could remove the per-directory "ccflags-y" line, and do a <br />few per-file CFLAGS entries instead, like:<br /><br />	CFLAGS_radeon_base.o += -fno-strict-overflow<br /><br />etc.<br /><br />And hey, if you think this is too much work, then you're right. It's a lot <br />of work. So don't worry if you can't be bothered - it would be wonderful <br />to try to get this thing resolved, but I do realize I'm asking a lot here.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
