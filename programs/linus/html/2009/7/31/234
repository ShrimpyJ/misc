    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/7/31/203">First message in thread</a></li><li><a href="/lkml/2009/7/31/203">Ulrich Drepper</a><ul><li class="origin"><a href="/lkml/2009/7/31/238">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/31/238">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/31/244">Ulrich Drepper</a><ul><li><a href="/lkml/2009/7/31/262">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 31 Jul 2009 14:15:48 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] information leak in sigaltstack</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 31 Jul 2009, Ulrich Drepper wrote:<br />&gt; <br />&gt; The following patch should fix the issue.<br /><br />Hmm. Is there any reason not to do an unconditional memset(), and then <br />expect gcc to avoid the unnecessary stores? I realize gcc may not do that, <br />but we could always _hope_.<br /><br />Also, is there really any reason to believe that the only hole can be <br />after ss_flags, and that it's only the case when ss_flags is in the <br />middle? Quite frankly, as far as I can tell, you could have an "int <br />ss_flags" at the _end_ of the structure too, and have the same issue <br />(padding out to the alignment of the struct).<br /><br />For an example of that "'int ss_flags' at the end" look at MIPS.<br /><br />Now, you'd end up with a memset() in that case (since it certainly won't <br />match the offsetof), but my point is, the conditional really looks very <br />arbitrary and rather strange. I'd rather see it unconditional, even if it <br />costs three unnecessary writes or whatever.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
