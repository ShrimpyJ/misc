    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/7/31/189">First message in thread</a></li><li><a href="/lkml/2009/7/31/189">"H. Peter Anvin"</a><ul><li class="origin"><a href="/lkml/2009/7/31/204">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/31/204">Ingo Molnar</a><ul><li><a href="/lkml/2009/8/1/97">Linus Torvalds</a><ul><li><a href="/lkml/2009/8/1/98">"H. Peter Anvin"</a></li><li><a href="/lkml/2009/8/2/322">Tejun Heo</a></li></ul></li><li><a href="/lkml/2009/8/5/70">"Tan, Wei Chong"</a><ul><li><a href="/lkml/2009/8/5/80">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2009/8/5/462">"Tan, Wei Chong"</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2009/7/31/202/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 31 Jul 2009 12:45:41 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PULL] Additional x86 fixes for 2.6.31-rc5</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 31 Jul 2009, H. Peter Anvin wrote:<br />&gt; <br />&gt;   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-fixes-for-linus<br />&gt; <br />&gt; Tan, Wei Chong (1):<br />&gt;       x86: SMI workaround for pit_expect_msb<br /><br />I really think that last one (commit fb34a8ee86) is incorrect.<br /><br />We do _not_ want to do that SMI workaround in the loop, and the logic of <br />that patch is broken anyway.<br /><br />If an SMI kicks in, then it's true that tscp will be off, but that's what <br />the error term is there for. If the error term is sufficiently small, then <br />we don't care.<br /><br />Sure, we might want the error term to be even smaller, but in no way does <br />it actually invalidate any of the logic - the 'tsc' reading is just a <br />guess anyway.<br /><br />Also, I think that the real issue isn't even an SMI - but the fact that in <br />the very last iteration of the loop, there's no serializing instruction <br />_after_ the last 'rdtsc'. So even in the absense of SMI's, we do have a <br />situation where the cycle counter was read without proper serialization.<br /><br />So I think the patch does fix something, I just think it's done the wrong <br />way.<br /><br />The last check shouldn't be done the way that commit does it. It should be <br />done outside the outer loop, since _inside_ the outer loop, we'll be <br />testing that the PIT has the right MSB value has the right value in the <br />next iteration. <br /><br />So only the _last_ iteration is special, because that's the one that <br />will not check the PIT MSB value any more, and because the final <br />'get_cycles()' isn't serialized.<br /><br />In other words: <br /> - I'd like to move the PIT MSB check to after the last iteration, rather <br />   than in every iteration<br /><br /> - I think we should comment on the fact that it's also a serializing <br />   instruction and so 'fences in' the TSC read.<br /><br />Here's a suggested replacement - BUT NOTE THAT IT'S ENTIRELY UNTESTED!<br /><br />(Ok, so the patch is bigger than it strictly needs to be - I hate <br />repeating code, so I made that 'read PIT counter twice and compare MSB' be <br />a new helper routine)<br /><br />Hmm? What do you guys think?<br /><br />		Linus<br /><br />---<br /> arch/x86/kernel/tsc.c |   29 ++++++++++++++++++++++-------<br /> 1 files changed, 22 insertions(+), 7 deletions(-)<br /><br />diff --git a/arch/x86/kernel/tsc.c b/arch/x86/kernel/tsc.c<br />index 6e1a368..71f4368 100644<br />--- a/arch/x86/kernel/tsc.c<br />+++ b/arch/x86/kernel/tsc.c<br />&#64;&#64; -275,15 +275,20 &#64;&#64; static unsigned long pit_calibrate_tsc(u32 latch, unsigned long ms, int loopmin)<br />  * use the TSC value at the transitions to calculate a pretty<br />  * good value for the TSC frequencty.<br />  */<br />+static inline int pit_verify_msb(unsigned char val)<br />+{<br />+	/* Ignore LSB */<br />+	inb(0x42);<br />+	return inb(0x42) == val;<br />+}<br />+<br /> static inline int pit_expect_msb(unsigned char val, u64 *tscp, unsigned long *deltap)<br /> {<br /> 	int count;<br /> 	u64 tsc = 0;<br /> <br /> 	for (count = 0; count &lt; 50000; count++) {<br />-		/* Ignore LSB */<br />-		inb(0x42);<br />-		if (inb(0x42) != val)<br />+		if (!pit_verify_msb(val))<br /> 			break;<br /> 		tsc = get_cycles();<br /> 	}<br />&#64;&#64; -336,8 +341,7 &#64;&#64; static unsigned long quick_pit_calibrate(void)<br /> 	 * to do that is to just read back the 16-bit counter<br /> 	 * once from the PIT.<br /> 	 */<br />-	inb(0x42);<br />-	inb(0x42);<br />+	pit_verify_msb(0);<br /> <br /> 	if (pit_expect_msb(0xff, &amp;tsc, &amp;d1)) {<br /> 		for (i = 1; i &lt;= MAX_QUICK_PIT_ITERATIONS; i++) {<br />&#64;&#64; -348,8 +352,19 &#64;&#64; static unsigned long quick_pit_calibrate(void)<br /> 			 * Iterate until the error is less than 500 ppm<br /> 			 */<br /> 			delta -= tsc;<br />-			if (d1+d2 &lt; delta &gt;&gt; 11)<br />-				goto success;<br />+			if (d1+d2 &gt;= delta &gt;&gt; 11)<br />+				continue;<br />+<br />+			/*<br />+			 * Check the PIT one more time to verify that<br />+			 * all TSC reads were stable wrt the PIT.<br />+			 *<br />+			 * This also guarantees serialization of the<br />+			 * last cycle read ('d2') in pit_expect_msb.<br />+			 */<br />+			if (!pit_verify_msb(0xfe - i))<br />+				break;<br />+			goto success;<br /> 		}<br /> 	}<br /> 	printk("Fast TSC calibration failed\n");<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
