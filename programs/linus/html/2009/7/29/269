    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/7/23/289">First message in thread</a></li><li><a href="/lkml/2009/7/28/612">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/28/617">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/29/108">Alan Cox</a></li></ul></li><li><a href="/lkml/2009/7/29/65">Alan Cox</a><ul><li class="origin"><a href="/lkml/2009/7/29/272">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/29/272">Alan Cox</a><ul><li><a href="/lkml/2009/7/29/276">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Jul 2009 08:48:50 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] kdesu broken</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 29 Jul 2009, Alan Cox wrote:<br />&gt; &gt; <br />&gt; &gt; &gt; - The driver calls tty_hangup<br />&gt; &gt; &gt; - tty_hangup ensures that tty_flip_buffer_push cannot occur again<br />&gt; &gt; &gt;   (by killing the workqueue)<br />&gt; &gt; &gt; - resources may well then get freed before close()<br />&gt; &gt; <br />&gt; &gt; They had better not be, since all the data structures touched are inside <br />&gt; &gt; the 'tty_struct' (which we're dereferencing in other ways anyway in that <br />&gt; &gt; whole routine).<br />&gt; <br />&gt; You are only looking at pty. That code is used for all the real physical<br />&gt; tty devices too. With real devices the underlying physical device and its<br />&gt; structures can get dumped. When you run the n_tty ldisc you call back out<br />&gt; to the drivers for echo etc.<br /><br />I actually only meant the "flush_to_ldisc()" part. We'll never get any <br />further than that due to the reasons I outlined.<br /><br />&gt; &gt; So the only thing that the hangup code needs to do is to make that the <br />&gt; &gt; "tty-&gt;buf.work.work" function pointer is a nop. And it does, as far as I<br />&gt; &gt; can tell.<br />&gt; <br />&gt; What happens if the hangup occurs just after you start running the ldisc<br />&gt; on another CPU ?<br /><br />But Alan, that was my point: Ogawa's patch in no way changes any existing <br />behavior. The case you mention ALREADY HAPPENS, regardless of Ogawa's <br />patch.<br /><br />If a timer goes off at the same time hangup happens, you have the exact <br />same situation. You can have one CPU doing hangup processing, and one CPU <br />having just triggered the timeout and doing flush_to_ldisc.<br /><br />&gt; Consider a real tty for a bit<br />&gt; <br />&gt; 	CPU0					CPU1<br />&gt; n_tty methods<br />&gt; 	flush_to_ldisc<br />&gt; 	get ldisc ref<br />&gt; 						INTERRUPT<br />&gt; 						tty_hangup<br />&gt; 						do_tty_hangup<br /><br />Yes. Consider exactly that. And notice how it happens with or without <br />Ogawa's patch. Just instead of "n_tty methods", you have "delayed-work <br />timer".<br /><br />&gt; So as I said before you need to fix flush_to_ldisc and the hangup running<br />&gt; against one another. At the very least I think you need a<br />&gt; tty_ldisc_wait_idle(tty); just before<br />&gt; <br />&gt;         if (tty-&gt;driver-&gt;flags &amp; TTY_DRIVER_RESET_TERMIOS) {<br />&gt; <br />&gt; so that you stall the hangup until n_tty exits the ldisc.<br /><br />The tty_ldisc_hangup() already does tty_ldisc_wait_idle() after disabling <br />the timer (and clearing the TTY_LDISC bit), so that all seems fine <br />already. No?<br /><br />				Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
