    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/7/23/289">First message in thread</a></li><li><a href="/lkml/2009/7/28/373">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/28/375">Alan Cox</a><ul><li><a href="/lkml/2009/7/28/395">Greg KH</a><ul><li><a href="/lkml/2009/7/28/410">Theodore Tso</a><ul><li><a href="/lkml/2009/7/28/415">Greg KH</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2009/7/28/517">Alan Cox</a><ul><li class="origin"><a href="/lkml/2009/7/28/602">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/28/602">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/29/32">"Aneesh Kumar K.V"</a></li></ul></li><li><a href="/lkml/2009/7/28/606">Alan Cox</a><ul><li><a href="/lkml/2009/7/28/612">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2009/7/28/633">Gene Heskett</a><ul><li><a href="/lkml/2009/7/29/5">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2009/7/28/554/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 28 Jul 2009 17:10:47 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] kdesu broken</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 29 Jul 2009, Alan Cox wrote:<br />&gt; <br />&gt; BTW: The tty-&gt;low_latency fix doesn't work, because the -&gt;write method<br />&gt; can be called from an IRQ and that means we can't use -&gt;low_latency=1 as<br />&gt; we take mutexes.<br /><br />Ok. So the end result is that Ogawa-san's fix is the right one. Then we <br />can revert the low_latency=1 thing for pty's entirely. No?<br /><br />And this is also the one that _looks_ the sanest - ie we do it on the read <br />side, where it matters, rather than on the write side or the flush side <br />(where the proper flushing can _also_ fix the problem, but where it's much <br />more problematic, and where it's a lot less direct about what we care <br />about).<br /><br />This is just Ogawa's patch, redone against current -git, and with commit <br />3a54297478e6578f96fd54bf4daa1751130aca86 reverted (Ogawa's patch already <br />undid the non-low_latency part of it).<br /><br />Now, I wonder if some _other_ line discipline might want to do that same <br />tty_flush_to_ldisc thing in their "do I have data" logic, but I didn't <br />look any closer.<br /><br />So does this work for everyone? I haven't tested it yet myself, but this <br />is the patch that "looks" right.<br /><br />		Linus<br /><br />---<br /> drivers/char/n_tty.c      |    1 +<br /> drivers/char/pty.c        |    2 --<br /> drivers/char/tty_buffer.c |   13 +++++++++++++<br /> include/linux/tty.h       |    1 +<br /> 4 files changed, 15 insertions(+), 2 deletions(-)<br /><br />diff --git a/drivers/char/n_tty.c b/drivers/char/n_tty.c<br />index ff47907..973be2f 100644<br />--- a/drivers/char/n_tty.c<br />+++ b/drivers/char/n_tty.c<br />&#64;&#64; -1583,6 +1583,7 &#64;&#64; static int n_tty_open(struct tty_struct *tty)<br /> <br /> static inline int input_available_p(struct tty_struct *tty, int amt)<br /> {<br />+	tty_flush_to_ldisc(tty);<br /> 	if (tty-&gt;icanon) {<br /> 		if (tty-&gt;canon_data)<br /> 			return 1;<br />diff --git a/drivers/char/pty.c b/drivers/char/pty.c<br />index 3850a68..6e6942c 100644<br />--- a/drivers/char/pty.c<br />+++ b/drivers/char/pty.c<br />&#64;&#64; -52,7 +52,6 &#64;&#64; static void pty_close(struct tty_struct *tty, struct file *filp)<br /> 		return;<br /> 	tty-&gt;link-&gt;packet = 0;<br /> 	set_bit(TTY_OTHER_CLOSED, &amp;tty-&gt;link-&gt;flags);<br />-	tty_flip_buffer_push(tty-&gt;link);<br /> 	wake_up_interruptible(&amp;tty-&gt;link-&gt;read_wait);<br /> 	wake_up_interruptible(&amp;tty-&gt;link-&gt;write_wait);<br /> 	if (tty-&gt;driver-&gt;subtype == PTY_TYPE_MASTER) {<br />&#64;&#64; -208,7 +207,6 &#64;&#64; static int pty_open(struct tty_struct *tty, struct file *filp)<br /> 	clear_bit(TTY_OTHER_CLOSED, &amp;tty-&gt;link-&gt;flags);<br /> 	set_bit(TTY_THROTTLED, &amp;tty-&gt;flags);<br /> 	retval = 0;<br />-	tty-&gt;low_latency = 1;<br /> out:<br /> 	return retval;<br /> }<br />diff --git a/drivers/char/tty_buffer.c b/drivers/char/tty_buffer.c<br />index 810ee25..3108991 100644<br />--- a/drivers/char/tty_buffer.c<br />+++ b/drivers/char/tty_buffer.c<br />&#64;&#64; -462,6 +462,19 &#64;&#64; static void flush_to_ldisc(struct work_struct *work)<br /> }<br /> <br /> /**<br />+ *	tty_flush_to_ldisc<br />+ *	&#64;tty: tty to push<br />+ *<br />+ *	Push the terminal flip buffers to the line discipline.<br />+ *<br />+ *	Must not be called from IRQ context.<br />+ */<br />+void tty_flush_to_ldisc(struct tty_struct *tty)<br />+{<br />+	flush_to_ldisc(&amp;tty-&gt;buf.work.work);<br />+}<br />+<br />+/**<br />  *	tty_flip_buffer_push	-	terminal<br />  *	&#64;tty: tty to push<br />  *<br />diff --git a/include/linux/tty.h b/include/linux/tty.h<br />index 1488d8c..e8c6c91 100644<br />--- a/include/linux/tty.h<br />+++ b/include/linux/tty.h<br />&#64;&#64; -394,6 +394,7 &#64;&#64; extern void __do_SAK(struct tty_struct *tty);<br /> extern void disassociate_ctty(int priv);<br /> extern void no_tty(void);<br /> extern void tty_flip_buffer_push(struct tty_struct *tty);<br />+extern void tty_flush_to_ldisc(struct tty_struct *tty);<br /> extern void tty_buffer_free_all(struct tty_struct *tty);<br /> extern void tty_buffer_flush(struct tty_struct *tty);<br /> extern void tty_buffer_init(struct tty_struct *tty);<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
