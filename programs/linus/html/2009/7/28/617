    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/7/23/289">First message in thread</a></li><li><a href="/lkml/2009/7/28/606">Alan Cox</a><ul><li><a href="/lkml/2009/7/28/612">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2009/7/29/108">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/29/108">Alan Cox</a></li></ul></li><li><a href="/lkml/2009/7/29/65">Alan Cox</a><ul><li><a href="/lkml/2009/7/29/269">Linus Torvalds</a><ul><li><a href="/lkml/2009/7/29/272">Alan Cox</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 28 Jul 2009 18:23:48 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] kdesu broken</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 28 Jul 2009, Linus Torvalds wrote:<br />&gt; <br />&gt; And when it _is_ called, it also clears TTY_LDISC, so now tty_ldisc_ref() <br />&gt; will return NULL, so then flush_to_ldisc() will be a no-op.<br />&gt; <br />&gt; So as far as I can tell, we already protect against this whole case: if we <br />&gt; call flush_to_ldisc() after the tty has been HUP'ed, it just won't _do_ <br />&gt; anything (unless the work hasn't been canceled, but in that case the timer <br />&gt; would have done the same thing, so nothing new is introduced).<br /><br />Btw, if you worry about the fact that this all could happen concurrently <br />(ie the hangup is done on one cpu, just as the other cpu is doing that <br />flush_to_ldisc() thing), then again, Ogawa's patch doesn't actually change <br />anything. The synchronous flush_to_ldisc() (done by Ogawa's patch) could <br />equally have been an asynchronous (done by a timer), and the timer may <br />already have triggered - so 'tty_ldisc_halt()' doing a cancel on the <br />delayed work is too late.<br /><br />So I don't think there are any new races wrt concurrency there either, <br />even though we do not take any locks in the tty_flush_to_ldisc() case. <br />Because the timer wouldn't have taken any locks either..<br /><br />Of course, if "tty_ldisc_halt()" (to remove any pending timer) and <br />"tty_ldisc_wait_idle()" (to make sure nothing else is executing right <br />then) is not sufficient, then there's a possible problem there if you hit <br />the timing just right, but again, that would be true _regardless_ of <br />Ogawa's changes as far as I can tell. <br /><br />IOW, the whole argument really hinges on the fact that calling <br />flush_to_ldisc() manually (without any locking) is really not <br />fundamentally any different from the delayed work doing it from a timer. <br /><br />And when we _do_ disable the timer, we also make that flush_to_ldisc() <br />function be a no-op, so the "tty_ldisc_halt()" effectively stops both the <br />timer and (conceptually) the manual call case too. <br /><br />So now we have one remaining case, namely the case of the ldisc then being <br />re-initialized and TTY_LDISC is set again. But at that point, calling <br />flush_to_ldisc() had better be ok again, wouldn't you agree?<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
