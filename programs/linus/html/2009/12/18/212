    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/12/18/108">First message in thread</a></li><li><a href="/lkml/2009/12/18/108">Tejun Heo</a><ul><li><a href="/lkml/2009/12/18/104">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/105">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/106">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/107">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/109">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/110">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/111">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/113">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/114">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/115">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/116">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/117">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/119">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/120">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/121">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/122">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/123">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/124">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/125">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/126">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/127">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/128">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/129">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/130">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/131">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/132">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/133">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/134">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/135">Tejun Heo</a></li><li><a href="/lkml/2009/12/18/154">Peter Zijlstra</a><ul><li><a href="/lkml/2009/12/18/157">Andi Kleen</a><ul><li><a href="/lkml/2009/12/18/191">Arjan van de Ven</a><ul><li><a href="/lkml/2009/12/20/244">Tejun Heo</a></li><li><a href="/lkml/2009/12/21/38">Jens Axboe</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2009/12/18/217">Linus Torvalds</a><ul><li><a href="/lkml/2009/12/18/217">Ingo Molnar</a></li><li><a href="/lkml/2009/12/18/218">Peter Zijlstra</a><ul><li><a href="/lkml/2009/12/18/224">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2009/12/20/239">Tejun Heo</a><ul><li><a href="/lkml/2009/12/21/40">Peter Zijlstra</a><ul><li><a href="/lkml/2009/12/21/93">Tejun Heo</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 18 Dec 2009 07:30:55 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: workqueue thing</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 18 Dec 2009, Peter Zijlstra wrote:<br /><br />&gt; &gt;    r1. The first design goal of cmwq is solving the issues the current<br />&gt; &gt;        workqueue implementation has including hard to detect<br />&gt; &gt;        deadlocks, <br />&gt; <br />&gt; lockdep is quite proficient at finding these these days.<br /><br />I don't think so.<br /><br />The reason it is not is that workqueues fundamentally do _different_ <br />things in the same context, adn lockdep has no clue what-so-ever.<br /><br />IOW, if you hold a lock, and then do 'flush_workqueue()', lockdep has no <br />idea that maybe one of the entries on a workqueue might need the lock that <br />you are holding. But I don't think lockdep sees the dependency that gets <br />created by the flush - because it's not a direct code execution <br />dependency.<br /><br />It's not a deadlock _directly_ due to lock ordering, but indirectly due to <br />waiting for unrelated code that needs locks.<br /><br />Now, maybe lockdep could be _taught_ to consider workqueues themselves to <br />be 'locks', and ordering those pseudo-locks wrt the real locks they take. <br />So if workqueue Q takes lock A, the fact that it is _taken_ in a workqueue <br />makes the ordering be Q-&gt;A. Then, if somebody does a "flush_workqueue" <br />while holding lock B, the flush implies a "lock ordering" of B-&gt;Q (where <br />"Q" is the set of all workqueues that could be flushed).<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
