    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/12/18/398">First message in thread</a></li><li><a href="/lkml/2009/12/18/398">Yinghai Lu</a><ul><li class="origin"><a href="/lkml/2009/12/18/423">Linus Torvalds</a><ul><li><a href="/lkml/2009/12/18/423">Jesse Barnes</a></li><li><a href="/lkml/2009/12/18/481">Yinghai Lu</a><ul><li><a href="/lkml/2009/12/18/489">Linus Torvalds</a><ul><li><a href="/lkml/2009/12/18/491">Yinghai Lu</a></li></ul></li><li><a href="/lkml/2009/12/20/201">Bjorn Helgaas</a><ul><li><a href="/lkml/2009/12/20/230">Yinghai Lu</a></li></ul></li></ul></li><li><a href="/lkml/2009/12/20/200">Bjorn Helgaas</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 18 Dec 2009 13:24:41 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 2/12] pci: add pci_bridge_release_unused_res and pci_bus_release_unused_bridge_res -v2</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 18 Dec 2009, Yinghai Lu wrote:<br />&gt; <br />&gt; so later we could use it to release small resource before pci assign unassign res<br /><br />However, I think this one is wrong.<br /><br />&gt; +static void release_child_resources(struct resource *r)<br />&gt; +{<br />&gt; +	struct resource *p;<br />&gt; +	resource_size_t size;<br />&gt; +<br />&gt; +	p = r-&gt;child;<br />&gt; +	while (p) {<br />&gt; +		release_child_resources(p);<br />&gt; +		release_resource(p);<br /><br />So not only is this releasing resources that aren't necessarily PCI <br />devices, it's releasing the whole tree - regardless of how they were <br />allocated and initialized. That makes me nervous to begin with. It's in <br />the wrong file.<br /><br />But the locking is crap too!<br /><br />You need to hold the resource lock for the whole operation - you can't <br />just walk the resource tree and release them.<br /><br />And once you do that, then using "release_resrouce()" is the wrong thing, <br />since it turns into just "__release_resource()" and you notice that that <br />walks the chain looking for them - which makes it pointless to have <br />_another_ outer loop that walks the chain to release them!<br /><br />So you'd need to<br /><br /> - move this to kernel/resource.c<br /><br /> - do it all under 'write_lock(&amp;resource_lock);'<br /><br /> - stop the silly double list loop, and just do it as a single loop that <br />   does<br /><br />	p = old-&gt;parent-&gt;child;<br />	old-&gt;parent = NULL;<br />	while (p) {<br />		struct resource *tmp = p;<br />		p = p-&gt;sibling;<br /><br />		.. do whatever you do to free tmp ..<br />	}<br /><br />   and it's much simpler, more efficient, has the rigth locking, and is in <br />   the right place.<br /><br />That said, it's still unclear if you can ever do this! Why would the PCI <br />layer be allowed to release ACPI resources int he tree, for example?<br /><br />So I can see fixing the _implementation_ issues I have like above, but I'd <br />still be nervous about the whole concept of the patch..<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
