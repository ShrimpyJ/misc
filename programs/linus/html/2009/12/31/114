    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/12/30/331">First message in thread</a></li><li><a href="/lkml/2009/12/30/331">Yuhong Bao</a><ul><li><a href="/lkml/2009/12/30/343">Bill Davidsen</a><ul><li><a href="/lkml/2009/12/31/19">Boaz Harrosh</a><ul><li><a href="/lkml/2009/12/31/92">Bill Davidsen</a><ul><li><a href="/lkml/2009/12/31/102">Pedro Ribeiro</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="/lkml/2010/1/2/127">Linus Torvalds</a><ul><li><a href="/lkml/2010/1/2/127">Yuhong Bao</a></li><li><a href="/lkml/2010/1/15/279">Yuhong Bao</a></li></ul></li><li><a href="/lkml/2010/1/15/287">"H. Peter Anvin"</a><ul><li><a href="/lkml/2010/1/15/291">Yuhong Bao</a><ul><li><a href="/lkml/2010/1/15/356">Linus Torvalds</a><ul><li><a href="/lkml/2010/1/15/361">	&lt;yuhongbao_386&#64;hotmail ...</a></li></ul></li><li><a href="/lkml/2010/1/15/365">"H. Peter Anvin"</a><ul><li><a href="/lkml/2010/1/16/5">	&lt;yuhongbao_386&#64;hotmail ...</a></li><li><a href="/lkml/2010/1/16/118">Bill Davidsen</a></li><li><a href="/lkml/2010/1/31/15"></a></li></ul></li></ul></li><li><a href="/lkml/2010/1/16/67">Sitsofe Wheeler</a><ul><li><a href="/lkml/2010/1/16/71">"Robert P. J. Day"</a><ul><li><a href="/lkml/2010/1/16/113">"H. Peter Anvin"</a></li></ul></li></ul></li><li><a href="/lkml/2010/2/28/167">Yuhong Bao</a></li><li><a href="/lkml/2010/2/28/168">Yuhong Bao</a></li></ul></li><li><a href="/lkml/2010/1/16/16">Geert Uytterhoeven</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 31 Dec 2009 10:39:41 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Ubuntu 32-bit, 32-bit PAE, 64-bit Kernel Benchmarks</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 30 Dec 2009, Yuhong Bao wrote:<br />&gt; <br />&gt; Given that Linus was once talking about the performance penalties of PAE <br />&gt; and HIGHMEM64G, perhaps you'd find these benchmarks done by Phoronix of <br />&gt; interest:<br />&gt; <a href="https://www.phoronix.com/scan.php?page=article&amp;item=ubuntu_32_pae">http://www.phoronix.com/scan.php?page=article&amp;item=ubuntu_32_pae</a><br /><br />PAE has no negative impact on user-land loads (aside from a potentially <br />really _tiny_ effect from just bigger page tables), and obviously means <br />that you actually have more RAM available, so it can be a big win.<br /><br />The "25% cost" is purely kernel-side work when the kernel needs to <br />kmap/kunmap - which it only needs to do when it touches highmem pages <br />itself directly. Which is pretty rare - but when it happens a lot, it's <br />extremely expensive.<br /><br />The worst load I've ever seen (which was the 25%+ case) needed btrfs <br />and heavy meta-data workloads (ie things like file creates/deletes, or <br />uncached lookups), because btrfs puts all its radix trees in highmem pages <br />and thus needs to kmap/kunmap them all. So that's one way to see heavy <br />kmap/kunmap loads.<br /><br />(In the meantime, I complained to the btrfs people about the CPU hogging <br />behavior, and afaik btrfs has improved since I did my kernel profiles of <br />the benchmarks, but I haven't re-done them)<br /><br />Theres' a potential secondary issue: my test-bed for that btrfs setup was <br />a netbook using Intel Atom. The performance profile of an Atom chip is <br />pretty different from any of the better out-of-order CPU's.<br /><br />Extra instructions cost a lot more. For example, out-of-order is <br />particularly good at handling "nonsense" instructions that aren't on a <br />critical path and aren't important for actual semantics - things like the <br />stack frame modifications etc are often almost "free" on out-of-order <br />CPU's because they only tend to have trivial dependencies that can be <br />worked around with things like the "stack engine" etc. So I seem to <br />remember that the "omit stack frame" option was a much bigger deal on Atom <br />than on a Core 2 Duo CPU, for example.<br /><br />So it's entirely possible that the TLB flushing (and eventual misses, of <br />course) involved with kmap()/kunmap() is much more expensive on Atom than <br />it is on a Core2 system. So it's possible that my 25% cost thing was for <br />pretty much a pessimal situation, due to a combination of heavy kernel <br />loads (I used "git status" as one of the btrfs/atom benchmarks - pretty <br />much _all_ it does is pathname lookups and readdir) with btrfs and atom.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
