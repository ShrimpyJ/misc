    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/12/11/455">First message in thread</a></li><li><a href="/lkml/2009/12/13/107">Frederic Weisbecker</a><ul><li><a href="/lkml/2009/12/13/111">Trond Myklebust</a><ul><li><a href="/lkml/2009/12/13/116">Frederic Weisbecker</a></li><li class="origin"><a href="/lkml/2009/12/13/125">Linus Torvalds</a><ul><li><a href="/lkml/2009/12/13/125">Trond Myklebust</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 13 Dec 2009 11:19:33 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [GIT PATCH] TTY patches for 2.6.33-git</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 13 Dec 2009, Trond Myklebust wrote:<br /><br />&gt; On Sun, 2009-12-13 at 20:04 +0100, Frederic Weisbecker wrote: <br />&gt; &gt; In the above cases we have the following comment:<br />&gt; &gt; <br />&gt; &gt; /* Protect inode-&gt;i_flock using the BKL */<br />&gt; &gt; <br />&gt; &gt; And really it doesn't seem to protect anything else,<br />&gt; &gt; fortunately it is acquired in a short path.<br />&gt; <br />&gt; As I said in my reply, this is the tough one, because the BKL protection<br />&gt; is imposed by the VFS locking scheme used in fs/locks.c.<br />&gt; <br />&gt; There is a similar dependency imposed upon fs/lockd/<br /><br />Note that since NFS seems to be the only one who really cares, I think the <br />appropriate course of action is to just replace the BKL - preferably with <br />a spinlock that you just drop before you do anything that blocks.<br /><br />Not only does the BKL already do that (so the locking doesn't change), but <br />I think most _users_ of the BKL actually already do the explicit dropping <br />of the lock (rather than the implicit one done by schedule()) because it's <br />already been a scalability issue and we've had some history of trying <br />alternative approaches that didn't do that whole auto-dropping anyway <br />(whether those alternate approaches be semaphores or spinlocks).<br /><br />So don't worry about the "imposed by the VFS" thing. I think you can <br />fairly easily change the VFS side. <br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
