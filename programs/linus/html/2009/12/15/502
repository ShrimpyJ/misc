    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/12/5/107">First message in thread</a></li><li><a href="/lkml/2009/12/15/300">Linus Torvalds</a><ul><li><a href="/lkml/2009/12/15/357">Linus Torvalds</a></li><li><a href="/lkml/2009/12/15/435">Alan Stern</a><ul><li><a href="/lkml/2009/12/15/470">"Rafael J. Wysocki"</a><ul><li><a href="/lkml/2009/12/15/492">Alan Stern</a></li></ul></li><li class="origin"><a href="/lkml/2009/12/15/507">Linus Torvalds</a><ul><li><a href="/lkml/2009/12/15/507">Alan Stern</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 15 Dec 2009 13:54:53 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Async suspend-resume patch w/ completions (was: Re: Async suspend-resume patch w/ rwsems)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 15 Dec 2009, Alan Stern wrote:<br />&gt; <br />&gt; Okay.  This obviously implies that if/when cardbus bridges are<br />&gt; converted to async suspend/resume, the driver should make sure that the<br />&gt; lower-numbered devices wait for their sibling higher-numbered devices<br />&gt; to suspend (and vice versa for resume).  Awkward though it may be.<br /><br />Yes. However, this is an excellent case where the whole "the device layer <br />does things asynchronously" is really rather awkward.<br /><br />For cardbus, the nicest model really would be for the _driver_ to decide <br />to do some things asynchronously, after having done some other things <br />synchronously (to make sure of ordering).<br /><br />That said, I think we are ok for at least Yenta resume, because the really <br />ordering-critical stuff we tend to do at "resume_early", which wouldn't be <br />asynchronous anyway.<br /><br />But for an idea of what I'm talking about, look at the o2micro stuff in <br />drivers/pcmcia/o2micro.h, and notice how it does certain things only for <br />the "PCI_FUNC(..devfn) == 0" case.<br /><br />So I suspect that we _can_ just do cardbus bridges asynchronously too, but <br />it really needs some care. I suspect to a first approximation we would <br />want to do the easy cases first, and ignore cardbus as being "known to <br />possibly have issues".<br /><br />&gt; &gt; Subtle? Hell yes.<br />&gt; <br />&gt; I don't disagree.  However the subtlety lies mainly in the matter of<br />&gt; non-obvious dependencies.<br /><br />Yes. But we don't necessarily even _know_ those dependencies.<br /><br />The Cardbus ones I know about, but really only because I wrote much of <br />that code initially when converting cardbus to look like the PCI bridge it <br />largely is. But how many other cases like that do we have that we have <br />perhaps never even hit, because we've never done anything out of order.<br /><br />&gt; The ACPI relations are definitely something to worry about.  It would<br />&gt; be a good idea, at an early stage, to add those dependencies<br />&gt; explicitly.  I don't know enough about them to say more; perhaps Rafael <br />&gt; does.<br /><br />Quite frankly, I would really not want to do ACPI first at all.<br /><br />We already handle batteries specially, but any random system device? Don't <br />touch it, is my suggestion. There is just too many ways it can fail. Don't <br />tell me that things "should work" - we know for a fact that BIOS tables <br />almost always have every single bug they could possibly have).<br /><br />&gt; &gt; And PCIE bridges? Should be safe these days, but it wasn't quite as <br />&gt; &gt; obvious, because a PCIE bridge actually has a driver unlike a regular <br />&gt; &gt; plain PCI-PCI bridge.<br />&gt; &gt; <br />&gt; &gt; Subtle, subtle.<br />&gt; <br />&gt; Indeed.  Perhaps you were too hasty in suggesting that PCI bridges <br />&gt; should be async.<br /><br />Oh, yes. I would suggest that first we do _nothing_ async except for <br />within just a single USB tree, and perhaps some individual drivers like <br />the PS/2 keyboard controller (and do even that perhaps only for the PC <br />version, which we know is on the southbridge and not anywhere else).<br /><br />If that ends up meaning that we block due to PCI bridges, so be it. I <br />really would prefer baby steps over anything more complete.<br /><br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
