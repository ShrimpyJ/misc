    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/12/15/669">First message in thread</a></li><li><a href="/lkml/2009/12/17/241">Linus Torvalds</a><ul><li><a href="/lkml/2009/12/17/247">Christoph Hellwig</a><ul><li class="origin"><a href="/lkml/2009/12/17/271">Linus Torvalds</a><ul><li><a href="/lkml/2009/12/17/271">Christoph Hellwig</a></li><li><a href="/lkml/2009/12/17/283">Russell King</a><ul><li><a href="/lkml/2009/12/17/292">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2009/12/19/76">Ralf Baechle</a><ul><li><a href="/lkml/2009/12/21/167">James Bottomley</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2009/12/17/267">	tytso&#64;mit ...</a><ul><li><a href="/lkml/2009/12/17/272">Linus Torvalds</a><ul><li><a href="/lkml/2009/12/17/332">Jens Axboe</a><ul><li><a href="/lkml/2009/12/17/429">James Bottomley</a></li></ul></li></ul></li><li><a href="/lkml/2009/12/17/439">FUJITA Tomonori</a><ul><li><a href="/lkml/2009/12/18/168">	tytso&#64;mit ...</a><ul><li><a href="/lkml/2009/12/21/29">FUJITA Tomonori</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 17 Dec 2009 09:42:15 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [git patches] xfs and block fixes for virtually indexed arches</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 17 Dec 2009, Christoph Hellwig wrote:<br />&gt;<br />&gt; On Thu, Dec 17, 2009 at 08:46:33AM -0800, Linus Torvalds wrote:<br />&gt; &gt; The whole "vmalloc is special" has always been true. If you want to <br />&gt; &gt; treat vmalloc as normal memory, you need to look up the pages yourself. We <br />&gt; &gt; have helpers for that (including helpers that populate vmalloc space from <br />&gt; &gt; a page array to begin with - so you can _start_ from some array of pages <br />&gt; &gt; and then lay them out virtually if you want to have a convenient CPU <br />&gt; &gt; access to the array).<br />&gt; <br />&gt; Which is exactly what the XFS code does.  Pages are allocated manually<br />&gt; and we store pointers to the page struct that later get added to the<br />&gt; bio.<br /><br />Hmm. The BIO interface that the patch-series changes (bio_map_kern) <br />doesn't work that way. It takes a "buf, len" kind of thing. That's what <br />I'm complaining about.<br /><br />&gt; But we access them through vmap (which I added exactly for this<br />&gt; reason back in 2002) for kernel accesses.  On all architectures with<br />&gt; sane caches things just work, but for parisc, arm and friends that have<br />&gt; virtually indexed caches we need to make sure to flush caches for this<br />&gt; different access.  The vmalloc linear address is not used for I/O<br />&gt; everywhere.<br /><br />Well, they clearly are _after_ this series, since that's what all those <br />changes to __bio_map_kernel() and bio_map_kern_endio() are all about.<br /><br />So I believe you when you say that XFS perhaps does everything right - I <br />just think that the patch series in question actually makes things worse, <br />exactly because it is starting to use virtual addresses.<br /><br />I also think that the changes to bio_map_kernel() and bio_map_kern_endio() <br />are not just "fundamentally ugly", I think they are made worse by the fact <br />that it's not even done "right". You both flush the virtual caches before <br />the IO and invalidate after - when the real pattern should be that you <br />flush it before a write, and invalidate it after a read.<br /><br />And I really think that would be all much more properly done at the <br />_caller_ level, not by the BIO layer.<br /><br />You must have some locking and allocation etc logic at the caller anyway, <br />why doesn't _that_ level just do the flushing or invalidation?<br /><br />I get the feeling that somebody decided that the whole "do DMA to/from <br />vmalloc space" was somehow a common generic pattern that should be <br />supported in general, and I violently disagree. Maybe XFS has good reasons <br />for doing it, but that does emphatically _not_ make it a good idea in <br />general, and that does _not_ mean that the BIO layer should make it easy <br />to do for other users and have a general interface for that kind of <br />crazyness.<br /><br />IOW, I'm perfectly happy with the patch to fs/xfs/linux-2.6/xfs_buf.c. <br />That one still seems to use 'bio_add_page()' with a regular 'struct page'. <br /><br />But the fs/bio.c patch looks like just total and utter crap to me, and is <br />the reason I refuse to pull this series.<br /><br />				Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
