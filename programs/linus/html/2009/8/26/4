    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/8/21/446">First message in thread</a></li><li><a href="/lkml/2009/8/25/613">Linus Torvalds</a><ul><li><a href="/lkml/2009/8/25/621">Dave Airlie</a><ul><li class="origin"><a href="/lkml/2009/8/26/14">Linus Torvalds</a><ul><li><a href="/lkml/2009/8/26/14">Dave Airlie</a><ul><li><a href="/lkml/2009/8/26/401">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2009/8/26/58">Eric Anholt</a><ul><li><a href="/lkml/2009/8/26/69">Dave Airlie</a></li></ul></li></ul></li><li><a href="/lkml/2009/8/25/624">Zhenyu Wang</a><ul><li><a href="/lkml/2009/8/26/5">Linus Torvalds</a><ul><li><a href="/lkml/2009/9/10/23">Zhenyu Wang</a></li></ul></li><li><a href="/lkml/2009/8/26/172">ykzhao</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 25 Aug 2009 21:13:58 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Linux 2.6.31-rc7</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 26 Aug 2009, Dave Airlie wrote:<br />&gt; &gt;<br />&gt; &gt; If you actually detected things _right_, none of this would be an issue.<br />&gt; &gt; But you don't. And you seem to have a really hard time even admitting<br />&gt; &gt; that. You try to re-detect things, and you SCREW UP.<br />&gt; <br />&gt; This isn't anything to do with redetection, and in the Mac case there isn't<br />&gt; even a BIOS table that you can really rely on since Apple hard coded all<br />&gt; this stuff into their EFI and Mac OSX drivers.<br /><br />That's really my point.<br /><br />There _is_ one sort of detection you could do: look at the actual state of <br />the graphics chip.<br /><br />In other words, exactly the case you mention: don't trust any BIOS tables <br />(they may not exist, and they _are_ broken in many cases) or silly EFI <br />information (I guarantee that any firmware info will eventually be buggy: <br />EFI is in no way going to be magically less buggy than BIOS tables have <br />been).<br /><br />So what's left? You can still look at how the chip was programmed. If it's <br />driving the VGA port, you can be pretty sure that there's a monitor <br />attached. Sure, there might be something _else_ attached too, and I'm not <br />saying that you cannot try to probe other things, but right now it seems <br />that KMS totally throws away a free - and fairly reliable - piece of <br />information. And replaces it with very unreliable information that <br />definitely doesn't work.<br /><br />I'm all for looking at many different places to find 'the truth', but I'm <br />very unhappy with KMS looks into BIOS tables, decides that there's a LVDS <br />panel attached (there isn't), and then disables the VGA port that drives <br />the monitor.<br /><br />That doesn't help _anybody_. It just results in a black screen. And I <br />guarantee that this happens on several pieces of hardware, and no, it's <br />not all just "crap Apple and EFI". One of the pieces of hardware it <br />happens on is an Intel-only machine. Intel hardware, Intel firmware, Intel <br />motherboard, Intel _everything_. And yes, KMS decides to drive a <br />nonexistent LVDS display, rather than the one that the BIOS correctly <br />booted up with.<br /><br />&gt; Just because the BIOS manages to light up an output in now way effects<br />&gt; whether the driver can do the same.<br /><br />.. but if the BIOS drives one output, that should be a damn big hint that <br />you shouldn't then just randomly pick another one!<br /><br />It sure as hell is a bigger hint than the ones you're using right now. <br />Which is kind of my point here. Why are you arguing against a known bug? <br /><br />&gt; I'm not sure why the mac-mini hack hasn't been merged I asked for it a<br />&gt; few times,<br />&gt; I'd rather the proper solution was merged but that seems to not have<br />&gt; happened either.<br /><br />I want to repeat: it's not just Mac Mini. <br /><br />&gt; You have two special cases here,<br />&gt; a) mac mini - apple hw, needs hacks to workaround the fact that they do <br />&gt; something nobody else does with the hw and then don't tell you about it <br />&gt; in the hw. the hack from userspace should have been ported to the kernel <br />&gt; but I keep not seeing it.<br /><br />The thing is, the BIOS _does_ report it to the hardware: you could just <br />read the hardware registers.<br /><br />But no. Instead the Intel KMS code discards the hardware registers, and <br />reads the BIOS tables instead, finds a LVDS entry there, and uses that - <br />and disconnects the entry that _was_ driving the monitor.<br /><br />Really. Do you seriously believe that because you found some random tables <br />in the BIOS memory, it's more reliable than "oh, the BIOS set the hardware <br />up to drive the SVDO output"?<br /><br />That's what I find irritating. We _know_ BIOS tables are random crap. We <br />_know_ they are way less reliable than just asking the hardware where it <br />is. But KMS still trusts the VBT data more than the fact that the chip has <br />been programmed to output DVI/SVDO output.<br /><br />&gt; b) pre-production SDV hardware for a mobile chipset without LVDS, here's <br />&gt; both pieces you get to keep them. LVDS isn't detectable on any hw, the <br />&gt; sanity assumption so far are you have a mobile chipset you must have <br />&gt; LVDS, you have an ACPI lid button you might have LVDS.<br /><br />Again, you say that, but you have absolutely nothing to back it up with.<br /><br />Here's a counter-argument: we _know_ that it's not detectable whether <br />there's an LVDS panel is attached or not. So what should we do? Should we <br />turn off the VGA1 connection that we can see that the BIOS programmed, and <br />set things up for LVDS instead?<br /><br />That's f*cking _stupid_. Go ahead and program the LVDS panel *too*, but <br />don't turn off the SDVO (or whatever) output that was also active!<br /><br />And quite frankly, if the BIOS didn't turn on the panel, then maybe the <br />kernel shouldn't either. At least not until it gets a "lid open" event. So <br />even the "go ahead and program LVDS too" part is quite debatable.<br /><br />In other words: it would be a lot saner to just keep whatever output mode <br />that the machine booted with. Then, change it ONLY IF YOU DETECT SOMETHING <br />ACTUALLY CHANGING.<br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
