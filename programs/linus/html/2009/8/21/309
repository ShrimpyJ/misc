    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/8/21/83">First message in thread</a></li><li><a href="/lkml/2009/8/21/288">Linus Torvalds</a><ul><li><a href="/lkml/2009/8/21/299">Steven Rostedt</a></li><li><a href="/lkml/2009/8/21/307">Ingo Molnar</a><ul><li class="origin"><a href="/lkml/2009/8/21/312">Linus Torvalds</a><ul><li><a href="/lkml/2009/8/21/312">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 21 Aug 2009 12:13:03 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [tip:tracing/urgent] tracing: Fix too large stack usage in do_one_initcall()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 21 Aug 2009, Ingo Molnar wrote:<br />&gt; &gt; <br />&gt; &gt; That's why I think the async thing could fix this - if we _force_ <br />&gt; &gt; async calls to be asynchronous, you won't have the deep callchains <br />&gt; &gt; for all the device discovery thing.<br />&gt; <br />&gt; Agreed. OTOH we have deep callchains in things like execve() too <br />&gt; which seem to be a lot harder to fix - and those have been around <br />&gt; for the past ~10 years since i've been looking at max-stacktraces.<br />&gt; I think 4K doesnt cut it anymore.<br /><br />I agree that we have stack traces that are too deep in other areas too. At <br />the same time, it does tend to be the case that initcalls are special due <br />to having those long chains of detection (PCI -&gt; driver -&gt; bus -&gt; device), <br />so targeting them specially is probably a good idea. <br /><br />(There are other "special" chains that tend to be long, like "mount": <br />you often end up doing things like reading root inode information etc down <br />a fairly deep chain).<br /><br />And we probably should really complain more actively about big stack <br />frames. We have that CONFIG_FRAME_WARN thing, but it's set very high. <br /><br />			Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
