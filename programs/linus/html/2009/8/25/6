    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/8/20/21">First message in thread</a></li><li><a href="/lkml/2009/8/24/431">Frederic Weisbecker</a><ul><li><a href="/lkml/2009/8/25/1">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2009/8/25/243">Linus Torvalds</a><ul><li><a href="/lkml/2009/8/25/243">Frederic Weisbecker</a></li></ul></li><li><a href="/lkml/2009/8/25/224">Frederic Weisbecker</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Aug 2009 21:30:16 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: v2.6.31-rc6: BUG: unable to handle kernel NULL pointer dereference at 0000000000000008</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 24 Aug 2009, Linus Torvalds wrote:<br />&gt; <br />&gt; Anyway, I'll happily be shown wrong. I think the (second) patch I sent out <br />&gt; is an acceptable hack in the presense of the current locking, but as I <br />&gt; said, I'm not exactly happy about it, because I do think the locking is <br />&gt; broken.<br /><br />Btw, another solution to all this would be to just not have that <br />ldisc_mutex deadlock due to do_tty_hangup -&gt; tty_ldisc_hangup at all.<br /><br />The actual _flushing_ doesn't need the mutex - it's just that both <br />flushing and hangup is done with workqueues.<br /><br />If we can avoid the deadlock by not having the (artificial) workqueue <br />dependency, it would allow everybody to just hold on to the mutex over the <br />whole sequence - and would obviate the need for that hacky <br />TTY_LDISC_CHANGING bit thing in tty_set_ldisc.<br /><br />In other words, the whole problem really comes in from the fact that <br />do_tty_hangup() is called from "hangup_work", and the workqueues can get <br />hung to the point where you can't then do the (totally _unrelated_) queue <br />flushing.<br /><br />Because flush_to_ldisc() itself - which is what we want to do - doesn't <br />need that mutex or the workqueue at all. It could run from any context, <br />afaik.<br /><br />So if we were to turn it into just a timer (rather than a "delayed work"), <br />then we'd not need to do that "flush_scheduled_work()" thing at all, and <br />we wouldn't have that interaction with do_tty_hangup(). At which point we <br />could again hold on to locks, because we wouldn't need to worry about the <br />workqueues getting stuck on the mutex (that isn't even needed for the <br />actual flushing part that we want to do!).<br /><br />So don't get me wrong - there are _multiple_ ways to solve this. But they <br />are all pretty major surgery, changing "big" semantics. We could fix the <br />locking, we could change how we flush, we could do all of those things. <br />And I'd love to. But I think the almost-oneliner is the safest approach <br />right now. It's certainly not perfect, but it's fairly minimal impact.<br /><br />		Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
