    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2009/8/20/21">First message in thread</a></li><li><a href="/lkml/2009/8/20/21">(Eric W. Biederman)</a><ul><li><a href="/lkml/2009/8/20/27">(Eric W. Biederman)</a><ul><li><a href="/lkml/2009/8/20/55">(Eric W. Biederman)</a><ul><li><a href="/lkml/2009/8/20/82">Xiaotian Feng</a><ul><li><a href="/lkml/2009/8/20/478">"Zhang, Yanmin"</a></li></ul></li></ul></li><li><a href="/lkml/2009/8/20/61">Dave Young</a><ul><li><a href="/lkml/2009/8/20/64">(Eric W. Biederman)</a><ul><li><a href="/lkml/2009/8/20/68">Dave Young</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2009/8/24/381">Linus Torvalds</a><ul><li><a href="/lkml/2009/8/24/381">Linus Torvalds</a><ul><li><a href="/lkml/2009/8/24/391">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2009/8/24/354/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Aug 2009 15:34:25 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: v2.6.31-rc6: BUG: unable to handle kernel NULL pointer dereference at 0000000000000008</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 19 Aug 2009, Eric W. Biederman wrote:<br />&gt; <br />&gt; I was looking into a change in behavior on 2.6.31-rc6 where<br />&gt; data was being lost, and it appears one variant of my test program<br />&gt; kills the kernel.<br />&gt; <br />&gt; The following program run as an unprivileged user causes a kernel<br />&gt; panic in about a minute:<br />&gt; <br />&gt; aka<br />&gt; <br />&gt; while :; do ./KernelTtyTest ; done<br /><br />Ok, so I got back to this one after having worked on other regressions, <br />and I'm not seeing anything really obvious. But it does look like we may <br />have a situation where we're resetting the ldisc due to hangup at the same <br />time as the writer is still active in the flushing on another CPU.<br /><br />When we halt the lfisc, we cancel the delayed work, but we do it without <br />the "non-sync" version that only removes the timer. If the timer just <br />triggered, the delayed work might be busy running on another CPU.<br /><br />Does changing the "cancel_delayed_work()" to "cancel_delayed_work_sync()" <br />as in the patch below help your case? Oh, and I noticed that there was a <br />stale comment lying around, so the patch removes that one too.<br /><br />Untested. VERY untested. Just going by "that looks odd".<br /><br />		Linus<br /><br />---<br /><br /> drivers/char/tty_ldisc.c |    5 +----<br /> 1 files changed, 1 insertions(+), 4 deletions(-)<br /><br />diff --git a/drivers/char/tty_ldisc.c b/drivers/char/tty_ldisc.c<br />index 1733d34..658638f 100644<br />--- a/drivers/char/tty_ldisc.c<br />+++ b/drivers/char/tty_ldisc.c<br />&#64;&#64; -507,15 +507,12 &#64;&#64; static void tty_ldisc_restore(struct tty_struct *tty, struct tty_ldisc *old)<br />  *	The TTY_LDISC flag being cleared ensures no further references can<br />  *	be obtained while the delayed work queue halt ensures that no more<br />  *	data is fed to the ldisc.<br />- *<br />- *	In order to wait for any existing references to complete see<br />- *	tty_ldisc_wait_idle.<br />  */<br /> <br /> static int tty_ldisc_halt(struct tty_struct *tty)<br /> {<br /> 	clear_bit(TTY_LDISC, &amp;tty-&gt;flags);<br />-	return cancel_delayed_work(&amp;tty-&gt;buf.work);<br />+	return cancel_delayed_work_sync(&amp;tty-&gt;buf.work);<br /> }<br /> <br /> /**<br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
