    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/8/24/123">First message in thread</a></li><li><a href="/lkml/2001/8/24/150">Brad Chapman</a><ul><li><a href="/lkml/2001/8/26/29">Bill Pringlemeir</a></li><li><a href="/lkml/2001/8/24/193">Alexander Viro</a><ul><li><a href="/lkml/2001/8/25/18">Brad Chapman</a></li><li class="origin"><a href="/lkml/2001/8/28/1">(Linus Torvalds)</a><ul><li><a href="/lkml/2001/8/28/1">Alexander Viro</a><ul><li><a href="/lkml/2001/8/28/2">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2001/8/27/136">Rusty Russell</a></li><li><a href="/lkml/2001/8/28/56">Roman Zippel</a><ul><li><a href="/lkml/2001/8/28/190">Linus Torvalds</a><ul><li><a href="/lkml/2001/8/28/47">Roman Zippel</a></li><li><a href="/lkml/2001/8/28/93">Roman Zippel</a></li><li><a href="/lkml/2001/8/28/103">"Bill Rugolsky Jr."</a></li><li><a href="/lkml/2001/8/28/114">Roman Zippel</a></li><li><a href="/lkml/2001/8/28/189">Andreas Schwab</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [IDEA+RFC] Possible solution for min()/max() war</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 28 Aug 2001 04:59:41 +0000 (UTC)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;E15b9rU-0002vE-00&#64;localhost&gt;,<br />Rusty Russell  &lt;rusty&#64;rustcorp.com.au&gt; wrote:<br />&gt;In message &lt;Pine.GSO.4.21.0108242055410.19796-100000&#64;weyl.math.psu.edu&gt; you wri<br />&gt;te:<br />&gt;&gt; _THAT_ _IS_ _WRONG_.  Who the fuck said that we always want type of _first_<br />&gt;&gt; argument?  Mind you, IMNSHO Dave had been on a seriously bad trip when he<br />&gt;&gt; had added that "type" argument - separate names would be cleaner.  And yes,<br />&gt;&gt; it'd be better in prepatch instead of 2.4.9-final.<br />&gt;<br />&gt;We're going in circles.  Linus requested that the explicit type arg be<br />&gt;added.<br /><br />Yes. "requested" is a bit too politic.<br /><br />It was not davem who added the type argument.  It was me who _required_<br />that min/max be very much explicitly type-aware, as I consider any other<br />alternative to be inherently buggy. <br /><br />Yes, the new Linux min/max macros are different from the ones people are<br />used to.  Yes, I expected a lot of flamage.  And no, I don't care one<br />whit.  Unlike EVERY SINGLE other C version of min/max I've ever seen,<br />the new Linux kernel versions at least have a fighting chance in hell of<br />generating correct code.  And that's to a large degree because they<br />force the user to specify what type he _thinks_ the comparison should be<br />done in. <br /><br />I know people don't understand about the difference between signed and<br />unsigned compares, and people may not even realize that just by doing<br />the patches David ended up fixing a few real bugs that were uncovered<br />simply by virtue of having to think about what kind of comparison it was<br />supposed to be. <br /><br />There were a few alternatives that we looked at (or rather, David<br />implemented, and I ended up rejecting due to various reasons), but they<br />all boiled down to "how do we sanely generate min/max functions while at<br />the same time forcing people to understand the types in question".  Some<br />of the intermediate patches had the type in the macro name, ie things<br />like "min_uint()" and "min_slong()".  The final version (ie the one in<br />2.4.9) was deemed to be the most flexible. <br /><br />The problem with putting the "type" in the name of the function/macro<br />is/was that<br /><br /> - there's a _lot_ of types. David actually had a version for this, and<br />   there were separate versions for everything ranging from "int" to<br />   "uint", to "s32" to "u32", to "size_t" etc etc.<br /><br /> - Some people would _still_ not understand what the advantage of<br />   explicit typing would be, so we'd have drivers doing their own<br />   min/max functions, not understanding the issues about signs and C<br />   type conversion. <br /><br />Thus the current "min(type,x,y)" approach, which fixes both problems.<br /><br />I have one thing to say to people who do not like the new min/max<br />functions: most of them probably never even _understood_ the multitude<br />of bugs that are inherent in the classical<br /><br />	#define min(x,y) ((x) &lt; (y) ? (x) : (y))<br /><br />but even so I'm somewhat surprised that this is still debated.  I hoped<br />it would be over by the time I came back ;)<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
