    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/8/24/123">First message in thread</a></li><li><a href="/lkml/2001/8/30/212">Linus Torvalds</a><ul><li><a href="/lkml/2001/8/31/67">"Peter T. Breuer"</a><ul><li class="origin"><a href="/lkml/2001/8/31/87">Linus Torvalds</a><ul><li><a href="/lkml/2001/8/31/87">"Peter T. Breuer"</a></li><li><a href="/lkml/2001/8/31/165">Jonathan Lundell</a></li></ul></li></ul></li><li><a href="/lkml/2001/8/30/271">"Peter T. Breuer"</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 31 Aug 2001 07:02:46 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [IDEA+RFC] Possible solution for min()/max() war</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Fri, 31 Aug 2001, Peter T. Breuer wrote:<br />&gt;<br />&gt; On doing a make bzImage no errors showed. On make modules, 4 errors<br />&gt; showed, one in tun.c and 3 in pagebuf_io.c (I presume that's from<br />&gt; xfs).<br />&gt;<br />&gt; I probably covered about 25% of the kernel code in that trial.<br /><br />Good. This implies that the test itself is "reasonable and safe" - it<br />doesn't get nasty false positives, and assuming people en dup being happy<br />about it never causing surprising sign changes, I think this is a good<br />idea.<br /><br />I _would_ suggest that you change the MIN_BUG() thing to the traditional<br /><br />	#define compile_time_assert(x) \<br />		do { switch (0) { case 0: case (x) != 0: ; } } while (0)<br /><br />which gives the error from the compiler, and does not depend on the<br />assembler.<br /><br />(Admittedly the error message isn't the nicest in the world, but it gives<br />file and line number and include depth etc.. )<br /><br />&gt; The tun.c one was safe as it was .. the signed value was always<br />&gt; positive at the point where the macro was applied.<br /><br />Note that a _few_ false positives are fine - we can fix them up, and<br />people will be happy. The problems happen if the false positives are so<br />numerous that it makes common code uglier and harder to read because of<br />work-arounds for checkers.<br /><br />So adding a cast or using an unsigned constant or whatever is fine.<br /><br />&gt; One thing that worries me is that these should have triggered on<br />&gt; the signed/unsigned char comparisons that you were worried about in<br />&gt; -Wsigned-compare, and no, they didn't. They did find other<br />&gt; signed/unsigned mixes, but not char.<br /><br />What I _really_ think might be interesting is a<br /><br />	-Wsign-promote<br /><br />warnign that hits outside compares (at any implicit promotion that<br />changes the sign - ie exactly the cases where K&amp;R v1 and v2 differ), but I<br />suspect that it will have even _more_ problems than -Wsign-compare in the<br />sense that it probably really needs the compiler to do range analysis for<br />any amount of sane output..<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
