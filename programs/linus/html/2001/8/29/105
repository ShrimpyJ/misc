    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/8/24/123">First message in thread</a></li><li><a href="/lkml/2001/8/29/65">David Lang</a><ul><li><a href="/lkml/2001/8/29/113">Daniel Phillips</a><ul><li><a href="/lkml/2001/8/29/90">"Bill Rugolsky Jr."</a></li><li class="origin"><a href="/lkml/2001/8/30/44">Linus Torvalds</a><ul><li><a href="/lkml/2001/8/30/44">Roman Zippel</a><ul><li><a href="/lkml/2001/8/30/83">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/8/30/56">Ion Badulescu</a><ul><li><a href="/lkml/2001/8/30/48">David Woodhouse</a></li><li><a href="/lkml/2001/8/30/86">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/8/30/259">Daniel Phillips</a><ul><li><a href="/lkml/2001/8/30/107">"Peter T. Breuer"</a></li><li><a href="/lkml/2001/8/30/158">Graham Murray</a></li><li><a href="/lkml/2001/8/30/180">David Weinehall</a></li><li><a href="/lkml/2001/8/30/186">"Patrick J. LoPresti"</a></li><li><a href="/lkml/2001/8/31/48">Helge Hafting</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 29 Aug 2001 20:28:20 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [IDEA+RFC] Possible solution for min()/max() war</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Thu, 30 Aug 2001, Daniel Phillips wrote:<br />&gt;<br />&gt; Yes, in the signed/unsigned case the comparison generated is always<br />&gt; unsigned.<br /><br />Well... No.<br /><br />If you compare a signed integer with a unsigned char, the char gets<br />promoted to a _signed_ integer, and the comparison is signed. It is NOT<br />a unsigned comparison.<br /><br />And THIS is one example of why it gets complicated.<br /><br />The C logic for type expansion is just a tad too easy to get wrong, and<br />the strict type-checking you normally have with well-written ANSI C simply<br />does not exist for integer types. The compiler will silently just do the<br />promotion..<br /><br />Somebody mentioned -Wsign-compare. Try it with the example above. It won't<br />warn at all, exactly because under C both sides of such a compare have the<br />_same_ sign, even if one is a "unsigned char", and the other is a "signed<br />int".<br /><br />Try it yourself if you don't believe me.<br /><br />Please guys. The issue of sign in comparisons are a LOT more complicated<br />than most of you seem to think.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
