    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/8/24/123">First message in thread</a></li><li><a href="/lkml/2001/8/29/105">Linus Torvalds</a><ul><li><a href="/lkml/2001/8/30/44">Roman Zippel</a><ul><li><a href="/lkml/2001/8/30/83">Linus Torvalds</a><ul><li><a href="/lkml/2001/8/30/91">"Christopher Friesen"</a><ul><li><a href="/lkml/2001/8/30/101">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/8/30/119">Roman Zippel</a></li><li><a href="/lkml/2001/8/30/220">Ion Badulescu</a><ul><li><a href="/lkml/2001/8/31/7">Linus Torvalds</a></li><li><a href="/lkml/2001/8/31/158">Jamie Lokier</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2001/8/30/56">Ion Badulescu</a><ul><li><a href="/lkml/2001/8/30/48">David Woodhouse</a><ul><li><a href="/lkml/2001/8/30/55">Ion Badulescu</a></li></ul></li><li class="origin"><a href="/lkml/2001/8/30/69">Linus Torvalds</a><ul><li><a href="/lkml/2001/8/30/69">Ion Badulescu</a></li><li><a href="/lkml/2001/8/30/80">"Peter T. Breuer"</a></li><li><a href="/lkml/2001/8/30/97">Ben LaHaise</a></li><li><a href="/lkml/2001/8/30/136">David Weinehall</a><ul><li><a href="/lkml/2001/8/30/137">Daniel Phillips</a></li><li><a href="/lkml/2001/8/30/146">"Peter T. Breuer"</a></li></ul></li><li><a href="/lkml/2001/8/30/194">"Patrick J. LoPresti"</a><ul><li><a href="/lkml/2001/8/30/206">"Peter T. Breuer"</a></li></ul></li><li><a href="/lkml/2001/8/31/72">Jamie Lokier</a><ul><li><a href="/lkml/2001/8/31/50">Roman Zippel</a></li><li><a href="/lkml/2001/8/31/89">Jamie Lokier</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2001/8/30/259">Daniel Phillips</a><ul><li><a href="/lkml/2001/8/30/107">"Peter T. Breuer"</a><ul><li><a href="/lkml/2001/8/30/129">Daniel Phillips</a><ul><li><a href="/lkml/2001/8/31/97">(Kai Henningsen)</a></li></ul></li></ul></li><li><a href="/lkml/2001/8/30/158">Graham Murray</a></li><li><a href="/lkml/2001/8/30/180">David Weinehall</a></li><li><a href="/lkml/2001/8/30/186">"Patrick J. LoPresti"</a></li><li><a href="/lkml/2001/8/31/48">Helge Hafting</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 30 Aug 2001 09:09:13 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [IDEA+RFC] Possible solution for min()/max() war</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Thu, 30 Aug 2001, Ion Badulescu wrote:<br />&gt; &gt;<br />&gt; &gt; Somebody mentioned -Wsign-compare. Try it with the example above. It won't<br />&gt; &gt; warn at all, exactly because under C both sides of such a compare have the<br />&gt; &gt; _same_ sign, even if one is a "unsigned char", and the other is a "signed<br />&gt; &gt; int".<br />&gt;<br />&gt; And why should the compiler warn at all? The range of "int" completely<br />&gt; covers the range of "unsigned char", so the result of the comparison will<br />&gt; always be correct if the types were chosen correctly.<br /><br />You obviously do not understand the issue at all.<br /><br />It doesn't _matter_ that the int covers the whole space of "unsigned<br />char".<br /><br />What if the "int" happens to be negative?<br /><br />Right. You get _totally_ different results for a unsigned and a signed<br />compare. For the signed compare, you do obviously get the "logical"<br />result, that the negative int is smaller than the unsigned char. But if<br />you're not _aware_ of the signedness, you may not think about the issues.<br /><br />Basically, when you compare a "long" to a "xxx", and the xxxx is unsigned,<br />WHAT ARE THE RESULTS?<br /><br />And the answer is that you simply DO NOT KNOW! If the xxxx is "unsigned<br />int", the sign of the compare actually depends on whether "int" is smaller<br />than "long" on the particular architecture you're compiling for. So the<br />sign of the compare actually ends up being different on an alpha than on a<br />x86.<br /><br />Stating the type you compare in explicitly means that you do not get<br />surprised.<br /><br />And not getting surprisied is a good thing.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
