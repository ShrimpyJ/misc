    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/11/16/134">First message in thread</a></li><li><a href="/lkml/2001/11/17/77">"Christian Ehrhardt"</a><ul><li><a href="/lkml/2001/11/17/75">Linus Torvalds</a></li><li><a href="/lkml/2001/11/17/83">Andrea Arcangeli</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2001/11/18/15">Andrea Arcangeli</a><ul><li><a href="/lkml/2001/11/18/3">Andrea Arcangeli</a></li><li><a href="/lkml/2001/11/18/9">(Linus Torvalds)</a><ul><li><a href="/lkml/2001/11/18/23">Alan Cox</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 17 Nov 2001 22:24:44 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: VM-related Oops: 2.4.15pre1</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Sun, 18 Nov 2001, Andrea Arcangeli wrote:<br />&gt;<br />&gt; I also agree the patch shouldn't matter, but one suspect thing is the<br />&gt; fact add_to_swap_cache goes to clobber in a non atomic manner the page<br />&gt; lock.<br /><br />.. you mean __add_to_page_cache(), not add_to_swap_cache().<br /><br />And nope, not really. It does use plain stores to page-&gt;flags, and I agree<br />that it is ugly, but if the page was locked before calling it, all the<br />stores will be with the PG_lock bit set - and even plain stores _are_<br />documented to be atomic on x86 (and on all other reasonable architectures<br />too).<br /><br />&gt; so yes, we hold the page lock both in swap_out and in<br />&gt; shrink_cache, but swap_out can drop it for a moment and then later<br />&gt; pretend to be the onwer again without a real trylock.<br /><br />No, it doesn't get dropped for a moment. The bit is always set, and<br />somebody else who tries to lock the page will never see it clear, and can<br />never succeed in locking it.<br /><br />Is the __add_to_page_cache() playing with the page flags ugly? It sure is.<br />I'd _almost_ call it buggy, but not because of PG_locked, but because of<br />all the other bits it does horrible things to. It's one of those<br />borderline cases, but I don't think it's borderline wrt the lock bit.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
