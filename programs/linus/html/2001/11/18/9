    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/11/16/134">First message in thread</a></li><li><a href="/lkml/2001/11/17/83">Andrea Arcangeli</a><ul><li><a href="/lkml/2001/11/18/10">Linus Torvalds</a></li><li><a href="/lkml/2001/11/18/15">Andrea Arcangeli</a><ul><li><a href="/lkml/2001/11/18/3">Andrea Arcangeli</a></li><li class="origin"><a href="/lkml/2001/11/18/23">(Linus Torvalds)</a><ul><li><a href="/lkml/2001/11/18/23">Alan Cox</a><ul><li><a href="/lkml/2001/11/22/37">Pavel Machek</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: VM-related Oops: 2.4.15pre1</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 18 Nov 2001 07:31:15 +0000 (UTC)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;20011118073730.C25232&#64;athlon.random&gt;,<br />Andrea Arcangeli  &lt;andrea&#64;suse.de&gt; wrote:<br />&gt;<br />&gt;I know all is right if GCC just overwrites the page-&gt;flags with data<br />&gt;that keeps PG_locked set. But GCC doesn't guarantee that.  GCC can as<br />&gt;well do:<br />&gt;<br />&gt;	flags = page-&gt;flags;<br />&gt;	page-&gt;flags = 0;<br />&gt;<br />&gt;	change flags here<br />&gt;<br />&gt;	page-&gt;flags = flags<br /><br />Sure.<br /><br />&gt;From a C language lawyer standpoing a C compiler can do pretty much<br />whatever it damn well chooses to do, including temporarily changing<br />"page-&gt;flags" even if the C source doesn't have any reference to<br />"page-&gt;flags" at _all_.  The compiler might decide that it temporarily<br />wants to use that memory for something else, and since "Strictly<br />conforming ANSI C" does not have a notion of threads etc interesting<br />issues, you can probably argue that just about _anything_ falls under<br />"gcc doesn't guarantee that". <br /><br />&gt;probably gcc doesn't, but that's still a kernel bug.<br /><br />No. It would be a _gcc_ bug if gcc did things to "page-&gt;flags" that the<br />code did not ask it to do. And that is _regardless_ of any notions of<br />"strictly conforming C code". The fact is, that if gcc were to clear a<br />bit that the code never clears, that is a HUGE AND GAPING GCC BUG.<br /><br />Not kernel bug.<br /><br />The fact is, if we write code that leaves a certain bit unmodified, gcc<br />MUST NOT modify that bit. If gcc generated code that temporarily<br />modifies the bit, I can show user-level code that would break with<br />signals. See "sig_atomic_t" and friends - the compiler simply _has_ to<br />guarantee that the semantics you write in C code are actually upheld.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
