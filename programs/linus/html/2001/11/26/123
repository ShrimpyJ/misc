    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/11/26/60">First message in thread</a></li><li><a href="/lkml/2001/11/26/60">Momchil Velikov</a><ul><li><a href="/lkml/2001/11/26/101">Ingo Molnar</a><ul><li><a href="/lkml/2001/11/26/116">Momchil Velikov</a><ul><li><a href="/lkml/2001/11/26/102">Benjamin LaHaise</a><ul><li><a href="/lkml/2001/11/26/118">Ingo Molnar</a></li><li><a href="/lkml/2001/11/26/162">Rik van Riel</a></li><li><a href="/lkml/2001/11/26/168">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2001/11/26/159">Ingo Molnar</a><ul><li><a href="/lkml/2001/11/26/154">Ingo Molnar</a></li><li><a href="/lkml/2001/11/26/166">"David S. Miller"</a></li></ul></li><li><a href="/lkml/2001/11/26/237">Daniel Phillips</a></li><li><a href="/lkml/2001/11/26/362">Ingo Molnar</a><ul><li><a href="/lkml/2001/11/26/142">Christoph Hellwig</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2001/11/26/126">(Linus Torvalds)</a><ul><li><a href="/lkml/2001/11/26/126">Ingo Molnar</a></li></ul></li><li><a href="/lkml/2001/11/26/124">"David S. Miller"</a><ul><li><a href="/lkml/2001/11/26/146">Rik van Riel</a></li><li><a href="/lkml/2001/11/27/39">Anton Blanchard</a></li></ul></li><li><a href="/lkml/2001/11/26/180">Daniel Phillips</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Scalable page cache</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 26 Nov 2001 17:29:51 +0000 (UTC)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;Pine.LNX.4.33.0111261753480.10763-100000&#64;localhost.localdomain&gt;,<br />Ingo Molnar  &lt;mingo&#64;elte.hu&gt; wrote:<br />&gt;<br />&gt;it gets rid of the pagecache lock without introducing a tree.<br />&gt;<br />&gt;while reducing memory footprint is a goal we want to achieve, the<br />&gt;pagecache hash is such a critical piece of data structure that we want<br />&gt;O(1)-type search properties, not a tree. The pagetable hash takes up 0.2%<br />&gt;of RAM currently. (but we could cut the size of the hash in half i think,<br />&gt;it's a bit over-sized currently - it has as many entries.)<br /><br />I actually considered a tree a long time ago, but I was thinking more<br />along the lines of the page table tree - with the optimization of being<br />able to perhaps map sub-trees _directly_ into the address space. <br /><br />it's a cool idea, especially if done right (ie try to share the<br />functions between the VM trees and the "page cache tree"), but I was too<br />lazy to try it out (it's a _lot_ of work to do right).  And I suspect<br />that it would optimize all the wrong cases, ie on x86 you could mmap<br />4MB-aligned areas at 4MB offsets with "zero cost", but in real life<br />that's not a very common situation.<br /><br />Tree's _do_ have advantages over hashes, though, in having both better<br />cache locality and better locking locality. <br /><br />I don't think a binary tree (even if it is self-balancing) is the proper<br />format, though.  Binary trees have bad cache characteristics, and as<br />Ingo points out, with large files (and many performance-critical things<br />like databases have _huge_ files) you get bad behaviour on lookup with a<br />binary tree. <br /><br />A indexed tree (like the page tables) has much better characteristics,<br />and can be looked up in O(1), and might be worth looking into. The<br />locality of a indexed tree means that it's MUCH easier to efficiently<br />fill in (or get rid of) large contiguous chunks of page cache than it is<br />with hashes. This can be especially useful for doing swapping, where you<br />don't have to look up adjacent pages - they're right there, adjacent to<br />your entry.<br /><br />Anybody interested?<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
