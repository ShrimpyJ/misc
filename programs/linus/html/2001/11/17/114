    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/11/17/14">First message in thread</a></li><li><a href="/lkml/2001/11/17/38">Linus Torvalds</a><ul><li><a href="/lkml/2001/11/17/26">"H. Peter Anvin"</a></li><li><a href="/lkml/2001/11/17/56">Momchil Velikov</a><ul><li><a href="/lkml/2001/11/17/68">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/11/17/98">Jan Hubicka</a><ul><li><a href="/lkml/2001/11/17/101">"H. Peter Anvin"</a></li><li class="origin"><a href="/lkml/2001/11/17/67">Linus Torvalds</a><ul><li><a href="/lkml/2001/11/17/67">Jan Hubicka</a><ul><li><a href="/lkml/2001/11/17/79">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2001/11/23/187">Roman Zippel</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 17 Nov 2001 12:42:35 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: i386 flags register clober in inline assembly</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Sat, 17 Nov 2001, Jan Hubicka wrote:<br />&gt;<br />&gt; Actually the main dificulty I see is storing cc0 to variable.  CC0 is hard<br />&gt; register and pretty strange one - you can't move it, you can't spill.<br /><br />Well, you _can_ spill it, but you need to use "pushfl/popfl" to<br />spill/restore.<br /><br />Also, if you're clever you don't spill cc0 itself, but the _comparison_,<br />ie if you need to spill in<br /><br />	asm(.. "=cc" (cc0))<br />	if (cc0 &gt; 0)<br /><br />a sufficiently clever spill-engine would spill not eflags,  but instead<br />spill "cc0 &gt; 0", which it can do with the "seq" expansions..<br /><br />gcc already does know about "store-flag" instructions, although I<br />certainly agree that the _patterns_ of usage may end up being very<br />different than existing conditional comparisons..<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
