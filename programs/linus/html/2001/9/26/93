    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/9/25/157">First message in thread</a></li><li><a href="/lkml/2001/9/25/246">"David S. Miller"</a><ul><li><a href="/lkml/2001/9/26/92">Alan Cox</a><ul><li class="origin"><a href="/lkml/2001/9/26/95">Linus Torvalds</a><ul><li><a href="/lkml/2001/9/26/95">Dave Jones</a></li><li><a href="/lkml/2001/9/26/104">Alan Cox</a><ul><li><a href="/lkml/2001/9/26/90">Linus Torvalds</a></li><li><a href="/lkml/2001/9/26/131">Benjamin LaHaise</a></li><li><a href="/lkml/2001/9/26/250">Dave Jones</a></li><li><a href="/lkml/2001/9/26/251">Vojtech Pavlik</a></li></ul></li><li><a href="/lkml/2001/9/26/118">Richard Gooch</a><ul><li><a href="/lkml/2001/9/26/133">Benjamin LaHaise</a></li></ul></li><li><a href="/lkml/2001/9/26/127">Alan Cox</a><ul><li><a href="/lkml/2001/9/26/109">Dave Jones</a></li><li><a href="/lkml/2001/9/26/142">George Greer</a></li></ul></li><li><a href="/lkml/2001/9/26/222">"David S. Miller"</a><ul><li><a href="/lkml/2001/9/27/40">Alan Cox</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 26 Sep 2001 10:25:18 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Locking comment on shrink_caches()</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Wed, 26 Sep 2001, Alan Cox wrote:<br />&gt; &gt;<br />&gt; &gt; Your Athlons may handle exclusive cache line acquisition more<br />&gt; &gt; efficiently (due to memory subsystem performance) but it still<br />&gt; &gt; does cost something.<br />&gt;<br />&gt; On an exclusive line on Athlon a lock cycle is near enough free, its<br />&gt; just an ordering constraint. Since the line is in E state no other bus<br />&gt; master can hold a copy in cache so the atomicity is there. Ditto for newer<br />&gt; Intel processors<br /><br />You misunderstood the problem, I think: when the line moves from one CPU<br />to the other (the exclusive state moves along with it), that is<br />_expensive_.<br /><br />Even when you have a backside bus (or cache pushout content snooping)  to<br />allow the cacheline to move directly from one CPU to the other without<br />having to go through memory, that's a really expensive thing to do.<br /><br />So re-aquring the lock on the same CPU is pretty much free (18 cycles for<br />Intel, if I remember correctly, and that's _entirely_ due to the pipeline<br />flush to ensure in-order execution around it).<br /><br />[ Oh, just for interest I checked my P4, which has a much longer pipeline:<br />  the cost of an exclusive locked access is a whopping 104 cycles. But we<br />  already knew that the first-generation P4 does badly on many things.<br /><br />  Just reading the cycle counter is apparently around 80 cycles on a P4,<br />  it's 32 cycles on a PIII. Looks like that also stalls the pipeline or<br />  something. But cpuid is _really_ horrible. Test out the attached<br />  program.<br /><br />	PIII:<br />		nothing: 32 cycles<br />		locked add: 50 cycles<br />		cpuid: 170 cycles<br /><br />	P4:<br />		nothing: 80 cycles<br />		locked add: 184 cycles<br />		cpuid: 652 cycles<br /><br />   Remember: these are for the already-exclusive-cache cases. ]<br /><br />What are the athlon numbers?<br /><br />		Linus<br />#define rdtsc(low) \<br />   __asm__ __volatile__("rdtsc" : "=a" (low) : : "edx")<br /><br />#define TIME(x,y) \<br />	min = 100000;						\<br />	for (i = 0; i &lt; 1000; i++) {				\<br />		unsigned long start,end;			\<br />		rdtsc(start);					\<br />		x;						\<br />		rdtsc(end);					\<br />		end -= start;					\<br />		if (end &lt; min)					\<br />			min = end;				\<br />	}							\<br />	printf(y ": %d cycles\n", min);<br /><br />#define LOCK	asm volatile("lock ; addl $0,0(%esp)")<br />#define CPUID	asm volatile("cpuid": : :"ax", "dx", "cx", "bx")<br /><br />int main()<br />{<br />	unsigned long min;<br />	int i;<br /><br />	TIME(/* */, "nothing");<br />	TIME(LOCK, "locked add");<br />	TIME(CPUID, "cpuid");<br />}<br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
