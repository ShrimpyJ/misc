    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/12/17/196">First message in thread</a></li><li><a href="/lkml/2001/12/18/153">Linus Torvalds</a><ul><li><a href="/lkml/2001/12/18/113">Andreas Dilger</a></li><li><a href="/lkml/2001/12/18/123">Doug Ledford</a></li><li><a href="/lkml/2001/12/18/136">Andreas Dilger</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/12/18/140">Doug Ledford</a><ul><li><a href="/lkml/2001/12/21/192">Rob Landley</a></li></ul></li><li><a href="/lkml/2001/12/18/147">Alan Cox</a></li><li><a href="/lkml/2001/12/18/181">Gerd Knorr</a></li><li><a href="/lkml/2001/12/19/16">Helge Hafting</a></li><li><a href="/lkml/2001/12/19/185">Peter =?iso-8859-1?Q?W=E4chtler?=</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 18 Dec 2001 10:35:39 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Scheduler ( was: Just a second ) ...</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Tue, 18 Dec 2001, Andreas Dilger wrote:<br />&gt;<br />&gt; Yes, esd is an interrupt hog, it seems.  When reading this thread, I<br />&gt; checked, and sure enough I was getting 190 interrupts/sec on the<br />&gt; sound card while not playing any sound.  I killed esd (which I don't<br />&gt; use anyways), and interrupts went to 0/sec when not playing sound.<br />&gt; Still at 190/sec when using mpg123 on my ymfpci (Yamaha YMF744B DS-1S)<br />&gt; sound card.<br /><br />190 interrupts / sec sounds excessive, but not wildly so. The interrupt<br />per se is not going to be a CPU hog unless the sound card does programmed<br />IO to fill the data queues, and while that is not unheard of, I don't<br />think such a card has been made in the last five years.<br /><br />Obviously getting 190 irq's per second even when not actually _doing_<br />anything is a total waste of CPU, and is bad form. There may be some<br />reason why esd does it, most probably for good synchronization between<br />sound events and to avoid popping when the sound is shut down (many sound<br />drivers seem to pop a bit on open/close, possibly due to driver bugs, but<br />possibly because some hard-to-avoid-programmatically hardware glitch when<br />powering down the logic.<br /><br />So waiting a while with the driver active may actually be a reasonable<br />thing to do, although I suspect that after long sequences of silence "esd"<br />should really shut down for a while (and "long" here is probably on the<br />order of seconds, not minutes).<br /><br />What probably _really_ ends up hurting performance is probably not the<br />interrupt per se (although it is noticeable), but the fact that we wake up<br />and cause a schedule - which often blows any CPU caches, making the _next_<br />interrupt also be more expensive than it would possibly need to be.<br /><br />The code for that (in the case of drivers that use the generic "dmabuf.c"<br />infrastructure) seems to be in "finish_output_interrupt()", and I suspect<br />that it could be improved with something like<br /><br />	dmap = adev-&gt;dmap_out;<br />	lim = dmap-&gt;nbufs;<br />	if (lim &lt; 2) lim = 2;<br />	if (dmap-&gt;qlen &lt;= lim/2) {<br />		...<br />	}<br /><br />around the current unconditional wakeups.<br /><br />Yeah, yeah, untested, stupid example, the idea being that we only wake up<br />if we have at least half the frags free now, instead of waking up for<br />_every_ fragment that free's up.<br /><br />The above is just as a suggestion for some testing, if somebody actually<br />feels like trying it out. It probably won't be good as-is, but as a<br />starting point..<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
