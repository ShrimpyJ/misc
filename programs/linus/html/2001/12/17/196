    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/12/17/196">First message in thread</a></li><li class="origin"><a href="/lkml/2001/12/17/191">Linus Torvalds</a><ul><li><a href="/lkml/2001/12/17/191">William Lee Irwin III</a><ul><li><a href="/lkml/2001/12/18/8">Linus Torvalds</a><ul><li><a href="/lkml/2001/12/18/1">Jeff Garzik</a></li><li><a href="/lkml/2001/12/18/42">Rik van Riel</a></li><li><a href="/lkml/2001/12/18/99">Alan Cox</a><ul><li><a href="/lkml/2001/12/18/141">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/12/18/102">Martin Josefsson</a><ul><li><a href="/lkml/2001/12/18/67">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/12/18/119">David Mansfield</a><ul><li><a href="/lkml/2001/12/18/153">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/12/18/261">Roger Larsson</a><ul><li><a href="/lkml/2001/12/18/69">"Herman Oosthuysen"</a></li><li><a href="/lkml/2001/12/18/116">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2001/12/18/154">William Lee Irwin III</a></li></ul></li><li><a href="/lkml/2001/12/18/73">Adam Schrotenboer</a></li><li><a href="/lkml/2001/12/18/168">Davide Libenzi</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Dec 2001 20:27:18 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Scheduler ( was: Just a second ) ...</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />[ cc'd back to Linux kernel, in case somebody wants to take a look whether<br />  there is something wrong in the sound drivers, for example ]<br /><br />On Mon, 17 Dec 2001, William Lee Irwin III wrote:<br />&gt;<br />&gt; This is no benchmark. This is my home machine it's taking a bite out of.<br />&gt; I'm trying to websurf and play mp3's and read email here. No forkbombs.<br />&gt; No databases. No made-up benchmarks. I don't know what it's doing (or<br />&gt; trying to do) in there but I'd like the CPU cycles back.<br />&gt;<br />&gt; From a recent /proc/profile dump on 2.4.17-pre1 (no patches), my top 5<br />&gt; (excluding default_idle) are:<br />&gt; --------------------------------------------------------<br />&gt;  22420 total                                      0.0168<br />&gt;   4624 default_idle                              96.3333<br />&gt;   1280 schedule                                   0.6202<br />&gt;   1130 handle_IRQ_event                          11.7708<br />&gt;    929 file_read_actor                            9.6771<br />&gt;    843 fast_clear_page                            7.5268<br /><br />The most likely cause is simply waking up after each sound interrupt: you<br />also have a _lot_ of time handling interrupts. Quite frankly, web surfing<br />and mp3 playing simply shouldn't use any noticeable amounts of CPU.<br /><br />The point being that I really doubt it's the scheduler proper, it's<br />probably how it is _used_. And I'd suspect your sound driver (or user)<br />conspires to keep scheduling stuff.<br /><br />For example (and this is _purely_ an example, I don't know if this is<br />your particular case), this sounds like a classic case of "bad buffering".<br />What bad buffering would do is:<br /> - you have a sound buffer that the mp3 player tries to keep full<br /> - your sound buffer is, let's pick a random number, 64 entries of 1024<br />   bytes each.<br /> - the sound card gives an interrupt every time it has emptied a buffer.<br /> - the mp3 player is waiting on "free space"<br /> - we wake up the mp3 player for _every_ sound fragment filled.<br /><br />Do you see what this leads to? We schedule the mp3 task (which gets a high<br />priority because it tends to run for a really short time, filling just 1<br />small buffer each time) _every_ time a single buffer empties. Even though<br />we have 63 other full buffers.<br /><br />The classic fix for these kinds of things is _not_ to make the scheduler<br />faster. Sure, that would help, but that's not really the problem. The<br />_real_ fix is to use water-marks, and make the sound driver wake up the<br />writing process only when (say) half the buffers have emptied.<br /><br />Now the mp3 player can fill 32 of the buffers at a time, and gets<br />scheduled an order of magnitude less. It doesn't end up waking up every<br />time.<br /><br />Which sound driver are you using, just in case this _is_ the reason?<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
