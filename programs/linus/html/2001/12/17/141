    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/12/15/32">First message in thread</a></li><li><a href="/lkml/2001/12/15/32">Linus Torvalds</a><ul><li><a href="/lkml/2001/12/17/175">Davide Libenzi</a><ul><li class="origin"><a href="/lkml/2001/12/17/190">Linus Torvalds</a><ul><li><a href="/lkml/2001/12/17/190">Rik van Riel</a><ul><li><a href="/lkml/2001/12/17/155">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/12/17/194">Davide Libenzi</a><ul><li><a href="/lkml/2001/12/17/248">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Dec 2001 14:53:40 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Scheduler ( was: Just a second ) ...</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Mon, 17 Dec 2001, Davide Libenzi wrote:<br /><br />&gt; On Sat, 15 Dec 2001, Linus Torvalds wrote:<br />&gt;<br />&gt; &gt; I just don't find it very interesting. The scheduler is about 100 lines<br />&gt; &gt; out of however-many-million (3.8 at least count), and doesn't even impact<br />&gt; &gt; most normal performace very much.<br />&gt;<br />&gt; Linus, sharing queue and lock between CPUs for a "thing" highly frequency<br />&gt; ( schedule()s + wakeup()s ) accessed like the scheduler it's quite ugly<br />&gt; and it's not that much funny. And it's not only performance wise, it's<br />&gt; more design wise.<br /><br />"Design wise" is highly overrated.<br /><br />Simplicity is _much_ more important, if something commonly is only done a<br />few hundred times a second. Locking overhead is basically zero for that<br />case.<br /><br />&gt; &gt; We'll clearly do per-CPU runqueues or something some day. And that worries<br />&gt; &gt; me not one whit, compared to thigns like VM and block device layer ;)<br />&gt;<br />&gt; Why not 2.5.x ?<br /><br />Maybe. But read the rest of the sentence. There are issues that are about<br />a million times more important.<br /><br />&gt; Moving to 4, 8, 16 CPUs the run queue load, that would be thought insane<br />&gt; for UP systems, starts to matter.<br /><br />4 cpu's are "high end" today. We can probably point to tens of thousands<br />of UP machines for each 4-way out there. The ratio gets even worse for 8,<br />and 16 CPU's is basically a rounding error.<br /><br />You have to prioritize. Scheduling overhead is way down the list.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
