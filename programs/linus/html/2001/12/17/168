    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/12/15/15">First message in thread</a></li><li><a href="/lkml/2001/12/17/177">(Linus Torvalds)</a><ul><li><a href="/lkml/2001/12/17/137">Joel Becker</a><ul><li class="origin"><a href="/lkml/2001/12/17/123">Linus Torvalds</a><ul><li><a href="/lkml/2001/12/17/123">Joel Becker</a><ul><li><a href="/lkml/2001/12/17/167">Andre Hedrick</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2001/12/26/48">Riley Williams</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 17 Dec 2001 11:59:56 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: O_DIRECT wierd behavior..</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Mon, 17 Dec 2001, Joel Becker wrote:<br />&gt; 	IIRC, SUS states that if a fatal error occurred causing the<br />&gt; partial write, that error will be returned on the next write or upon<br />&gt; close().  Thus:<br />&gt;<br />&gt; 	/* Smart program handles partial writes */<br />&gt; 	write(100k); = 50k<br />&gt; 	write(remaining 50k); = -1/ENOSPC|EIO|etc<br /><br />We do this, if the error is "hard". And "fatal" implies hardness, so we're<br />ok here.<br /><br />&gt; 	/* Dumb program doesn't handle partial write */<br />&gt; 	write(100k); = 50k<br />&gt; 	close(fd); = -1/EIO<br /><br />But we're not doing this.<br /><br />We'd have to save the error into the "struct file" to do the close thing.<br /><br />Which is what NFS actually already does for other reasons (ie the<br />asynchronous nature of writes and thus IO errors), so generalizing it<br />might actually clean some stuff up (sockets have some of the same issues,<br />but socket semantics may be different enough that we do not want to have<br />common "error on next access" handling).<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
