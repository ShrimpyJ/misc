    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/12/6/295">First message in thread</a></li><li><a href="/lkml/2001/12/7/319">Linus Torvalds</a><ul><li><a href="/lkml/2001/12/7/20">"Eric S. Raymond"</a></li><li><a href="/lkml/2001/12/7/26">Keith Owens</a></li><li><a href="/lkml/2001/12/27/116">Andre Hedrick</a><ul><li class="origin"><a href="/lkml/2001/12/27/122">Linus Torvalds</a><ul><li><a href="/lkml/2001/12/27/122">Andrew Morton</a></li><li><a href="/lkml/2001/12/28/185">Martin Dalecki</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 27 Dec 2001 10:55:59 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: your mail</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Thu, 27 Dec 2001, Andre Hedrick wrote:<br />&gt;<br />&gt; Lots of luck ... please pass your crack pipe arounds so the rest of us<br />&gt; idiots can see your vision or lack of ...<br /><br />Heh. I think I must have passed it on to you long ago, and you never gave<br />it back, you sneaky bastard ;)<br /><br />The vision, btw, is to get the request layer in good enough shape that we<br />can dispense with the mid-layer approaches of SCSI/IDE, and block devices<br />turn into _just_ device drivers.<br /><br />For example, ide-scsi is heading for that big scrap-yard in the sky: it's<br />not the SCSI layer that handles special ioctl requests any more, because<br />the upper layers are going to be flexible enough that you can just pass<br />the requests down the regular pipe.<br /><br />(Right now you can see this in block_ioctl.c - while only a few of the<br />ioctl's have been converted, you get the idea. I'm actually surprised that<br />nobody seems to have commented on that part).<br /><br />The final end result of this (I sincerely hope) is that we can get rid of<br />some of the couplings that we've had in the block layer. ide-scsi is just<br />the most obvious strange coupling - things like "sg.c" in general are<br />rather horrible. There's very little _SCSI_ in sg.c - it's really about<br />sending commands down to the block devices.<br /><br />The reason I want to get rid of the couplings is that they end up being<br />big anchors holding down development: you can create a clean driver that<br />isn't dependent on the SCSI layer overheads (and people do, for things<br />like DAC etc), but when you do that you lose _all_ of the support<br />infrastructure, not just the bloat. Which is sad.<br /><br />(And which is why things like ide-scsi exist - IDE didn't really want to<br />be a SCSI driver, but people _did_ want to be able to use some of the<br />generic support routines that the SCSI layer offers. You couldn't just<br />cherry-pick the parts you wanted).<br /><br />The other part of the bio rewrite has been to get rid of another coupling:<br />the coupling between "struct buffer_head" (which is used for a limited<br />kind of memory management by a number of filesystems) and the act of<br />actually just doing IO.<br /><br />I used to think that we could just relegate "struct buffer_head" to _be_<br />the IO entity, but it turns out to be much easier to just split off the IO<br />part, which is why you now have a separate "bio" structure for the block<br />IO part, and the buffer_head stuff uses that to get the work done.<br /><br />Andre, I know that you're worried about the low-level drivers, but:<br /><br /> - I've long since noticed that we cannot communicate, which is why Jens<br />   is the block level driver person. You'll have to live with it.<br /><br /> - I personally don't think you _can_ make a good driver without having<br />   reasonable interfaces, and we didn't have them.<br /><br />   For example, the network drivers have improved a lot and do not have<br />   _nearly_ the amount of problems block drivers have. That's obviously<br />   partly just because it is a simpler problem, but because it was simpler<br />   it was also possible to change them. The infrastructure changes in the<br />   networking during 2.3.x really did help drivers.<br /><br />And note that the "Jens" and "communication" part is important. If you<br />have patches, please talk to Jens, tell him what the issues, are, and I<br />know I can communicate with him.<br /><br />			Linus<br /><br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
