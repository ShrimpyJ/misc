    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/12/6/9">First message in thread</a></li><li><a href="/lkml/2001/12/27/60">Alan Cox</a><ul><li><a href="/lkml/2001/12/27/253">Jens Axboe</a><ul><li><a href="/lkml/2001/12/27/89">Alan Cox</a></li><li class="origin"><a href="/lkml/2001/12/27/123">(Linus Torvalds)</a><ul><li><a href="/lkml/2001/12/27/123">Andre Hedrick</a></li></ul></li><li><a href="/lkml/2001/12/27/243">Legacy Fishtank</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">From</td><td class="rp" itemprop="author">(Linus Torvalds)</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: hdc: dma_intr: status=0x51 { DriveReady SeekComplete Error }</td></tr><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 27 Dec 2001 17:46:43 +0000 (UTC)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">In article &lt;20011227175105.E1730&#64;suse.de&gt;, Jens Axboe  &lt;axboe&#64;suse.de&gt; wrote:<br />&gt;On Thu, Dec 27 2001, Alan Cox wrote:<br />&gt;&gt; &gt; retries belong at the low level, once you pass up info of failure to the<br />&gt;&gt; &gt; upper layers it's fatal. time for FS to shut down.<br />&gt;&gt; <br />&gt;&gt; Thats definitely not the case. Just because your file system is too dumb to<br />&gt;&gt; use the information please don't assume everyone elses isnt - in fact one<br />&gt;&gt; of the side properties of Daniel Phillips stuff is that it should be able<br />&gt;&gt; to sanely handle a bad block problem.<br />&gt;<br />&gt;That's ok too, the fs can do whatever it wants in case of I/O failure.<br />&gt;It's not up to the fs to reissue failed requests, _that's_ stupid.<br /><br />Actually, I really think we should move the failure recovery up to the<br />filesystem: we can fairly easily do it already today, as basically very<br />few of the filesystems actually do the requests directly, but instead<br />rely on helper functions like "bread()" and "generic_file_read()". <br /><br />Moving error handling up has a lot of advantages:<br /><br /> - it simplifies the (often fragile) lower layers, and moves common<br />   problems to common code instead of putting it at a low level and<br />   duplicating it across different drivers.<br /><br /> - it allows "context-sensitive" handling of errors, ie if there is a<br />   read error on a read-ahead request the upper layers can comfortably<br />   just say "f*ck it, I don't need it yet", which can _seriously_ help<br />   interactive feel on bad mediums (right now we often try to re-read<br />   a failing sector tens of times, because we re-read it during<br />   read-ahead several times, and the lower layers re-read it _too_).<br /><br />In fact, it would even be mostly _simple_ to do it at a higher level, at<br />least for reads.<br /><br />Writes are somewhat harder, mainly because the upper layers have never<br />had to handle re-issuing of requests, and don't really have the state<br />information.<br /><br />For reads, sufficient state information is already there ("uptodate" bit<br />- just add a counter for retries), but for writes we only have the dirty<br />bit that gets cleared when the request gets sent off.  So for writes<br />we'd need to add a new bit ("write in progress", and then clear it on<br />successful completion, and set the "dirty" bit again on error). <br /><br />So I'd actually _like_ for all IO requests to be clearly "try just<br />once", and it being up to th eupper layers to retry on error. <br /><br />(The notion of timeouts are much harder - the upper layers can retry on<br />errors, but I really don't think that the upper layers want to handle<br />timeouts and the associated "cancel this request" issues.  So low layers<br />would still have to do _that_ part of error recovery, but at least they<br />wouldn't have to worry about keeping the request around until it is<br />successful). <br /><br />Does anybody see any really fundamental problems with moving retrying to<br />_above_ ll_rw_block.c instead of below it?<br /><br />(And once it is above, you can much more easily support filesystems that<br />can automatically remap blocks on IO failure etc, and even have<br />interruptible block filesystem mounts for those pesky bad media problems<br />- allowing user level to tell the kernel to not screw around too much<br />with errors and just return them early to user space). <br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
