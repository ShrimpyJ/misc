    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/10/19/163">First message in thread</a></li><li><a href="/lkml/2001/10/24/4">Alan Cox</a><ul><li><a href="/lkml/2001/10/24/60">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2001/10/24/79">Alan Cox</a><ul><li><a href="/lkml/2001/10/24/124">Linus Torvalds</a><ul><li><a href="/lkml/2001/10/24/105">"Michael H. Warfield"</a></li><li><a href="/lkml/2001/10/24/194">Alan Cox</a></li></ul></li></ul></li><li><a href="/lkml/2001/10/24/107">Mike Anderson</a></li><li class="origin"><a href="/lkml/2001/10/24/129">Linus Torvalds</a><ul><li><a href="/lkml/2001/10/24/129">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2001/10/24/177">Alan Cox</a></li><li><a href="/lkml/2001/10/25/198">Pavel Machek</a></li></ul></li><li><a href="/lkml/2001/10/24/139">Xavier Bestel</a><ul><li><a href="/lkml/2001/10/24/91">Linus Torvalds</a></li><li><a href="/lkml/2001/10/24/121">Patrick Mochel</a></li></ul></li><li><a href="/lkml/2001/10/24/211">Alan Cox</a><ul><li><a href="/lkml/2001/10/25/4">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2001/10/25/20">"Rob Turk"</a><ul><li><a href="/lkml/2001/10/25/22">Benjamin Herrenschmidt</a></li><li><a href="/lkml/2001/10/25/51">Helge Hafting</a></li><li><a href="/lkml/2001/10/25/75">Victor Yodaiken</a></li><li><a href="/lkml/2001/10/25/135">Pavel Machek</a></li></ul></li></ul></li><li><a href="/lkml/2001/10/25/30">(Eric W. Biederman)</a><ul><li><a href="/lkml/2001/10/25/10">Linus Torvalds</a><ul><li><a href="/lkml/2001/10/25/38">Benjamin Herrenschmidt</a></li><li><a href="/lkml/2001/10/25/224">(Eric W. Biederman)</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 24 Oct 2001 09:15:44 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC] New Driver Model for 2.5</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Wed, 24 Oct 2001, Benjamin Herrenschmidt wrote:<br />&gt; &gt;<br />&gt; &gt;So the scsi devices hang off sd, sr etc which in turn hang off scsi and<br />&gt; &gt;the controllers hang off scsi (and or the bus layers)<br />&gt; &gt;<br />&gt; &gt;This one at least I think I do understand<br />&gt;<br />&gt; The problem with subsystems is that they don't fit well in the<br />&gt; power tree. They aren't "devices" in that sense that they are<br />&gt; not exposing a struct device, and they spawn over several controllers<br />&gt; which means the dependency can quickly become unmanageable, especially<br />&gt; when SCSI starts beeing layered on top of USB or FireWire.<br /><br />Why would you _ever_ get "sg.c" and other crap involved in the suspend<br />process?<br /><br />The device tree is for _device_ suspend, not for "subsystem suspend". The<br />SCSI subsystem is a piece of cr*p, but even if it was perfect it should<br />never get involved with the act of suspension.<br /><br />We should not have pending IO, but that's for a totally different reason:<br />the first thing the much much MUCH higher levels of suspend should be<br />doing is to make sure that user apps are "quiescent". And that isn't done<br />by getting involved with sg.c or anything similar, but by basically<br />stopping all user apps (think of the equivalent of a "kill -STOP -1", but<br />done internally in the kernel without actually using a signal).<br /><br />&gt; Also, the dependency issue is made worst if you let RAID enter into<br />&gt; the dance as I beleive ultimately, nothing would prevent a volume to<br />&gt; spawn over several devices from different controllers or even different<br />&gt; controller types.<br /><br />Why would you get RAID involved? There is no _IO_ involved in suspending:<br />we just stop doing what we're doing, and leave it at that. We don't try to<br />flush state, we just freeze the machine.<br /><br />The act of "suspend" should basically be: shut off the SCSI controller,<br />screw all devices, reset the bus on resume.<br /><br />The act of suspend on USB should be to turn off the host controller and<br />remove power from devices. End of story. Nothing fancy.<br /><br />If somebody removes a disk or equivalent while we're suspended, that's<br />_his_ problem, and is exactly the same as removing a disk while the disk<br />is running. Either the subsystem (like USB) already handles it, or it<br />doesn't. Suspend is _not_ an excuse to do anything that isn't done at<br />run-time.<br /><br />So suspend is _not_ supposed to be equivalent of a full clean shutdown<br />with just users not seeing it.  That's way too expensive to be practical.<br />Remember: the main point of suspend is to have a laptop go to sleep, and<br />come back up on the order of a few _seconds_.<br /><br />And if there are desktops which would like to suspend but cannot because<br />they aren't strictly designed for it, then tough - we should not try to<br />design a heavy suspend for hardware that doesn't live with it well.<br /><br />Also, realize that the act of suspension is STARTED BY THE USER. Which<br />means that before the kernel suspends, you _can_ have user programs that<br />basically take disk arrays off-line etc if that is what you want. But<br />that's not ae kernel suspend issue.<br /><br />			Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
