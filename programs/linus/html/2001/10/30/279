    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/10/30/241">First message in thread</a></li><li><a href="/lkml/2001/10/30/318">"Udo A. Steinberg"</a><ul><li><a href="/lkml/2001/10/30/253">Linus Torvalds</a></li><li><a href="/lkml/2001/10/30/255">Andrea Arcangeli</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 30 Oct 2001 18:49:23 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: oops on 2.4.13-pre5 in prune_dcache</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Wed, 31 Oct 2001, Andrea Arcangeli wrote:<br />&gt;<br />&gt; Dunno why, but usually all bitflips triggers during heavy list walking,<br />&gt; so it's not too much surprisingly. I recall the most frequent bitflips<br />&gt; were happening walking the buffer header lists in 2.2, but I recall<br />&gt; dcache walks also oopsing due bitflips in 2.2.<br /><br />I suspect it's just that the list walking is (a) the operation that<br />touches the most uncached memory and (b) also is inherently the one that,<br />through pointer following, ends up showing the effects of flipped bits the<br />most as oopses.<br /><br />For example, most of the actual _memory_ is obviously in the data caches<br />or user space pages, but if those are corrupt you'd never see an oops.<br />You'd see filesystem corruption (and see the reports of changing md5sums<br />about how this does happen), or you'd see strange SIGSEGV's in user space.<br /><br />In contrast, a kernel oops is almost always accompanied by pointer<br />dereferencing, and the thing that dereferences the most pointers is<br />obviously pointer chasing - ie list walking.<br /><br />So I don't think that this has anything to do with "certain lists are more<br />likely to get into trouble", but more of a "certain lists have long chains<br />of pointers, and as such they are more likely to show up in oopses".<br /><br />Self-selection, in short - the bane of all statistics gathering.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
