    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/10/30/39">First message in thread</a></li><li><a href="/lkml/2001/10/30/307">Andrea Arcangeli</a><ul><li><a href="/lkml/2001/10/30/106">Linus Torvalds</a><ul><li><a href="/lkml/2001/10/30/189">(Eric W. Biederman)</a></li></ul></li><li><a href="/lkml/2001/10/30/111">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/2001/10/30/179">Linus Torvalds</a><ul><li><a href="/lkml/2001/10/30/179">Andrea Arcangeli</a><ul><li><a href="/lkml/2001/10/30/160">Linus Torvalds</a></li><li><a href="/lkml/2001/10/30/192">Andrea Arcangeli</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 30 Oct 2001 09:53:28 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: need help interpreting 'free' output.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Tue, 30 Oct 2001, Andrea Arcangeli wrote:<br />&gt;<br />&gt; On Tue, Oct 30, 2001 at 09:28:29AM -0800, Linus Torvalds wrote:<br />&gt; &gt; Does anybody see why we have to remove it from the swap cache at all?<br />&gt;<br />&gt; the only reason is to avoid wasting the swap space, so at least Rik's<br />&gt; vm_swap_full logic should be added to it.<br /><br />I agree, but that's true both for reads and writes, and then we want to<br />delete it. So the logic might be something like<br /><br />	remove = 0;<br />	if ((vm_swap_full() &amp;&amp; (remove = exclusive_swap_cache_delete())) ||<br />	    only_swap_user()) {<br />		pte = mk_pte(page, vma-&gt;vm_page_prot);<br />		if (remove || write_access)<br />			pte = pte_mkdirty(pte);<br />		if (vma-&gt;vm_page_prot &amp; VM_WRITE)<br />			pte = pte_mkwrite(pte);<br />		install_pte();<br />		return;<br />	}<br /><br />ie we _remove_ it if we're low on swap entries and it is exclusive (that<br />doesn't really save memory, but it allows us to re-use the swap entries<br />for "better" pages), and we just re-use it without removing it if we're<br />the only users (it doesn't even have to be a write access - we can do it<br />even for reads, as if we're the only user we might as well just give the<br />page to the process anyway - and let fork() do the thing it does in any<br />case.<br /><br />Then we'll just trust the dirty bit when shared, like we always have done<br />before anyway (we need to set it on removal, and we want to set it early<br />on a write access to avoid unnecessary faults on architectures which do<br />the dirty bit in software - that's why we have the "remove ||<br />write_access"  test there.<br /><br />&gt; The only advantage of dirty swap cache persistence is that it will<br />&gt; maintain the same position on disk across a swapin/swapout cycle.<br /><br />Well, the _big_ advantage is not the persistence, but the fact that the<br />page might be in-flight when the user wants to use it, and the swap cache<br />is just busy. Right now we _wait_ for the write to complete, which is<br />silly. We might as well just let the user start using the page (including<br />writing more stuff to it), and later on write it again.<br /><br />So right now the "remove from swap cache" is actually a IO-serializing<br />operation, and we're doing it for no really good reason.<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
