    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/10/30/39">First message in thread</a></li><li><a href="/lkml/2001/10/30/117">Hugh Dickins</a><ul><li><a href="/lkml/2001/10/30/103">Linus Torvalds</a></li><li><a href="/lkml/2001/10/30/154">Andrea Arcangeli</a></li><li><a href="/lkml/2001/10/30/171">"David S. Miller"</a></li><li><a href="/lkml/2001/10/30/176">Frank Dekervel</a></li><li><a href="/lkml/2001/10/30/307">Andrea Arcangeli</a><ul><li class="origin"><a href="/lkml/2001/10/30/189">Linus Torvalds</a><ul><li><a href="/lkml/2001/10/30/189">(Eric W. Biederman)</a></li></ul></li><li><a href="/lkml/2001/10/30/111">Andrea Arcangeli</a><ul><li><a href="/lkml/2001/10/30/292">Linus Torvalds</a><ul><li><a href="/lkml/2001/10/30/179">Andrea Arcangeli</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 30 Oct 2001 09:28:29 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: need help interpreting 'free' output.</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Tue, 30 Oct 2001, Andrea Arcangeli wrote:<br />&gt;<br />&gt; It is still interesting to hear if it makes a big performance differece<br />&gt; under swap though. In particular it would be very nice to keep inodes<br />&gt; with pagecache in it out of the unused-inode-list, but it would need<br />&gt; additional bitkeeping in inode.c.<br /><br />Yes. I'm worried about the fact that icache shrinking was one of the top<br />CPU users under heavy swapout, so I'd like to do _something_. The LRU<br />approach is probably the cleanest and least random approach.<br /><br />&gt; I'm also wondering why you dropped the early-cow for the write swapins,<br />&gt; just to avoid managing the anon pages in the lru in do_swap_page and to<br />&gt; have the logic only in once place? I kept the early-cow logic so I only<br />&gt; get 1 page fault for every write-swapped-in pages.<br /><br />I only dropped it because the locking rules for how exclusive swap pages<br />work were too unclear, and I wanted to have the "remove on write" in just<br />one place.<br /><br />Then I cleaned up the logic and made the thing use the pagecache lock<br />properly and turned it into "remove_exclusive_swap_page()", and now I'm<br />not worried about it any more, so I'm considering moving it back again.<br /><br />HOWEVER, _then_ I started wondering about whether the thing needs to be<br />removed from the swap cache at all, and came to the conclusion that for<br />the only case we really care about (and the only case where we _can_<br />re-use the swap cache page), we don't actually need to remove it from the<br />cache in the first place.<br /><br />I think we should just share the page, and make the WP (and early-COW in<br />do_swap_page()) logic just be<br /><br />	/* Are we now the only user? */<br />	if (swap_count(page) == 1 &amp;&amp; page_count(page) == 2) {<br />		pte = pte_mkwrite(pte_mkdirty(mk_pte(page,  vma-&gt;vm_page_prot))<br />		install_pte();<br />		return;<br />	}<br /><br />There's no real reason to remove the page from the swap cache - that only<br />means that we have to wait for the page to unlock (because you need to<br />lock the page in order to remove the buffers that you need to remove<br />_before_ you free the swap entry) and other crap that has no real point to<br />it.<br /><br />When we fork() and possibly share the page non-exclusively, we will<br />_already_ mark the page read-only and do the COW - so after that point we<br />will correctly just copy the page on demand.<br /><br />Much simpler, I think.<br /><br />Does anybody see why we have to remove it from the swap cache at all?<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
