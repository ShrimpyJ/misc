    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/10/29/76">First message in thread</a></li><li><a href="/lkml/2001/10/29/76">Juergen Doelle</a><ul><li><a href="/lkml/2001/10/29/61">Alan Cox</a><ul><li><a href="/lkml/2001/10/29/65">Linus Torvalds</a><ul><li><a href="/lkml/2001/11/3/31">Richard Henderson</a><ul><li><a href="/lkml/2001/11/3/55">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2001/10/30/302">Anton Blanchard</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 29 Oct 2001 09:13:22 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Pls apply this spinlock patch to the kernel</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Mon, 29 Oct 2001, Juergen Doelle wrote:<br />&gt;<br />&gt; I had created a patch for improving the spinlock behavior on IA32 SMP<br />&gt; systems for file system work load created with dbench<br />&gt; (<a href="ftp://samba.org/pub/tridge/dbench">ftp://samba.org/pub/tridge/dbench</a>). The work load is a mix of create,<br />&gt; delete, write, and read operations executed from a scalable number of<br />&gt; clients. It is mainly handled in buffer cache.<br /><br />Fair enough. However, I wonder why you didn't just use the existing<br />(unaligned) types, and then on a lock-by-lock basis just mark them<br />aligned. That implies no code-changes.<br /><br />Something like this should do it:<br /><br />	.. regular "spinlock_t" type<br /><br />	#define cachealign \<br />	 __attribute__((section("aligned"),__aligned__(SMP_CACHELINE_SIZE)))<br /><br />(use a separate section so that subsequent data structures are also<br />guaranteed to be aligned - otherwise you might get false sharing from<br />non-aligned data structures that follow this one).<br /><br />Eh?<br /><br />Yes, we already try to do something like this, but due to the false<br />sharing with other stuff it doesn't _guarantee_ an exclusive cacheline.<br />Sometimes that is what you want (ie once you get the lock, it _can_ be<br />advantageous to have the hottest data structure associated with the lock<br />be in the same cacheline)<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
