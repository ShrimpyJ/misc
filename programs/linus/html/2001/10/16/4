    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2001/10/15/190">First message in thread</a></li><li><a href="/lkml/2001/10/16/18">Alexander Viro</a><ul><li><a href="/lkml/2001/10/16/194">Linus Torvalds</a><ul><li><a href="/lkml/2001/10/16/1">Alexander Viro</a></li><li class="origin"><a href="/lkml/2001/10/16/167">Linus Torvalds</a><ul><li><a href="/lkml/2001/10/16/167">Alexander Viro</a></li><li><a href="/lkml/2001/10/16/193">Keith Owens</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 15 Oct 2001 21:41:49 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [CFT][PATCH] large /proc/mounts and friends</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />On Mon, 15 Oct 2001, Linus Torvalds wrote:<br />&gt;<br />&gt; So you'd have the start be something like<br />&gt;<br />&gt; 	p = m-&gt;op-&gt;start(m);<br />&gt; 	if (m-&gt;did_lseek) {<br />&gt; 		m-&gt;did_lseek = 0;<br />&gt; 		p = m-&gt;op-&gt;seek(m, pos);<br />&gt; 	}<br />&gt; 	p = m-&gt;op-&gt;next(m, p);<br /><br />Actually, the "seek" is obviously unconditional. Duh.<br /><br />And we really want to pass in the "file" to the next/seek functions,<br />because I still think that we don't want this to be just a plain linear<br />sequence interface - your "/proc/module" thing already shows how it could<br />be advantageous to have the high pos bits be the module itself.<br /><br />Example:<br /><br />	/* module seek */<br />	s_seek()<br />	{<br />		struct mod_sym *v = p;<br />		int mod_nr = pos &gt;&gt; 32;<br />		while (mod_nr &amp;&amp; v-&gt;mod) {<br />			mod_nr--;<br />			v-&gt;mod = v-&gt;mod-&gt;next;<br />		};<br />	}<br /><br />where the high 32 bits of the pos are the module count. Something that the<br />"increment by one" approach simply cannot handle efficiently because it<br />ends up having to walk every module name, and can't just skip over them.<br /><br />Again, the other example of this are various hashed data-structures loke<br />sockets that simply do not _have_ cardinal numbers, and where it is not<br />really reasonable to walk the chain of (potentially tens of thousands of)<br />entries one-by-one, when you can do a seek directly to the right hash<br />bucket, and then just walk a few entries in the hash chain..<br /><br />		Linus<br /><br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
