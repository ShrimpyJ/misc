    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/10/19/351">First message in thread</a></li><li><a href="/lkml/2006/10/19/351">Pierre Ossman</a><ul><li><a href="/lkml/2006/10/19/378">Andrew Morton</a><ul><li><a href="/lkml/2006/10/20/32">Pierre Ossman</a><ul><li><a href="/lkml/2006/10/20/35">Kyle Moffett</a></li><li><a href="/lkml/2006/10/20/37">Andrew Morton</a><ul><li><a href="/lkml/2006/10/25/204">Pierre Ossman</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="/lkml/2006/10/19/426">Linus Torvalds</a><ul><li><a href="/lkml/2006/10/19/426">Mark Fasheh</a><ul><li><a href="/lkml/2006/10/20/38">Pierre Ossman</a><ul><li><a href="/lkml/2006/10/20/300">Mark Fasheh</a></li></ul></li></ul></li><li><a href="/lkml/2006/10/20/5">Kyle Moffett</a></li><li><a href="/lkml/2006/10/20/34">Pierre Ossman</a><ul><li><a href="/lkml/2006/10/20/53">Kyle Moffett</a></li><li><a href="/lkml/2006/10/20/162">Linus Torvalds</a><ul><li><a href="/lkml/2006/10/20/167">Linus Torvalds</a></li><li><a href="/lkml/2006/10/21/50">Pierre Ossman</a></li></ul></li></ul></li><li><a href="/lkml/2006/10/21/103">Roland Dreier</a><ul><li><a href="/lkml/2006/10/21/148">Pierre Ossman</a><ul><li><a href="/lkml/2006/10/21/181">Roland Dreier</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 19 Oct 2006 16:44:41 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Git training wheels for the pimple faced maintainer</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 19 Oct 2006, Pierre Ossman wrote:<br />&gt; <br />&gt; Stuff that need a bit more testing will be put in a public "for-andrew"<br />&gt; branch. From what I gather, Andrew does a pull and a diff of these kinds<br />&gt; of branches before putting together a -mm set. So this should be<br />&gt; sufficient for your needs? Do you also prefer getting "[GIT PULL]"<br />&gt; requests, or do you do the pull periodically anyway?<br />&gt; <br />&gt; Patches that are considered stable, either directly or by virtue of<br />&gt; being in -mm for a while, will be moved into a "for-linus" tree and a<br />&gt; "[GIT PULL]" sent to herr Torvalds.<br /><br />That all sounds fine. Please just check the format for the "[GIT PULL]" <br />message: Andrew pulls peoples trees on his own and largely automatically, <br />so he doesn't much care _what_ is in the tree, but I care deeply. So I <br />want the diffstat and shortlog listings, and preferably a few sentences at <br />the top of the email describing what's going on and why things are <br />happening.<br /><br />I think people have seen the messages that other people send out (eg at <br />least Greg KH tends to Cc: those messages to linux-kernel, so others can <br />see what's going on too - although not all other maintainers do that).<br /><br />Basically, I want to know that the thing I pull makes sense for the stage <br />I'm pulling in (ie if it's after -rc1, think about trying to explain why <br />the fixes are all important bug-fixes for example), and what it affects. <br />The diffstat is part of that, but please include any other explanations <br />that seem meaningful.<br /><br />&gt; Now, the patch in "for-linus" will be a duplicate of one or several<br />&gt; commits in "for-andrew". Will I get any problems from git once I do a<br />&gt; new pull from Linus' tree into "for-andrew"?<br /><br />No, git will take care of it, unless, of course, your extra patches <br />conflict with the ones you sent me. <br /><br />&gt; Another concern is all the merges. As I have modifications in my tree,<br />&gt; every merge should generate at least one commit and one tree object. Is<br />&gt; this kind of noise in the git history something that needs concern?<br /><br />Yes and no.<br /><br />An occasional merge by you is fine, and if the merge is about _you_ <br />merging your own branches into one branch for me or Andrew to pull, then <br />the merge actually adds valid information.<br /><br />HOWEVER. Please don't just pull from my tree just to keep your <br />development tree "up-to-date". Your development tree is YOUR development <br />tree, it should be about the stuff _you_ did - not about merging stuff <br />that I merged from others. See?<br /><br />So there's simply no point in merging from me, unless you know that there <br />are clashes due to other development, and you actually want to fix them <br />up. You will just cause unnecessary criss-cross merges if you pull from my <br />tree after you've started development, and the history gets really really <br />messy.<br /><br />There's several ways to handle this:<br /><br /> - just base your work on a certain release, and ignore all the other <br />   changes. Then, when you're ready, just ask me to pull your changes. git <br />   will just merge it up to my current version, and everything will be <br />   fine. <br /><br />   (Of course, once I _have_ merged your changes, if you pull at that <br />   point, you'll just fast-forward, and there will be no unnecessary <br />   back-and-forth merging)<br /><br /> - If you actually want your development tree to "track" my tree, I'd <br />   suggest you have your "for-linus" branch that you put the work you want <br />   to track into, and then a plain "linus" branch which tracks _my_ tree. <br />   Then you can just fetch my tree (to keep your "linus" branch <br />   up-to-date), and if you want your development branch to track those <br />   changes, you can just do a "git rebase linus" in your "for-linus" <br />   branch.<br /><br /> - If you actually notice that the stuff in my tree conflicts with the <br />   stuff you develop, _then_ you obviously want to merge (you can try to <br />   "rebase" things too and fix it up durign the rebase, but merging is <br />   often easier, and at this point the merge is no longer "unnecessary <br />   noise", it's actually a real action of you doing a real merge to handle <br />   the conflict.<br /><br />And hey, if there is occasionally an unnecessary merge, nobody really <br />cares. So don't be _too_ worried about it. But a clean history makes <br />things simpler to track, so I'm asking people to not generate noise that <br />simply doesn't help.<br /><br />Other git maintainers may have other hints about how they work. Anybody?<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
