    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/10/28/30">First message in thread</a></li><li><a href="/lkml/2006/10/28/30">"Adam J. Richter"</a><ul><li><a href="/lkml/2006/10/28/35">Russell King</a><ul><li><a href="/lkml/2006/10/28/59">Russell King</a></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 28 Oct 2006 12:41:50 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] drivers: wait for threaded probes between initcall levels</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 28 Oct 2006, Adam J. Richter wrote:<br /><br />&gt; On Fri, 27 Oct 2006 13:42:44 -0700 (PDT), Linus Torvals wrote:<br />&gt; &gt;        static struct semaphore outstanding;<br />&gt; [...]<br />&gt; &gt;        static void allow_parallel(int n)<br />&gt; [...]<br />&gt; &gt;        static void wait_for_parallel(int n)<br />&gt; [...]<br />&gt; &gt;        static void execute_in_parallel(int (*fn)(void *), void *arg)<br />&gt; <br />&gt; 	This interface would have problems with nesting.<br /><br />You miss the point.<br /><br />They _wouldn't_ be nested.<br /><br />The "allow_parallel()" and "wait_for_parallel()" calls would be at some <br />top-level situation (ie initcalls looping).<br /><br />Nobody else than the top level would _ever_ use them. Anything under that <br />level would just say "I want to do this in parallel" - which is just a <br />statement, and has no nesting issues in itself.<br /><br />The whole notion of "I want to do this in parallel" is basically <br />non-nesting. If something is parallel, it's by definition not ordered, and <br />thus nesting cannot make sense. All the "ordered" stuff would be either <br />done without using "execute_in_parallel()" at all, or it would be ordered <br />_within_ one thread that is executed in parallel.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
