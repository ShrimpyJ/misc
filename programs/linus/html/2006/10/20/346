    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/10/19/221">First message in thread</a></li><li><a href="/lkml/2006/10/20/328">David Miller</a><ul><li><a href="/lkml/2006/10/20/340">Ralf Baechle</a><ul><li class="origin"><a href="/lkml/2006/10/20/352">Linus Torvalds</a><ul><li><a href="/lkml/2006/10/20/352">Ralf Baechle</a><ul><li><a href="/lkml/2006/10/20/366">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Oct 2006 16:28:37 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/3] Fix COW D-cache aliasing on fork</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 20 Oct 2006, Ralf Baechle wrote:<br />&gt; <br />&gt; &gt; My understanding is that this works because in Ralf's original patch<br />&gt; &gt; (which is the context in which he is removing the flush_cache_mm()<br />&gt; &gt; call), he uses kmap()/kunmap() to map the page(s) being accessed at a<br />&gt; &gt; kernel virtual address which will fall into the same cache color as<br />&gt; &gt; the user virtual address --&gt; no alias problems.<br />&gt; &gt;<br />&gt; &gt; Since he does this for every page touched on the kernel side during<br />&gt; &gt; dup_mmap(), the existing flush_cache_mm() call in dup_mmap() does in<br />&gt; &gt; fact become redundant.<br />&gt; <br />&gt; Correct.<br />&gt; <br />&gt; It means no cache flush operation to deal with aliases at all left in<br />&gt; fork and COW code.<br /><br />Umm. That would seem to only happen to work for a direct-mapped virtually <br />indexed cache where the index is taken purely from the virtual address, <br />and there are no "process context" bits in the virtually indexed D$.<br /><br />The moment there are process context bits involved, afaik you absolutely <br />_need_ to flush, because otherwise the other process will never pick up <br />the dirty state (which it would need to reload from memory).<br /><br />That said, maybe nobody does that. Virtual caches are a total braindamage <br />in the first place, so hopefully they have limited use.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
