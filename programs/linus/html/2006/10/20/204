    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/10/19/221">First message in thread</a></li><li><a href="/lkml/2006/10/20/191">Linus Torvalds</a><ul><li><a href="/lkml/2006/10/20/196">Nick Piggin</a><ul><li class="origin"><a href="/lkml/2006/10/20/208">Linus Torvalds</a><ul><li><a href="/lkml/2006/10/20/208">Nick Piggin</a></li></ul></li><li><a href="/lkml/2006/10/20/368">Ralf Baechle</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Oct 2006 10:16:15 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/3] Fix COW D-cache aliasing on fork</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 21 Oct 2006, Nick Piggin wrote:<br />&gt; &gt; So maybe the COW D$ aliasing patch-series is just the right thing to do. Not<br />&gt; &gt; worry about D$ at _all_ when doing the actual fork, and only worry about it<br />&gt; &gt; on an actual COW event. Hmm?<br />&gt; <br />&gt; Well if we have the calls in there, we should at least make them work<br />&gt; right for the architectures there now. At the moment the flush_cache_mm<br />&gt; before the copy_page_range wouldn't seem to do anything if you can still<br />&gt; have threads dirty the cache again through existing TLB entries.<br />&gt;<br />&gt; I don't think that flushing on COW is exactly right though, because dirty<br />&gt; data can remain invisible if you're only doing reads (no write, no flush).<br /><br />You're right. A virtually indexed cache needs the flush _before_ we return <br />from the fork into a new process (since otherwise the dirty data won't be <br />visible in the new virtual address space).<br /><br />So you've convinced me. Flushing at COW time _cannot_ be right, because it <br />by definition means that there has been a time when the new process didn't <br />see the dirty data in the case of a virtual index. And in the case of a <br />physical index it cannot matter.<br /><br />So I think the right thing to do is to forget about the COW D$ series <br />(which probably _hides_ most of the problems in practice, so it "works" <br />that way) and instead go with Ralf's last patch that just moves the <br />flush_cache_mm() to after the TLB flush.<br /><br />We do need to have all the architecture people (especially S390, which has <br />been very strange in this regard in the past) check that it's ok. The <br />_mappings_ are still valid, so S390 should be able to do the write-back, <br />but there may be architectures that would want to do the flush _both_ <br />before and after (for performance reasons - if writing out dirty data <br />requires a TLB lookup, doing most fo the writeback before is probably a <br />better thing, and then we can do a _second_ writeback after the flush to <br />close the race with some other thread dirtying the pages before the TLB <br />was marked read-only).<br /><br />I added linux-arch and Martin Schwidefsky (s390) to the Cc:.<br /><br />Guys, in case you missed the earlier discussion: there's a suggested patch <br />by Ralf Baechle on linux-kernel (but it does just the "flush after" <br />version, not the "perhaps we need it both before and after" thing I <br />theorise about above). Message-ID: 20061020160538.GB18649&#64;linux-mips.org.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
