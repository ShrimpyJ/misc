    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/10/19/351">First message in thread</a></li><li><a href="/lkml/2006/10/19/404">Linus Torvalds</a><ul><li><a href="/lkml/2006/10/19/426">Mark Fasheh</a><ul><li><a href="/lkml/2006/10/20/38">Pierre Ossman</a><ul><li><a href="/lkml/2006/10/20/300">Mark Fasheh</a></li></ul></li></ul></li><li><a href="/lkml/2006/10/20/5">Kyle Moffett</a></li><li><a href="/lkml/2006/10/20/34">Pierre Ossman</a><ul><li><a href="/lkml/2006/10/20/53">Kyle Moffett</a></li><li class="origin"><a href="/lkml/2006/10/20/167">Linus Torvalds</a><ul><li><a href="/lkml/2006/10/20/167">Linus Torvalds</a></li><li><a href="/lkml/2006/10/21/50">Pierre Ossman</a><ul><li><a href="/lkml/2006/10/21/96">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2006/10/21/103">Roland Dreier</a><ul><li><a href="/lkml/2006/10/21/148">Pierre Ossman</a><ul><li><a href="/lkml/2006/10/21/181">Roland Dreier</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 20 Oct 2006 08:26:16 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Git training wheels for the pimple faced maintainer</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 20 Oct 2006, Pierre Ossman wrote:<br />&gt; <br />&gt; I'm still learning the more fancy parts of git, but I think that would be:<br />&gt; <br />&gt; git diff master..for-linus | diffstat<br /><br />Use "git diff -M --stat master..for-linus" instead.<br /><br />The "-M" enables rename detection, and the "--stat" does the diffstat for <br />you (and better than plain diffstat, since it knows about renames, copies <br />and deletes).<br /><br />HOWEVER! The above obviously only really works correctly if "master" is a <br />strict subset of "for-linus".<br /><br />&gt; git log master..for-linus | git shortlog<br /><br />Yes.<br /><br />&gt; And in order to test for conflicts, I assume I should have a "test tree"<br />&gt; that I merge all my local stuff in, together with your current HEAD?<br /><br />Exactly. It can be either just a random temporary branch (it's cheap), or <br />it can just be your "work tree" that you can keep as messy as you want, <br />and then the "for-linus" branch is the cleaned-up version. <br /><br />And quite frankly, most of the time you don't even really need one. It <br />depends on what you work on, but a _lot_ of the kernel is so independent <br />of anything else, that you know that the only thing that will ever really <br />conflict is trivial things, and hey, one of the things I do is to fix up <br />those conflicts.<br /><br />In fact, quite often the _right_ thing to do for most developers is to <br />just entirely ignore what everybody else is doing, because if there are <br />trivial conflicts, I'll take care of them, and if there are more serious <br />conflicts, I'll just let you know myself - and you may not even be in a <br />position to _know_ about it, because the conflicts could come from <br />somebody elses git tree that I just happened to pull before.<br /><br />So don't worry too much about it. As already mentioned, the _worst_ thing <br />you can do is probably to continually pull from my tree to "stay on the <br />edge". The way we keep the kernel maintainable is not by having everybody <br />try to keep up with everybody else, but by trying to keep things so <br />independent that people don't _need_ to keep up with everybody else.<br /><br />A lot of people seem to just synchronize up at major releases, and then <br />rebase their work (which they may even have kept in quilt or something <br />else: you don't even have to use "git" for this) on that, and ask me to <br />merge the result.<br /><br />So don't worry too much. <br /><br />Also - different people work in different ways, and it's _ok_. <br /><br />&gt; If I've understood git correctly, a rebase is a big no-no once I've<br />&gt; published those changes as it reverts some history. Right?<br /><br />That is mostly correct. It's a big no-no if somebody has already pulled <br />from you, and you want them to pull again. Because at that point, you're <br />essentially asking them to pull two totally different versions of the same <br />thing - git will do the right thing (since all the duplicates will usually <br />merge perfectly), but it will look like two different histories, and <br />you'll see every commit twice. That's just ugly.<br /><br />On the other hand, things like the -mm tree are "throw-away" anyway: <br />Andrew re-creates the tree every time he pulls. So you can rebase the <br />branch you send to Andrew as much as you want. So it's not _entirely_ <br />about whether something is "published" or not, it's literally more about <br />how something is actively _used_.<br /><br />But yes - in general, the rule of thumb should be: rebase as much as you <br />want in your own _private_ sandbox to make things look nice, but once <br />you've exposed it to anybody else, it's set in stone.<br /><br />&gt; Big thanks for all the pointers. I have my account at kernel.org, so it<br />&gt; won't be long until my first [GIT PULL]. Be gentle.<br /><br />Now, I may not be "gentle", because if there is something wrong with the <br />end result I'll tell you so and I'm not exactly known for always being <br />excessively polite ;)<br /><br />But don't worry, it can be fixed up. At worst, you'll just get an email <br />back saying "I'm not going to pull this one, because you've been a <br />complete clutz, and did something really stupid wrt XYZ", and I'll ask you <br />to fix it up. Or I might say "I'll pull it this time, but I don't want to <br />see XYZ again in the future".<br /><br />Or I might not say anythign at all, and you'll just notice that I've <br />pulled from you.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
