    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/10/21/18">First message in thread</a></li><li><a href="/lkml/2006/10/21/23">Josef "Jeff" Sipek</a><ul><li><a href="/lkml/2006/10/21/192">James Morris</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 21 Oct 2006 17:11:40 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 08 of 23] isofs: change uses of f_{dentry, vfsmnt} to use f_path</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 21 Oct 2006, James Morris wrote:<br />&gt;<br />&gt; What about something like:<br />&gt; <br />&gt; static inline struct inode *fpath_ino(struct file *file)<br />&gt; {<br />&gt; 	return file-&gt;f_path.dentry-&gt;d_inode;<br />&gt; }<br /><br />Generally, unless it saves a _lot_ of typing, we've tried to avoid <br />gratuitous hiding of details. And "ino" isn't a good name, it's something <br />we've traditionally used for the inode _number_. So it would be <br />"fpath_inode()" or "file_inode()" or something.<br /><br />As it is, the difference between<br /><br />	file-&gt;f_dentry-&gt;d_inode<br />	fpath_inode(file)<br /><br />is not really enough of a win to merit hiding that it's doing two pointer <br />dereferences. Now, whether the extra five characters ("path.") merit it, I <br />don't know.  I suspect not. If the line turns long, it's often more <br />readable to just add a local variable or two, and do<br /><br />	struct dentry *dentry = file-&gt;f_[path.]dentry;<br />	struct inode *inode = dentry-&gt;d_inode;<br /><br />which in some situations allow for other readability improvements too (eg <br />maybe "dentry" or "inode" is used multiple times).<br /><br />If this was something where we'd expect things to change in the future, <br />maybe it would be worth it for _that_ reason. That doesn't sound very <br />likely, though - these things have been fairly stable, and even this patch <br />is really about syntactic cleanup than any real change.<br /><br />Adding these kinds of "abstraction layers" is something that people are <br />taught is good, but I personally tend to think that it makes it less <br />obvious at the code level what the "costs" are. Unless you know things <br />intimately, you really have no way of judging whether "fpath_inode()" is <br />something expensive or not. <br /><br />I dunno. <br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
