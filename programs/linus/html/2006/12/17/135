    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/16/164">First message in thread</a></li><li><a href="/lkml/2006/12/17/132">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/17/133">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2006/12/18/1">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/18/1">Nick Piggin</a><ul><li><a href="/lkml/2006/12/18/2">Andrew Morton</a></li><li><a href="/lkml/2006/12/18/3">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 17 Dec 2006 17:57:57 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.6.19 file content corruption on ext3</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />[ Replying to myself - a sure sign that I don't get out enough ]<br /><br />On Sun, 17 Dec 2006, Linus Torvalds wrote:<br />&gt; <br />&gt; So I don't actually see any serialization at all that would keep a random <br />&gt; page from being paged back in.<br /><br />We do actually serialize, but we do it _after_ the page has already been <br />mapped back. Ie we do it for the dirty page case at rthe end of <br />do_wp_page() and do_no_page() when we do the "set_page_dirty_balance()", <br />but that's potentially too late - we've already mapped the page read-write <br />into the address space.<br /><br />That said, this means that only threaded apps should ever trigger any <br />problems, which would seem to make it unlikely that this is the issue.<br /><br />But Andrew: I don't think it's necessarily true that <br />"try_to_free_buffers()" callers have all unmapped the page.<br /><br />That seems to be true for vmscan.c (ie the shrink_page_list -&gt; <br />try_to_release_page -&gt; try_to_release_buffers callchain), but what about <br />the other callchains (through filesystems, or through "pagevec_strip()" or <br />similar?) That pagevec_strip() is called from shrink_active_list(), I <br />don't see that unmapping the pages..<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
