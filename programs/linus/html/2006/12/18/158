    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/16/164">First message in thread</a></li><li><a href="/lkml/2006/12/17/120">Andrew Morton</a><ul><li><a href="/lkml/2006/12/17/129">Linus Torvalds</a></li><li><a href="/lkml/2006/12/17/132">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/17/133">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/17/135">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/18/1">Nick Piggin</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2006/12/18/144">Peter Zijlstra</a><ul><li class="origin"><a href="/lkml/2006/12/18/162">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/18/162">Peter Zijlstra</a><ul><li><a href="/lkml/2006/12/18/165">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2006/12/19/1">Nick Piggin</a><ul><li><a href="/lkml/2006/12/19/19">Linus Torvalds</a></li><li><a href="/lkml/2006/12/19/34">Peter Zijlstra</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Dec 2006 10:03:45 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.6.19 file content corruption on ext3</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br />Andrei,<br /> could you try Peter's patch (on top of Andrew's patch - it depends on <br />it, and wouldn't work on an unmodified -git kernel, but add the WARN_ON() <br />I mention in this email? You seem to be able to reproduce this easily.. <br />Thanks)<br /><br />On Mon, 18 Dec 2006, Peter Zijlstra wrote:<br />&gt; <br />&gt; This should be safe; page_mkclean walks the rmap and flips the pte's<br />&gt; under the pte lock and records the dirty state while iterating.<br />&gt; Concurrent faults will either do set_page_dirty() before we get around<br />&gt; to doing it or vice versa, but dirty state is not lost.<br /><br />Ok, I really liked this patch, but the more I thought about it, the more I <br />started to doubt the reasons for liking it.<br /><br />I think we have some core fundamental problem here that this patch is <br />needed at all.<br /><br />So let's think about this: we apparently have two cases of <br />"clear_page_dirty()":<br /><br /> - the one that really wants to clear the bit unconditionally (Andrew <br />   calls this the "must_clean_ptes" case, which I personally find to be a <br />   really confusing name, but whatever)<br /><br /> - the other case. The case that doesn't want to really clear the pte <br />   dirty bits.<br /><br />and I thought your patch made sense, because it saved away the pte state <br />in the page dirty state, and that matches my mental model, but the more I <br />think about it, the less sense that whole "the other case" situation makes <br />AT ALL.<br /><br />Why does "the other case" exist at all? If you want to clear the dirty <br />page flag, what is _ever_ the reason for not wanting to drop PTE dirty <br />information? In other words, what possible reason can there ever be for <br />saying "I want this page to be clean", while at the same time saying "but <br />if it was dirty in the page tables, don't forget about that state".<br /><br />So I absolutely detested Andrew's original patch, because that one made <br />zero sense at all even from a code standpoint. With your patch on top, it <br />all suddenly makes sense: at least you don't just leave dirty pages in the <br />PTE's with a "struct page" that is marked clean, and the end result is <br />undeniably at least _consistent_.<br /><br />So Andrew's patch I can't stand, because the whole point of it seems to be <br />to leave the system in an inconsistent state (dirty in the pte's but <br />marked "clean"), and if we want to have that state, then we should just <br />revert _everything_ to the 2.6.18 situation, and not play these games at <br />all.<br /><br />Andrew's patch with your patch on top makes me happy, because now we're <br />at least honoring all the basic rules (we don't get into an inconsistent <br />state), so on a local level it all makes sense. HOWEVER, I then don't <br />actually understand how it could ever actually make sense to ask for <br />"please clean the page, but don't actually clean it".<br /><br />So _I_ think that we should add a honking huge WARN_ON() for this case. <br />Ie, do your patch, but instead of re-dirtying the page:<br /><br />+                       if (!must_clean_ptes &amp;&amp; cleaned)<br />+                               set_page_dirty(page);<br /><br />we would do<br /><br />+                       if (!must_clean_ptes &amp;&amp; cleaned) {<br />+                               WARN_ON(1);<br />+                               set_page_dirty(page);<br />+                       }<br /><br />and ask the people who see this problem to see if they get the WARN_ON() <br />(assuming it _fixes_ their data corruption).<br /><br />Because whoever calls "clean_dirty_page()" without actually wanting to <br />clean the PTE's is really a bug: those dirty PTE's had better not exist.<br /><br />Or maybe the WARN_ON() just points out _why_ somebody would want to do <br />something this insane. Right now I just can't see why it's a valid thing <br />to do.<br /><br />Maybe I'm still confused. <br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
