    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/16/164">First message in thread</a></li><li><a href="/lkml/2006/12/19/266">Andrew Morton</a><ul><li><a href="/lkml/2006/12/19/276">Peter Zijlstra</a><ul><li><a href="/lkml/2006/12/19/275">Peter Zijlstra</a></li><li class="origin"><a href="/lkml/2006/12/19/294">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/19/294">Andrew Morton</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 19 Dec 2006 16:03:49 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: 2.6.19 file content corruption on ext3</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 20 Dec 2006, Peter Zijlstra wrote:<br /><br />&gt; On Tue, 2006-12-19 at 14:58 -0800, Andrew Morton wrote:<br />&gt; <br />&gt; &gt; Well... we'd need to see (corruption &amp;&amp; this-not-triggering) to be sure.<br />&gt; &gt; <br />&gt; &gt; Peter, have you been able to trigger the corruption?<br />&gt; <br />&gt; Yes; however the mail I send describing that seems to be lost in space.<br /><br />Btw, can somebody actually explain the mess that is ext3 "dirtying".<br /><br />Ext3 does NOT use __set_page_dirty_buffers. It does<br /><br />	static int ext3_journalled_set_page_dirty(struct page *page)<br />	{<br />	        SetPageChecked(page);<br />	        return __set_page_dirty_nobuffers(page);<br />	}<br /><br />and uses that "Checked" bit as a "whole page is dirty" bit (which it tests <br />in "writepage()".<br /><br />You realize what this all means? It means that ANYTHING that actually <br />clears the _real_ dirty bit won't actually be doing anything at all for <br />ext3, because the Checked bit will still stay set, and any IO down the <br />line on that page would totally ignore the dirty bits on the buffer heads <br />and just write out everything.<br /><br />That is "The Mess(tm)".<br /><br />It also basically means that anything that clears the dirty bit without <br />just calling "writepage()" had _better_ call "invalidatepage()" for the <br />whole page, because otherwise the PageChecked bit will never be cleared as <br />far as I can see. Happily, at least ext3 seems to _test_ for that case in <br />the release_page() function, so it appears that we do do this.<br /><br />But this seems to just strengthen my argument: you can NEVER clean a page, <br />unless you (a) do IO on it immediately afterwards (writeback) or (b) <br />invalidate it entirely (truncate).<br /><br />I'd really like to see just those two functions exist. Preferably in a <br />form where you can see easily that we actually follow those rules. Rather <br />than having a confusing set of "clear_page_dirty()" and<br />"test_and_clear_page_dirty()" functions that are called from random <br />places.<br /><br />IOW, I think the "clear_page_dirty_for_io()" is fine (it's case (a)) <br />above, and then we should probably have a "cancel_dirty_page()" function <br />that does all the current clear_page_dirty() but also makes sure that we <br />actually call the invalidate_page() function itself. <br /><br />Hmm?<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
