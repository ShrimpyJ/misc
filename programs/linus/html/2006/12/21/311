    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/16/164">First message in thread</a></li><li><a href="/lkml/2006/12/21/76">Andrew Morton</a><ul><li><a href="/lkml/2006/12/21/309">"Gordon Farquharson"</a><ul><li class="origin"><a href="/lkml/2006/12/22/43">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/22/43">Martin Michlmayr</a><ul><li><a href="/lkml/2006/12/22/45">Martin Michlmayr</a></li><li><a href="/lkml/2006/12/22/49">Andrew Morton</a></li></ul></li><li><a href="/lkml/2006/12/22/113">"Gordon Farquharson"</a></li></ul></li><li><a href="/lkml/2006/12/22/44">Martin Michlmayr</a><ul><li><a href="/lkml/2006/12/22/117">"Gordon Farquharson"</a></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2006/12/21/311/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 21 Dec 2006 20:54:54 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mm: fix page_mkclean_one (was: 2.6.19 file content corruption on ext3)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 21 Dec 2006, Gordon Farquharson wrote:<br />&gt; <br />&gt; I tested 2.6.19 with a version of Linus's patch that applies cleanly<br />&gt; to 2.6.19 (patch appended to the end of this email) on ARM and apt-get<br />&gt; failed. It did not segfault this time, but instead got stuck for about<br />&gt; 20 to 30 minutes and was accessing the hard drive frequently.<br /><br />Ok, there's definitely something screwy going on.<br /><br />Andrew located at least one bug: we run cancel_dirty_page() too late in <br />"truncate_complete_page()", which means that do_invalidatepage() ends up <br />not clearing the page cache.<br /><br />His patch is appended.<br /><br />But it sounds like I probably misunderstood something, because I thought <br />that Martin had acknowledged that this patch actually worked for him. <br />Which sounded very similar to your setup (he has a 32M ARM box too, no?)<br /><br />And your failure sounds a lot like one that David Miller is reporting. At <br />the same time, my own shared file mmap tests on my own machines obviously <br />work fine (I lower the dirty-writeback tresholds to force writeback more <br />easily, and then mmap a file and write and rewrite to it in memory, and <br />truncate it).<br /><br />Maybe it's mount option issue? I've got data=ordered on my machine, are <br />you perhaps runnign with something else?<br /><br />		Linus<br /><br />---<br />commit 3e67c0987d7567ad666641164a153dca9a43b11d<br />Author: Andrew Morton &lt;akpm&#64;osdl.org&gt;<br />Date:   Thu Dec 21 11:00:33 2006 -0800<br /><br />    [PATCH] truncate: clear page dirtiness before running try_to_free_buffers()<br />    <br />    truncate presently invalidates the dirty page's buffer_heads then shoots down<br />    the page.  But try_to_free_buffers() will now bale out because the page is<br />    dirty.<br />    <br />    Net effect: the LRU gets filled with dirty pages which have invalidated<br />    buffer_heads attached.  They have no -&gt;mapping and hence cannot be cleaned.<br />    The machine leaks memory at an enormous rate.<br />    <br />    Fix this by cleaning the page before running try_to_free_buffers(), so<br />    try_to_free_buffers() can do its work.<br />    <br />    Also, remember to do dirty-page-acoounting in cancel_dirty_page() so the<br />    machine won't wedge up trying to write non-existent dirty pages.<br />    <br />    Probably still wrong, but now less so.<br />    <br />    Signed-off-by: Andrew Morton &lt;akpm&#64;osdl.org&gt;<br />    Signed-off-by: Linus Torvalds &lt;torvalds&#64;osdl.org&gt;<br /><br />diff --git a/mm/truncate.c b/mm/truncate.c<br />index bf9e296..89a5c35 100644<br />--- a/mm/truncate.c<br />+++ b/mm/truncate.c<br />&#64;&#64; -60,11 +60,12 &#64;&#64; void cancel_dirty_page(struct page *page, unsigned int account_size)<br /> 		WARN_ON(++warncount &lt; 5);<br /> 	}<br /> 		<br />-	if (TestClearPageDirty(page) &amp;&amp; account_size)<br />+	if (TestClearPageDirty(page) &amp;&amp; account_size) {<br />+		dec_zone_page_state(page, NR_FILE_DIRTY);<br /> 		task_io_account_cancelled_write(account_size);<br />+	}<br /> }<br /> <br />-<br /> /*<br />  * If truncate cannot remove the fs-private metadata from the page, the page<br />  * becomes anonymous.  It will be left on the LRU and may even be mapped into<br />&#64;&#64; -81,11 +82,11 &#64;&#64; truncate_complete_page(struct address_space *mapping, struct page *page)<br /> 	if (page-&gt;mapping != mapping)<br /> 		return;<br /> <br />+	cancel_dirty_page(page, PAGE_CACHE_SIZE);<br />+<br /> 	if (PagePrivate(page))<br /> 		do_invalidatepage(page, 0);<br /> <br />-	cancel_dirty_page(page, PAGE_CACHE_SIZE);<br />-<br /> 	ClearPageUptodate(page);<br /> 	ClearPageMappedToDisk(page);<br /> 	remove_from_page_cache(page);<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
