    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/22/106">First message in thread</a></li><li><a href="/lkml/2006/12/22/106">Thomas Meyer</a><ul><li><a href="/lkml/2006/12/22/188">Jean Delvare</a><ul><li class="origin"><a href="/lkml/2006/12/23/48">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/23/48">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/23/51">Randy Dunlap</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2006/12/22/208/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 22 Dec 2006 16:25:42 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: WARNING: "test_clear_page_dirty" [fs/cifs/cifs.ko] undefined!</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 22 Dec 2006, Jean Delvare wrote:<br />&gt; <br />&gt; The approach seems quite broken to me, the users should have been fixed<br />&gt; _before_ removing the function, so as to avoid compilation failures.<br />&gt; These are a pain for testers, and break git bisect too. Grmbl.<br /><br />This needed to be fixed, and quite frankly, things don't get fixed nearly <br />as quickly if you don't just break them first. And there really were just <br />two filesystems that got broken, cifs being one of them.<br /><br />I just can't test it.<br /><br />&gt; Now that it's done... Steve, can you please take a look and provide a<br />&gt; patch so that cifs builds again?<br /><br />CIFS _should_ be using "clear_page_dirty_for_io()" in that place, and that <br />will fix the build. However, the reason I didn't just do that myself is <br />that I can't test the end result, and for the life of me, I can't see <br />where CIFS does the "end_page_writeback()" that it needs to do at IO <br />completion time.<br /><br />And the thing that confuses me about that, is that if CIFS doesn't do <br />"end_page_writeback()", then it was already broken before - because when <br />the VM calls "-&gt;writepage()" the clear_page_dirty_for_io() will have been <br />done by the VM, and it needs that "end_page_writeback()" so that the <br />system can know when the IO is done.<br /><br />I _suspect_ that those "unlock_page()" calls should be accompanied by a <br />"end_page_writeback()" call, and that the proper patch MAY look something <br />like the appended, but I worry about having missed something really <br />subtle. Maybe there's a end_page_writeback() somewhere else.<br /><br />And if there isn't, I wonder if shared mappings have _ever_ worked on <br />CIFS? And if so, how? That writeback bit thing isn't new per se.<br /><br />So this may or may not fix it. If you can test it (_including_ with some <br />dirty shared mmap-on-mmap action, please - just call me kinky), I'll <br />commit it. But I need somebody who actually uses this to test it.<br /><br />		Linus<br /><br />---<br />diff --git a/fs/cifs/file.c b/fs/cifs/file.c<br />index 0f05cab..4f0472d 100644<br />--- a/fs/cifs/file.c<br />+++ b/fs/cifs/file.c<br />&#64;&#64; -1245,7 +1245,7 &#64;&#64; retry:<br /> 				wait_on_page_writeback(page);<br /> <br /> 			if (PageWriteback(page) ||<br />-					!test_clear_page_dirty(page)) {<br />+					!clear_page_dirty_for_io(page)) {<br /> 				unlock_page(page);<br /> 				break;<br /> 			}<br />&#64;&#64; -1253,6 +1253,7 &#64;&#64; retry:<br /> 			if (page_offset(page) &gt;= mapping-&gt;host-&gt;i_size) {<br /> 				done = 1;<br /> 				unlock_page(page);<br />+				end_page_writeback(page);<br /> 				break;<br /> 			}<br /> <br />&#64;&#64; -1316,6 +1317,7 &#64;&#64; retry:<br /> 					SetPageError(page);<br /> 				kunmap(page);<br /> 				unlock_page(page);<br />+				end_page_writeback(page);<br /> 				page_cache_release(page);<br /> 			}<br /> 			if ((wbc-&gt;nr_to_write -= n_iov) &lt;= 0)<br />&#64;&#64; -1356,7 +1358,8 &#64;&#64; static int cifs_writepage(struct page* page, struct writeback_control *wbc)<br /> 	rc = cifs_partialpagewrite(page, 0, PAGE_CACHE_SIZE);<br /> 	SetPageUptodate(page); /* BB add check for error and Clearuptodate? */<br /> 	unlock_page(page);<br />-	page_cache_release(page);	<br />+	end_page_writeback(page);<br />+	page_cache_release(page);<br /> 	FreeXid(xid);<br /> 	return rc;<br /> }<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
