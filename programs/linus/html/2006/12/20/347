    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/16/164">First message in thread</a></li><li><a href="/lkml/2006/12/20/325">Andrew Morton</a><ul><li><a href="/lkml/2006/12/20/333">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/335">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/21/163">Andrei Popa</a><ul><li><a href="/lkml/2006/12/21/173">Linus Torvalds</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2006/12/20/361">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/361">Andrew Morton</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 20 Dec 2006 16:43:31 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mm: fix page_mkclean_one (was: 2.6.19 file content corruption on ext3)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 20 Dec 2006, Linus Torvalds wrote:<br />&gt; &gt; <br />&gt; &gt; There's also redirty_page_for_writepage().<br />&gt; <br />&gt; _dirtying_ a page makes sense in any situation. You can always dirty them. <br />&gt; I'm just saying that you can't just mark them *clean*.<br />&gt; <br />&gt; If your point was that the filesystem had better be able to take care of <br />&gt; "redirty_page_for_writepage()", then yes, of course. But since it's the <br />&gt; filesystem itself that does it, it had _better_ be able to take care of <br />&gt; the situation it puts itself into.<br /><br />Btw, as an example of something where this may NOT be ok, look at <br />migrate_page_copy().<br /><br />I'm not at all convinced that "migrate_page_copy()" can work at all. It <br />does:<br /><br />	...<br />        if (PageDirty(page)) {<br />                clear_page_dirty_for_io(page);<br />                set_page_dirty(newpage);<br />        }<br />	...<br /><br />which is an example of what NOT to do, because it claims to clear the page <br />for IO, but doesn't actually _do_ any IO.<br /><br />And this is wrong, for many reasons. <br /><br />For example, it's very possible that the old page is not actually <br />up-to-date, and is only partially dirty using some FS-specific dirty data <br />queues (like NFS does with its dirty data, or buffer-heads can do for <br />local filesystems). When you do<br /><br />	if (clear_dirty(page))<br />		set_page_dirty(page);<br /><br />in generic VM code, that is a BUG. It's an insane operation. It cannot <br />work. It's exactly what I'm trying to avoid.<br /><br />So page migration is probably broken, but it's no less broken than it <br />always has been. And I don't think many people use it anyway. It might <br />work "by accident" in a lot of situations, but to actually be solid, it <br />really would need to do something fundamentally different, like:<br /><br /> - have a per-mapping "migrate()" function that actually knows HOW to <br />   migrate the dirty state from one page to another.<br /><br /> - or, preferably, by just not migrating dirty pages, and just actually <br />   doing the writeback on them first.<br /><br />Again, this is an example of just _incorrect_ code, that thinks that it <br />can "just clear the dirty bit". You can't do that. It's wrong. And it is <br />not wrong just because I say so, but because the operations itself simply <br />is FUNDAMENTALLY not a sensible one.<br /><br />This is why I keep harping on this issue: there are two cases, and two <br />cases only, when you can clear a page. And no, "migrating the data to <br />another page" was not one of those two cases. The cases are, and will <br />_always_ be: (a) full writeback IO of _all_ the dirty data on the page <br />(and that can only be done by the low-level filesystem, since it's the <br />only one that knows what rules it has followed for marking things dirty) <br />and (b) cancelling dirty data that got truncated and literally removed <br />from the filesystem.<br /><br />So I don't claim that I fixed all the cases. mm/migrate.c is still broken. <br />Maybe somebody else also uses "clear_page_dirty_for_io()" even though the <br />name very clearly says FOR IO. I didn't check, but I think they're mostly <br />right now.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
