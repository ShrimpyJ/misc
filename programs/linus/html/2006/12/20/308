    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/16/164">First message in thread</a></li><li><a href="/lkml/2006/12/20/204">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/218">Peter Zijlstra</a></li><li><a href="/lkml/2006/12/20/252">Dave Kleikamp</a><ul><li><a href="/lkml/2006/12/20/274">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/285">Dave Kleikamp</a></li></ul></li></ul></li><li><a href="/lkml/2006/12/20/263">Peter Zijlstra</a><ul><li><a href="/lkml/2006/12/20/267">Peter Zijlstra</a></li><li><a href="/lkml/2006/12/20/282">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/289">Peter Zijlstra</a><ul><li><a href="/lkml/2006/12/21/68">Martin Schwidefsky</a></li></ul></li></ul></li><li><a href="/lkml/2006/12/20/372">Trond Myklebust</a><ul><li><a href="/lkml/2006/12/21/45">Peter Zijlstra</a></li></ul></li></ul></li><li><a href="/lkml/2006/12/20/295">David Chinner</a><ul><li><a href="/lkml/2006/12/20/310">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/362">David Chinner</a></li></ul></li></ul></li><li><a href="/lkml/2006/12/20/300">Andrew Morton</a><ul><li class="origin"><a href="/lkml/2006/12/20/325">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/325">Andrew Morton</a><ul><li><a href="/lkml/2006/12/20/333">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2006/12/20/376">Trond Myklebust</a><ul><li><a href="/lkml/2006/12/21/178">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2006/12/21/33">"Gordon Farquharson"</a><ul><li><a href="/lkml/2006/12/21/37">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/21/57">Martin Michlmayr</a><ul><li><a href="/lkml/2006/12/21/61">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2006/12/21/69">"Gordon Farquharson"</a><ul><li><a href="/lkml/2006/12/21/76">Andrew Morton</a></li></ul></li><li><a href="/lkml/2006/12/21/115">Russell King</a><ul><li><a href="/lkml/2006/12/21/118">Russell King</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2006/12/21/109">Martin Michlmayr</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 20 Dec 2006 15:55:14 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mm: fix page_mkclean_one (was: 2.6.19 file content corruption on ext3)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 20 Dec 2006, Andrew Morton wrote:<br />&gt; <br />&gt; &gt; +void cancel_dirty_page(struct page *page, unsigned int account_size)<br />&gt; &gt; +{<br />&gt; &gt; +	/* If we're cancelling the page, it had better not be mapped any more */<br />&gt; &gt; +	if (page_mapped(page)) {<br />&gt; &gt; +		static unsigned int warncount;<br />&gt; &gt; +<br />&gt; &gt; +		WARN_ON(++warncount &lt; 5);<br />&gt; &gt; +	}<br />&gt; &gt; +		<br />&gt; &gt; +	if (TestClearPageDirty(page) &amp;&amp; account_size)<br />&gt; &gt; +		task_io_account_cancelled_write(account_size);<br />&gt; &gt; +}<br />&gt; <br />&gt; This doesn't clear the radix-tree dirty tags.  I'm not sure what effect<br />&gt; that would have on a truncated mapping.  Perhaps just a bit of extra work<br />&gt; in radix-tree lookup during writeback.<br /><br />This should _only_ be a valid thing to do when we're removing the page <br />from a mapping anyway, so I'd most definitely hope that the code <br />immediately after (or before) will have done a "remove_from_page_cache()"<br /><br />In which case the tags should not matter.<br /><br />There is _no_ excuse for cancelling a page and leaving it in the page <br />cache that I can see. Because your page contents will be _indeterminate_.<br /><br />&gt; &gt; &#64;&#64; -386,12 +399,8 &#64;&#64; int invalidate_inode_pages2_range(struct address_space *mapping,<br />&gt; <br />&gt; invalidate_complete_page2() is pretty gruesome.  We're handling the case<br />&gt; where someone went and redirtied the page (and hence its buffers) after the<br />&gt; invalidate_inode_pages2() caller (generic_file_direct_IO) synced it to<br />&gt; disk.<br />&gt; <br />&gt; I'd prefer to just fail the direct-io if someone did that, but then<br />&gt; people's tests fail and they whine.<br /><br />So with my change, afaik, we will just return EIO to the invalidate, and <br />do the write. Which should be ok. In fact, it appears to be the only <br />possibly valid thing to do.<br /><br />It really boils down to that same thing: if you remove the dirty bit, <br />there is NO CONCEIVABLE GOOD THING YOU CAN DO EXCEPT FOR:<br /> - do the damn IO already ("clear_page_dirty_for_io()")<br /> - truncate the page (unmap and destroy it both from page cache AND from <br />   any user-visible filesystem cases)<br /><br />Anything else is simpyl a bug. Always has been. My patch just makes that <br />very clear.<br /><br />&gt; With your change I think what'll happen is that we'll correctly handle the<br />&gt; case where the page and its buffers are dirty (it gets left in place), but<br />&gt; we'll needlessy fail in the case where the page is dirty but the buffers<br />&gt; are clean.  How important that will be in practice I do not know.  People<br />&gt; will get -EIOs where they used not to.<br /><br />People will now get -EIO where they used to get an inconsistent system <br />image. I really think it sounds like an improvement.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
