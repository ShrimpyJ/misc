    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/16/164">First message in thread</a></li><li><a href="/lkml/2006/12/20/161">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/164">Martin Michlmayr</a><ul><li class="origin"><a href="/lkml/2006/12/20/204">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/204">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/20/218">Peter Zijlstra</a></li><li><a href="/lkml/2006/12/20/252">Dave Kleikamp</a></li><li><a href="/lkml/2006/12/20/263">Peter Zijlstra</a></li><li><a href="/lkml/2006/12/20/295">David Chinner</a></li><li><a href="/lkml/2006/12/20/300">Andrew Morton</a></li><li><a href="/lkml/2006/12/21/33">"Gordon Farquharson"</a></li><li><a href="/lkml/2006/12/21/109">Martin Michlmayr</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 20 Dec 2006 11:01:13 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] mm: fix page_mkclean_one (was: 2.6.19 file content corruption on ext3)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 20 Dec 2006, Martin Michlmayr wrote:<br />&gt; <br />&gt; &gt; Anyway, the page_mkclean_one() fixes (along with _most_ things we've<br />&gt; &gt; looked at) shouldn't matter on UP, at least certainly not without<br />&gt; &gt; PREEMPT.<br />&gt; <br />&gt; Hmm.  So what about UP without PREEMPT then...<br /><br />So that's why I've been harping on the fact that I think we simply do <br />really wrong things with PG_dirty at times, and that I find it confusing <br />that there's<br /><br /> - clear_page_dirty_for_io(): this one makes sense. The name makes sense, <br />   and the implementation makes sense (which is _not_ the same thing as <br />   "works", of course - "makes sense" does not mean "no bugs" ;).<br /><br /> - test_clear_page_dirty: this one makes no sense WHATSOEVER, except as a <br />   buggy way to do the "_for_io()" case.. This makes sense neither from a <br />   concept angle _or_ an implementation angle (the whole "test_" part is <br />   nonsense: why would anybody care? What operation does this? What can it <br />   do if the page is dirty? It also has no sensible thing it can do to the <br />   page tables.<br /><br /> - clear_page_dirty(): this one makes sense only as a "cancel" operation, <br />   for vmtruncate and friends (it's different from the "_for_io()" case in <br />   several ways:<br />	(a) we should have unmapped such pages forcibly _anyway_, so <br />	    looking at the PTE's make no sense.<br />	(b) because we're not starting IO, we don't have the "mark for <br />	    writeback" case, and we need to clear the dirty tags from the <br />	    radix trees etc since the writeback logic won't do it for us.<br />   The _implementation_ of "clear_page_dirty()" doesn't make sense, but <br />   the concept does.<br /><br />I've repeated that theory a few times, but neither Andrew nor Nick seem to <br />really believe in it. So I'll just repeat it once more, only to be shot <br />down. I think we have three operations, one of which is totally idiotic <br />and senseless, and one of which is just badly implemented.<br /><br />&gt; Maybe the following information is helpful in some way: remember how I<br />&gt; said that we have applied 6 mm patches to 2.6.18 in Debian?  According<br />&gt; to Gordon Farquharson, who's helping me a great deal with testing<br />&gt; installation on this ARM machine (Linksys NSLU2), the corruption<br />&gt; doesn't always show up when you only apply<br />&gt; mm-tracking-shared-dirty-pages.patch to 2.6.18 but it shows up all the<br />&gt; time with all six patches applied.<br /><br />I think the "it hapepns occasionally with just the first patch" is the <br />really important part. The other patches really are likely to just change <br />writeback timing behaviour (_especially_ the "tracking-shared-dirty-pages" <br />patch), but if it happens occasionally even with the first one, that's the <br />one that almost certainly introduced the real problem.<br /><br />And my argument above is actually that the "real problem" goes a hell of a <br />lot further back in time, but it didn't use to be a problem because we <br />just considered dirty bits in the page tables to be something _completely_ <br />independent of the "page dirty" status, so historically, it just didn't <br />matter that we had insane implementations and senseless operations.<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
