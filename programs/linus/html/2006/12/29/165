    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/16/164">First message in thread</a></li><li><a href="/lkml/2006/12/29/149">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/29/154">Theodore Tso</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2006/12/29/168">Andrew Morton</a><ul><li><a href="/lkml/2006/12/29/173">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2006/12/29/162">Andrew Morton</a><ul><li><a href="/lkml/2006/12/29/169">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/29/170">Andrew Morton</a><ul><li><a href="/lkml/2006/12/29/175">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 29 Dec 2006 15:59:27 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Ok, explained.. (was Re: [PATCH] mm: fix page_mkclean_one)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 29 Dec 2006, Theodore Tso wrote:<br />&gt;<br />&gt; If we do get this fixed for ext4, one interesting question is whether<br />&gt; people would accept a patch to backport the fixes to ext3, given the<br />&gt; the grief this is causing the page I/O and VM routines.<br /><br />I don't think backporting is the smartest option (unless it's done _way_ <br />later), but the real problem with it isn't actually the VM behaviour, but <br />simply the fact that cached performance absoluely _sucks_ with the buffer <br />cache.<br /><br />With the physically indexed buffer cache thing, you end up always having <br />to do these complicated translations into block numbers for every single <br />access, and at some point when I benchmarked it, it was a huge overhead <br />for doing simple things like readdir.<br /><br />It's also a major pain for read-ahead, exactly partly due to the high cost <br />of translation - because you can't cheaply check whether the next block is <br />there, the cost of even asking the question "should I try to read ahead?" <br />is much much higher. As a result, read-ahead is seriously limited, because <br />it's so expensive for the cached case (which is still hopefully the <br />_common_ case).<br /><br />So because read-ahead is limited, the non-cached case then _really_ sucks.<br /><br />It was somewhat fixed in a really god-awful fashion by having <br />ext3_readdir() actually do _readahead_ though the page cache, even though <br />it does everything else through the buffer cache. And that just happens to <br />work because we hopefully have physically contiguous blocks, but when that <br />isn't true, the readahead doesn't do squat.<br /><br />It's really quite fundamentally broken. But none of that causes any <br />problems for the VM, since directories cannot be mmap'ed anyway. But it's <br />really pitiful, and it really doesn't work very well. Of course, other <br />filesystems _also_ suck at this, and other operating systems haev even <br />MORE problems, so people don't always seem to realize how horribly <br />horribly broken this all is.<br /><br />I really wish somebody would write a filesystem that did large cold-cache <br />directories well. Open some horrible file manager on /usr/bin with cold <br />caches, and weep. The biggest problem is the inode indirection, but at <br />some point when I looked at why it sucked, it was doing basically <br />synchronous single-buffer reads on the directory too, because readahead <br />didn't work properly.<br /><br />I was hoping that something like SpadFS would actually take off, because <br />it seemed to do a lot of good design choices (having inodes in-line in the <br />directory for when there are no hardlinks is probably a requirement for a <br />good filesystem these days. The separate inode table had its uses, but <br />indirection in a filesystem really does suck, and stat information is too <br />important to be indirect unless it absolutely has to).<br /><br />But I suspect it needs more than somebody who just wants to get his thesis <br />written ;)<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
