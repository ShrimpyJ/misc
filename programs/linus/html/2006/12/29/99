    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/12/16/164">First message in thread</a></li><li><a href="/lkml/2006/12/29/44">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/29/47">Andrei Popa</a></li><li><a href="/lkml/2006/12/29/51">Nick Piggin</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2006/12/29/63">Ingo Molnar</a></li><li><a href="/lkml/2006/12/29/70">Martin Johansson</a></li><li><a href="/lkml/2006/12/29/76">Martin Michlmayr</a><ul><li><a href="/lkml/2006/12/29/83">Stephen Clark</a><ul><li><a href="/lkml/2006/12/29/89">Martin Michlmayr</a></li></ul></li></ul></li><li><a href="/lkml/2006/12/29/145">Andrew Morton</a><ul><li><a href="/lkml/2006/12/29/148">Andrew Morton</a></li><li><a href="/lkml/2006/12/29/149">Linus Torvalds</a><ul><li><a href="/lkml/2006/12/29/154">Theodore Tso</a><ul><li><a href="/lkml/2006/12/29/165">Linus Torvalds</a></li><li><a href="/lkml/2006/12/29/168">Andrew Morton</a></li></ul></li><li><a href="/lkml/2006/12/29/162">Andrew Morton</a><ul><li><a href="/lkml/2006/12/29/169">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Fri, 29 Dec 2006 09:25:27 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Ok, explained.. (was Re: [PATCH] mm: fix page_mkclean_one)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Fri, 29 Dec 2006, Nick Piggin wrote:<br />&gt; <br />&gt; &gt; It still has a tiny tiny race (see the comment), but I bet nobody can really<br />&gt; &gt; hit it in real life anyway, and I know several ways to fix it, so I'm not<br />&gt; &gt; really _that_ worried about it.<br />&gt; <br />&gt; Well the race isn't a data loss one, is it? Just a case where the<br />&gt; pte may be dirty but the page dirty state not accounted for.<br /><br />Right. We should be picking it up eventually, since it's still in the page <br />tables, but if we've lost sight of the page dirtyness we won't react <br />correctly to msync() and/or fdatasync(). So we don't _lose_ the data, we <br />just might not write it out in a timely manner if we ever hit the race.<br /><br />&gt; Can we fix it by just putting the page_mkclean back inside the<br />&gt; TestClearPageDirty check, and re-clearing PG_dirty after redoing<br />&gt; the set_page_dirty?<br /><br />I considered it, but quite frankly, if we did it that way, I'd really like <br />to just fix the whole insane "set_page_dirty()" instead.<br /><br />I think set_page_dirty() should be split up. One thing that confused me <br />mentally was that almost all of the dirty handling was actualyl done only <br />if PG_dirty wasn't already set, so the _bulk_ of set_page_dirty() really <br />ends up being<br /><br />	if (!TestSetPageDirty(page)) {<br />		.. we just marked the page dirty, it was clean before,<br />		   so we need to add it to the queues etc ..<br />	}<br /><br />and that's the part that I (and probably others) always really thought <br />about.<br /><br />But then we have the _one_ thing that runs outside of that "do only once <br />per dirty bit" logic, and it's the buffer dirtying. If we had had two <br />separate operations for this all: "set_dirty_every_time()" and the regular <br />"set_dirty()", I don't think this would have been nearly as confusing.<br /><br />(And then the difference between "__set_page_dirty_nobuffers()" and <br />"__set_page_dirty_buffers()" really boils down to one doing the <br />"everytime" _and_ the "once per dirty" checks and the other one doing just <br />the "once per dirty bit" act - and we could rename the damn things to <br />something saner too).<br /><br />If we split it up that way, then the whole clear_page_dirty_for_io() logic <br />would boil down to<br /><br />	if (TestClearPageDirty(page)) {<br />		if (page_mkclean(page))<br />			set_dirty_every_time();<br />		return 1;<br />	}<br />	return 0;<br /><br />and we wouldn't even need to do any of the "clear dirty again" kind of <br />idiocy, because the "set_dirty_every_time()" stuff is the one that doesn't <br />even care about the state of the PG_dirty bit - it's done regardless, and <br />doesn't really touch it.<br /><br />That's what I wanted to do, but with the current "set_page_dirty()" setup, <br />I think my patch makes reasonable sense.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
