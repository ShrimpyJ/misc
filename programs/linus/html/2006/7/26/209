    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/7/26/182">First message in thread</a></li><li><a href="/lkml/2006/7/26/182">Alan Cox</a><ul><li class="origin"><a href="/lkml/2006/7/26/222">Linus Torvalds</a><ul><li><a href="/lkml/2006/7/26/222">Johannes Schindelin</a><ul><li><a href="/lkml/2006/7/26/224">Linus Torvalds</a><ul><li><a href="/lkml/2006/7/26/225">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2006/7/26/231">Carl Worth</a></li><li><a href="/lkml/2006/7/26/290">(Alex Riesen)</a></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2006/7/26/209/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 26 Jul 2006 10:07:07 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Nasty git corruption problem</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 26 Jul 2006, Alan Cox wrote:<br />&gt; <br />&gt; During a git rebase my machine crashed. Git claims that the rebase is <br />&gt; complete but contains none of the outstanding 30 odd patches. There is <br />&gt; no .dotest directory and git-fsck-objects produces some warnings about a <br />&gt; few dangling objects, but these objects aren't the relevant ones (at <br />&gt; least directly)<br /><br />They definitely should be, unless you actually did a "git prune" (or a <br />"git repack -d").<br /><br />&gt; CVS and SVN in crashes don't lose old stuff, though they are pretty good<br />&gt; at losing the last commit or two.<br /><br />And git should be even harder to get to lose old stuff, because it won't <br />even touch it. <br /><br />&gt; Doing<br />&gt; <br />&gt; for i in *; do (cd $i; for j in *; do git-unpack-file $i$j; done; );<br />&gt; done<br />&gt; <br />&gt; shows that lots of the changes are still somewhere in the object tree<br />&gt; but there seems to be no tool for fixing rather than moaning about<br />&gt; objects dangling, and also no obvious way to fix it.<br /><br />Well, the "dangling objects" really should be the fix. We could make it <br />even more obvious by creating links to the dangling objects in a <br />"lost+found" directory, but I usually just do it by hand.<br /><br />So the thing to do to recover any old stuff is<br /><br /> - do "git-fsck-objects --full".<br /><br />   The "--full" is going to make it much slower, but it means that it will <br />   look _inside_ old packs too, and if you repacked the old stuff, that's <br />   what you want. Besides, if you actually had a real crash in the middle <br />   of a git op, you probably do want this anyway, although quite frankly, <br />   a truly corrupted pack is pretty damn unlikely (the only case I <br />   remember ever seing was due to actual hardware problems)<br /><br />   I _suspect_ you didn't do the "--full". By default, git-fsck-objects <br />   will only look at the unpacked objects, exactly because pack-files are <br />   so stable. So the only reason to use "--full" is if you're really anal <br />   and suspect hw issues, _or_ if you are looking for dangling work that <br />   may be older than your last repack.<br /><br /> - take all the dangling objects, and either list them explicitly to <br />   "gitk" (or other visualizer), or you could save them off as<br /><br />	.git/refs/lost+found/&lt;some-random-names-here&gt;<br /><br />   and then do "gitk --all"<br /><br />In fact, if you want to play around with a git patch, this trivial one <br />should make git-fsck-objects create those lost-and-found entries <br />automatically if you give it the "--lost-n-found" flag.<br /><br />Anyway, I'm pretty sure that git is a hell of a lot _safer_ than either <br />CVS or SVN have ever been, or will ever be.<br /><br />		Linus<br /><br />---<br />diff --git a/fsck-objects.c b/fsck-objects.c<br />index e167f41..fa50190 100644<br />--- a/fsck-objects.c<br />+++ b/fsck-objects.c<br />&#64;&#64; -14,6 +14,7 &#64;&#64; #include "tree-walk.h"<br /> #define REACHABLE 0x0001<br /> #define SEEN      0x0002<br /> <br />+static int lost_and_found = 0;<br /> static int show_root = 0;<br /> static int show_tags = 0;<br /> static int show_unreachable = 0;<br />&#64;&#64; -102,8 +103,23 &#64;&#64; static void check_connectivity(void)<br /> 		}<br /> <br /> 		if (!obj-&gt;used) {<br />-			printf("dangling %s %s\n", typename(obj-&gt;type),<br />-			       sha1_to_hex(obj-&gt;sha1));<br />+			char *hex = sha1_to_hex(obj-&gt;sha1);<br />+			printf("dangling %s %s\n", typename(obj-&gt;type), hex);<br />+			if (lost_and_found) {<br />+				int fd, ret;<br />+				mkdir(git_path("refs/lost+found"), 0777);<br />+				fd = open(git_path("refs/lost+found/%s", hex), O_CREAT | O_TRUNC | O_WRONLY, 0666);<br />+				if (fd &lt; 0) {<br />+					perror("lost+found");<br />+					continue;<br />+				}<br />+				hex[40] = '\n';<br />+				ret = xwrite(fd, hex, 41);<br />+				close(fd);<br />+				if (ret != 41)<br />+					error("unable to write to lost+found");<br />+				continue;<br />+			}<br /> 		}<br /> 	}<br /> }<br />&#64;&#64; -514,6 +530,10 &#64;&#64; int main(int argc, char **argv)<br /> 			check_strict = 1;<br /> 			continue;<br /> 		}<br />+		if (!strcmp(arg, "--lost-n-found")) {<br />+			lost_and_found = 1;<br />+			continue;<br />+		}<br /> 		if (*arg == '-')<br /> 			usage("git-fsck-objects [--tags] [--root] [[--unreachable] [--cache] [--full] [--strict] &lt;head-sha1&gt;*]");<br /> 	}<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
