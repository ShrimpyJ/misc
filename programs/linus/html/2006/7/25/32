    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/6/26/384">First message in thread</a></li><li><a href="/lkml/2006/7/25/5">Andrew Morton</a><ul><li><a href="/lkml/2006/7/25/20">(Eric W. Biederman)</a></li><li><a href="/lkml/2006/7/25/23">Linus Torvalds</a><ul><li><a href="/lkml/2006/7/25/24">"H. Peter Anvin"</a><ul><li><a href="/lkml/2006/7/25/28">Linus Torvalds</a><ul><li><a href="/lkml/2006/7/25/38">"H. Peter Anvin"</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Jul 2006 23:00:05 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 1/1] Add efi e820 memory mapping on x86 [try #1]</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Mon, 24 Jul 2006, Linus Torvalds wrote:<br />&gt; <br />&gt; Sadly, Apple bought into the whole "BIOS bad, EFI good" hype, so we now <br />&gt; have x86 machines with EFI as the native boot protocol.<br /><br />Btw, that's not totally new. I think some people played around with EFI on <br />x86 even before Apple came around. And don't get me wrong - the problem <br />with EFI is that it actually superficially looks much better than the <br />BIOS, but in practice it ends up being one of those things where it has <br />few real advantages, and often just a lot of extra complexity because of <br />the "new and improved" interfaces that were largely defined by a <br />committee.<br /><br />I think a lot of the "new standards" tend to be that way. Trying to solve <br />a lot of problems and allow everybody to add their own features, instead <br />of just saying that it's better to just standardize the hardware.<br /><br />For example, instead of ACPI, we could just have had standardized hardware <br />(and a few tables to define things like numbers of CPU's etc). It would <br />have been simpler for everybody. But no, people seem to think that it's <br />somehow "better" to have wild and crazy hardware, and then have a really <br />complicated way of describing it - and driving it - dynamically.<br /><br />So EFI has this cool shell, a loadable driver framework, and other nice <br />features. Where "nice" obviously means "much more complex than the simple <br />things they designed in the late seventies back when people were stupid <br />and just wanted things to work".<br /><br />Of course, it's somewhat questionable whether people have actually gotten <br />smarter or stupider in the last 30 years. It's not enough time for <br />evolution to have increased our brain capacity, but it certainly _is_ <br />enough time for most people to no longer understand how hardware works any <br />more.<br /><br />Not a good combination, in other words.<br /><br />Not that I'd ever claim that the BIOS is wonderful either, but at least <br />everybody knows that the BIOS is just a bootloader, and doesn't try to <br />make it anything else. <br /><br />The absolutely biggest advantage of a BIOS is that it's _so_ inconvenient <br />and obviously oldfashioned, that you have to be crazy to want to do <br />anything serious in it. Real mode, 16-bit code is actually an _advantage_ <br />in that sense. People know how to treat it, and don't get any ideas about <br />it being some grandiose framework for anything else than "just load the OS <br />and get the hell out of there".<br /><br />			Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
