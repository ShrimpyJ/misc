    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/11/16/177">First message in thread</a></li><li><a href="/lkml/2006/11/16/182">Ingo Molnar</a><ul><li><a href="/lkml/2006/11/16/190">Thomas Gleixner</a><ul><li class="origin"><a href="/lkml/2006/11/16/238">Linus Torvalds</a><ul><li><a href="/lkml/2006/11/16/238">Alan Stern</a><ul><li><a href="/lkml/2006/11/16/245">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2006/11/16/309">"Paul E. McKenney"</a></li></ul></li></ul></li><li><a href="/lkml/2006/11/16/193">Peter Zijlstra</a></li><li><a href="/lkml/2006/11/16/211">Andrew Morton</a><ul><li><a href="/lkml/2006/11/16/212">Thomas Gleixner</a></li></ul></li><li><a href="/lkml/2006/11/20/250">Linus Torvalds</a></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2006/11/16/227/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 16 Nov 2006 13:47:48 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] cpufreq: mark cpufreq_tsc() as core_initcall_sync</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Thu, 16 Nov 2006, Thomas Gleixner wrote:<br />&gt; <br />&gt; Here is the i386/sparc fixup<br /><br />Gag me with a volvo.<br /><br />This is disgusting, but I would actually prefer the following version over <br />the patches I've seen, because<br /><br /> - it doesn't end up having any architecture-specific parts<br /><br /> - it doesn't use the new "xxx_sync()" thing that I'm not even sure we <br />   should be using.<br /><br /> - it makes it clear that this should be fixed, preferably by just having <br />   some way to initialize SRCU structs staticalyl. If we get that, the fix <br />   is to just replace the horrible "initialize by hand" with a static <br />   initializer once and for all.<br /><br />Hmm?<br /><br />Totally untested, but it compiles and it _looks_ sane. The overhead of the <br />function call should be minimal, once things are initialized.<br /><br />Paul, it would be _really_ nice to have some way to just initialize that <br />SRCU thing statically. This kind of crud is just crazy.<br /><br />Comments?<br /><br />		Linus<br /><br />----<br />diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c<br />index 86e69b7..02326b2 100644<br />--- a/drivers/cpufreq/cpufreq.c<br />+++ b/drivers/cpufreq/cpufreq.c<br />&#64;&#64; -52,14 +52,39 &#64;&#64; static void handle_update(void *data);<br />  * The mutex locks both lists.<br />  */<br /> static BLOCKING_NOTIFIER_HEAD(cpufreq_policy_notifier_list);<br />-static struct srcu_notifier_head cpufreq_transition_notifier_list;<br /> <br />-static int __init init_cpufreq_transition_notifier_list(void)<br />+/*<br />+ * This is horribly horribly ugly.<br />+ *<br />+ * We really want to initialize the transition notifier list<br />+ * statically and just once, but there is no static way to<br />+ * initialize a srcu lock, so we instead make up all this nasty<br />+ * infrastructure to make sure it's initialized when we use it.<br />+ *<br />+ * Bleaargh.<br />+ */<br />+static struct srcu_notifier_head *cpufreq_transition_notifier_list(void)<br /> {<br />-	srcu_init_notifier_head(&amp;cpufreq_transition_notifier_list);<br />-	return 0;<br />+	static struct srcu_notifier_head *initialized;<br />+	struct srcu_notifier_head *ret;<br />+<br />+	ret = initialized;<br />+	if (!ret) {<br />+		static DEFINE_MUTEX(init_lock);<br />+<br />+		mutex_lock(&amp;init_lock);<br />+		ret = initialized;<br />+		if (!ret) {<br />+			static struct srcu_notifier_head list_head;<br />+			ret = &amp;list_head;<br />+			srcu_init_notifier_head(ret);<br />+			smp_wmb();<br />+			initialized = ret;<br />+		}<br />+		mutex_unlock(&amp;init_lock);<br />+	}<br />+	return ret;<br /> }<br />-core_initcall(init_cpufreq_transition_notifier_list);<br /> <br /> static LIST_HEAD(cpufreq_governor_list);<br /> static DEFINE_MUTEX (cpufreq_governor_mutex);<br />&#64;&#64; -268,14 +293,14 &#64;&#64; void cpufreq_notify_transition(struct cp<br /> 				freqs-&gt;old = policy-&gt;cur;<br /> 			}<br /> 		}<br />-		srcu_notifier_call_chain(&amp;cpufreq_transition_notifier_list,<br />+		srcu_notifier_call_chain(cpufreq_transition_notifier_list(),<br /> 				CPUFREQ_PRECHANGE, freqs);<br /> 		adjust_jiffies(CPUFREQ_PRECHANGE, freqs);<br /> 		break;<br /> <br /> 	case CPUFREQ_POSTCHANGE:<br /> 		adjust_jiffies(CPUFREQ_POSTCHANGE, freqs);<br />-		srcu_notifier_call_chain(&amp;cpufreq_transition_notifier_list,<br />+		srcu_notifier_call_chain(cpufreq_transition_notifier_list(),<br /> 				CPUFREQ_POSTCHANGE, freqs);<br /> 		if (likely(policy) &amp;&amp; likely(policy-&gt;cpu == freqs-&gt;cpu))<br /> 			policy-&gt;cur = freqs-&gt;new;<br />&#64;&#64; -1055,7 +1080,7 &#64;&#64; static int cpufreq_suspend(struct sys_de<br /> 		freqs.old = cpu_policy-&gt;cur;<br /> 		freqs.new = cur_freq;<br /> <br />-		srcu_notifier_call_chain(&amp;cpufreq_transition_notifier_list,<br />+		srcu_notifier_call_chain(cpufreq_transition_notifier_list(),<br /> 				    CPUFREQ_SUSPENDCHANGE, &amp;freqs);<br /> 		adjust_jiffies(CPUFREQ_SUSPENDCHANGE, &amp;freqs);<br /> <br />&#64;&#64; -1137,7 +1162,7 &#64;&#64; static int cpufreq_resume(struct sys_dev<br /> 			freqs.new = cur_freq;<br /> <br /> 			srcu_notifier_call_chain(<br />-					&amp;cpufreq_transition_notifier_list,<br />+					cpufreq_transition_notifier_list(),<br /> 					CPUFREQ_RESUMECHANGE, &amp;freqs);<br /> 			adjust_jiffies(CPUFREQ_RESUMECHANGE, &amp;freqs);<br /> <br />&#64;&#64; -1183,7 +1208,7 &#64;&#64; int cpufreq_register_notifier(struct not<br /> 	switch (list) {<br /> 	case CPUFREQ_TRANSITION_NOTIFIER:<br /> 		ret = srcu_notifier_chain_register(<br />-				&amp;cpufreq_transition_notifier_list, nb);<br />+				cpufreq_transition_notifier_list(), nb);<br /> 		break;<br /> 	case CPUFREQ_POLICY_NOTIFIER:<br /> 		ret = blocking_notifier_chain_register(<br />&#64;&#64; -1215,7 +1240,7 &#64;&#64; int cpufreq_unregister_notifier(struct n<br /> 	switch (list) {<br /> 	case CPUFREQ_TRANSITION_NOTIFIER:<br /> 		ret = srcu_notifier_chain_unregister(<br />-				&amp;cpufreq_transition_notifier_list, nb);<br />+				cpufreq_transition_notifier_list(), nb);<br /> 		break;<br /> 	case CPUFREQ_POLICY_NOTIFIER:<br /> 		ret = blocking_notifier_chain_unregister(<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
