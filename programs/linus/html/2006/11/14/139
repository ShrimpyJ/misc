    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/11/7/345">First message in thread</a></li><li><a href="/lkml/2006/11/13/293">(Eric W. Biederman)</a><ul><li><a href="/lkml/2006/11/14/31">Ingo Molnar</a><ul><li><a href="/lkml/2006/11/14/32">Arjan van de Ven</a></li><li><a href="/lkml/2006/11/14/97">Komuro</a></li><li class="origin"><a href="/lkml/2006/11/14/162">Linus Torvalds</a><ul><li><a href="/lkml/2006/11/14/162">(Eric W. Biederman)</a><ul><li><a href="/lkml/2006/11/14/308">Linus Torvalds</a></li><li><a href="/lkml/2006/11/14/328">Linus Torvalds</a></li><li><a href="/lkml/2006/11/15/113">Komuro</a></li></ul></li><li><a href="/lkml/2006/11/15/168">Linus Torvalds</a><ul><li><a href="/lkml/2006/11/15/230">Ingo Molnar</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2006/11/14/139/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 14 Nov 2006 08:10:48 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [patch] irq: do not mask interrupts by default</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Tue, 14 Nov 2006, Ingo Molnar wrote:<br />&gt; <br />&gt; 1) disable_irq() is relatively rare (used in about 10% of drivers, but<br />&gt; there it's overwhelmingly used in some slowpath) so it's performance<br />&gt; uncritical.<br /><br />Well, the thing is, the _replay_ if it does happen, is going to be really <br />really slow compared to the masking. So at that point, it may well be a <br />net performance downside if the masking is going to almost always have an <br />interrupt happen while the thing is masked. I dunno.<br /><br />There's another thing too:<br /><br />For level-triggered interrupts, I _really_ don't think we should do this. <br />The code inside the masked region is sometimes "setup code", which will do <br />things that _will_ raise an interrupt, but may read the status register or <br />whatever to then unraise it. So in that case, your patch will generate <br />different behaviour, something that I really don't want to introduce at <br />this point in the 2.6.19 series.<br /><br />&gt; 2) missing an IRQ while the line is masked is often a lethal regression <br />&gt; to the user. An IRQ could be missed even if we think that the IRQ line <br />&gt; is 'level-triggered'.<br /><br />If it's level-triggered, it's going to be missed only if it's de-asserted <br />by code inside the masked region, and that is what we have always done on <br />purpose, so "missing" it is the right thing to do. It's what we have <br />tested all level-triggered interrupts with for the last 15+ years, and <br />it's been part of the semantics for masking.<br /><br />So I absolutely do _not_ think your change is improved semantics. It's new <br />semantics, and illogical. If the driver masked the irq line, did some <br />testing that raises and clears it again ("let's check if this version of <br />the chip raises the interrupt when we do XYZZY"), then the logical thing <br />to do would be to not cause the interrupt to happen.<br /><br />Of course, for edge-triggered APIC interrupts, we _have_ to replay the irq <br />(since we don't have any way of even *knowing* whether we might get it <br />again), but for level-triggered and for the old legacy i8259 controller <br />that gets it right for edges anwyay, we should _not_ send the spurious <br />interrupt that is no longer active.<br /><br />And a lot of code has been tested with either just the i8259 (old machines <br />without any APIC) or with PCI-only devices (which are always level- <br />triggered), so the fact that edge-triggered things have always seen the <br />potential for spurious interrupts is not a reasong to say "well, they have <br />to handle it anyway". True PCI drivers generally do _not_ have to handle <br />the crazy case, and generally have never seen it.<br /><br />&gt; so my patch changes the default irq-disable logic of /all/ controllers <br />&gt; to "delayed disable". (IRQ chips can still override this by providing a <br />&gt; different chip-&gt;disable method that just clones their -&gt;mask method, if <br />&gt; it is absolutely sure that no IRQs can be lost while masked)<br /><br />I really think we should do this just for APIC edge triggered interrupts, <br />ie keep the old behaviour.<br /><br />Also, I worry a bit about the patch:<br /><br />&gt; &#64;&#64; -272,8 +268,11 &#64;&#64; handle_simple_irq(unsigned int irq, stru<br />&gt;  	kstat_cpu(cpu).irqs[irq]++;<br />&gt;  <br />&gt;  	action = desc-&gt;action;<br />&gt; -	if (unlikely(!action || (desc-&gt;status &amp; IRQ_DISABLED)))<br />&gt; +	if (unlikely(!action || (desc-&gt;status &amp; IRQ_DISABLED))) {<br />&gt; +		if (desc-&gt;chip-&gt;mask)<br />&gt; +			desc-&gt;chip-&gt;mask(irq);<br />&gt;  		goto out_unlock;<br />&gt; +	}<br /><br />The simple-irq case too? That's not even going to replay the thing? So now <br />you just mask (without replaying) simple irqs, but then the other irqs you <br />mask and replay.. See above on why I don't think this is necessarily a bug <br />(since masking is almost always the right thing _anyway_), but now it will <br />*STILL* depend on some internal implementation decision on whether the <br />replay happens at all. I'd much rather have the replay decision be based <br />on hard physical data: we replay _only_ for edge-triggered interrupts, and <br />_only_ for controllers that need it. <br /><br />In other words, I think we should just make APIC-edge have the "please <br />delay masking and replay" bit, and nobody else.<br /><br />Can you send that patch (for both x86 and x86-64), and we can ask Komuro <br />to test it. That would be the "same behaviour as we've always had" thing, <br />which I think is also the _right_ behaviour.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
