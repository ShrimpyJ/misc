    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/11/26/75">First message in thread</a></li><li><a href="/lkml/2006/11/26/81">Linus Torvalds</a><ul><li><a href="/lkml/2006/11/26/84">Russell King</a><ul><li class="origin"><a href="/lkml/2006/11/26/98">Linus Torvalds</a><ul><li><a href="/lkml/2006/11/26/98">Russell King</a></li><li><a href="/lkml/2006/11/27/161">Ralf Baechle</a><ul><li><a href="/lkml/2006/11/27/223">Alexey Dobriyan</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2006/11/26/97/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 26 Nov 2006 16:29:00 -0800 (PST)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Build breakage ...</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 26 Nov 2006, Russell King wrote:<br />&gt; &gt; <br />&gt; &gt; Ralf, Russell, does this work for you guys?<br />&gt; <br />&gt; Not at all.  It creates even more problems for me, with this circular<br />&gt; dependency:<br /><br />Ok. I just reverted it then. <br /><br />Pls verify that this is all good, and I didn't mess anything up due to the <br />manual conflict resolution.<br /><br />		Linus<br /><br />---<br />commit b8e6ec865fd1d8838b6ce9516977b65e9f08f876<br />Author: Linus Torvalds &lt;torvalds&#64;woody.osdl.org&gt;<br />Date:   Sun Nov 26 16:27:17 2006 -0800<br /><br />    Revert "[PATCH] Enforce "unsigned long flags;" when spinlocking"<br />    <br />    This reverts commit ee3ce191e8eaa4cc15c51a28b34143b36404c4f5, since it<br />    broke on at least ARM, MIPS and PA-RISC due to complicated header file<br />    dependencies.<br />    <br />    Conflicts in include/linux/spinlock.h (due to the "nested" variety<br />    fixes) fixed up by hand.<br />    <br />    Cc: Alexey Dobriyan &lt;adobriyan&#64;gmail.com&gt;<br />    Cc: Ralf Baechle &lt;ralf&#64;linux-mips.org&gt;<br />    Cc: Kyle McMartin &lt;kyle&#64;parisc-linux.org&gt;<br />    Cc: Russell King &lt;rmk+lkml&#64;arm.linux.org.uk&gt;<br />    Signed-off-by: Linus Torvalds &lt;torvalds&#64;osdl.org&gt;<br /><br />diff --git a/include/linux/irqflags.h b/include/linux/irqflags.h<br />index 4fe740b..412e025 100644<br />--- a/include/linux/irqflags.h<br />+++ b/include/linux/irqflags.h<br />&#64;&#64; -11,12 +11,6 &#64;&#64;<br /> #ifndef _LINUX_TRACE_IRQFLAGS_H<br /> #define _LINUX_TRACE_IRQFLAGS_H<br /> <br />-#define BUILD_CHECK_IRQ_FLAGS(flags)					\<br />-	do {								\<br />-		BUILD_BUG_ON(sizeof(flags) != sizeof(unsigned long));	\<br />-		typecheck(unsigned long, flags);			\<br />-	} while (0)<br />-<br /> #ifdef CONFIG_TRACE_IRQFLAGS<br />   extern void trace_hardirqs_on(void);<br />   extern void trace_hardirqs_off(void);<br />&#64;&#64; -56,15 +50,10 &#64;&#64;<br /> #define local_irq_disable() \<br /> 	do { raw_local_irq_disable(); trace_hardirqs_off(); } while (0)<br /> #define local_irq_save(flags) \<br />-	do {					\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);	\<br />-		raw_local_irq_save(flags);	\<br />-		trace_hardirqs_off();		\<br />-	} while (0)<br />+	do { raw_local_irq_save(flags); trace_hardirqs_off(); } while (0)<br /> <br /> #define local_irq_restore(flags)				\<br /> 	do {							\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);			\<br /> 		if (raw_irqs_disabled_flags(flags)) {		\<br /> 			raw_local_irq_restore(flags);		\<br /> 			trace_hardirqs_off();			\<br />&#64;&#64; -80,16 +69,8 &#64;&#64;<br />  */<br /> # define raw_local_irq_disable()	local_irq_disable()<br /> # define raw_local_irq_enable()		local_irq_enable()<br />-# define raw_local_irq_save(flags)		\<br />-	do {					\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);	\<br />-		local_irq_save(flags);		\<br />-	} while (0)<br />-# define raw_local_irq_restore(flags)		\<br />-	do {					\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);	\<br />-		local_irq_restore(flags);	\<br />-	} while (0)<br />+# define raw_local_irq_save(flags)	local_irq_save(flags)<br />+# define raw_local_irq_restore(flags)	local_irq_restore(flags)<br /> #endif /* CONFIG_TRACE_IRQFLAGS_SUPPORT */<br /> <br /> #ifdef CONFIG_TRACE_IRQFLAGS_SUPPORT<br />&#64;&#64; -99,11 +80,7 &#64;&#64;<br /> 		raw_safe_halt();				\<br /> 	} while (0)<br /> <br />-#define local_save_flags(flags)			\<br />-	do {					\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);	\<br />-		raw_local_save_flags(flags);	\<br />-	} while (0)<br />+#define local_save_flags(flags)		raw_local_save_flags(flags)<br /> <br /> #define irqs_disabled()						\<br /> ({								\<br />&#64;&#64; -113,11 +90,7 &#64;&#64;<br /> 	raw_irqs_disabled_flags(flags);				\<br /> })<br /> <br />-#define irqs_disabled_flags(flags)	\<br />-({					\<br />-	BUILD_CHECK_IRQ_FLAGS(flags);	\<br />-	raw_irqs_disabled_flags(flags);	\<br />-})<br />+#define irqs_disabled_flags(flags)	raw_irqs_disabled_flags(flags)<br /> #endif		/* CONFIG_X86 */<br /> <br /> #endif<br />diff --git a/include/linux/spinlock.h b/include/linux/spinlock.h<br />index 57f670d..8451052 100644<br />--- a/include/linux/spinlock.h<br />+++ b/include/linux/spinlock.h<br />&#64;&#64; -52,7 +52,6 &#64;&#64;<br /> #include &lt;linux/thread_info.h&gt;<br /> #include &lt;linux/kernel.h&gt;<br /> #include &lt;linux/stringify.h&gt;<br />-#include &lt;linux/irqflags.h&gt;<br /> <br /> #include &lt;asm/system.h&gt;<br /> <br />&#64;&#64; -184,52 +183,24 &#64;&#64; do {								\<br /> #define read_lock(lock)			_read_lock(lock)<br /> <br /> #if defined(CONFIG_SMP) || defined(CONFIG_DEBUG_SPINLOCK)<br />-#define spin_lock_irqsave(lock, flags)			\<br />-	do {						\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);		\<br />-		flags = _spin_lock_irqsave(lock);	\<br />-	} while (0)<br />-#define read_lock_irqsave(lock, flags)			\<br />-	do {						\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);		\<br />-		flags = _read_lock_irqsave(lock);	\<br />-	} while (0)<br />-#define write_lock_irqsave(lock, flags)			\<br />-	do {						\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);		\<br />-		flags = _write_lock_irqsave(lock);	\<br />-	} while (0)<br />+<br />+#define spin_lock_irqsave(lock, flags)	flags = _spin_lock_irqsave(lock)<br />+#define read_lock_irqsave(lock, flags)	flags = _read_lock_irqsave(lock)<br />+#define write_lock_irqsave(lock, flags)	flags = _write_lock_irqsave(lock)<br /> <br /> #ifdef CONFIG_DEBUG_LOCK_ALLOC<br />-#define spin_lock_irqsave_nested(lock, flags, subclass)			\<br />-	do {								\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);				\<br />-		flags = _spin_lock_irqsave_nested(lock, subclass);	\<br />-	} while (0)<br />+#define spin_lock_irqsave_nested(lock, flags, subclass) \<br />+	flags = _spin_lock_irqsave_nested(lock, subclass)<br /> #else<br />-#define spin_lock_irqsave_nested(lock, flags, subclass)			\<br />-	do {								\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);				\<br />-		flags = _spin_lock_irqsave(lock);			\<br />-	} while (0)<br />+#define spin_lock_irqsave_nested(lock, flags, subclass) \<br />+	flags = _spin_lock_irqsave(lock)<br /> #endif<br /> <br /> #else<br />-#define spin_lock_irqsave(lock, flags)			\<br />-	do {						\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);		\<br />-		_spin_lock_irqsave(lock, flags);	\<br />-	} while (0)<br />-#define read_lock_irqsave(lock, flags)			\<br />-	do {						\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);		\<br />-		_read_lock_irqsave(lock, flags);	\<br />-	} while (0)<br />-#define write_lock_irqsave(lock, flags)			\<br />-	do {						\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);		\<br />-		_write_lock_irqsave(lock, flags);	\<br />-	} while (0)<br />+<br />+#define spin_lock_irqsave(lock, flags)	_spin_lock_irqsave(lock, flags)<br />+#define read_lock_irqsave(lock, flags)	_read_lock_irqsave(lock, flags)<br />+#define write_lock_irqsave(lock, flags)	_write_lock_irqsave(lock, flags)<br /> #define spin_lock_irqsave_nested(lock, flags, subclass)	\<br /> 	spin_lock_irqsave(lock, flags)<br /> <br />&#64;&#64; -268,24 +239,15 &#64;&#64; do {								\<br /> #endif<br /> <br /> #define spin_unlock_irqrestore(lock, flags) \<br />-	do {						\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);		\<br />-		_spin_unlock_irqrestore(lock, flags);	\<br />-	} while (0)<br />+					_spin_unlock_irqrestore(lock, flags)<br /> #define spin_unlock_bh(lock)		_spin_unlock_bh(lock)<br /> <br /> #define read_unlock_irqrestore(lock, flags) \<br />-	do {						\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);		\<br />-		_read_unlock_irqrestore(lock, flags);	\<br />-	} while (0)<br />+					_read_unlock_irqrestore(lock, flags)<br /> #define read_unlock_bh(lock)		_read_unlock_bh(lock)<br /> <br /> #define write_unlock_irqrestore(lock, flags) \<br />-	do {						\<br />-		BUILD_CHECK_IRQ_FLAGS(flags);		\<br />-		_write_unlock_irqrestore(lock, flags);	\<br />-	} while (0)<br />+					_write_unlock_irqrestore(lock, flags)<br /> #define write_unlock_bh(lock)		_write_unlock_bh(lock)<br /> <br /> #define spin_trylock_bh(lock)	__cond_lock(lock, _spin_trylock_bh(lock))<br />&#64;&#64; -299,7 +261,6 &#64;&#64; do {								\<br /> <br /> #define spin_trylock_irqsave(lock, flags) \<br /> ({ \<br />-	BUILD_CHECK_IRQ_FLAGS(flags); \<br /> 	local_irq_save(flags); \<br /> 	spin_trylock(lock) ? \<br /> 	1 : ({ local_irq_restore(flags); 0; }); \<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
