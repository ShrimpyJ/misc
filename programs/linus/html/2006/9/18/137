    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/9/17/158">First message in thread</a></li><li><a href="/lkml/2006/9/17/158">Chuck Ebbert</a><ul><li><a href="/lkml/2006/9/18/13">Andrew Morton</a><ul><li><a href="/lkml/2006/9/18/24">Mike Galbraith</a></li><li class="origin"><a href="/lkml/2006/9/18/138">Linus Torvalds</a><ul><li><a href="/lkml/2006/9/18/138">Ingo Molnar</a></li><li><a href="/lkml/2006/9/18/146">Andi Kleen</a><ul><li><a href="/lkml/2006/9/18/149">Ingo Molnar</a></li><li><a href="/lkml/2006/9/18/161">Linus Torvalds</a></li><li><a href="/lkml/2006/9/18/166">Benjamin LaHaise</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2006/9/18/137/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 18 Sep 2006 08:11:22 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Sysenter crash with Nested Task Bit set</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sun, 17 Sep 2006, Andrew Morton wrote:<br />&gt; &gt; <br />&gt; &gt; I'll take your word that it crashes.<br />&gt; <br />&gt; It doesn't for me - I get a segfault.<br />&gt; <br />&gt; That's on a PIII.  Are recenter CPUs different in this regard?<br /><br />No, I don't think they are, but I think your exact machine matters. For <br />example, an SMP machine will behave differently, because NT will be set <br />only on one CPU.<br /><br />I _think_ that the problem is that once NT gets set in kernel space (and <br />sysenter is the only way to do that, since the normal fault paths will <br />clear NT), it stays set, even across a context switch. Nothing ever <br />reloads a kernel eflags, because we "trust" eflags in kernel space.<br /><br />So Chuck's patch doesn't really fix it - because a preemptible kernel <br />might context switch long before the original task that set eflags, and <br />thus NT in eflags might migrate to somebody else, and while we'll <br />eventually take the "invalid TSS" error and then Chuck's patch will cause <br />us to clear it, we might be taking the exception for the wrong task (and <br />thus kill the wrong guy).<br /><br />And sysenter really is very special because of the weak trap semantics. <br />Damn. We could either fix it in the sysenter code-path, or in the <br />task-switch one, and both of them are timing-critical, but task switching <br />perhaps just a tad less so.<br /><br />If we fix it in the task-switch code, we shouldn't need any other changes <br />(ie Chuck's change is unnecessary too), because then the process that sets <br />NT will happily die (with NT set), but switch away to something else and <br />nobody else will be affected.<br /><br />So if I'm right, then this patch _should_ fix it. UNTESTED (and the <br />"ref_from_fork" special case doesn't clear NT, so it's strictly incompete, <br />but maybe somebody can test this?)<br /><br />Hmm? Ingo? Comments?<br /><br />Andi? I don't know if x86-64 honors NT in 64-bit mode, but if it does, it <br />needs something similar (assuming this works).<br /><br />		Linus<br /><br />---<br />diff --git a/include/asm-i386/system.h b/include/asm-i386/system.h<br />index 49928eb..f6e4260 100644<br />--- a/include/asm-i386/system.h<br />+++ b/include/asm-i386/system.h<br />&#64;&#64; -13,7 +13,8 &#64;&#64; extern struct task_struct * FASTCALL(__s<br /> <br /> #define switch_to(prev,next,last) do {					\<br /> 	unsigned long esi,edi;						\<br />-	asm volatile("pushl %%ebp\n\t"					\<br />+	asm volatile("pushfl\n\t"		/* Save flags */	\<br />+		     "pushl %%ebp\n\t"					\<br /> 		     "movl %%esp,%0\n\t"	/* save ESP */		\<br /> 		     "movl %5,%%esp\n\t"	/* restore ESP */	\<br /> 		     "movl $1f,%1\n\t"		/* save EIP */		\<br />&#64;&#64; -21,6 +22,7 &#64;&#64; #define switch_to(prev,next,last) do {		<br /> 		     "jmp __switch_to\n"				\<br /> 		     "1:\t"						\<br /> 		     "popl %%ebp\n\t"					\<br />+		     "popfl"						\<br /> 		     :"=m" (prev-&gt;thread.esp),"=m" (prev-&gt;thread.eip),	\<br /> 		      "=a" (last),"=S" (esi),"=D" (edi)			\<br /> 		     :"m" (next-&gt;thread.esp),"m" (next-&gt;thread.eip),	\<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
