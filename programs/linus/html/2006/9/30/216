    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/9/30/147">First message in thread</a></li><li><a href="/lkml/2006/9/30/180">Linus Torvalds</a><ul><li><a href="/lkml/2006/9/30/183">Ingo Molnar</a></li><li><a href="/lkml/2006/9/30/190">Andi Kleen</a><ul><li><a href="/lkml/2006/9/30/198">Andi Kleen</a><ul><li><a href="/lkml/2006/9/30/204">"Eric Rannaud"</a><ul><li><a href="/lkml/2006/9/30/205">Andi Kleen</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2006/10/4/75">"Jan Beulich"</a><ul><li><a href="/lkml/2006/10/4/168">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sat, 30 Sep 2006 15:54:20 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: BUG-lockdep and freeze (was: Arrr! Linux 2.6.18)</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Sat, 30 Sep 2006, Andi Kleen wrote:<br />&gt; <br />&gt; That wouldn't work with interrupt stacks.<br /><br />Andi.<br /><br />Please spend even just a few minutes looking at the old i386 code.<br /><br />&gt; The old unwinder code had a state machine to deal with them, but it was <br />&gt; distingustingly complicated (there are nasty corner cases where you can <br />&gt; be in multiple interrupt stacks nested). I'm not sure we would have <br />&gt; really wanted to retain that.<br /><br />Here's what the old code did:<br /><br />	frameptr = initialize frame code<br />	while (1) {<br />		struct thread_info *context;<br />		context = (struct thread_info *)<br />			((unsigned long)stack &amp; (~(THREAD_SIZE - 1)));<br />		frameptr = print_context_stack(context, stack, frameptr, log_lvl);<br />		stack = (unsigned long*)context-&gt;previous_esp;<br />		if (!stack)<br />			break;<br />		printk(" =======================\n");<br />	}<br /><br />it it really was that simple. The actual frame-following code was in <br />"print_context_stack()", and it works entirely within a single stack page, <br />and returns once it is outside that stack page. <br /><br />There is absolutely ZERO problem with new pages through interrupt stacks <br />etc, because we don't even trust the stack contents for that, we just <br />follow the stack context pointers that we _can_ trust.<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
