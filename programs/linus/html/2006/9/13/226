    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2006/9/13/184">First message in thread</a></li><li><a href="/lkml/2006/9/13/184">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2006/9/13/190">Arjan van de Ven</a><ul><li><a href="/lkml/2006/9/13/198">Alan Cox</a><ul><li><a href="/lkml/2006/9/13/204">Jeremy Fitzhardinge</a></li></ul></li><li><a href="/lkml/2006/9/13/208">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2006/9/13/221">Zachary Amsden</a><ul><li><a href="/lkml/2006/9/13/224">Alan Cox</a></li><li><a href="/lkml/2006/9/13/225">Jeremy Fitzhardinge</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2006/9/13/201">"linux-os \(Dick Johnson\)"</a><ul><li><a href="/lkml/2006/9/13/205">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2006/9/13/211">"linux-os \(Dick Johnson\)"</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2006/9/13/231">Linus Torvalds</a><ul><li><a href="/lkml/2006/9/13/231">Jeremy Fitzhardinge</a><ul><li><a href="/lkml/2006/9/13/233">Linus Torvalds</a><ul><li><a href="/lkml/2006/9/13/237">Jeremy Fitzhardinge</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2006/9/14/36">Andi Kleen</a></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 13 Sep 2006 14:21:49 -0700 (PDT)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Assignment of GDT entries</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody"><br /><br />On Wed, 13 Sep 2006, Jeremy Fitzhardinge wrote:<br />&gt; *<br />&gt; *   4 - unused			&lt;==== new cacheline<br />&gt; *   5 - unused<br /><br />These _used_ to be the "user CS/DS" respectively, but that got changed <br />around by me when did the "sysenter" support.<br /><br />The sysenter logic (or, more properly, the sysexit one) requires that the <br />user code segment number is the same as the kernel code segment +2 (ie <br />"+16" in actual selector term). And the user data segment needs to be +3.<br /><br />So with sysenter, we needed a block of four contiguous segments: kernel <br />code, kernel data, user code, user data (in that order).<br /><br />There are other possible things to do, but what we did was to move the <br />user segments up to just above the kernel ones (which we left in place).<br /><br />&gt; *   6 - TLS segment #1			[ glibc's TLS segment ]<br />&gt; *   7 - TLS segment #2			[ Wine's %fs Win32 segment ]<br />&gt; *   8 - TLS segment #3<br />&gt; *   9 - reserved<br />&gt; *  10 - reserved<br />&gt; *  11 - reserved<br /><br />These are really reserved, I think we left them that way on purpose so <br />that if we wanted to, we can allow more of the contiguous per-thread <br />state. And segment #8 (ie 0x40) is special (TLS segment #3), of course. <br />Anybody who wants to emulate windows or use the BIOS needs to use that for <br />their "common BIOS area" thing, iirc.<br /><br />I think it's generally a good idea to keep the low segment reserved (or at <br />least free to use for whatever user code), since if there are any special <br />magic segment descriptor numbers, they tend to be in that low range. The <br />#8/0x40 thing is just an example.<br /><br />&gt; What are entries 1-3 and 9-11 reserved for?  Must they be unused for some<br />&gt; reason, or is there some proposed use that has not been impemented yet?<br />&gt; <br />&gt; Also, is there a particular reason kernel GDT entries start at 12?  Would<br />&gt; there be a problem in using either 4 or 5 for a kernel GDT descriptor?<br /><br />See above. The kernel and user segments have to be moved as a block of <br />four, and obviously we'd like to keep them in the same cacheline too. <br />Also, the cacheline that contains segment #8/0x40 is not available, so <br />that together with keeping low segments for user space explains why it's <br />at segment numbers #12-15 (selectors 0x60/0x68/0x73/0x7b).<br /><br />But I don't think anything but 0x40 is "set in stone".<br /><br />		Linus<br />-<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
