    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/9/29/819">First message in thread</a></li><li><a href="/lkml/2014/9/30/470">Linus Torvalds</a><ul><li><a href="/lkml/2014/9/30/584">Dave Jones</a><ul><li class="origin"><a href="/lkml/2014/10/1/116">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/1/116">Hugh Dickins</a><ul><li><a href="/lkml/2014/10/1/388">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 30 Sep 2014 11:58:00 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: pipe/page fault oddness.</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Sep 30, 2014 at 11:20 AM, Dave Jones &lt;davej&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; page_fault_kernel:    address=__per_cpu_end ip=copy_page_to_iter error_code=0x2<br /><br />Interesting. "error_code" in particular. The value "2" means that the<br />CPU thinks that the page is not present (bit zero is clear).<br /><br />(That "address" is useless - it's tried to turn a user address into a<br />kernel symbol, and the percpu symbols are zero-based, so it picks the<br />last of them. The "ip" is useless too, since it doesn't give the<br />offset)<br /><br />So the CPU thinks it's a write to a not-present page, which means that<br />_PAGE_PRESENT bit is clear.<br /><br />Now the *kernel* thinks a page is present not just if _PAGE_PRESENT is<br />set, but also if _PAGE_PROTNONE or _PAGE_NUMA are set. Sadly, your<br />trace is not very useful, because inlining has caused pretty much all<br />the cases to be in "handle_mm_fault()", so the trace doesn't really<br />tell which path this all takes.<br /><br />But we can still do *some* analysis on the trace: do_wp_page()<br />shouldn't have been inlined, so it would have shown up in the trace if<br />it had been called. So I think we can be pretty confident that the<br />ptep_set_access_flags() we see is the one from handle_pte_fault().<br /><br />And if that is the case, then we know that "pte_present()" is indeed<br />true as far a the kernel is concerned. So with _PAGE_PRESENT not being<br />set (based on the error code), we know that _PAGE_PROTNONE must be<br />set, otherwise we'd have triggered the pte_numa() check and exited<br />through do_numa_page().<br /><br />So it smells like we have a PROT_NONE VM area (at least the paeg table<br />entries imply that). But "access_error()" should have flagged that (it<br />checks "vma-&gt;vm_flags &amp; VM_WRITE"). How do we have a page table entry<br />marked _PAGE_PROTNONE, but VM_WRITE set in the vma?<br /><br />Or, possibly, we have some confusion about the page tables themselves<br />(corruption, wrong %cr3 value, whatever), explaining why the CPU<br />thinks one thing, but our software page table walker thinks another.<br /><br />I'm not seeing how this all happens. But I'm adding Kirill to the cc,<br />since he might see something I missed, and he touched some of this<br />code last ("tag, you're it").<br /><br />Kirill: the thread is on lkml, but basically it boils down to the<br />second byte write in fault_in_pages_writeable() faulting forever,<br />despite handle_mm_fault() apparently thinking that everything is fine.<br /><br />Also adding Hugh Dickins, just because the more people who know this<br />code that are involved, the better.<br /><br />              Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
