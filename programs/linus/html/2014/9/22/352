    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/9/21/170">First message in thread</a></li><li><a href="/lkml/2014/9/21/170">Anton Altaparmakov</a><ul><li><a href="/lkml/2014/9/22/11">Hugh Dickins</a><ul><li><a href="/lkml/2014/9/22/147">Anton Altaparmakov</a><ul><li><a href="/lkml/2014/9/22/189">Hugh Dickins</a><ul><li><a href="/lkml/2014/9/22/204">Anton Altaparmakov</a></li></ul></li></ul></li></ul></li><li class="origin"><a href="/lkml/2014/9/22/358">Linus Torvalds</a><ul><li><a href="/lkml/2014/9/22/358">Linus Torvalds</a></li><li><a href="/lkml/2014/9/22/364">Anton Altaparmakov</a><ul><li><a href="/lkml/2014/9/22/367">Linus Torvalds</a><ul><li><a href="/lkml/2014/9/22/382">Anton Altaparmakov</a></li></ul></li></ul></li></ul></li></ul></li></ul><div class="threadlist">Patch in this message</div><ul class="threadlist"><li><a href="/lkml/diff/2014/9/22/352/1">Get diff 1</a></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 22 Sep 2014 08:18:44 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH] Fix nasty 32-bit overflow bug in buffer i/o code.</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Sep 21, 2014 at 5:53 PM, Anton Altaparmakov &lt;aia21&#64;cam.ac.uk&gt; wrote:<br />&gt;<br />&gt; This patch fixes this issue by type casting "index" to sector_t before<br />&gt; doing the left shift.<br /><br />Ugh. Does the simpler patch to just pass in "block" work as well?<br /><br />                    Linus<br /> fs/buffer.c | 5 ++---<br /> 1 file changed, 2 insertions(+), 3 deletions(-)<br /><br />diff --git a/fs/buffer.c b/fs/buffer.c<br />index 8f05111bbb8b..f32d6a3cff38 100644<br />--- a/fs/buffer.c<br />+++ b/fs/buffer.c<br />&#64;&#64; -1021,8 +1021,7 &#64;&#64; grow_dev_page(struct block_device *bdev, sector_t block,<br /> 	if (page_has_buffers(page)) {<br /> 		bh = page_buffers(page);<br /> 		if (bh-&gt;b_size == size) {<br />-			end_block = init_page_buffers(page, bdev,<br />-						index &lt;&lt; sizebits, size);<br />+			end_block = init_page_buffers(page, bdev, block, size);<br /> 			goto done;<br /> 		}<br /> 		if (!try_to_free_buffers(page))<br />&#64;&#64; -1043,7 +1042,7 &#64;&#64; grow_dev_page(struct block_device *bdev, sector_t block,<br /> 	 */<br /> 	spin_lock(&amp;inode-&gt;i_mapping-&gt;private_lock);<br /> 	link_dev_buffers(page, bh);<br />-	end_block = init_page_buffers(page, bdev, index &lt;&lt; sizebits, size);<br />+	end_block = init_page_buffers(page, bdev, block, size);<br /> 	spin_unlock(&amp;inode-&gt;i_mapping-&gt;private_lock);<br /> done:<br /> 	ret = (block &lt; end_block) ? 1 : -ENXIO;</pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
