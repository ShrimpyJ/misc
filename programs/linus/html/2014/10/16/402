    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/9/25/235">First message in thread</a></li><li><a href="/lkml/2014/10/16/271">Maxim Patlasov</a><ul><li><a href="/lkml/2014/10/16/395">Miklos Szeredi</a><ul><li class="origin"><a href="/lkml/2014/10/17/99">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/17/99">Miklos Szeredi</a><ul><li><a href="/lkml/2014/10/18/68">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 16 Oct 2014 15:54:42 +0200</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 0/5] fuse: handle release synchronously (v4)</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Oct 16, 2014 at 3:43 PM, Miklos Szeredi &lt;miklos&#64;szeredi.hu&gt; wrote:<br />&gt;<br />&gt; One idea is to change -&gt;flush() so it's responsible for fput()-ing the<br />&gt; file.  That way we could take control of the actual refcount<br />&gt; decrement.  There are only 20 flush instances in the tree, so it<br />&gt; wouldn't be a huge change.<br /><br />Since that *still* wouldn't fix the problem with the whole "count<br />elevated by other things" issue, I really don't want to hear about<br />these random broken hacks that are fundamentally broken crap.<br /><br />Really. Stop cc'ing me with "let's implement this hack that cannot<br />work in general". I'm not interested. There's a reason we don't do<br />this. We don't make up random hacks that we know cannot work in the<br />general case.<br /><br />            Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
