    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/10/25/171">First message in thread</a></li><li><a href="/lkml/2014/10/25/179">Al Viro</a><ul><li><a href="/lkml/2014/10/25/180">Al Viro</a><ul><li class="origin"><a href="/lkml/2014/10/26/101">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/26/101">Al Viro</a><ul><li><a href="/lkml/2014/10/26/116">Al Viro</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 26 Oct 2014 11:56:08 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: fs: lockup on rename_mutex in fs/dcache.c:1035</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sat, Oct 25, 2014 at 8:57 PM, Al Viro &lt;viro&#64;zeniv.linux.org.uk&gt; wrote:<br />&gt; [context for Linus]<br />&gt;<br />&gt; Fuzzer has triggered deadlock in d_walk() with rename_lock taken twice.<br />&gt; AFAICS, the plausible scenario is<br />&gt;                          (child-&gt;d_flags &amp; DCACHE_DENTRY_KILLED) ||<br />&gt; triggering while ascending to parent, on the pass with rename_lock already<br />&gt; held exclusive.  In that case we go to rename_retry and either return without<br />&gt; unlocking rename_lock, or try to take in exclusive one more time, again<br />&gt; without unlocking it first.<br /><br />Your patch looks fine, and I don't think we can livelock - because we<br />always set 'seq' to 1 if we retry, and that causes us to get the<br />exclusive lock, so we'd better not then enter the retry loop again.<br />Although I guess not only renames cause it - looks like we get to that<br />mis-named "rename_retry" for a deletion too according to the comment.<br />Although I'm not sure that comment is correct - I don't think we<br />change d_parent for deletes, do we?<br /><br />So at a quick glance, the one-liner patch looks fine. That said, I<br />really detest how that code is written. Especially if the rename_retry<br />really can only happen once, I get the feeling that we would be *much*<br />better off doing this explicitly with a wrapper function, and do<br />something like<br /><br />   void d_walk(,..)<br />   {<br />       /* Try non-exclusive first */<br />       seq = read_seqbegin(lock);<br />       retry = __d_walk(.. seq);<br />       if (retry) {<br />              read_seqlock_excl(lock);<br />              // lock-&gt;seqcount is now guaranteed stable<br />              retry = __d_walk(.. lock-&gt;seqcount);<br />              read_sequnlock_excl(lock);<br />              WARN_ON_ONCE(retry, "Really?");<br />       }<br />   }<br /><br />or whatever. But maybe I'm missing some reason why the above is just<br />crazy, and I'm a moron. Entirely possible.<br /><br />                     Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
