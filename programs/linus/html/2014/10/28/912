    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/10/28/490">First message in thread</a></li><li><a href="/lkml/2014/10/28/799">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/28/840">Will Deacon</a><ul><li class="origin"><a href="">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2014/10/28/1053">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2014/10/28/1076">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 28 Oct 2014 11:03:53 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH 1/2] zap_pte_range: update addr when forcing flush after TLB batching faiure</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Oct 28, 2014 at 10:07 AM, Will Deacon &lt;will.deacon&#64;arm.com&gt; wrote:<br />&gt;<br />&gt; I don't think that's necessarily true, at least not on the systems I'm<br />&gt; familiar with. A table walk can be comparatively expensive, particularly<br />&gt; when virtualisation is involved and the depth of the host and guest page<br />&gt; tables starts to grow -- we're talking &gt;20 memory accesses per walk. By<br />&gt; contrast, the TLB invalidation messages are asynchronous and carried on<br />&gt; the interconnect (a DSB instruction is used to synchronise the updates).<br /><br />"&gt;20 memory accesses per *walk*"? Isn't the ARM a regular table? So<br />once you've gone down to the pte level, it's just an array, regardless<br />of how many levels there are.<br /><br />But I guess there are no actual multi-socket ARM's around in real<br />life, so you probably don't see the real scaling costs. Within a die,<br />you're probably right that the overhead is negligible.<br /><br />                   Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
