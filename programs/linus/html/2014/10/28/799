    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/10/28/490">First message in thread</a></li><li><a href="/lkml/2014/10/28/740">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/28/781">Will Deacon</a><ul><li class="origin"><a href="/lkml/2014/10/28/840">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/28/840">Will Deacon</a><ul><li><a href="/lkml/2014/10/28/912">Linus Torvalds</a></li></ul></li><li><a href="/lkml/2014/10/28/1053">Benjamin Herrenschmidt</a><ul><li><a href="/lkml/2014/10/28/1076">Linus Torvalds</a></li></ul></li></ul></li></ul></li><li><a href="/lkml/2014/10/28/1101">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/29/751">Will Deacon</a><ul><li><a href="/lkml/2014/10/29/810">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/29/821">Benjamin Herrenschmidt</a></li></ul></li><li><a href="/lkml/2014/11/4/484">Catalin Marinas</a><ul><li><a href="/lkml/2014/11/4/611">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 28 Oct 2014 09:25:35 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH 1/2] zap_pte_range: update addr when forcing flush after TLB batching faiure</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Oct 28, 2014 at 9:07 AM, Will Deacon &lt;will.deacon&#64;arm.com&gt; wrote:<br />&gt;<br />&gt; Ok, that's useful, thanks. Out of curiosity, what *is* the current intention<br />&gt; of __tlb_remove_tlb_entry, if start/end shouldn't be touched by<br />&gt; architectures? Is it just for the PPC hash thing?<br /><br />I think it's both the PPC hash, and for "legacy reasons" (ie<br />architectures that don't use the generic code, and were converted from<br />the "invalidate as you walk the tables" without ever really fixing the<br />"you have to flush the TLB before you free the page, and do<br />batching").<br /><br />It would be lovely if we could just drop it entirely, although<br />changing it to actively do the minimal range is fine too.<br /><br />&gt; I was certainly seeing this issue trigger regularly when running firefox,<br />&gt; but I'll need to dig and find out the differences in range size.<br /><br />I'm wondering whether that was perhaps because of the mix-up with<br />initialization of the range. Afaik, that would always break your<br />min/max thing for the first batch (and since the batches are fairly<br />large, "first" may be "only")<br /><br />But hey. it's possible that firefox does some big mappings but only<br />populates the beginning. Most architectures don't tend to have<br />excessive glass jaws in this area: invalidating things page-by-page is<br />invariably so slow that at some point you just go "just do the whole<br />range".<br /><br />&gt; Since we have hardware broadcasting of TLB invalidations on ARM, it is<br />&gt; in our interest to keep the number of outstanding operations as small as<br />&gt; possible, particularly on large systems where we don't get the targetted<br />&gt; shootdown with a single message that you can perform using IPIs (i.e.<br />&gt; you can only broadcast to all or no CPUs, and that happens for each pte).<br /><br />Do you seriously *have* to broadcast for each pte?<br /><br />Because that is quite frankly moronic.  We batch things up in software<br />for a real good reason: doing things one entry at a time just cannot<br />ever scale. At some point (and that point is usually not even very far<br />away), it's much better to do a single invalidate over a range. The<br />cost of having to refill the TLB's is *much* smaller than the cost of<br />doing tons of cross-CPU invalidates.<br /><br />That's true even for the cases where we track the CPU's involved in<br />that mapping, and only invalidate a small subset. With a "all CPU's<br />broadcast", the cross-over point must be even smaller. Doing thousands<br />of CPU broadcasts is just crazy, even if they are hw-accelerated.<br /><br />Can't you just do a full invalidate and a SW IPI for larger ranges?<br /><br />And as mentioned, true sparse mappings are actually fairly rare, so<br />making extra effort (and data structures) to have individual ranges<br />sounds crazy.<br /><br />Is this some hw-enforced thing? You really can't turn off the<br />cross-cpu-for-each-pte braindamage?<br /><br />                         Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
