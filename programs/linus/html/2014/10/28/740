    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/10/28/490">First message in thread</a></li><li><a href="/lkml/2014/10/28/490">Will Deacon</a><ul><li><a href="/lkml/2014/10/28/488">Will Deacon</a></li><li><a href="/lkml/2014/10/28/489">Will Deacon</a></li><li><a href="/lkml/2014/10/28/732">Linus Torvalds</a></li><li class="origin"><a href="/lkml/2014/10/28/781">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/28/781">Will Deacon</a><ul><li><a href="/lkml/2014/10/28/799">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/28/840">Will Deacon</a></li><li><a href="/lkml/2014/10/28/1053">Benjamin Herrenschmidt</a></li></ul></li></ul></li><li><a href="/lkml/2014/10/28/1101">Linus Torvalds</a><ul><li><a href="/lkml/2014/10/29/751">Will Deacon</a><ul><li><a href="/lkml/2014/10/29/810">Linus Torvalds</a></li><li><a href="/lkml/2014/11/4/484">Catalin Marinas</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Tue, 28 Oct 2014 08:30:43 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC PATCH 1/2] zap_pte_range: update addr when forcing flush after TLB batching faiure</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Tue, Oct 28, 2014 at 4:44 AM, Will Deacon &lt;will.deacon&#64;arm.com&gt; wrote:<br />&gt;<br />&gt; This patch fixes the problem by incrementing addr by the PAGE_SIZE<br />&gt; before breaking out of the loop on batch failure.<br /><br />This patch seems harmless and right, unlike the other one.<br /><br />I'd be ok with changing the *generic* code to do the "update start/end<br />pointers in the mmu_gather structure", but then it really has to be<br />done in *generic* code. Move your arm64 start/end updates to<br />include/asm-generic/tlb.h, and change the initialization of start/end<br />entirely. Right now we initialize those things to the maximal range<br />(see tlb_gather_mmu()), and the arm64 logic seems to be to initialize<br />them to TASK_SIZE/0 respectively and then update start/end as you add<br />pages, so that you get the minimal range.<br /><br />But because of this arm64 confusion (the "minimal range" really is<br />*not* how this is designed to work), the current existing<br />tlb_gather_mmu() does the wrong initialization.<br /><br />In other words: my argument is that right now the arm64 code is just<br />*wrong*. I'd be ok with making it the right thing to do, but if so, it<br />needs to be made generic.<br /><br />Are there any actual advantages to teh whole "minimal range" model? It<br />adds overhead and complexity, and the only case where it would seem to<br />be worth it is for benchmarks that do mmap/munmap in a loop and then<br />only map a single page. Normal loads don't tend to have those kinds of<br />"minimal range is very different from whole range" cases. Do you have<br />a real case for why it does that minimal range thing.<br /><br />Because if you don't have a real case, I'd really suggest you get rid<br />of all the arm64 games with start/end. That still leaves this one<br />patch the correct thing to do (because even without the start/end<br />games the "need_flush" flag goes with the range, but it makes the<br />second patch a complete non-issue.<br /><br />If you *do* have a real case, I think you need to modify your second patch to:<br /><br /> - move the arm start/end updates from tlb_flush/tlb_add_flush to asm-generic<br /><br /> - make tlb_gather_mmu() initialize start/end to TASK_SIZE/0 the same<br />way your tlb_flush does (so that the subsequent min/max games work).<br /><br />so that *everybody* does the start/end games. I'd be ok with that.<br />What I'm not ok with is arm64 using the generic TLB gather way in odd<br />ways that then breaks code and results in things like your 2/2 patch<br />that fixes ARM64 but breaks x86.<br /><br />Hmm? Is there something I'm missing?<br /><br />                         Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
