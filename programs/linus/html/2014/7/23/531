    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/7/17/100">First message in thread</a></li><li><a href="/lkml/2014/7/23/492">Peter Zijlstra</a><ul><li><a href="/lkml/2014/7/23/500">Linus Torvalds</a><ul><li><a href="/lkml/2014/7/23/511">Linus Torvalds</a><ul><li><a href="/lkml/2014/7/23/542">Peter Zijlstra</a><ul><li><a href="/lkml/2014/7/23/691">Linus Torvalds</a></li></ul></li></ul></li><li class="origin"><a href="/lkml/2014/7/23/585">Linus Torvalds</a><ul><li><a href="/lkml/2014/7/23/585">Peter Zijlstra</a></li></ul></li><li><a href="/lkml/2014/7/23/538">Peter Zijlstra</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Jul 2014 11:07:40 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Random panic in load_balance() with 3.16-rc</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 23, 2014 at 10:12 AM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; A cpumask_var is TOTALLY DIFFERENT. It's *either* a cpumask _or_ just<br />&gt; a pointer to an externally allocated cpumask.<br />&gt;<br />&gt; sched_init() definitely does _not_ allocate a cpumask_var.<br /><br />I take that back. It does end up allocating it properly, it just<br />avoids all the correct abstractions.<br /><br />In general, the rule of thumb should be:<br /><br /> - stack allocations should use "cpumask_var_t cpus" and they<br />absolutely *have* to be paired with an "alloc_cpumask_var(&amp;cpus,<br />GFP_KERNEL)". Having a "struct cpumask" on stack is very wrong.<br /><br /> - random single nonstack allocations should probably just use a plain<br />"struct cpumask" (or cpumask_t, but we really shouldn't use typedef's<br />unless they actively abstract some per-config *changing* type).<br /><br /> - dynamic allocations that are size-conscious (because there's a lot<br />of them) should allocate a "struct cpumask *" by using<br />"cpumask_size()". They have a pointer anyway, they allocate things<br />dynamically anyway, extra indirection through a cpumask_var_t would<br />just be unnecessary.<br /><br /> - *static* per-cpu allocations might want to use "cpumask_var_t" (to<br />avoid having a full "struct cpumask_t") along with doing a<br />"zalloc_cpumask_var_node(..)" for each cpu.<br /><br />sched_init() follows that last pattern, except it open-codes that<br />zalloc_cpumask_var_node() in an odd way that confused me.<br /><br />So I take my patch back. It's wrong, because it only allocates that<br />cpumask_size() if CONFIG_CPUMASK_OFFSTACK is true.<br /><br />Ugh, that code really is unreadable.<br /><br />               Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
