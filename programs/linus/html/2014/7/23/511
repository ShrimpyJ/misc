    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/7/17/100">First message in thread</a></li><li><a href="/lkml/2014/7/23/492">Peter Zijlstra</a><ul><li><a href="/lkml/2014/7/23/500">Linus Torvalds</a><ul><li class="origin"><a href="/lkml/2014/7/23/542">Linus Torvalds</a><ul><li><a href="/lkml/2014/7/23/542">Peter Zijlstra</a><ul><li><a href="/lkml/2014/7/23/691">Linus Torvalds</a></li></ul></li></ul></li><li><a href="/lkml/2014/7/23/531">Linus Torvalds</a><ul><li><a href="/lkml/2014/7/23/585">Peter Zijlstra</a></li></ul></li><li><a href="/lkml/2014/7/23/538">Peter Zijlstra</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Jul 2014 10:26:21 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Random panic in load_balance() with 3.16-rc</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 23, 2014 at 10:12 AM, Linus Torvalds<br />&lt;torvalds&#64;linux-foundation.org&gt; wrote:<br />&gt;<br />&gt; sched_init() definitely does _not_ allocate a cpumask_var.<br /><br />Side note: another good rule of thumb for per-cpu variables is:<br /><br /> - if you use __get_cpu_var() without taking the address of it, you're<br />doing something wrong and stupid.<br /><br />The whole - and really *only* - point of __get_cpu_var is to get the<br />address of a a cpu variable. If you want to read the *value* of the<br />variable, you should use "this_cpu_read()", which can use things like<br />special instructions or segments to read the percpu area.<br /><br />I agree that the interface is not all that great, there's historical<br />baggage there. We would have been better off with<br />"__this_cpu_ptr(var)" instead of "&amp;__get_cpu_var(var)". But that<br />"__get_cpu_var()" is the old way of doing things (predating the new<br />and better "this_cpu_read/write/ops()" stuff), which is why we have<br />that odd interface with "&amp;__get_cpu_var()".<br /><br />           Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
