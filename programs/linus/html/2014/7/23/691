    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/7/17/100">First message in thread</a></li><li><a href="/lkml/2014/7/23/511">Linus Torvalds</a><ul><li><a href="/lkml/2014/7/23/542">Peter Zijlstra</a><ul><li class="origin"><a href="/lkml/2014/7/23/553">Linus Torvalds</a><ul><li><a href="/lkml/2014/7/23/553">Peter Zijlstra</a></li><li><a href="/lkml/2014/7/23/560">Linus Torvalds</a></li><li><a href="/lkml/2014/7/23/871">Peter Zijlstra</a><ul><li><a href="/lkml/2014/7/23/572">Linus Torvalds</a></li><li><a href="/lkml/2014/7/23/802">=?UTF-8?B?TWljaGVsIETDpG56ZXI=?=</a></li><li><a href="/lkml/2014/7/24/584">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 23 Jul 2014 11:35:06 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Random panic in load_balance() with 3.16-rc</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 23, 2014 at 11:25 AM, Peter Zijlstra &lt;peterz&#64;infradead.org&gt; wrote:<br />&gt; On Wed, Jul 23, 2014 at 10:26:21AM -0700, Linus Torvalds wrote:<br />&gt;&gt;<br />&gt;&gt; The whole - and really *only* - point of __get_cpu_var is to get the<br />&gt;&gt; address of a a cpu variable. If you want to read the *value* of the<br />&gt;&gt; variable, you should use "this_cpu_read()", which can use things like<br />&gt;&gt; special instructions or segments to read the percpu area.<br />&gt;<br />&gt; I think this code predates all the this_cpu* magic. But yes, agreed.<br /><br />It turns out - now that I've stared at the code for much too long for<br />my own sanity - that this code actually depends very subtly on<br />"__get_cpu_var()".<br /><br />And not in good ways.<br /><br />So what happens is that the games that "cpumask_var_t" plays in order<br />to make code work correctly with both on-stack and off-stack<br />configurations are really toxic to good per-cpu use.<br /><br />For the off-stack case, a cpumask_var_t is a pointer to the real<br />allocation, and using "__get_cpu_var()" is very suboptimal, because it<br />gets that pointer by following the percpu offset explicitly. So we<br />load the percpu offset, then we load the offset to "load_balance_mask"<br />within that, and then we load the pointer off that. We'd be much<br />better off using "this_cpu_read()", which can just use the percpu area<br />directly to read the pointer.<br /><br />HOWEVER.<br /><br />For the direct case, a "cpumask_var_t" is an array, exactly so that<br />accessing it will just return the address of it, so that you can get<br />the "struct cpumask *" directly.  And there the whole dance with<br />adding the percpu offset is actually the right thing, because what you<br />want is the address to the percpu area. And you cannot use<br />"this_cpu_read()", because that wants to read the _value_, which is<br />not what we want at all.<br /><br />Ugh. So it's not just the initialization that is subtle, the use of<br />those per-cpu "cpumask_var_t" is sadly suboptimal too.<br /><br />But the code does appear to be correct. It just is messy, avoids the<br />proper abstractions, and generates suboptimal code for the off-stack<br />case.<br /><br />               Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
