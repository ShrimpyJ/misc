    </div></td><td width="32"> </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/7/17/100">First message in thread</a></li><li><a href="/lkml/2014/7/23/691">Linus Torvalds</a><ul><li><a href="/lkml/2014/7/23/553">Peter Zijlstra</a></li><li><a href="/lkml/2014/7/23/560">Linus Torvalds</a></li><li><a href="/lkml/2014/7/23/871">Peter Zijlstra</a><ul><li><a href="/lkml/2014/7/23/572">Linus Torvalds</a></li><li><a href="/lkml/2014/7/23/802">=?UTF-8?B?TWljaGVsIETDpG56ZXI=?=</a></li><li class="origin"><a href="/lkml/2014/7/24/560">Linus Torvalds</a><ul><li><a href="/lkml/2014/7/24/560">Peter Zijlstra</a></li><li><a href="/lkml/2014/7/24/755">=?UTF-8?B?TWljaGVsIETDpG56ZXI=?=</a><ul><li><a href="/lkml/2014/7/24/781">Linus Torvalds</a></li><li><a href="/lkml/2014/7/24/791">Nick Krause</a></li><li><a href="/lkml/2014/7/24/824">Alexei Starovoitov</a></li><li><a href="/lkml/2014/7/26/142">Steven Chamberlain</a></li></ul></li><li><a href="/lkml/2014/7/25/97">Jakub Jelinek</a><ul><li><a href="/lkml/2014/7/25/100">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 24 Jul 2014 11:47:17 -0700</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: Random panic in load_balance() with 3.16-rc</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Jul 23, 2014 at 6:43 PM, Michel Dänzer &lt;michel&#64;daenzer.net&gt; wrote:<br />&gt;&gt;<br />&gt;&gt; Michel, mind doing<br />&gt;&gt;<br />&gt;&gt;     make kernel/sched/fair.s<br />&gt;&gt;<br />&gt;&gt; and sending us the resulting file?<br />&gt;<br />&gt; Here it is, gzipped, hope that's okay.<br />&gt;<br />&gt; Note that my tree is now based on 3.16-rc6.<br /><br />Ok, so I'm looking at the code generation and your compiler is pure<br />and utter *shit*.<br /><br />Adding Jakub to the cc, because gcc-4.9.0 seems to be terminally broken.<br /><br />Lookie here, your compiler does some absolutely insane things with the<br />spilling, including spilling a *constant*. For chrissake, that<br />compiler shouldn't have been allowed to graduate from kindergarten.<br />We're talking "sloth that was dropped on the head as a baby" level<br />retardation levels here:<br /><br />        ...<br />        movq    $load_balance_mask, -136(%rbp)  #, %sfp<br />        subq    $184, %rsp      #,<br />        movq    (%rdx), %rax    # sd_22(D)-&gt;parent, sd_parent<br />        movl    %edi, -144(%rbp)        # this_cpu, %sfp<br />        movl    %ecx, -140(%rbp)        # idle, %sfp<br />        movq    %r8, -200(%rbp) # continue_balancing, %sfp<br />        movq    %rax, -184(%rbp)        # sd_parent, %sfp<br />        movq    -136(%rbp), %rax        # %sfp, tcp_ptr__<br />#APP<br />        add %gs:this_cpu_off, %rax      # this_cpu_off, tcp_ptr__<br />#NO_APP<br />        ...<br /><br />Note the contents of -136(%rbp). Seriously. That's an<br />_immediate_constant_ that the compiler is spilling.<br /><br />Somebody needs to raise that as a gcc bug. Because it damn well is<br />some seriously crazy shit.<br /><br />However, that constant spilling part just counts as "too stupid to<br />live". The real bug is this:<br /><br />        movq    $load_balance_mask, -136(%rbp)  #, %sfp<br />        subq    $184, %rsp      #,<br /><br />where gcc creates the stack frame *after* having already used it to<br />save that constant *deep* below the stack frame.<br /><br />The x86-64 ABI specifies a 128-byte red-zone under the stack pointer,<br />and this is ok by that limit. It looks like it's illegal (136 &gt; 128),<br />but the fact is, we've had four "pushq"s to update %rsp since loading<br />the frame pointer, so it's just *barely* legal with the red-zoning.<br /><br />But we build the kernel with -mno-red-zone. We do *not* follow the<br />x86-64 ABI wrt redzoning, because we *cannot*: interrupts while in<br />kernel mode *will* use the stack without a redzone. So that<br />"-mno-red-zone" is not some "optional guideline". It's a hard and<br />harsh requirement for the kernel, and gcc-4.9 is a buggy piece of shit<br />for ignoring it. And your bug happens becuase you happen to hit an<br />interrupt _just_ in that single instruction window (or perhaps hit<br />some other similar case and corrupted kernel data structures earlier).<br /><br />Now, I suspect that this redzoning bug might actually be related to<br />the fact that gcc is stupid in spilling a constant. I would not be<br />surprised if there is some liveness analysis going on to decide *when*<br />to insert the stack decrement, and constants are being ignored because<br />clearly liveness isn't an issue for a constant value. So the two bugs<br />("stupid constant spilling" and "invalid use or red zone stack") go<br />hand in hand. But who knows.<br /><br />Anyway, this is not a kernel bug. This is your compiler creating<br />completely broken code. We may need to add a warning to make sure<br />nobody compiles with gcc-4.9.0, and the Debian people should probably<br />downgrate their shiny new compiler.<br /><br />Jakub, any ideas?<br /><br />                      Linus<br />--<br />To unsubscribe from this list: send the line "unsubscribe linux-kernel" in<br />the body of a message to majordomo&#64;vger.kernel.org<br />More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html">http://vger.kernel.org/majordomo-info.html</a><br />Please read the FAQ at  <a href="http://www.tux.org/lkml/">http://www.tux.org/lkml/</a><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
