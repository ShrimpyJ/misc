    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/11/10/574">First message in thread</a></li><li><a href="/lkml/2014/11/13/760">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/13/858">"Kirill A. Shutemov"</a><ul><li class="origin"><a href="">Linus Torvalds</a></li><li><a href="/lkml/2014/11/13/841">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 13 Nov 2014 17:18:03 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH 3/5] lib: lockless generic and arch independent page table (gpt) v2.</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Nov 13, 2014 at 4:58 PM, Kirill A. Shutemov<br />&lt;kirill&#64;shutemov.name&gt; wrote:<br />&gt; On Thu, Nov 13, 2014 at 03:50:02PM -0800, Linus Torvalds wrote:<br />&gt;&gt; +/*<br />&gt;&gt; + * The 'tree_level' data only describes one particular level<br />&gt;&gt; + * of the tree. The upper levels are totally invisible to the<br />&gt;&gt; + * user of the tree walker, since the tree walker will walk<br />&gt;&gt; + * those using the tree definitions.<br />&gt;&gt; + *<br />&gt;&gt; + * NOTE! "struct tree_entry" is an opaque type, and is just a<br />&gt;&gt; + * used as a pointer to the particular level. You can figure<br />&gt;&gt; + * out which level you are at by looking at the "tree_level",<br />&gt;&gt; + * but even better is to just use different "lookup()"<br />&gt;&gt; + * functions for different levels, at which point the<br />&gt;&gt; + * function is inherent to the level.<br />&gt;<br />&gt; Please, don't.<br />&gt;<br />&gt; We will end up with the same last-level centric code as we have now in mm<br />&gt; subsystem: all code only cares about pte.<br /><br />You realize that we have a name for this. It's called "reality".<br /><br />&gt; It makes implementing variable<br />&gt; page size support really hard and lead to copy-paste approach. And to<br />&gt; hugetlb parallel world...<br /><br />No, go back and read the thing.<br /><br />You're confusing two different issues: looking up the tree, and<br />actually walking the end result.<br /><br />The "looking up different levels of the tree" absolutely _should_ use<br />different actors for different levels. Because the levels are not at<br />all guaranteed to be the same.<br /><br />Sure, they often are. When you extend a tree, it's fairly reasonable<br />to try to make the different levels look identical. But "often" is not<br />at all "always".<br /><br />More importantly, nobody should ever care. Because the whole *point*<br />of the tree walker is that the user never sees any of this. This is<br />purely an implementation detail of the tree itself. Somebody who just<br />*walks* the tree only sees the final end result.<br /><br />And *that* is the "walk()" callback. Which gets the virtual address<br />and the length, exactly so that for a super-page you don't even really<br />see the difference between walking different levels (well, you do see<br />it, since the length will differ).<br /><br />Now, I didn't actually try to make that whole thing very transparent.<br />In particular, somebody who just wants to see the data (and ignore as<br />much of the "tree" details as possible) would really want to have not<br />that "tree_entry", but the whole "struct tree_level *" and in<br />particular a way to *map* the page. I left that out entirely, because<br />it wasn't really central to the whole tree walking.<br /><br />But thinking that the levels should look the same is fundamentally<br />bogus. For one, because they don't always look the same at all. For<br />another, because it's completely separate from the accessing of the<br />level data anyway.<br /><br />                       Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
