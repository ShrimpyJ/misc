    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/11/16/13">First message in thread</a></li><li><a href="/lkml/2014/11/16/13">Fabian Frederick</a><ul><li class="origin"><a href="/lkml/2014/11/16/175">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/16/175">Fabian Frederick</a><ul><li><a href="/lkml/2014/11/16/249">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/17/13">Fabian Frederick</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Sun, 16 Nov 2014 12:03:04 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: frequent lockups in 3.18rc4: revert suggestion</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Sun, Nov 16, 2014 at 12:33 AM, Fabian Frederick &lt;fabf&#64;skynet.be&gt; wrote:<br />&gt;<br />&gt;         Have you tried reverting the following patches (all from rc1) ?<br /><br />Hmm. Any particular reason you're looking at those?<br /><br />&gt;         c6f4459 v3.18-rc1 smp: Add new wake_up_all_idle_cpus() function<br />&gt;         bb964a9 v3.18-rc1 kernel misc: Replace __get_cpu_var uses<br />&gt;         2ed903c v3.18-rc1 cpuidle: Use wake_up_all_idle_cpus() to wake up all idle cpus<br /><br />It does strike me that the reschedule IPI is somewhat special in that<br />we don't try to serialize it at all, on the grounds that a lost IPI is<br />ok (ie smp_send_reschedule() is very much a special case of IPI). Or<br />am I mis-remembering? Does that series end up adding a lot more of<br />those things, rather than using the normal smp_call_function().<br /><br />The normal smp_function_mask() thing tries to make sure only one entry<br />is ever active at a time (even a non-blocking one will use the whole<br />"queue it on a llist, only send the IPI if the llist was empty", so<br />this is not about the IPI's being synchronous).  The rescheduling<br />thing is rather special, isn't it.<br /><br />The softlockup thing *did* look like some IPI got lost. Could an IPI<br />overflow on the RESCHEDULE_VECTOR end up affecting other vectors? It's<br />been too long since I worked with the APIC (and by "too long", I<br />obviously mean "thank God I haven't had to" ;^) but there used to be<br />grouping of the vectors..<br /><br />Maybe that is all barking up the wrong tree, but I'm wondering why<br />Fabian picked that particular set of commits. Fabian?<br /><br />                     Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
