    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/11/26/258">First message in thread</a></li><li><a href="/lkml/2014/11/26/482">Andrey Ryabinin</a><ul><li><a href="/lkml/2014/11/26/488">Sasha Levin</a><ul><li class="origin"><a href="/lkml/2014/11/26/515">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/26/515">Sasha Levin</a><ul><li><a href="/lkml/2014/11/26/517">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Wed, 26 Nov 2014 10:23:45 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [RFC 2/2] kvm: eventfd: detect integer overflow using check_*_overflow</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Wed, Nov 26, 2014 at 9:55 AM, Sasha Levin &lt;sasha.levin&#64;oracle.com&gt; wrote:<br />&gt;<br />&gt; Good point. Do you think there's an advantage in using GCC's overflow<br />&gt; checker in this case?<br /><br />No. However, if your coccinelle script can be changed to verify that<br />the type of the expression is unsigned, _that_ would be useful.<br /><br />And the "multiplication overflow" may actually be a way to generate<br />better code. Possibly. I'm not entirely sure exactly what gcc actually<br />does. How many multiplication overflow tests do we actually have,<br />though?<br /><br />For plain unsigned additions, "a + b &lt; a" is already optimal (ie gcc<br />realizes it's an overflow check and generates a test against the carry<br />flag, at least when it doesn't screw up)<br /><br />                     Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
