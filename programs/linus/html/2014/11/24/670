    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/11/24/302">First message in thread</a></li><li><a href="/lkml/2014/11/24/625">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/24/640">"Paul E. McKenney"</a><ul><li class="origin"><a href="/lkml/2014/11/24/702">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/24/702">"Paul E. McKenney"</a></li></ul></li><li><a href="/lkml/2014/11/24/689">Christian Borntraeger</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Nov 2014 12:19:11 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH/RFC 7/7] kernel: Force ACCESS_ONCE to work only on scalar types</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Nov 24, 2014 at 11:42 AM, Paul E. McKenney<br />&lt;paulmck&#64;linux.vnet.ibm.com&gt; wrote:<br />&gt;<br />&gt; OK, how about the following?<br /><br />Ugh. Disgusting.<br /><br />Why the heck isn't it just "sizeof(*__vp) &lt;= sizeof(long)"?<br /><br />If the architecture has a 3-byte scalar type, then it probably has a<br />3-byte load.<br /><br />&gt; It complains if the variable is too large, for example, long long on<br />&gt; 32-bit systems or large structures.  It is OK loading from and storing<br />&gt; to small structures as well, which I am having a hard time thinking of<br />&gt; as a disadvantage.<br /><br />.. but that's *exactly* the gcc bug in question. It's a word-sized<br />struct that gcc loads twice.<br /><br />                          Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
