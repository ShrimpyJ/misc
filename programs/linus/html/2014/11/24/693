    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/11/24/302">First message in thread</a></li><li><a href="/lkml/2014/11/24/618">Christian Borntraeger</a><ul><li><a href="/lkml/2014/11/24/625">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/24/640">"Paul E. McKenney"</a><ul><li><a href="/lkml/2014/11/24/670">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/24/702">"Paul E. McKenney"</a></li></ul></li><li><a href="/lkml/2014/11/24/689">Christian Borntraeger</a></li></ul></li></ul></li><li><a href="/lkml/2014/11/24/650">David Howells</a><ul><li class="origin"><a href="/lkml/2014/11/24/705">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/24/705">Christian Borntraeger</a><ul><li><a href="/lkml/2014/11/24/719">Linus Torvalds</a></li></ul></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Nov 2014 12:34:35 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH/RFC 7/7] kernel: Force ACCESS_ONCE to work only on scalar types</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Nov 24, 2014 at 12:04 PM, David Howells &lt;dhowells&#64;redhat.com&gt; wrote:<br />&gt;<br />&gt; Reserve ACCESS_ONCE() for reading and add an ASSIGN_ONCE() or something like<br />&gt; that for writing?<br /><br />I wouldn't mind that. We've had situations where reading and writing<br />isn't really similar - like alpha where reading a byte is atomic, but<br />writing one isn't.<br /><br />Then we could also make it have the "get_user()/put_user()" kind of<br />semantics - .and then use the same "sizeopf()" tricks that we use for<br />get_user/put_user.<br /><br />That would actually work around the gcc bug a completely different way:<br /><br />  #define ACCESS_ONCE(p) \<br />      ({ typeof(*p) __val; __read_once_size(p, &amp;__val, sizeof(__val)); __val; })<br /><br />and then we can do things like this:<br /><br />  static __always_inline void __read_once_size(volatile void *p, void<br />*res, int size)<br />  {<br />       switch (size) {<br />       case 1: *(u8 *)res = *(volatile u8 *)p; break;<br />       case 2: *(u16 *)res = *(volatile u16 *)p; break;<br />       case 4: *(u32 *)res = *(volatile u32 *)p; break;<br />#ifdef CONFIG_64BIT<br />       case 8: *(u64 *)res = *(volatile u64 *)p; break;<br />#endif<br />       }<br />  }<br /><br />and same for ASSIGN_ONCE(val, p).<br /><br />That also hopefully avoids the whole "oops, gcc has a bug", because<br />the actual volatile access is always done using a scalar type, even if<br />the type of "__val" may in fact be a structure.<br /><br />Christian, how painful would that be? Sorry to try to make you do a<br />totally different approach..<br /><br />                  Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
