    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/11/24/302">First message in thread</a></li><li><a href="/lkml/2014/11/24/693">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/24/705">Christian Borntraeger</a><ul><li class="origin"><a href="/lkml/2014/11/24/731">Linus Torvalds</a><ul><li><a href="/lkml/2014/11/24/731">Christian Borntraeger</a></li></ul></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><script type="text/javascript" src="//pagead2.googlesyndication.com/pagead/show_ads.js"></script><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Mon, 24 Nov 2014 13:02:40 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: [PATCH/RFC 7/7] kernel: Force ACCESS_ONCE to work only on scalar types</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Mon, Nov 24, 2014 at 12:53 PM, Christian Borntraeger<br />&lt;borntraeger&#64;de.ibm.com&gt; wrote:<br />&gt;<br />&gt; That looks like a lot of changes all over ACCESS_ONCE -&gt; ASSIGN_ONCE:<br />&gt; git grep "ACCESS_ONCE.*=.*"<br />&gt; gives me 200 placea not in Documentation.<br /><br />Yeah, that's a bit annoying.<br /><br />How about a combination of the two:<br /><br /> - accept the fact that right now ACCESS_ONCE() is fairly widespread<br />(even for writing)<br /><br /> - but also admit that we'd be better off with a nicer interface<br /><br />and make the solution be:<br /><br /> - make ACCESS_ONCE() only work on scalars, and deprecate it<br /><br /> - add new "read_once()" and "write_once()" interfaces that *do* work<br />on (appropriately sized) structures and unions, and start migrating<br />things over. In particular, start with the ones that can no longer use<br />ACCESS_ONCE() because they aren't scalar..<br /><br />That second point would make the conversion patches actually easier to<br />read. Instead of this:<br /><br /> static inline int arch_spin_is_locked(arch_spinlock_t *lock)<br /> {<br />-       struct __raw_tickets tmp = ACCESS_ONCE(lock-&gt;tickets);<br />+       arch_spinlock_t tmp = {};<br /><br />-       return tmp.tail != tmp.head;<br />+       tmp.head_tail =ACCESS_ONCE(lock-&gt;head_tail);<br />+       return tmp.tickets.tail != tmp.tickets.head;<br /> }<br /><br />which isn't *complex*, but is also not an obvious conversion, we'd have just<br /><br /> static inline int arch_spin_is_locked(arch_spinlock_t *lock)<br /> {<br />-       struct __raw_tickets tmp = ACCESS_ONCE(lock-&gt;tickets);<br />-       struct __raw_tickets tmp = read_once(lock-&gt;tickets);<br /><br />        return tmp.tail != tmp.head;<br /> }<br /><br />which is a much simpler and more obvious change.<br /><br />And then we could slowly try to migrate existing ACCESS_ONCE() users<br />over (particularly writers).<br /><br />Hmm? Too much?<br /><br />                     Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
