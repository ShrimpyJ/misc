    </div></td><td width="32">Â </td></tr><tr><td valign="top"><div class="es-jasper-simpleCalendar" baseurl="/lkml/"></div><div class="threadlist">Messages in this thread</div><ul class="threadlist"><li class="root"><a href="/lkml/2014/11/14/656">First message in thread</a></li><li><a href="/lkml/2014/12/18/3">Dave Jones</a><ul><li><a href="/lkml/2014/12/18/302">Chris Mason</a><ul><li><a href="/lkml/2014/12/18/310">Dave Jones</a><ul><li><a href="/lkml/2014/12/18/606">Dave Jones</a><ul><li><a href="/lkml/2014/12/18/628">Linus Torvalds</a></li></ul></li></ul></li><li class="origin"><a href="">Linus Torvalds</a></li></ul></li></ul></li></ul></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerl.gif" width="32" height="32" alt="/" /></td><td class="c" rowspan="2" valign="top" style="padding-top: 1em"><table><tr><td colspan="2"><!--BuySellAds Zone Code--><div id="bsap_1297613" class="bsarocks bsap_5aa49c00cc06c882289a1dd6a5e50b62"></div><!--End BuySellAds Zone Code--></td></tr><tr><td><table><tr><td class="lp">Date</td><td class="rp" itemprop="datePublished">Thu, 18 Dec 2014 10:54:50 -0800</td></tr><tr><td class="lp">Subject</td><td class="rp" itemprop="name">Re: frequent lockups in 3.18rc4</td></tr><tr><td class="lp">From</td><td class="rp" itemprop="author">Linus Torvalds &lt;&gt;</td></tr></table></td><td><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></td></tr></table><pre itemprop="articleBody">On Thu, Dec 18, 2014 at 7:54 AM, Chris Mason &lt;clm&#64;fb.com&gt; wrote:<br />&gt;<br />&gt; CPU 2 seems to be the one making the least progress.  I think he's calling<br />&gt; fork and then trying to allocate a debug object for his hrtimer, eventually<br />&gt; wandering into fill_pool from __debug_object_init():<br /><br />Good call.<br /><br />I agree - fill_pool() seems to be just plain nasty.<br /><br />We've had this bug before, btw - a *loong* time ago in the original<br />kmalloc stuff. You really should not fill a pool of memory that way.<br />It's fundamentally wrong to fill a pool and then (later - after having<br />released and re-aqcuired the lock) allocate from the pool. Somebody<br />else will steal the allocations you did, and take advantage of your<br />work.<br /><br />The high/low watermarks are done completely wrong for that thing too -<br />if things fall below a minimum level, you want to try to make sure it<br />grows clearly past the minimum, so that you don't get stuck just<br />around the minimum. But you need to spread out the pain, rather than<br />make one unlucky allocator have to do all the work.<br /><br />&gt; It might be fun to run with CONFIG_DEBUG_OBJECTS off...Linus' patch clearly<br />&gt; helped, I think we're off in a different bug now.<br /><br />I'm not sure it was my patch. I'm wondering if it's because Dave still<br />has preemption off, and the backtraces look different (and better) as<br />a result.<br /><br />But yes, trying with DEBUG_OBJECTS off might be a good idea. It's<br />entirely possible that the debug code is actually triggering bugs of<br />its own, rather than showing other peoples bugs.<br /><br />                         Linus<br /><br /><br /></pre><div align="center"><div class="shariff" data-services="[&quot;reddit&quot;]" data-theme="grey" data-lang="en" data-backend-url="//shariff.lkml.org/index.php"></div></div></td><td width="32" rowspan="2" class="c" valign="top"><img src="/images/icornerr.gif" width="32" height="32" alt="\" /></td></tr><tr><td align="right" valign="bottom">
